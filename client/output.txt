Project Path: client

Source Tree:

```
client
├── docs
│   ├── 05-cartridge-controller.md
│   ├── 08-extending-system.md
│   ├── 01-overview.md
│   ├── 07-data-flow.md
│   ├── 04-zustand-state-management.md
│   ├── model-update-guide-en.md
│   ├── 03-core-files.md
│   ├── 02-architecture.md
│   ├── Hall3.tsx
│   ├── 06-react-hooks-pattern.md
│   └── Gun1.tsx
├── pnpm-lock.yaml
├── tsconfig.node.tsbuildinfo
├── SETUP.md
├── vite.config.ts
├── tsconfig.node.json
├── postcss.config.js
├── tsconfig.app.json
├── package-lock.json
├── index.html
├── README.md
├── tsconfig.json
├── package.json
├── tsconfig.app.tsbuildinfo
├── public
│   ├── poc2.glb
│   ├── walls.png
│   ├── hall3.glb
│   ├── gun1.glb
│   ├── good.png
│   ├── Poc2.tsx
│   ├── shot.mp3
│   └── textures
│       ├── berettaNormal.png
│       ├── armsColor.png
│       ├── armsRoughness.png
│       ├── berettaRoughness.png
│       ├── armsAO.png
│       ├── berettaMetallic.png
│       ├── armsNormal.png
│       ├── berettaColor.png
│       └── berettaAO.png
├── tailwind.config.js
├── eslint.config.js
└── src
    ├── app
    │   └── App.tsx
    ├── zustand
    │   ├── store.ts
    │   └── storeOld.ts
    ├── models
    │   ├── index.ts
    │   ├── Poc2.tsx
    │   ├── Hall3.tsx
    │   └── Gun1.tsx
    ├── vite-env.d.ts
    ├── utils
    │   └── utils.ts
    ├── dojo
    │   ├── models
    │   │   ├── index.ts
    │   │   ├── Poc2.tsx
    │   │   ├── Hall3.tsx
    │   │   └── Gun1.tsx
    │   ├── models.gen.ts
    │   ├── starknet-provider.tsx
    │   ├── hooks
    │   │   ├── useGetAvailableDoorways.tsx
    │   │   ├── useEntityState.tsx
    │   │   ├── usePlayer.tsx
    │   │   ├── useGameCompleted.tsx
    │   │   ├── useMineAction.tsx
    │   │   ├── useGameSession.tsx
    │   │   ├── useTurnExecution.tsx
    │   │   ├── useRoomCleared.tsx
    │   │   ├── useMovePlayer.tsx
    │   │   ├── useCollectShard.tsx
    │   │   ├── useTurnExecuted.tsx
    │   │   ├── useVictoryAchieved.tsx
    │   │   ├── useEntityType.tsx
    │   │   ├── usePlayerDeath.tsx
    │   │   ├── useRestAction.tsx
    │   │   ├── useActionType.tsx
    │   │   ├── useGetEntitiesInLocation.tsx
    │   │   ├── useInitializePlayer.tsx
    │   │   ├── useActionExecuted.tsx
    │   │   ├── useGetGameStatus.tsx
    │   │   ├── useDoorway.tsx
    │   │   ├── useGetPlayerState.tsx
    │   │   ├── useGameResult.tsx
    │   │   ├── useGridBounds.tsx
    │   │   ├── usePosition.tsx
    │   │   ├── useNumberedShardCollected.tsx
    │   │   ├── useSpawnPlayer.tsx
    │   │   ├── useGameConfig.tsx
    │   │   ├── useExecuteTurn.tsx
    │   │   ├── useNumberedShard.tsx
    │   │   ├── README.md
    │   │   ├── index.ts
    │   │   ├── useStarknetConnect.tsx
    │   │   ├── useAttackEntity.tsx
    │   │   ├── useEntity.tsx
    │   │   ├── useStartGame.tsx
    │   │   ├── useOpenDoor.tsx
    │   │   ├── useRespawnPlayer.tsx
    │   │   ├── useDoor.tsx
    │   │   ├── useGameStarted.tsx
    │   │   ├── useShardLocation.tsx
    │   │   ├── useEndGame.tsx
    │   │   ├── useRoom.tsx
    │   │   ├── useGetRoomState.tsx
    │   │   ├── usePlayerStats.tsx
    │   │   ├── useAlertLevel.tsx
    │   │   ├── useGetTurnHistory.tsx
    │   │   ├── useValidateActions.tsx
    │   │   ├── useTrainAction.tsx
    │   │   └── hooksfunctionality-readme.txt
    │   ├── contracts.gen.ts
    │   └── dojoConfig.ts
    ├── types
    │   └── game.ts
    ├── context
    │   └── game-context.tsx
    ├── components
    │   ├── game
    │   │   ├── Gun.tsx
    │   │   ├── BulletHole.tsx
    │   │   └── BloodEffect.tsx
    │   ├── systems
    │   │   ├── AudioManager.tsx
    │   │   ├── FirstPersonControls.tsx
    │   │   └── MapTracker.tsx
    │   ├── index.ts
    │   └── ui
    │       ├── Crosshair.tsx
    │       ├── Instructions.tsx
    │       └── WarningDialog.tsx
    ├── config
    │   ├── manifest_dev.json
    │   ├── manifest.ts
    │   └── cartridgeConnector.tsx
    ├── index.css
    └── main.tsx

```

`/home/suhas/Desktop/pune/blockroomsv2/client/docs/05-cartridge-controller.md`:

```md
# 5. Cartridge Controller Integration - Dojo Game Starter

## 🎮 What is Cartridge Controller?

Cartridge Controller is a **gaming-focused wallet** built specifically for onchain games on Starknet. Unlike traditional wallets that require constant popups and confirmations, the Controller provides a seamless gaming experience through **session policies** that pre-approve specific game actions.

```
🎯 Gaming Wallet vs Traditional Wallet

┌─────────────────────────────────────────────────────────────────┐
│                    TRADITIONAL WALLET                           │
├─────────────────────────────────────────────────────────────────┤
│  Each Action → Popup → User Approval → Transaction             │
│  🏋️ Train → 📱 "Approve?" → ✅ Click → ⏳ Wait                   │
│  ⛏️ Mine  → 📱 "Approve?" → ✅ Click → ⏳ Wait                   │
│  💤 Rest  → 📱 "Approve?" → ✅ Click → ⏳ Wait                   │
│                                                                 │
│  Result: Interrupted gameplay, poor UX                         │
└─────────────────────────────────────────────────────────────────┘

┌─────────────────────────────────────────────────────────────────┐
│                    CARTRIDGE CONTROLLER                         │
├─────────────────────────────────────────────────────────────────┤
│  Pre-approved Actions → Direct Execution → Instant Feedback    │
│  🏋️ Train → ⚡ Instant → ✅ +10 EXP                             │
│  ⛏️ Mine  → ⚡ Instant → ✅ +5 Coins, -5 HP                     │
│  💤 Rest  → ⚡ Instant → ✅ +20 HP                              │
│                                                                 │
│  Result: Seamless gameplay, console-like UX                    │
└─────────────────────────────────────────────────────────────────┘
```

---

## 🔧 Controller Configuration

### **`cartridgeConnector.tsx`** - The Heart of Gaming UX

The Cartridge Connector configuration is where the magic happens - defining which actions players can perform without constant wallet popups:

```typescript
import { Connector } from "@starknet-react/core";
import { ControllerConnector } from "@cartridge/connector";
import { ColorMode, SessionPolicies, ControllerOptions } from "@cartridge/controller";
import { constants } from "starknet";

const { VITE_PUBLIC_DEPLOY_TYPE } = import.meta.env;

// Your deployed game contract address
const CONTRACT_ADDRESS_GAME = '0x31b119987eeb1a6c0d13b029ad9a3c64856369dcdfd6e69d9af4c9fba6f507f';

// 🎯 SESSION POLICIES - The key to seamless gaming
const policies: SessionPolicies = {
  contracts: {
    [CONTRACT_ADDRESS_GAME]: {
      methods: [
        { name: "spawn_player", entrypoint: "spawn_player" },
        { name: "train", entrypoint: "train" },
        { name: "mine", entrypoint: "mine" },
        { name: "rest", entrypoint: "rest" },
      ],
    },
  },
};

// 🎨 VISUAL CUSTOMIZATION
const colorMode: ColorMode = "dark";                    // Dark theme for gaming
const theme = "full-starter-react";                     // Custom game theme

const options: ControllerOptions = {
  // 🌐 Network Configuration
  chains: [
    {
      rpcUrl: "https://api.cartridge.gg/x/starknet/sepolia",
    },
  ],
  defaultChainId: VITE_PUBLIC_DEPLOY_TYPE === 'mainnet'
    ? constants.StarknetChainId.SN_MAIN
    : constants.StarknetChainId.SN_SEPOLIA,

  // 🎯 Core Configuration
  policies,                                              // Pre-approved actions
  theme,                                                 // Visual branding
  colorMode,                                             // UI appearance
  namespace: "full_starter_react",                       // Unique game identifier
  slot: "full-starter-react",                           // Session slot name
};

// Create the connector instance
const cartridgeConnector = new ControllerConnector(options) as never as Connector;

export default cartridgeConnector;
```

---

## 🔑 Session Policies - The Core Innovation

**Session Policies** are what make Cartridge Controller revolutionary for gaming. They define exactly which contract methods can be called without user approval.

### **Policy Structure Breakdown**

```typescript
const policies: SessionPolicies = {
  contracts: {
    // Contract address (from your deployed Dojo contracts)
    [CONTRACT_ADDRESS_GAME]: {
      methods: [
        // Each method that should work seamlessly in-game
        { name: "spawn_player", entrypoint: "spawn_player" },     // Create new player
        { name: "train", entrypoint: "train" },                   // +10 EXP action
        { name: "mine", entrypoint: "mine" },                     // +5 coins, -5 health
        { name: "rest", entrypoint: "rest" },                     // +20 health recovery
      ],
    },
  },
};
```

### **🎯 Why This Matters:**

```typescript
// ❌ WITHOUT Session Policies (traditional wallet):
const train = async () => {
  // User sees popup: "Do you want to approve this transaction?"
  const approval = await wallet.requestPermission("train");
  if (approval) {
    const tx = await contract.train();
    // User waits, game flow interrupted
  }
  // Poor gaming experience
};

// ✅ WITH Session Policies (Cartridge Controller):
const train = async () => {
  const tx = await client.game.train(account);
  // Executes immediately, no popup, seamless experience
  updatePlayerExperience(+10); // Optimistic update
  // Perfect gaming UX
};
```

### **🛡️ Security & Limitations**

Session policies are **secure by design**:

- **Contract-specific**: Only approved contracts can be called
- **Method-specific**: Only approved methods within those contracts
- **Time-limited**: Sessions expire and need renewal
- **Revocable**: Users can revoke permissions anytime

```typescript
// ✅ ALLOWED - These will execute seamlessly
await client.game.train(account);        // Pre-approved ✅
await client.game.mine(account);         // Pre-approved ✅
await client.game.rest(account);         // Pre-approved ✅

// ❌ BLOCKED - These will require explicit approval
await client.game.deletePlayer(account); // Not in policies ❌
await otherContract.transfer(account);    // Different contract ❌
```

---

## 🌐 Network & Environment Configuration

### **Multi-Environment Support**

```typescript
const options: ControllerOptions = {
  chains: [
    {
      // Cartridge provides optimized RPC endpoints
      rpcUrl: "https://api.cartridge.gg/x/starknet/sepolia",
    },
  ],

  // Automatic network selection based on deployment
  defaultChainId: VITE_PUBLIC_DEPLOY_TYPE === 'mainnet'
    ? constants.StarknetChainId.SN_MAIN      // Mainnet for production
    : constants.StarknetChainId.SN_SEPOLIA,  // Sepolia for testing

  namespace: "full_starter_react",           // Unique identifier
  slot: "full-starter-react",               // Session storage key
};
```

### **🔧 Environment Variables**

```bash
# .env.local
VITE_PUBLIC_DEPLOY_TYPE=sepolia              # or 'mainnet'
```

This automatically switches between networks without code changes!

---

## 🎨 Visual Customization

### **Gaming-First UI Design**

```typescript
// Visual configuration for gaming experience
const colorMode: ColorMode = "dark";        // Perfect for gaming
const theme = "full-starter-react";         // Your game's branding

const options: ControllerOptions = {
  colorMode,                                 // Dark theme
  theme,                                     // Custom styling
  // ... other options
};
```

### **🎮 Controller Features**

- **Dark Mode**: Optimized for gaming sessions
- **Custom Themes**: Brand your wallet experience
- **Achievement Integration**: Built-in achievement system
- **Profile Management**: Player profiles and statistics
- **Session Management**: Clear session status and controls

---

## 🔌 Integration with React Hooks

### **`useStarknetConnect.tsx`** - Connection Management

The Controller integrates seamlessly with Starknet React hooks:

```typescript
export function useStarknetConnect() {
  const { connect, connectors } = useConnect();
  const { disconnect } = useDisconnect();
  const { status, address } = useAccount();
  const [isConnecting, setIsConnecting] = useState(false);

  const handleConnect = useCallback(async () => {
    const connector = connectors[0]; // Cartridge Controller
    if (!connector) {
      console.error("No connector found");
      return;
    }

    try {
      setIsConnecting(true);
      console.log("🔗 Attempting to connect controller...");

      // This opens the Cartridge Controller interface
      await connect({ connector });

      console.log("✅ Controller connected successfully");
    } catch (error) {
      console.error("❌ Connection failed:", error);
    } finally {
      setIsConnecting(false);
    }
  }, [connect, connectors]);

  return {
    status,           // 'connected' | 'disconnected' | 'connecting'
    address,          // Player's wallet address
    isConnecting,     // Loading state
    handleConnect,    // Function to open Controller
    handleDisconnect, // Function to disconnect
  };
}
```

### **🎮 Connection Flow**

```
1. User clicks "Connect Controller"
   ↓
2. Cartridge Controller interface opens
   ↓
3. User creates account or signs in
   ↓
4. Session policies are approved
   ↓
5. Game actions now work seamlessly
   ↓
6. Player can focus on gameplay!
```

---

## 🎯 Advanced Controller Features

### **Profile Integration**

The Controller provides built-in profile management:

```typescript
// Access to controller-specific features
const { connector } = useAccount();

const handlePlayerReady = useCallback(() => {
  if (!connector || !('controller' in connector)) {
    console.error("Connector not initialized");
    return;
  }

  // Open player profile with achievements
  if (connector.controller && 'openProfile' in connector.controller) {
    connector.controller.openProfile("achievements");
  }
}, [connector]);
```

### **🏆 Built-in Achievement System**

```typescript
// Achievement integration comes built-in
const openAchievements = () => {
  connector.controller.openProfile("achievements");
};

```

---

## 🔄 Integration with StarknetProvider

### **Provider Configuration**

```typescript
// starknet-provider.tsx
export default function StarknetProvider({ children }: PropsWithChildren) {
  return (
    <StarknetConfig
      autoConnect                                    // Auto-reconnect on page load
      chains={[sepolia]}                            // Available networks
      connectors={[cartridgeConnector]}             // Use Cartridge Controller
      provider={provider}                           // RPC provider
    >
      {children}
    </StarknetConfig>
  );
}
```

### **🔄 Auto-Connection Flow**

```typescript
// Automatic reconnection on page load
useEffect(() => {
  if (isConnected && !player && !isInitializing) {
    console.log("🎮 Controller connected, auto-initializing player...");

    // Automatically create player if needed
    setTimeout(() => {
      initializePlayer().then(result => {
        console.log("🎮 Auto-initialization result:", result);
      });
    }, 500);
  }
}, [isConnected, player, isInitializing, initializePlayer]);
```

---

## 🚀 Game Action Flow with Controller

### **Seamless Transaction Pattern**

```typescript
// Game action with Controller (no popups!)
const executeTrain = useCallback(async () => {
  try {
    // 1. ⚡ Optimistic update (instant UI feedback)
    updatePlayerExperience((player?.experience || 0) + 10);

    // 2. 🎮 Execute via Controller (no popup)
    console.log("📤 Executing train transaction...");
    const tx = await client.game.train(account); // Seamless!

    // 3. ✅ Handle confirmation
    if (tx && tx.code === "SUCCESS") {
      console.log("✅ Train successful!");
      // UI already updated optimistically
    }

  } catch (error) {
    // 4. ❌ Rollback on error
    updatePlayerExperience((player?.experience || 0) - 10);
    console.error("❌ Training failed:", error);
  }
}, [client, account, player, updatePlayerExperience]);
```

### **🎯 User Experience Comparison**

```
Traditional Wallet Flow:
User clicks "Train" → Popup appears → User clicks "Approve" → Transaction processes → UI updates
⏱️ Time: 5-10 seconds, requires user attention

Controller Flow:
User clicks "Train" → UI updates instantly → Transaction processes in background
⏱️ Time: <1 second, no interruption
```

---

## 🎮 Gaming UX Benefits

### **Why Controller is Perfect for Onchain Games**

| Traditional Wallet | Cartridge Controller | Impact |
|-------------------|---------------------|---------|
| Popup per action | Pre-approved actions | 🚀 **10x faster** gameplay |
| User attention required | Background execution | 🎯 **Uninterrupted** focus |
| Complex UI | Gaming-focused design | 😊 **Better** user experience |
| Generic branding | Custom game themes | 🎨 **Branded** experience |
| No achievements | Built-in achievement system | 🏆 **Enhanced** engagement |

---

The Cartridge Controller transforms blockchain gaming from a friction-filled experience into something that feels like traditional gaming. By eliminating constant wallet popups and providing gaming-specific features, it enables developers to create truly engaging onchain games.

**Next**: We'll explore the [**React Hooks Pattern**](./06-react-hooks-pattern.md) that powers the seamless integration between Controller, Dojo contracts, and React components.

```

`/home/suhas/Desktop/pune/blockroomsv2/client/docs/08-extending-system.md`:

```md
# 9. Extending the System - Dojo Game Starter

## 🎯 Extension Philosophy

The Dojo Game Starter is designed as a **foundation**, not a complete game. Train/Mine/Rest are **primitives** that demonstrate core patterns. Your job is to build upon them, not replace them.

**Think Building Blocks**: Each component connects cleanly with others, allowing complex features while maintaining stability.

---

## 🏗️ The Three-Layer Extension Pattern

Every extension follows the same pattern across three layers:

**1. Cairo Contracts** (Game Rules)
- Define what players can do
- Establish costs and rewards
- Create verifiable game state

**2. React Hooks** (Data Flow)  
- Handle blockchain interactions
- Manage optimistic updates
- Coordinate multi-step operations

**3. React Components** (User Interface)
- Transform data into engaging visuals
- Follow established design patterns
- Maintain consistent UX

---

## 🎮 Extension Strategies

### **Start With Player Choices**

Ask: "What meaningful decisions do I want players to make?"

The starter gives you three choice types:
- **Pure advancement** (Train - risk-free growth)
- **Risk/reward** (Mine - gain coins, lose health)  
- **Resource management** (Rest - recover health)

Add new choice types:
- **Strategic**: Long-term vs. immediate gains
- **Social**: Cooperation vs. competition  
- **Economic**: Investment and trading
- **Creative**: Building and customization

### **The Expansion Phases**

**Phase 1: Mirror Extensions**
- Train → Train Strength/Magic/Stealth
- Mine → Mine Gold/Gems/Materials
- Rest → Rest at Inn/Nature/Temple

**Phase 2: Combination Extensions**
- Craft (mining + training)
- Quest (multiple actions in sequence)
- Trade (resources + social interaction)

**Phase 3: New Systems**
- Combat (health becomes HP)
- Exploration (movement + discovery)
- Social (guilds, teams, competition)

---

## 🧠 Design Principles

### **Preserve the Core Loop**
**Player Intent → Action → Immediate Feedback → Updated State**

Every extension must maintain this instant feedback cycle.

### **Smart Constraints**
Good games come from meaningful limitations, not unlimited freedom.

**Examples**:
- Limited inventory slots (capacity decisions)
- Skill tree branches (specialization choices)  
- Time-based resources (scheduling decisions)

### **Emergent Complexity**
Simple systems that interact create rich experiences.

Example: Add item durability → Mining suddenly becomes equipment management → Strategic depth emerges naturally.

---

## 🛠️ Development Approach

### **Minimum Viable Game (MVG)**

Build the smallest complete game that demonstrates your vision:

**RPG MVG**: Add classes where wizards get more EXP from training, warriors get more coins from mining, healers recover more health from resting.

**Strategy MVG**: Add territory control where mining claims cost coins but generate passive income.

**Social MVG**: Add teams where players share resources and combine efforts.

### **Testing Questions**

Every extension should pass these tests:
1. **Does it make existing choices more interesting?**
2. **Does it create new meaningful decisions?**
3. **Does it maintain the core game flow?**

---

## 📊 Feature Priority Guide

**Tier 1: Core Mechanics** (High Impact, Moderate Effort)
- Enhanced progression systems
- Resource management mechanics
- Risk/reward variations

**Tier 2: Social Features** (High Impact, High Effort)
- Guilds and teams
- Competitive systems
- Trading mechanics

**Tier 3: Content Systems** (Moderate Impact, High Effort)
- Procedural generation
- Quests and achievements
- World-building tools

**Tier 4: Polish Features** (Low Impact, Low effort)
- UI improvements
- Visual effects
- Quality-of-life features

---

## 🚀 Success Metrics

Focus on engagement metrics that matter for onchain games:

- **Player Return Rate**: Do they come back daily?
- **Action Diversity**: Do they use all systems or optimize one path?  
- **Emergent Behavior**: Are they discovering unintended strategies?
- **Community Formation**: Are players naturally forming groups?
- **Economic Health**: Are resources flowing sustainably?

---

## ⚡ Quick Start Guide

1. **Pick one existing action** (Train/Mine/Rest)
2. **Create a variation** that serves your game vision
3. **Test with real players** immediately
4. **Observe emergent behaviors** 
5. **Build the next piece** based on learnings

**Remember**: Great onchain games evolve through iteration and community feedback. Start small, test early, build incrementally.

The starter gets you from zero to playable in minutes. Where you take it next is up to your vision and player feedback.
```

`/home/suhas/Desktop/pune/blockroomsv2/client/docs/01-overview.md`:

```md
# 1. Overview - Dojo Game Starter Integration

## 🎯 What is This?

The Dojo Game Starter demonstrates a complete integration between **React frontend** and **Dojo smart contracts** on Starknet, creating a seamless onchain gaming experience. This integration allows players to connect their controller, interact with blockchain-based game logic, and enjoy real-time UI updates—all while maintaining excellent user experience.

## 🏗️ The Big Picture

```
┌─────────────────┐    ┌──────────────────┐    ┌─────────────────┐
│   React Frontend │◄──►│  Custom Hooks    │◄──►│ Dojo Contracts  │
│   (UI/UX Layer)  │    │ (Business Logic) │    │  (Game Logic)   │
└─────────────────┘    └──────────────────┘    └─────────────────┘
         │                        │                       │
         ▼                        ▼                       ▼
┌─────────────────┐    ┌──────────────────┐    ┌─────────────────┐
│ Zustand Store   │    │ Cartridge Wallet │    │    Starknet     │
│ (Global State)  │    │ (Authentication) │    │                 │
└─────────────────┘    └──────────────────┘    └─────────────────┘
```

## 🎮 What Can Players Do?

The starter game includes these onchain actions:

| Action | Frontend Interaction | Smart Contract | State Update |
|--------|---------------------|----------------|--------------|
| **🏋️ Train** | Click "Train" button | Calls `game.train()` | +10 EXP |
| **⛏️ Mine** | Click "Mine" button | Calls `game.mine()` | +5 Coins, -5 Health |
| **💤 Rest** | Click "Rest" button | Calls `game.rest()` | +20 Health |
| **🎯 Spawn** | Auto-triggered on login | Calls `game.spawn_player()` | Creates new player |

## 🔧 Key Integration Components

### 1. **Frontend Layer** (React + TypeScript)
- **UI Components**: Game interface, player stats, action buttons
- **State Management**: Zustand for global state
- **Real-time Updates**: Optimistic UI updates + blockchain confirmation

### 2. **Connection Layer** (Custom Hooks)
- **`usePlayer`**: Fetches player data from blockchain
- **`useStarknetConnect`**: Manages wallet connection
- **`useSpawnPlayer`**: Handles player creation/initialization
- **`useTrainAction`**: Manages training action with optimistic updates

### 3. **Blockchain Layer** (Dojo + Starknet)
- **Smart Contracts**: Game logic written in Cairo
- **Dojo Framework**: ECS architecture for game state
- **Torii GraphQL**: Indexes and queries blockchain data
- **Starknet Network**: Layer 2 execution environment

## 🔄 How Data Flows

### Reading Data (Query Flow)
```
1. Component renders → 2. usePlayer hook → 3. GraphQL query to Torii
                                                        ↓
6. Component re-renders ← 5. Zustand store updates ← 4. Blockchain data returned
```

### Writing Data (Transaction Flow)
```
1. User clicks "Train" → 2. useTrainAction hook → 3. Optimistic UI update
                                                        ↓
6. UI shows final state ← 5. Blockchain confirmation ← 4. Transaction sent
```

## 🎨 What Makes This Integration Special?

### ✨ **Optimistic Updates**
- **Instant Feedback**: UI updates immediately when user acts
- **Progressive Enhancement**: Blockchain confirmation happens in background
- **Rollback Capability**: Reverts changes if transaction fails

### 🔐 **Seamless Authentication**
- **Cartridge Controller**: Gaming-focused wallet integration
- **Auto-Detection**: Automatically detects existing players
- **Auto-Creation**: Creates new players for first-time users

### 🚀 **Developer Experience**
- **Clean Separation**: UI logic separated from blockchain logic
- **TypeScript Safety**: Full type safety from contracts to UI
- **Reusable Patterns**: Hooks can be extended for new game features

## 📊 State Management Philosophy

The integration uses **Zustand** as the single source of truth for:

```typescript
// Global state structure
interface AppState {
  player: Player | null;        // Current player data
  isLoading: boolean;          // Loading states
  error: string | null;        // Error handling
  gameStarted: boolean;        // Game state
}
```

**Why Zustand?**
- **Simple API**: Easy to understand and use
- **Performance**: Minimal re-renders with selector patterns
- **Persistence**: Automatic localStorage integration
- **TypeScript**: Excellent type safety

## 🎯 For Developers: What You'll Learn

By studying this integration, you'll understand:

1. **Blockchain Connection**: How to connect React to Starknet
2. **Data Synchronization**: Keeping UI in sync with blockchain state
3. **Transaction Management**: Handling async blockchain operations
4. **State Patterns**: Effective state management for Web3 apps
5. **User Experience**: Creating smooth UX despite blockchain delays

## 🔍 What's Next?

This overview provides the foundation. In the following READMEs, we'll dive deep into:

- **Architecture**: Detailed system design and component relationships
- **Core Files**: Understanding each file's role and implementation
- **Zustand State Management**: How global state powers the integration
- **Cartridge Controller**: Wallet integration and authentication
- **React Hooks Pattern**: Custom hooks for blockchain interactions
- **Data Flow**: Complete request/response cycles
- **Best Practices**: Patterns for scalable onchain game development
- **Extending the System**: How to add new features and game mechanics

---

> **🎮 Ready to build onchain games?** This integration provides the complete foundation for creating engaging blockchain-based gaming experiences on Starknet!

**Next:** Get started with the overview of the system [**Architecture**](./02-architecture.md)

```

`/home/suhas/Desktop/pune/blockroomsv2/client/docs/07-data-flow.md`:

```md
# 7. Data Flow - Dojo Game Starter Integration

## 🌊 Complete Data Flow Overview

Understanding how data flows through the Dojo Game Starter is crucial for extending and debugging the system. The data flow follows a **reactive pattern** where UI updates instantly (optimistic) while blockchain operations happen in the background.

```
🔄 Complete Data Flow Cycle

┌─────────────────────────────────────────────────────────────────┐
│                    INITIAL LOAD FLOW                            │
├─────────────────────────────────────────────────────────────────┤
│  1. Page Load → 2. Provider Setup → 3. Wallet Connect          │
│      ↓              ↓                    ↓                      │
│  4. Player Check → 5. GraphQL Query → 6. Store Update          │
│      ↓              ↓                    ↓                      │
│  7. Component Render → 8. UI Display → 9. Ready State          │
└─────────────────────────────────────────────────────────────────┘

┌─────────────────────────────────────────────────────────────────┐
│                    GAME ACTION FLOW                             │
├─────────────────────────────────────────────────────────────────┤
│  1. User Click → 2. Hook Validation → 3. Optimistic Update     │
│      ↓              ↓                    ↓                      │
│  4. UI Instant Update → 5. Blockchain TX → 6. Confirmation     │
│      ↓              ↓                    ↓                      │
│  7. Success/Rollback → 8. Final State → 9. UI Reconciliation   │
└─────────────────────────────────────────────────────────────────┘
```

---

## 🚀 Application Startup Flow

### **1. Initial Render & Provider Setup**

When the app first loads, the provider hierarchy establishes the foundation:

```typescript
// main.tsx - Initialization chain
const sdk = await init<SchemaType>({
  client: {
    toriiUrl: dojoConfig.toriiUrl,
    worldAddress: dojoConfig.manifest.world.address,
  }
});

// Provider tree setup
<DojoSdkProvider sdk={sdk} clientFn={setupWorld}>
  <StarknetProvider>
    <App />
  </StarknetProvider>
</DojoSdkProvider>
```

**🎯 What Happens:**
- Dojo SDK connects to Torii indexer
- Starknet provider configures wallet connectors
- React component tree renders with providers available

### **2. Component Mounting & Hook Initialization**

```typescript
// HomeScreen.tsx - Component composition
export default function HomePage() {
  return (
    <div>
      <StatusBar />     {/* Connection status */}
      <GameSection />   {/* Player stats + actions */}
    </div>
  )
}

// GameSection.tsx - Data consuming components
export function GameSection() {
  return (
    <div className="grid md:grid-cols-2 gap-8">
      <PlayerStats />   {/* Displays player data */}
      <GameActions />   {/* Triggers game actions */}
    </div>
  )
}
```

**🔄 Hook Activation Chain:**
```
1. StatusBar mounts → useStarknetConnect + usePlayer + useSpawnPlayer
2. PlayerStats mounts → useAppStore (player data subscription)
3. GameActions mounts → useTrainAction + useMineAction + useRestAction
```

---

## 🔌 Connection & Authentication Flow

### **StatusBar Component - Connection Orchestrator**

The StatusBar demonstrates the complete connection flow:

```typescript
// StatusBar.tsx - Connection coordination
export function StatusBar() {
  const { status, handleConnect } = useStarknetConnect();
  const { player, isLoading: playerLoading } = usePlayer();
  const { initializePlayer, isInitializing } = useSpawnPlayer();

  // 🎮 Auto-initialization after connection
  useEffect(() => {
    if (status === "connected" && !player && !isInitializing && !playerLoading) {
      console.log("🎮 Controller connected, auto-initializing player...");
      setTimeout(() => {
        initializePlayer().then(result => {
          console.log("🎮 Auto-initialization result:", result);
        });
      }, 500);
    }
  }, [status, player, isInitializing, playerLoading, initializePlayer]);

  return (
    <div>
      {status !== "connected" ? (
        <Button onClick={handleConnect}>
          Connect Controller
        </Button>
      ) : (
        <div>Connected: {formatAddress(address)}</div>
      )}
    </div>
  );
}
```

**📊 Connection State Progression:**
```
'disconnected' → 'connecting' → 'connected' → player check → player creation/load → 'ready'
```

---

## 📊 Data Reading Flow (Query Pattern)

### **Player Data Fetching via usePlayer**

```typescript
// usePlayer.tsx - Data fetching pattern
export const usePlayer = () => {
  const { account } = useAccount();
  const { player: storePlayer, setPlayer } = useAppStore();

  // 🔍 GraphQL query to Torii
  const fetchPlayerData = async (playerOwner: string) => {
    const response = await fetch(TORII_URL, {
      method: "POST",
      body: JSON.stringify({
        query: PLAYER_QUERY,
        variables: { playerOwner }
      }),
    });

    const result = await response.json();

    if (result.data?.fullStarterReactPlayerModels?.edges?.length) {
      const rawData = result.data.fullStarterReactPlayerModels.edges[0].node;
      return {
        owner: rawData.owner,
        experience: hexToNumber(rawData.experience),
        health: hexToNumber(rawData.health),
        coins: hexToNumber(rawData.coins),
        creation_day: hexToNumber(rawData.creation_day)
      };
    }
    return null;
  };

  // 🔄 Auto-fetch when address changes
  useEffect(() => {
    if (account?.address) {
      fetchPlayerData(account.address).then(setPlayer);
    }
  }, [account?.address]);

  return { player: storePlayer, refetch: fetchPlayerData };
};
```

**🌊 Data Flow Steps:**
```
1. Wallet connects → account.address available
2. usePlayer detects address change → triggers fetchPlayerData
3. GraphQL query sent to Torii → blockchain data retrieved
4. Data processed (hex→number) → setPlayer updates Zustand store
5. Store change triggers → component re-renders with new player data
```

### **PlayerStats Component - Data Consumption**

```typescript
// PlayerStats.tsx - Reactive data display
export function PlayerStats() {
  const player = useAppStore(state => state.player);
  const isLoading = useAppStore(state => state.isLoading);

  // 📊 Computed values from player data
  const currentLevel = Math.floor((player?.experience || 0) / 100) + 1;
  const expInCurrentLevel = (player?.experience || 0) % 100;
  const healthColor = getHealthColor(player?.health || 100);

  return (
    <Card>
      <CardContent>
        {/* Experience display */}
        <div>
          <span>Level {currentLevel}</span>
          <span>{expInCurrentLevel} / 100</span>
          <Progress value={(expInCurrentLevel / 100) * 100} />
        </div>

        {/* Health with color coding */}
        <div>
          <span className={healthColor}>
            Health: {player?.health || 100}/100
          </span>
          <Progress value={player?.health || 100} />
        </div>

        {/* Coins display */}
        <div>
          <Coins className="w-4 h-4" />
          <span>Coins: {player?.coins || 0}</span>
        </div>
      </CardContent>
    </Card>
  );
}
```

**⚡ Reactive Updates:**
- Any change to `player` in Zustand store → PlayerStats re-renders
- Computed values (level, progress) update automatically
- UI reflects new state instantly

---

## 🎮 Game Action Flow (Write Operations)

### **Training Action - Complete Flow**

The training action showcases the complete optimistic update pattern:

```typescript
// GameActions.tsx - User interaction
export function GameActions() {
  const { executeTrain, trainState, canTrain } = useTrainAction();

  return (
    <Button
      onClick={executeTrain}
      disabled={!canTrain || trainState.isLoading}
    >
      {trainState.isLoading ? (
        <>
          <Loader2 className="animate-spin" />
          Training...
        </>
      ) : (
        <>
          <Dumbbell />
          Train (+10 EXP)
        </>
      )}
    </Button>
  );
}
```

### **useTrainAction - Optimistic Update Implementation**

```typescript
// useTrainAction.tsx - Complete action flow
const executeTrain = useCallback(async () => {
  try {
    // 🎯 1. VALIDATION
    if (!canTrain || !account) {
      setTrainState(prev => ({ ...prev, error: "Cannot train right now" }));
      return;
    }

    // ⚡ 2. OPTIMISTIC UPDATE
    setTrainState({ isLoading: true, txStatus: 'PENDING' });
    updatePlayerExperience((player?.experience || 0) + 10);

    // 🔗 3. BLOCKCHAIN TRANSACTION
    console.log("📤 Executing train transaction...");
    const tx = await client.game.train(account);

    // ✅ 4. SUCCESS HANDLING
    if (tx && tx.code === "SUCCESS") {
      setTrainState({ txStatus: 'SUCCESS', isLoading: false });

      // Auto-clear success state
      setTimeout(() => {
        setTrainState({ isLoading: false, error: null, txStatus: null });
      }, 3000);
    } else {
      throw new Error(`Training failed: ${tx?.code}`);
    }

  } catch (error) {
    // ❌ 5. ROLLBACK ON FAILURE
    console.error("❌ Training failed:", error);
    updatePlayerExperience((player?.experience || 0) - 10); // Revert!

    setTrainState({
      isLoading: false,
      error: error.message,
      txStatus: 'REJECTED'
    });
  }
}, [canTrain, account, client, player, updatePlayerExperience]);
```

**🔄 Step-by-Step Breakdown:**

1. **User Clicks "Train"** → `executeTrain()` called
2. **Validation Check** → Ensure wallet connected, player exists
3. **Optimistic Update** → UI shows +10 EXP immediately
4. **Component Re-render** → PlayerStats shows new experience
5. **Blockchain TX** → Transaction sent to Dojo contract
6. **Success/Failure** → Confirm optimistic update or rollback
7. **Final State** → UI settles into final confirmed state

---

## 🔄 State Synchronization Patterns

### **Multi-Component State Coordination**

Multiple components react to the same state changes:

```typescript
// Player data flows to multiple components simultaneously
const player = useAppStore(state => state.player);

// StatusBar uses player for status messages
const getStatusMessage = () => {
  if (!player) return "Create player to start";
  return "Ready to play!";
};

// PlayerStats uses player for display
const stats = {
  experience: player?.experience || 0,
  health: player?.health || 100,
  coins: player?.coins || 0,
};

// GameActions use player for validation
const canTrain = isConnected && player !== null && !isLoading;
const canMine = canTrain && (player?.health || 0) > 5;
const canRest = canTrain && (player?.health || 0) < 100;
```

### **Loading State Coordination**

```typescript
// StatusBar.tsx - Coordinated loading states
const isLoading = isConnecting || status === "connecting" || isInitializing || playerLoading;

const getStatusMessage = () => {
  if (!isConnected) return "Connect your controller to start playing";
  if (playerLoading) return "Loading player data...";
  if (isInitializing) {
    if (txStatus === 'PENDING') return "Creating player on blockchain...";
    if (txStatus === 'SUCCESS') return "Player created successfully!";
    return "Initializing player...";
  }
  if (player) return "Ready to play!";
  return "Preparing...";
};
```

---

## 🔄 Error Handling & Recovery Flow

### **Transaction Failure Pattern**

```typescript
// Error handling with optimistic rollback
try {
  // Optimistic update
  updatePlayerCoins(player.coins + 5);
  updatePlayerHealth(player.health - 5);

  // Blockchain transaction
  const tx = await client.game.mine(account);

  if (tx.code !== "SUCCESS") {
    throw new Error("Transaction failed");
  }
} catch (error) {
  // Rollback optimistic changes
  updatePlayerCoins(player.coins - 5);    // Revert coins
  updatePlayerHealth(player.health + 5);  // Revert health

  // Show error to user
  setMineState({ error: error.message, txStatus: 'REJECTED' });
}
```

### **Component Error States**

```typescript
// PlayerStats.tsx - Error state display
if (isLoading) {
  return (
    <div className="flex items-center justify-center">
      <Loader2 className="animate-spin" />
      <span>Loading player data...</span>
    </div>
  );
}

if (!isConnected) {
  return (
    <div className="bg-yellow-500/10 border border-yellow-500/30 rounded-lg p-3">
      <span>Connect controller to load player stats</span>
    </div>
  );
}

if (isConnected && !player) {
  return (
    <div className="bg-blue-500/10 border border-blue-500/30 rounded-lg p-3">
      <span>Creating your player automatically...</span>
    </div>
  );
}
```

---


## 🎯 Real-Time Gameplay Example

Let's trace a complete user action from click to final state:

**Scenario: User clicks "Mine" button**

```
⏱️ T+0ms:    User clicks "Mine" button
⏱️ T+1ms:    GameActions.executeMine() called
⏱️ T+2ms:    Validation passes (player has >5 health)
⏱️ T+5ms:    Optimistic update: coins +5, health -5
⏱️ T+6ms:    PlayerStats re-renders with new values
⏱️ T+7ms:    Button shows "Mining..." with spinner
⏱️ T+10ms:   Blockchain transaction initiated
⏱️ T+2000ms: Transaction confirmed by network
⏱️ T+2001ms: Success state set, loading spinner removed
⏱️ T+2002ms: Button returns to normal state
⏱️ T+5000ms: Success state auto-cleared
```

**🎯 Key Insights:**
- **User sees response in <10ms** (optimistic update)
- **UI stays responsive** during 2-second blockchain delay
- **Automatic error recovery** if transaction fails
- **Progressive enhancement** - works with or without blockchain

---

The data flow architecture ensures that users get **instant feedback** while maintaining **data consistency** with the blockchain. This pattern can be extended to any new game mechanics by following the same optimistic update → blockchain transaction → confirmation/rollback flow.

**Next**: We'll explore how to [**Extend the System**](./08-extending-system.md) with new game mechanics and features.

```

`/home/suhas/Desktop/pune/blockroomsv2/client/docs/04-zustand-state-management.md`:

```md
# 4. Zustand State Management - Dojo Game Starter

## 🎯 Why Zustand for Onchain Games?

Zustand is the **backbone** of the Dojo Game Starter's state management, chosen specifically for its performance and simplicity in handling blockchain interactions. Unlike traditional web apps, onchain games require:

- **Optimistic Updates**: Instant UI feedback while transactions process
- **State Reconciliation**: Syncing local state with blockchain reality
- **Transaction Tracking**: Managing multiple async blockchain operations
- **Data Persistence**: Caching blockchain data for better UX

```
🏗️ State Architecture Overview

┌─────────────────────────────────────────────────────────┐
│                  ZUSTAND STORE                          │
├─────────────────────────────────────────────────────────┤
│  👤 Player State    │  🎮 Game State   │  ⚡ UI State    │
│  - owner           │  - gameStarted   │  - isLoading    │
│  - experience      │  - currentAction │  - error        │
│  - health          │  - txStatus      │  - txHash       │
│  - coins           │                  │                 │
└─────────────────────────────────────────────────────────┘
              ↑                    ↓
    ┌─────────────────┐    ┌─────────────────┐
    │  Custom Hooks   │    │ React Components│
    │  - usePlayer    │    │  - GameActions  │
    │  - useTrainAction│    │  - PlayerStats  │
    │  - useMineAction │    │  - StatusBar    │
    └─────────────────┘    └─────────────────┘
```

---

## 🏪 Core Store Structure

### **`store.ts`** - Global State Hub

The Zustand store serves as the single source of truth for all application state:

```typescript
// Interface matching bindings from Cairo contracts
export interface Player {
  owner: string;          // Player's wallet address
  experience: number;     // Game experience points
  health: number;         // Current health (0-100)
  coins: number;          // Player's currency
  creation_day: number;   // Timestamp when created
}

// Application state structure
interface AppState {
  // 👤 Player Data
  player: Player | null;

  // ⚡ UI State
  isLoading: boolean;     // Global loading state
  error: string | null;   // Error messages

  // 🎮 Game State
  gameStarted: boolean;   // Whether game session is active
}

// Store actions for state mutations
interface AppActions {
  // Player management
  setPlayer: (player: Player | null) => void;
  updatePlayerCoins: (coins: number) => void;
  updatePlayerExperience: (experience: number) => void;
  updatePlayerHealth: (health: number) => void;

  // UI management
  setLoading: (loading: boolean) => void;
  setError: (error: string | null) => void;

  // Game management
  startGame: () => void;
  endGame: () => void;
  resetStore: () => void;
}
```

### **Store Creation with Persistence**

```typescript
const useAppStore = create<AppStore>()(
  persist(
    (set) => ({
      // Initial state
      player: null,
      isLoading: false,
      error: null,
      gameStarted: false,

      // Player actions - immutable updates
      setPlayer: (player) => set({ player }),

      updatePlayerCoins: (coins) => set((state) => ({
        player: state.player ? { ...state.player, coins } : null
      })),

      updatePlayerExperience: (experience) => set((state) => ({
        player: state.player ? { ...state.player, experience } : null
      })),

      updatePlayerHealth: (health) => set((state) => ({
        player: state.player ? { ...state.player, health } : null
      })),

      // UI actions
      setLoading: (isLoading) => set({ isLoading }),
      setError: (error) => set({ error }),

      // Game actions
      startGame: () => set({ gameStarted: true }),
      endGame: () => set({ gameStarted: false }),
      resetStore: () => set(initialState),
    }),
    {
      name: 'dojo-starter-store',           // localStorage key
      partialize: (state) => ({            // Only persist these fields
        player: state.player,
        gameStarted: state.gameStarted,
      }),
    }
  )
);
```

**🔑 Key Features:**
- **Immutable Updates**: All state changes create new objects (React optimization)
- **Selective Persistence**: Only critical data survives page refreshes
- **Type Safety**: Full TypeScript integration with interface definitions
- **Middleware Support**: Easy integration with persist, devtools, etc.

---

## ⚡ Optimistic Updates Pattern

The most critical feature for onchain games is **optimistic updates** - updating the UI immediately while blockchain transactions process in the background.

### **Game Action Hook Example: `useTrainAction`**

```typescript
export const useTrainAction = (): UseTrainActionReturn => {
  const { account } = useAccount();
  const { client } = useDojoSDK();
  const { player, updatePlayerExperience } = useAppStore();

  const [trainState, setTrainState] = useState<TrainActionState>({
    isLoading: false,
    error: null,
    txHash: null,
    txStatus: null
  });

  const executeTrain = useCallback(async () => {
    try {
      // 1. ⚡ OPTIMISTIC UPDATE - Instant UI feedback
      setTrainState({ isLoading: true, txStatus: 'PENDING', ... });
      updatePlayerExperience((player?.experience || 0) + 10);

      // 2. 🔗 BLOCKCHAIN TRANSACTION - Send to network
      console.log("📤 Executing train transaction...");
      const tx = await client.game.train(account);

      if (tx?.transaction_hash) {
        setTrainState(prev => ({ ...prev, txHash: tx.transaction_hash }));
      }

      // 3. ✅ CONFIRMATION - Transaction succeeded
      if (tx && tx.code === "SUCCESS") {
        console.log("✅ Train transaction successful!");
        setTrainState(prev => ({ ...prev, txStatus: 'SUCCESS' }));

        // Auto-clear success state after 3 seconds
        setTimeout(() => resetTrainState(), 3000);
      } else {
        throw new Error(`Transaction failed: ${tx?.code}`);
      }

    } catch (error) {
      // 4. ❌ ROLLBACK - Revert optimistic update on failure
      console.error("❌ Training failed:", error);
      updatePlayerExperience((player?.experience || 0) - 10); // Rollback
      setTrainState({
        isLoading: false,
        error: error.message,
        txStatus: 'REJECTED'
      });
    }
  }, [account, client, player, updatePlayerExperience]);

  return { trainState, executeTrain, canTrain: !trainState.isLoading };
};
```

### **Pattern Breakdown:**

1. **⚡ Immediate Update**: UI updates instantly (+10 EXP shown immediately)
2. **🔗 Background Transaction**: Blockchain operation happens asynchronously
3. **✅ Confirmation**: Success state maintained, user sees completion
4. **❌ Rollback**: If transaction fails, optimistic update is reverted

---

## 🎮 Game Action Hooks Integration

Each game action follows the same optimistic pattern but with different logic:

### **`useMineAction` - Earn Coins, Lose Health**

```typescript
const executeMine = useCallback(async () => {
  // Validation - check if player has enough health
  const hasEnoughHealth = (player?.health || 0) > 5;
  if (!hasEnoughHealth) {
    setMineState(prev => ({
      ...prev,
      error: "Not enough health to mine (need >5 HP)"
    }));
    return;
  }

  try {
    // Optimistic update: +5 coins, -5 health
    updatePlayerCoins((player?.coins || 0) + 5);
    updatePlayerHealth(Math.max(0, (player?.health || 100) - 5));

    // Execute blockchain transaction
    const tx = await client.game.mine(account);

    // Handle success/failure...
  } catch (error) {
    // Rollback both changes on failure
    updatePlayerCoins((player?.coins || 0) - 5);
    updatePlayerHealth((player?.health || 0) + 5);
  }
}, [client, account, player, updatePlayerCoins, updatePlayerHealth]);
```

### **`useRestAction` - Recover Health**

```typescript
const executeRest = useCallback(async () => {
  // Validation - only rest if health < 100
  const needsHealth = (player?.health || 0) < 100;
  if (!needsHealth) {
    setRestState(prev => ({
      ...prev,
      error: "Health is already full"
    }));
    return;
  }

  try {
    // Optimistic update: +20 health (max 100)
    updatePlayerHealth(Math.min(100, (player?.health || 100) + 20));

    // Execute blockchain transaction
    const tx = await client.game.rest(account);

    // Handle success/failure...
  } catch (error) {
    // Rollback health change on failure
    updatePlayerHealth((player?.health || 0) - 20);
  }
}, [client, account, player, updatePlayerHealth]);
```

---

## 🔧 Advanced Store Patterns

### **Selective State Subscriptions**

Zustand allows components to subscribe only to specific state slices, minimizing re-renders:

```typescript
// ✅ Good - Only re-renders when coins change
function CoinsDisplay() {
  const coins = useAppStore(state => state.player?.coins || 0);
  return <span>Coins: {coins}</span>;
}

// ✅ Good - Multiple specific values
function PlayerStats() {
  const { experience, health } = useAppStore(state => ({
    experience: state.player?.experience || 0,
    health: state.player?.health || 100,
  }));

  return (
    <div>
      <div>EXP: {experience}</div>
      <div>HP: {health}</div>
    </div>
  );
}

// ❌ Bad - Re-renders on any store change
function BadComponent() {
  const store = useAppStore(); // Subscribes to everything
  return <div>Coins: {store.player?.coins}</div>;
}
```

### **Computed Values and Derived State**

```typescript
// Custom selector for computed values
const usePlayerStats = () => {
  return useAppStore(state => {
    if (!state.player) return null;

    return {
      // Raw values
      experience: state.player.experience,
      health: state.player.health,
      coins: state.player.coins,

      // Computed values
      level: Math.floor(state.player.experience / 100) + 1,
      healthPercentage: (state.player.health / 100) * 100,
      isLowHealth: state.player.health < 20,
      canAfford: (price: number) => state.player.coins >= price,

      // Status indicators
      status: state.player.health <= 0 ? 'dead' :
              state.player.health < 20 ? 'critical' :
              state.player.health < 50 ? 'low' : 'healthy'
    };
  });
};

// Usage in components
function AdvancedPlayerDisplay() {
  const stats = usePlayerStats();

  if (!stats) return <div>No player data</div>;

  return (
    <div className={stats.isLowHealth ? 'text-red-500' : 'text-green-500'}>
      <div>Level {stats.level}</div>
      <div>Health: {stats.health}% ({stats.status})</div>
      <div>Can afford 50 coins: {stats.canAfford(50) ? 'Yes' : 'No'}</div>
    </div>
  );
}
```

---

## 💾 Persistence Strategy

The store uses strategic persistence to balance performance with UX:

```typescript
{
  name: 'dojo-starter-store',
  partialize: (state) => ({
    // ✅ Persist - Critical user data
    player: state.player,
    gameStarted: state.gameStarted,

    // ❌ Don't persist - Transient UI state
    // isLoading: state.isLoading,    // Should reset on page load
    // error: state.error,            // Errors should not persist
    // txHash: state.txHash,          // Transaction state is temporary
  }),
}
```

**What Gets Persisted:**
- **Player Data**: Cached to avoid re-fetching on every page load
- **Game State**: Remember if user was in an active game session

**What Doesn't Get Persisted:**
- **Loading States**: Should always start fresh
- **Error Messages**: Don't show stale errors
- **Transaction Hashes**: Temporary transaction tracking

---

## 🎯 Integration with React Components

### **Component Usage Patterns**

```typescript
// GameActions.tsx - Uses multiple action hooks
function GameActions() {
  const player = useAppStore(state => state.player);

  // Each action has its own hook with optimistic updates
  const { trainState, executeTrain, canTrain } = useTrainAction();
  const { mineState, executeMine, canMine } = useMineAction();
  const { restState, executeRest, canRest } = useRestAction();

  return (
    <div>
      <Button
        onClick={executeTrain}
        disabled={!canTrain || trainState.isLoading}
        className={trainState.txStatus === 'SUCCESS' ? 'border-green-500' : ''}
      >
        {trainState.isLoading ? 'Training...' : 'Train (+10 EXP)'}
      </Button>

      <Button
        onClick={executeMine}
        disabled={!canMine || mineState.isLoading}
      >
        {mineState.isLoading ? 'Mining...' : 'Mine (+5 Coins, -5 HP)'}
      </Button>

      <Button
        onClick={executeRest}
        disabled={!canRest || restState.isLoading}
      >
        {restState.isLoading ? 'Resting...' : 'Rest (+20 HP)'}
      </Button>
    </div>
  );
}
```

---

## 🚀 Performance Benefits

### **Why Zustand > Redux for Onchain Games**

| Feature | Zustand | Redux | Impact |
|---------|---------|-------|---------|
| **Boilerplate** | Minimal | Heavy | Faster development |
| **Bundle Size** | ~2.5KB | ~19KB+ | Better loading times |
| **TypeScript** | Native | Requires setup | Better DX |
| **Optimistic Updates** | Simple | Complex | Easier blockchain UX |
| **Selectors** | Built-in | Requires reselect | Less dependencies |
| **Persistence** | Middleware | External lib | Simpler setup |

### **Real Performance Impact:**

```typescript
// Zustand - Direct, minimal re-renders
const coins = useAppStore(state => state.player?.coins || 0);

// Redux equivalent - More complex, potential over-rendering
const coins = useSelector(state => state.player?.coins || 0);
const dispatch = useDispatch();
```

---

## 🛡️ Error Handling & Resilience

### **Transaction State Management**

```typescript
// Comprehensive transaction state tracking
interface ActionState {
  isLoading: boolean;                               // UI loading state
  error: string | null;                            // Error messages
  txHash: string | null;                          // Blockchain tx hash
  txStatus: 'PENDING' | 'SUCCESS' | 'REJECTED' | null; // Transaction status
}

// Auto-cleanup patterns
const executeAction = async () => {
  try {
    // Execute optimistic update + transaction
  } catch (error) {
    // Set error state
    setActionState({ error: error.message, txStatus: 'REJECTED' });

    // Auto-clear error after 5 seconds
    setTimeout(() => {
      setActionState({ error: null, txStatus: null });
    }, 5000);
  }
};
```

### **Store Recovery Patterns**

```typescript
// Reset store to clean state when needed
const { resetStore } = useAppStore();

// Partial reset - only clear errors
const clearErrors = () => useAppStore.setState({ error: null });

// Recovery from failed state
const recoverFromFailedTransaction = () => {
  useAppStore.setState({
    isLoading: false,
    error: null,
    // Keep player data, just clear transaction state
  });
};
```

---

Zustand provides the perfect foundation for onchain game state management, combining simplicity with powerful features needed for blockchain interactions. The optimistic update pattern ensures users get immediate feedback while maintaining data consistency with the blockchain.

**Next**: We'll explore how the [**Cartridge Controller Integration**](./05-cartridge-controller.md) provides seamless wallet connectivity and gaming-focused user experience.

```

`/home/suhas/Desktop/pune/blockroomsv2/client/docs/model-update-guide-en.md`:

```md
# Complete Guide: Dojo Model Updates and Client Code

This guide details the step-by-step process for adding new fields to Dojo models and their corresponding functionalities in the React client.

## 📋 Process Overview

When adding new fields or actions to a Dojo model, you must update multiple layers of the stack. This guide ensures you don't miss any critical steps.

**IMPORTANT!**
For the Cairo contracts use Sensei MCP.
Do not make changes that are not defined in this file.

---

## 🎯 Step 1: Cairo Model Changes

### 1.1 Update `contract/src/models/player.cairo` (or corresponding model)

#### a) Modify the main structure
```cairo
#[derive(Copy, Drop, Serde, IntrospectPacked, Debug)]
#[dojo::model]
pub struct Player {
    #[key]
    pub owner: ContractAddress,
    pub experience: u32,
    pub health: u32,
    pub coins: u32,
    pub creation_day: u32,
    // ✅ ADD NEW FIELDS HERE
    pub shoot: u32,
    pub dribble: u32,
    pub energy: u32,
    pub stamina: u32,
}
```

#### b) Update the `fn new` constructor
```cairo
fn new(
    owner: ContractAddress,
    experience: u32,
    health: u32,
    coins: u32,
    creation_day: u32,
    // ✅ ADD NEW PARAMETERS
    shoot: u32,
    dribble: u32,
    energy: u32,
    stamina: u32,
) -> Player {
    Player {
        owner: owner,
        experience: experience,
        health: health,
        coins: coins,
        creation_day: creation_day,
        // ✅ ADD INITIALIZATION
        shoot: shoot,
        dribble: dribble,
        energy: energy,
        stamina: stamina,
    }
}
```

#### c) Update `ZeroablePlayerTrait`
```cairo
fn zero() -> Player {
    Player {
        owner: constants::ZERO_ADDRESS(),
        experience: 0,
        health: 0,
        coins: 0,
        creation_day: 0,
        // ✅ ADD FIELDS WITH VALUE 0
        shoot: 0,
        dribble: 0,
        energy: 0,
        stamina: 0,
    }
}
```

#### d) Create setter methods for new fields
```cairo
fn add_shoot(ref self: Player, shoot_amount: u32) {
    self.shoot += shoot_amount;
}

fn add_dribble(ref self: Player, dribble_amount: u32) {
    self.dribble += dribble_amount;
}

fn add_energy(ref self: Player, energy_amount: u32) {
    self.energy += energy_amount;
}

fn add_stamina(ref self: Player, stamina_amount: u32) {
    self.stamina += stamina_amount;
}

fn remove_stamina(ref self: Player, stamina_amount: u32) {
    self.stamina -= stamina_amount;
}
```

#### e) Update ALL tests
```cairo
#[test]
#[available_gas(1000000)]
fn test_player_new_constructor() {
    let player = PlayerTrait::new(
        mock_address,
        50,   // experience
        100,  // health
        25,   // coins
        42,   // creation_day
        // ✅ ADD VALUES FOR NEW FIELDS
        30,   // shoot
        35,   // dribble
        100,  // energy
        100,  // stamina
    );

    // ✅ ADD ASSERTIONS FOR NEW FIELDS
    assert_eq!(player.shoot, 30, "Shoot should be initialized to 30");
    assert_eq!(player.dribble, 35, "Dribble should be initialized to 35");
    assert_eq!(player.energy, 100, "Energy should be initialized to 100");
    assert_eq!(player.stamina, 100, "Stamina should be initialized to 100");
}
```

**⚠️ IMPORTANT:** Update ALL existing tests to include the new fields.

---

## 🏪 Step 2: Update Store Layer

### 2.1 Modify `contract/src/store.cairo`

#### a) Update the constructor in `create_player`
```cairo
fn create_player(mut self: Store) {
    let caller = get_caller_address();
    let current_timestamp = get_block_timestamp();

    let new_player = PlayerTrait::new(
        caller,
        0,   // experience
        100, // health
        0,   // coins
        Timestamp::unix_timestamp_to_day(current_timestamp),
        // ✅ ADD INITIAL VALUES FOR NEW FIELDS
        10,  // shoot - starting skill level
        10,  // dribble - starting skill level
        40,  // energy - starting energy
        40,  // stamina - starting stamina
    );

    self.world.write_model(@new_player);
}
```

#### b) Add functions for new actions
```cairo
fn train_shooting(mut self: Store) {
    let mut player = self.read_player();

    // Example: +5 shooting, +5 experience, -10 stamina
    player.add_shoot(5);
    player.add_experience(5);
    player.remove_stamina(10);

    self.world.write_model(@player);
}

fn restore_stamina(mut self: Store) {
    let mut player = self.read_player();

    // +20 stamina
    player.add_stamina(20);

    self.world.write_model(@player);
}
```

---

## 📦 Step 3: Update TypeScript Bindings

### 3.1 Update `client/src/dojo/bindings.ts`

```typescript
export interface Player {
    owner: string;
    experience: number;
    health: number;
    coins: number;
    creation_day: number;
    // ✅ ADD NEW FIELDS
    shoot: number;
    dribble: number;
    energy: number;
    stamina: number;
}

export const schema: SchemaType = {
    full_starter_react: {
        Player: {
            owner: "",
            experience: 0,
            health: 0,
            coins: 0,
            creation_day: 0,
            // ✅ ADD WITH DEFAULT VALUES
            shoot: 0,
            dribble: 0,
            energy: 0,
            stamina: 0,
        },
    },
};
```

---

## 🔗 Step 4: Update Contract Functions

### 4.1 Add to `client/src/dojo/contracts.gen.ts`

```typescript
// ✅ ADD CALLDATA BUILDER
const build_game_trainShooting_calldata = (): DojoCall => {
    return {
        contractName: "game",
        entrypoint: "train_shooting",
        calldata: [],
    };
};

// ✅ ADD EXECUTION FUNCTION
const game_trainShooting = async (snAccount: Account | AccountInterface) => {
    try {
        return await provider.execute(
            snAccount as any,
            build_game_trainShooting_calldata(),
            "full_starter_react",
        );
    } catch (error) {
        console.error(error);
        throw error;
    }
};

// ✅ ADD TO RETURN OBJECT
return {
    game: {
        // ... existing functions
        trainShooting: game_trainShooting,
        buildTrainShootingCalldata: build_game_trainShooting_calldata,
        restoreStamina: game_restoreStamina,
        buildRestoreStaminaCalldata: build_game_restoreStamina_calldata,
    },
};
```

---

## 🎮 Step 5: Update System Layer (if applicable)

### 5.1 Add to `contract/src/systems/game.cairo`

#### a) Update interface
```cairo
#[starknet::interface]
pub trait IGame<T> {
    // ... existing methods
    fn train_shooting(ref self: T);
    fn restore_stamina(ref self: T);
}
```

#### b) Implement methods
```cairo
fn train_shooting(ref self: ContractState) {
    let mut world = self.world(@"full_starter_react");
    let store = StoreTrait::new(world);
    let achievement_store = AchievementStoreTrait::new(world);

    let player = store.read_player();

    // Train shooting
    store.train_shooting();

    // Emit events for achievements progression
    let mut achievement_id = constants::ACHIEVEMENTS_INITIAL_ID; // 1
    let stop = constants::ACHIEVEMENTS_COUNT; // 5

    while achievement_id <= stop {
        let task: Achievement = achievement_id.into(); // u8 to Achievement
        let task_identifier = task.identifier(); // Achievement identifier is the task to complete
        achievement_store.progress(player.owner.into(), task_identifier, 1, get_block_timestamp());
        achievement_id += 1;
    };
}
```

**⚠️ CRITICAL:** Always follow the EXACT same pattern as existing functions. Do NOT use `emit!` or other custom patterns.

**📋 Required Pattern for ALL System Functions:**
1. `let mut world = self.world(@"full_starter_react");`
2. `let store = StoreTrait::new(world);`
3. `let achievement_store = AchievementStoreTrait::new(world);`
4. `let player = store.read_player();`
5. Call your store method (e.g., `store.improve_charisma();`)
6. Achievement progression loop (copy exactly from other functions)
```

---

## 🪝 Step 6: Update React Hooks

### 6.1 Update `client/src/dojo/hooks/usePlayer.tsx`

#### a) Add fields to GraphQL query
```typescript
const PLAYER_QUERY = `
    query GetPlayer($playerOwner: ContractAddress!) {
        fullStarterReactPlayerModels(where: { owner: $playerOwner }) {
            edges {
                node {
                    owner
                    experience
                    health
                    coins
                    creation_day
                    shoot
                    dribble
                    energy
                    stamina
                }
            }
        }
    }
`;
```

#### b) Update data processing
```typescript
return {
    owner: rawPlayerData.owner,
    experience: hexToNumber(rawPlayerData.experience),
    health: hexToNumber(rawPlayerData.health),
    coins: hexToNumber(rawPlayerData.coins),
    creation_day: hexToNumber(rawPlayerData.creation_day),
    // ✅ ADD NEW FIELDS WITH DEFAULTS
    shoot: hexToNumber(rawPlayerData.shoot || 10),
    dribble: hexToNumber(rawPlayerData.dribble || 10),
    energy: hexToNumber(rawPlayerData.energy || 40),
    stamina: hexToNumber(rawPlayerData.stamina || 40),
};
```

### 6.2 Create specific action hooks

Example: `client/src/dojo/hooks/useTrainShootingAction.tsx`

```typescript
export const useTrainShootingAction = (): UseTrainShootingActionReturn => {
    const { account, status } = useAccount();
    const { client } = useDojoSDK();
    const {
        player,
        updatePlayerShooting,
        updatePlayerExperience,
        updatePlayerStamina
    } = useAppStore();

    // ✅ SPECIFIC VALIDATION
    const hasEnoughStamina = (player?.stamina || 0) >= 10;
    const canTrainShooting = isConnected && hasPlayer && hasEnoughStamina && !isLoading;

    const executeTrainShooting = useCallback(async () => {
        try {
            // ✅ OPTIMISTIC UPDATE - MUST MATCH CONTRACT LOGIC
            updatePlayerShooting((player?.shoot || 10) + 5);
            updatePlayerExperience((player?.experience || 0) + 5);
            updatePlayerStamina(Math.max(0, (player?.stamina || 40) - 10));

            const tx = await client.game.trainShooting(account as Account);

            if (tx && tx.code === "SUCCESS") {
                // Success - optimistic updates remain
            } else {
                throw new Error(`Transaction failed: ${tx?.code}`);
            }
        } catch (error) {
            // ✅ ROLLBACK - REVERT ALL OPTIMISTIC UPDATES
            updatePlayerShooting((player?.shoot || 10) - 5);
            updatePlayerExperience((player?.experience || 0) - 5);
            updatePlayerStamina(Math.min(100, (player?.stamina || 40) + 10));
        }
    }, [/* dependencies */]);
};
```

---

## 🗄️ Step 7: Update Zustand Store

### 7.1 Modify `client/src/zustand/store.ts`

#### a) Update interface
```typescript
export interface Player {
    owner: string;
    experience: number;
    health: number;
    coins: number;
    creation_day: number;
    // ✅ ADD NEW FIELDS
    shoot: number;
    dribble: number;
    energy: number;
    stamina: number;
}
```

#### b) Add update actions
```typescript
interface AppActions {
    // ... existing actions
    updatePlayerShooting: (shoot: number) => void;
    updatePlayerDribbling: (dribble: number) => void;
    updatePlayerEnergy: (energy: number) => void;
    updatePlayerStamina: (stamina: number) => void;
}

// ✅ IMPLEMENT ACTIONS
updatePlayerShooting: (shoot) => set((state) => ({
    player: state.player ? { ...state.player, shoot } : null
})),

updatePlayerStamina: (stamina) => set((state) => ({
    player: state.player ? { ...state.player, stamina } : null
})),
```

---

## 🎨 Step 8: Update UI Components

### 8.1 Update `client/src/components/player-stats.tsx`

```typescript
const stats = [
    // ... existing stats
    {
        label: "Shooting",
        value: player?.shoot || 10,
        color: "text-red-400",
        icon: Target
    },
    {
        label: "Stamina",
        value: player?.stamina || 40,
        color: "text-blue-400",
        icon: Battery
    },
];

// ✅ ADD SPECIFIC ALERTS
{player && player.stamina <= 10 && (
    <div className="bg-blue-500/10 border border-blue-500/30 rounded-lg p-3">
        <span>⚡ Low stamina! Restore stamina to train skills.</span>
    </div>
)}
```

### 8.2 Update `client/src/components/game-actions.tsx`

```typescript
// ✅ IMPORT NEW HOOKS
import { useTrainShootingAction } from "../dojo/hooks/useTrainShootingAction";
import { useRestoreStaminaAction } from "../dojo/hooks/useRestoreStaminaAction";

// ✅ USE HOOKS
const { trainShootingState, executeTrainShooting, canTrainShooting } = useTrainShootingAction();
const { restoreStaminaState, executeRestoreStamina, canRestoreStamina } = useRestoreStaminaAction();

// ✅ ADD TO ACTIONS ARRAY
const actions = [
    // ... existing actions
    {
        icon: Target,
        label: "Train Shooting",
        description: "+5 Shooting, +5 EXP, -10 Stamina",
        onClick: executeTrainShooting,
        color: "from-red-500 to-red-600",
        state: trainShootingState,
        canExecute: canTrainShooting,
    },
    {
        icon: Battery,
        label: "Restore Stamina",
        description: "+20 Stamina",
        onClick: executeRestoreStamina,
        color: "from-purple-500 to-purple-600",
        state: restoreStaminaState,
        canExecute: canRestoreStamina,
        disabledReason: !canRestoreStamina && player && (player.stamina || 0) >= 100
            ? "Full Stamina!"
            : undefined,
    },
];
```

---

## 🔐 Step 9: Update Cartridge Connector

### 9.1 Add to `client/src/config/cartridgeConnector.tsx`

```typescript
const policies = {
    contracts: {
        [CONTRACT_ADDRESS_GAME]: {
            methods: [
                // ... existing methods
                { name: "train_shooting", entrypoint: "train_shooting" },
                { name: "restore_stamina", entrypoint: "restore_stamina" },
            ],
        },
    },
}
```

---

## 🔍 Step 10: Verification and Testing

### 10.1 Verification Checklist

- [ ] ✅ Contracts compile without errors
- [ ] ✅ TypeScript compiles without errors
- [ ] ✅ All Cairo tests pass
- [ ] ✅ UI shows new fields correctly
- [ ] ✅ Actions work (optimistic update)
- [ ] ✅ Persistence works (page reload)
- [ ] ✅ Validations work (buttons disabled appropriately)
- [ ] ✅ Rollback works on error

### 10.2 Testing Pattern

1. **Execute action** → Verify immediate UI update
2. **Reload page** → Verify data persistence
3. **Test limits** → Verify validations (e.g., stamina = 0)
4. **Simulate errors** → Verify rollback

---

## ⚠️ Common Errors to Avoid

### 🚨 **Critical Error #1: Inconsistent System Function Pattern**
```cairo
// ❌ BAD - Using custom emit! or different pattern
fn improve_charisma(ref self: ContractState) {
    let mut world = self.world(@"full_starter_react");
    let store = StoreTrait::new(world);

    store.improve_charisma();

    let player = store.read_player();
    emit!(world, (Events::ActionsEvent(player.owner, "improve_charisma")));
}

// ✅ GOOD - Follow the EXACT same pattern as ALL other functions
fn improve_charisma(ref self: ContractState) {
    let mut world = self.world(@"full_starter_react");
    let store = StoreTrait::new(world);
    let achievement_store = AchievementStoreTrait::new(world);

    let player = store.read_player();

    // Improve charisma
    store.improve_charisma();

    // Emit events for achievements progression
    let mut achievement_id = constants::ACHIEVEMENTS_INITIAL_ID; // 1
    let stop = constants::ACHIEVEMENTS_COUNT; // 5

    while achievement_id <= stop {
        let task: Achievement = achievement_id.into(); // u8 to Achievement
        let task_identifier = task.identifier(); // Achievement identifier is the task to complete
        achievement_store.progress(player.owner.into(), task_identifier, 1, get_block_timestamp());
        achievement_id += 1;
    };
}
```

### 🚨 **Critical Error #2: Hooks Don't Update All Fields**
```typescript
// ❌ BAD - Only updates one field
updatePlayerShooting((player?.shoot || 10) + 5);

// ✅ GOOD - Updates ALL fields that the contract changes
updatePlayerShooting((player?.shoot || 10) + 5);
updatePlayerExperience((player?.experience || 0) + 5);
updatePlayerStamina(Math.max(0, (player?.stamina || 40) - 10));
```

### 🚨 **Critical Error #3: Incomplete Tests**
```cairo
// ❌ BAD - Forgetting to update existing tests
let player = PlayerTrait::new(mock_address, 0, 100, 0, 1); // Missing new fields

// ✅ GOOD - Include ALL fields
let player = PlayerTrait::new(mock_address, 0, 100, 0, 1, 10, 10, 40, 40);
```

### 🚨 **Critical Error #4: Inconsistent Defaults**
```typescript
// ❌ BAD - Different defaults in different places
shoot: hexToNumber(rawPlayerData.shoot || 0),     // Default 0
updatePlayerShooting((player?.shoot || 10) + 5); // Default 10

// ✅ GOOD - Consistent defaults
shoot: hexToNumber(rawPlayerData.shoot || 10),    // Default 10
updatePlayerShooting((player?.shoot || 10) + 5); // Default 10
```

---

## 📚 Additional Resources

- [Dojo Documentation](https://book.dojoengine.org/)
- [Architecture Guide](./02-architecture.md)
- [Hook Patterns](./06-react-hooks-pattern.md)
- [System Extension](./08-extending-system.md)

---

**💡 Final Tip:** Always follow this exact order. Each step depends on the previous one. If you skip one, data persistence will likely not work correctly.

```

`/home/suhas/Desktop/pune/blockroomsv2/client/docs/03-core-files.md`:

```md
# 3. Core Files - Dojo Game Starter Integration

## 📁 File Structure Overview

The integration relies on **8 core files** that work together to bridge React frontend with Dojo smart contracts. Each file has a specific responsibility in the architecture:

```
src/
├── dojo/
│   ├── 🔗 bindings.ts          # TypeScript interfaces from Cairo contracts
│   ├── ⚙️ dojoConfig.ts         # Dojo connection configuration
│   ├── 🏗️ contracts.gen.ts     # Auto-generated contract functions
│   ├── 🌐 starknet-provider.tsx # Wallet & network provider
│   └── hooks/
│       ├── 🔌 useStarknetConnect.tsx # Wallet connection logic
│       ├── 👤 usePlayer.tsx         # Player data management
│       └── 🎮 useSpawnPlayer.tsx    # Player creation logic
└── ⚡ main.tsx                   # Application entry point
```

---

## 🔗 Type Safety Layer

### **`bindings.ts`** - Contract-to-TypeScript Bridge

**🎯 Purpose**: Provides TypeScript interfaces that mirror Cairo contract structures, ensuring type safety across the entire application.

```typescript
// Auto-generated from Cairo contracts (via `sozo build --typescript`)
export interface Player {
  owner: string;          // Player's wallet address
  experience: number;     // Game experience points
  health: number;         // Current health status
  coins: number;          // Player's currency
  creation_day: number;   // When player was created
}

// Achievement system types
export interface TrophyCreation {
  id: number;
  hidden: boolean;
  points: number;
  description: string;
  tasks: Array<Task>;
}

// Schema definition for Dojo SDK
export const schema: SchemaType = {
  full_starter_react: {
    Player: {
      owner: "",
      experience: 0,
      health: 0,
      coins: 0,
      creation_day: 0,
    },
  },
  achievement: {
    TrophyCreation: { /* ... */ },
    TrophyProgression: { /* ... */ },
  },
};
```

**✨ Key Features:**
- **Auto-generation**: Updates automatically when Cairo contracts change
- **Full Type Safety**: Catches type errors at compile time
- **Default Values**: Provides sensible defaults for all properties
- **Achievement Integration**: Includes trophy and task system types

**🔄 How It Works:**
1. Cairo contracts define models (e.g., `Player` struct)
2. Dojo tooling generates TypeScript interfaces
3. Frontend imports these types for complete type safety
4. Any contract changes immediately surface as TypeScript errors

---

## ⚙️ Configuration Layer

### **`dojoConfig.ts`** - Central Configuration Hub

**🎯 Purpose**: Centralizes all Dojo and Starknet connection settings, making environment management simple and secure.

```typescript
import { createDojoConfig } from "@dojoengine/core";
import { manifest } from "../config/manifest";

// Environment variables for secure configuration
const {
  VITE_PUBLIC_NODE_URL,
  VITE_PUBLIC_TORII,
  VITE_PUBLIC_MASTER_ADDRESS,
  VITE_PUBLIC_MASTER_PRIVATE_KEY,
} = import.meta.env;

export const dojoConfig = createDojoConfig({
  manifest,                                                    // Contract deployment info
  masterAddress: VITE_PUBLIC_MASTER_ADDRESS || '',            // Master account for transactions
  masterPrivateKey: VITE_PUBLIC_MASTER_PRIVATE_KEY || '',     // Master account private key
  rpcUrl: VITE_PUBLIC_NODE_URL || '',                         // Starknet RPC endpoint
  toriiUrl: VITE_PUBLIC_TORII || '',                          // Torii GraphQL indexer URL
});
```

**✨ Key Components:**
- **`manifest`**: Contains deployed contract addresses and ABIs
- **RPC URL**: Direct connection to Starknet network
- **Torii URL**: GraphQL endpoint for indexed blockchain data
- **Master Account**: For contract administration (development only)

**🌍 Environment Configuration:**
```bash
# .env.local
VITE_PUBLIC_NODE_URL=https://api.cartridge.gg/x/starknet/sepolia
VITE_PUBLIC_TORII=https://api.cartridge.gg/x/full-starter-react/torii
VITE_PUBLIC_MASTER_ADDRESS=0x...
VITE_PUBLIC_MASTER_PRIVATE_KEY=0x...
```

---

## 🏗️ Contract Interface Layer

### **`contracts.gen.ts`** - Smart Contract Function Library

**🎯 Purpose**: Auto-generated functions that provide a clean TypeScript API for all smart contract interactions.

```typescript
export function setupWorld(provider: DojoProvider) {

  // Build calldata for game actions
  const build_game_train_calldata = (): DojoCall => {
    return {
      contractName: "game",
      entrypoint: "train",
      calldata: [],
    };
  };

  // Execute training action
  const game_train = async (snAccount: Account | AccountInterface) => {
    try {
      return await provider.execute(
        snAccount as any,
        build_game_train_calldata(),
        "full_starter_react",  // Namespace from dojo.toml
      );
    } catch (error) {
      console.error("Training failed:", error);
      throw error;
    }
  };

  // Return organized API
  return {
    game: {
      train: game_train,
      mine: game_mine,
      rest: game_rest,
      spawnPlayer: game_spawnPlayer,

      // Calldata builders for advanced usage
      buildTrainCalldata: build_game_train_calldata,
      buildMineCalldata: build_game_mine_calldata,
      // ...
    },
  };
}
```

**🎯 Game Actions Available:**
- **`spawnPlayer()`**: Create new player on blockchain
- **`train()`**: Increase experience (+10 EXP)
- **`mine()`**: Earn coins but lose health (+5 coins, -5 health)
- **`rest()`**: Recover health (+20 health)

**✨ Features:**
- **Error Handling**: Built-in try/catch for all contract calls
- **Consistent API**: All functions follow the same pattern
- **Calldata Builders**: For advanced transaction composition
- **Type Safety**: Full TypeScript support for parameters and returns

---

## 🌐 Provider Layer

### **`starknet-provider.tsx`** - Blockchain Connection Manager

**🎯 Purpose**: Configures Starknet connection, wallet integration, and network selection based on deployment environment.

```typescript
export default function StarknetProvider({ children }: PropsWithChildren) {
  const { VITE_PUBLIC_DEPLOY_TYPE } = import.meta.env;

  // Dynamic RPC URL based on environment
  const getRpcUrl = () => {
    switch (VITE_PUBLIC_DEPLOY_TYPE) {
      case "mainnet": return "https://api.cartridge.gg/x/starknet/mainnet";
      case "sepolia": return "https://api.cartridge.gg/x/starknet/sepolia";
      default: return "https://api.cartridge.gg/x/starknet/sepolia";
    }
  };

  // Configure JSON-RPC provider
  const provider = jsonRpcProvider({
    rpc: () => ({ nodeUrl: getRpcUrl() }),
  });

  // Select appropriate chain
  const chains = VITE_PUBLIC_DEPLOY_TYPE === "mainnet"
    ? [mainnet]
    : [sepolia];

  return (
    <StarknetConfig
      autoConnect              // Automatically reconnect on page load
      chains={chains}          // Available networks
      connectors={[cartridgeConnector]}  // Wallet options
      explorer={starkscan}     // Block explorer integration
      provider={provider}      // RPC provider
    >
      {children}
    </StarknetConfig>
  );
}
```

**✨ Key Features:**
- **Environment Awareness**: Automatic network selection
- **Auto-reconnection**: Remembers wallet connections
- **Cartridge Integration**: Gaming-focused wallet support
- **Explorer Integration**: Starkscan for transaction viewing

---

## ⚡ Application Bootstrap

### **`main.tsx`** - System Initialization

**🎯 Purpose**: Orchestrates the complete application startup, from Dojo SDK initialization to React rendering.

```typescript
async function main() {
  try {
    console.log("🚀 Initializing Dojo SDK...");

    // Initialize Dojo SDK with configuration
    const sdk = await init<SchemaType>({
      client: {
        toriiUrl: dojoConfig.toriiUrl,        // GraphQL indexer
        relayUrl: dojoConfig.relayUrl,        // Real-time updates
        worldAddress: dojoConfig.manifest.world.address,  // World contract
      },
      domain: {
        name: "DojoGameStarter",
        version: "1.0",
        chainId: "KATANA",    // Can be KATANA, SN_SEPOLIA, SN_MAIN
        revision: "1",
      },
    });

    console.log("✅ Dojo SDK initialized successfully");

    // Render application with provider hierarchy
    createRoot(rootElement).render(
      <StrictMode>
        <DojoSdkProvider sdk={sdk} dojoConfig={dojoConfig} clientFn={setupWorld}>
          <StarknetProvider>
            <App />
          </StarknetProvider>
        </DojoSdkProvider>
      </StrictMode>
    );

  } catch (error) {
    console.error("❌ Failed to initialize Dojo:", error);

    // Graceful error handling with fallback UI
    renderErrorFallback(error);
  }
}
```

**🎯 Initialization Steps:**
1. **Dojo SDK Init**: Connect to Torii indexer and World contract
2. **Provider Setup**: Establish DojoSdkProvider → StarknetProvider hierarchy
3. **Error Handling**: Graceful fallback if initialization fails
4. **Type Safety**: SchemaType ensures contract-frontend alignment

---

## 🔌 Connection Management

### **`useStarknetConnect.tsx`** - Wallet Connection Hook

**🎯 Purpose**: Simplifies wallet connection logic with comprehensive state management.

```typescript
export function useStarknetConnect() {
  const { connect, connectors } = useConnect();
  const { disconnect } = useDisconnect();
  const { status, address } = useAccount();
  const [isConnecting, setIsConnecting] = useState(false);

  const handleConnect = useCallback(async () => {
    const connector = connectors[0]; // Cartridge Controller
    if (!connector) {
      console.error("No connector found");
      return;
    }

    try {
      setIsConnecting(true);
      console.log("🔗 Attempting to connect controller...");
      await connect({ connector });
      console.log("✅ Controller connected successfully");
    } catch (error) {
      console.error("❌ Connection failed:", error);
    } finally {
      setIsConnecting(false);
    }
  }, [connect, connectors]);

  return {
    status,           // 'connected' | 'disconnected' | 'connecting'
    address,          // Wallet address when connected
    isConnecting,     // Loading state
    handleConnect,    // Function to initiate connection
    handleDisconnect, // Function to disconnect wallet
  };
}
```

**✨ Connection States:**
- **`disconnected`**: No wallet connected
- **`connecting`**: Connection in progress
- **`connected`**: Wallet successfully connected
- **`reconnecting`**: Attempting to restore previous connection

---

## 👤 Data Management

### **`usePlayer.tsx`** - Player Data Hook

**🎯 Purpose**: Manages player data fetching from blockchain with caching and error handling.

```typescript
interface UsePlayerReturn {
  player: Player | null;
  isLoading: boolean;
  error: Error | null;
  refetch: () => Promise<void>;
}

export const usePlayer = (): UsePlayerReturn => {
  const { account } = useAccount();
  const { player: storePlayer, setPlayer } = useAppStore();
  const [isLoading, setIsLoading] = useState(true);

  // GraphQL query to Torii indexer
  const PLAYER_QUERY = `
    query GetPlayer($playerAddress: ContractAddress!) {
      playerModels(where: { owner: $playerAddress }) {
        edges {
          node {
            owner
            experience
            health
            coins
            creation_day
          }
        }
      }
    }
  `;

  const refetch = useCallback(async () => {
    if (!account?.address) return;

    try {
      setIsLoading(true);
      const response = await fetch(TORII_URL, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          query: PLAYER_QUERY,
          variables: { playerAddress: addAddressPadding(account.address) }
        }),
      });

      const result = await response.json();
      const playerData = result.data?.playerModels?.edges?.[0]?.node;

      if (playerData) {
        setPlayer(playerData);
      }
    } catch (error) {
      console.error("Failed to fetch player:", error);
    } finally {
      setIsLoading(false);
    }
  }, [account?.address, setPlayer]);

  return { player: storePlayer, isLoading, error: null, refetch };
};
```

---

## 🎮 Player Initialization

### **`useSpawnPlayer.tsx`** - Player Creation Hook

**🎯 Purpose**: Handles the complex logic of player creation and initialization with comprehensive state tracking.

```typescript
export const useSpawnPlayer = () => {
  const { client } = useDojoSDK();
  const { account } = useAccount();
  const { player, refetch: refetchPlayer } = usePlayer();
  const [isInitializing, setIsInitializing] = useState(false);

  const initializePlayer = useCallback(async (): Promise<InitializeResponse> => {
    if (isInitializing) {
      return { success: false, playerExists: false, error: "Already initializing" };
    }

    setIsInitializing(true);

    try {
      // Check if player already exists
      await refetchPlayer();

      if (player) {
        console.log("✅ Player already exists");
        return { success: true, playerExists: true };
      }

      // Create new player
      console.log("🎮 Creating new player...");
      const txResult = await client.game.spawnPlayer(account);

      console.log("✅ Player created:", txResult.transaction_hash);

      // Refresh player data
      await refetchPlayer();

      return {
        success: true,
        playerExists: false,
        transactionHash: txResult.transaction_hash
      };

    } catch (error) {
      console.error("❌ Player initialization failed:", error);
      return {
        success: false,
        playerExists: false,
        error: error.message
      };
    } finally {
      setIsInitializing(false);
    }
  }, [client, account, player, refetchPlayer, isInitializing]);

  return { initializePlayer, isInitializing };
};
```

---

## 🔄 File Relationships

### **Data Flow Between Core Files**

```
1. main.tsx
   ↓ (initializes)
2. dojoConfig.ts
   ↓ (configures)
3. contracts.gen.ts
   ↓ (provides API to)
4. useSpawnPlayer.tsx
   ↓ (creates player via)
5. usePlayer.tsx
   ↓ (fetches data to)
6. Zustand Store
   ↓ (updates)
7. React Components
```

### **Type Safety Chain**
```
Cairo Contracts → bindings.ts → Custom Hooks → React Components
```

### **Connection Chain**
```
starknet-provider.tsx → useStarknetConnect.tsx → Game Components
```

---

These 8 core files work together to create a seamless bridge between your React frontend and Dojo smart contracts. Each file has a single responsibility but collectively they provide a complete, type-safe, and robust integration layer.

**Next**: We'll explore how [**Zustand State Management**](./04-zustand-state-management.md) powers the reactive UI updates and optimistic user experience.

```

`/home/suhas/Desktop/pune/blockroomsv2/client/docs/02-architecture.md`:

```md
# 2. Architecture - Dojo Game Starter Integration

## 🏗️ System Architecture Overview

The Dojo Game Starter implements a **layered architecture** that cleanly separates concerns while maintaining tight integration between React frontend and Dojo smart contracts. This design ensures scalability, maintainability, and excellent developer experience.

```
┌─────────────────────────────────────────────────────────────────┐
│                     REACT APPLICATION LAYER                     │
├─────────────────────────────────────────────────────────────────┤
│  🎨 UI Components    │  🎯 Game Actions  │  📊 Player Stats     │
│  - status-bar.tsx    │  - game-actions   │  - player-stats     │
│  - homescreen.tsx    │  - game-section   │  - progress bars    │
└─────────────────────────────────────────────────────────────────┘
                                    │
                                    ▼
┌─────────────────────────────────────────────────────────────────┐
│                    BUSINESS LOGIC LAYER                         │
├─────────────────────────────────────────────────────────────────┤
│  🔗 Custom Hooks     │  🏪 Zustand Store │  🎮 Game Context    │
│  - usePlayer         │  - Global State   │  - Game State       │
│  - useSpawnPlayer    │  - Optimistic UI  │  - Session Data     │
│  - useStarknetConnect│  - Persistence    │  - User Preferences │
└─────────────────────────────────────────────────────────────────┘
                                    │
                                    ▼
┌─────────────────────────────────────────────────────────────────┐
│                    INTEGRATION LAYER                            │
├─────────────────────────────────────────────────────────────────┤
│  🌐 Providers        │  🔧 Configuration │  🎯 Contract Types  │
│  - DojoSdkProvider   │  - dojoConfig     │  - bindings.ts      │
│  - StarknetProvider  │  - manifest       │  - contracts.gen    │
└─────────────────────────────────────────────────────────────────┘
                                    │
                                    ▼
┌─────────────────────────────────────────────────────────────────┐
│                     BLOCKCHAIN LAYER                            │
├─────────────────────────────────────────────────────────────────┤
│  ⚡ Starknet Network │  🎮 Dojo Engine   │  📊 Torii Indexer  │
│  - Transaction Layer │  - ECS Architecture│  - GraphQL Queries │
│  - Wallet Integration│  - Smart Contracts │  - Real-time Data  │
└─────────────────────────────────────────────────────────────────┘
```

## 🔧 Core Architecture Components

### 1. **Application Entry Point** (`main.tsx`)

The application bootstrap orchestrates the entire system initialization:

```typescript
// main.tsx - Complete initialization flow
async function main() {
  // 1. Initialize Dojo SDK
  const sdk = await init<SchemaType>({
    client: {
      toriiUrl: dojoConfig.toriiUrl,
      relayUrl: dojoConfig.relayUrl,
      worldAddress: dojoConfig.manifest.world.address,
    },
    domain: {
      name: "DojoGameStarter",
      version: "1.0",
      chainId: "KATANA",
      revision: "1",
    },
  });

  // 2. Render with nested providers
  createRoot(rootElement).render(
    <StrictMode>
      <DojoSdkProvider sdk={sdk} dojoConfig={dojoConfig} clientFn={setupWorld}>
        <StarknetProvider>
          <App />
        </StarknetProvider>
      </DojoSdkProvider>
    </StrictMode>
  );
}
```

**🎯 Key Responsibilities:**
- **Dojo SDK Initialization**: Connects to Torii indexer and Starknet network
- **Provider Hierarchy**: Establishes the context provider tree
- **Error Handling**: Graceful fallbacks if initialization fails
- **Type Safety**: Configures TypeScript integration with smart contracts

### 2. **Provider Layer Architecture**

#### **DojoSdkProvider** (Outer Provider)
- **Purpose**: Provides Dojo-specific functionality and client access
- **Scope**: Makes Dojo SDK available throughout the component tree
- **Key Features**: Contract interaction, entity querying, transaction handling

#### **StarknetProvider** (Inner Provider)
- **Purpose**: Handles Starknet blockchain connection and wallet integration
- **Configuration**: Network selection, RPC URLs, wallet connectors

```typescript
// starknet-provider.tsx - Environment-aware configuration
export default function StarknetProvider({ children }: PropsWithChildren) {
  const { VITE_PUBLIC_DEPLOY_TYPE } = import.meta.env;

  const getRpcUrl = () => {
    switch (VITE_PUBLIC_DEPLOY_TYPE) {
      case "mainnet": return "https://api.cartridge.gg/x/starknet/mainnet";
      case "sepolia": return "https://api.cartridge.gg/x/starknet/sepolia";
      default: return "https://api.cartridge.gg/x/starknet/sepolia";
    }
  };

  const provider = jsonRpcProvider({
    rpc: () => ({ nodeUrl: getRpcUrl() }),
  });

  return (
    <StarknetConfig
      autoConnect
      chains={VITE_PUBLIC_DEPLOY_TYPE === "mainnet" ? [mainnet] : [sepolia]}
      connectors={[cartridgeConnector]}
      provider={provider}
    >
      {children}
    </StarknetConfig>
  );
}
```

### 3. **Configuration Layer**

#### **Dojo Configuration** (`dojoConfig.ts`)
Centralizes all Dojo-related settings and network endpoints:

```typescript
export const dojoConfig = createDojoConfig({
  manifest,
  masterAddress: VITE_PUBLIC_MASTER_ADDRESS,
  masterPrivateKey: VITE_PUBLIC_MASTER_PRIVATE_KEY,
  rpcUrl: VITE_PUBLIC_NODE_URL || 'https://api.cartridge.gg/x/starknet/sepolia',
  toriiUrl: VITE_PUBLIC_TORII || 'https://api.cartridge.gg/x/myproject/torii',
});
```

#### **Cartridge Connector** (`cartridgeConnector.tsx`)
Configures the gaming-focused wallet integration:

```typescript
// Session policies for seamless gaming experience
const policies: SessionPolicies = {
  contracts: {
    [CONTRACT_ADDRESS_GAME]: {
      methods: [
        { name: "spawn_player", entrypoint: "spawn_player" },
        { name: "train", entrypoint: "train" },
        { name: "mine", entrypoint: "mine" },
        { name: "rest", entrypoint: "rest" },
      ],
    },
  },
};

const options: ControllerOptions = {
  chains: [{ rpcUrl: "https://api.cartridge.gg/x/starknet/sepolia" }],
  defaultChainId: constants.StarknetChainId.SN_SEPOLIA,
  policies,
  theme: "full-starter-react",
  colorMode: "dark",
  namespace: "full_starter_react",
  slot: "full-starter-react",
};
```

### 4. **Contract Integration Layer**

#### **Type Definitions** (`bindings.ts`)
Provides TypeScript interfaces for all Dojo models:

```typescript
export interface Player {
  owner: string;
  experience: number;
  health: number;
  coins: number;
  creation_day: number;
}

export const schema: SchemaType = {
  full_starter_react: {
    Player: {
      owner: "",
      experience: 0,
      health: 0,
      coins: 0,
      creation_day: 0,
    },
  },
};
```

#### **Contract Functions** (`contracts.gen.ts`)
Auto-generated functions for smart contract interaction:

```typescript
export function setupWorld(provider: DojoProvider) {
  const game_train = async (snAccount: Account | AccountInterface) => {
    try {
      return await provider.execute(
        snAccount as any,
        build_game_train_calldata(),
        "full_starter_react",
      );
    } catch (error) {
      console.error(error);
      throw error;
    }
  };

  return {
    game: {
      train: game_train,
      mine: game_mine,
      rest: game_rest,
      spawnPlayer: game_spawnPlayer,
    },
  };
}
```

## 🔄 Data Flow Architecture

### **Read Operations (Query Flow)**

```
1. Component Mount
   ↓
2. Custom Hook (usePlayer)
   ↓
3. GraphQL Query to Torii
   ↓
4. Blockchain Data Retrieved
   ↓
5. Zustand Store Updated
   ↓
6. Component Re-renders
```

### **Write Operations (Transaction Flow)**

```
1. User Action (Click "Train")
   ↓
2. Custom Hook (useTrainAction)
   ↓
3. Optimistic UI Update (Zustand)
   ↓
4. Component Re-renders (Instant)
   ↓
5. Transaction Sent to Blockchain
   ↓
6. Confirmation/Rollback
   ↓
7. Final State Update
```

## 🎯 Hook Architecture Pattern

The system uses a **layered hook pattern** for maximum reusability and separation of concerns:

### **Connection Hooks**
- `useStarknetConnect`: Wallet connection management
- `useDojoSDK`: Dojo client access and configuration

### **Data Hooks**
- `usePlayer`: Player data queries and state management
- `useSpawnPlayer`: Player initialization logic

### **Action Hooks**
- `useTrainAction`: Training action with optimistic updates
- `useMineAction`: Mining action with state management
- `useRestAction`: Rest action with health recovery

### **State Management Hooks**
- Custom Zustand selectors for optimized re-renders
- Computed properties for derived state

## 🚀 Performance Optimizations

### **1. Selective State Subscriptions**
```typescript
// Optimized selector pattern
const { player, coins } = useAppStore(state => ({
  player: state.player,
  coins: state.player?.coins || 0
}));
```

### **2. Optimistic Updates**
- Immediate UI feedback for better UX
- Background blockchain confirmation
- Automatic rollback on transaction failure

### **3. Provider Scoping**
- DojoSdkProvider for contract interactions
- StarknetProvider for wallet/network management
- Minimal context re-renders through proper provider hierarchy

## 🛡️ Error Handling Strategy

### **1. Layered Error Boundaries**
- Application-level error catching
- Component-level error recovery
- Hook-level error state management

### **2. Graceful Degradation**
- Fallback UI when blockchain unavailable
- Retry mechanisms for failed transactions
- User-friendly error messages

### **3. State Consistency**
- Transaction status tracking
- Rollback mechanisms for failed operations
- State validation and recovery

## 📈 Scalability Considerations

### **1. Modular Architecture**
- Each layer can be extended independently
- New game features require minimal changes to existing code
- Clean separation allows for easy testing

### **2. Hook Composability**
- Hooks can be combined for complex operations
- Reusable patterns across different game mechanics
- Consistent error handling and state management

### **3. Type Safety**
- End-to-end TypeScript integration
- Contract changes automatically propagate to frontend
- Compile-time error detection

---

This architecture provides a robust foundation for building complex onchain games while maintaining clean code organization and excellent developer experience. The layered approach ensures that each component has a single responsibility while working together seamlessly to create a smooth user experience.

**Next**: We'll dive into [**Core Files**](./03-core-files.md) to understand the implementation details of each architectural component.

```

`/home/suhas/Desktop/pune/blockroomsv2/client/docs/Hall3.tsx`:

```tsx
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 ./public/hall3.glb 
Modified for Backrooms experience with wall textures
Converted to TypeScript
*/

import { useGLTF, useTexture } from "@react-three/drei";
import * as THREE from "three";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    [key: string]: THREE.Mesh;
  };
  materials: {
    [key: string]: THREE.Material;
    "Material.002": THREE.Material;
    pillars: THREE.Material;
  };
};

interface ModelProps {
  [key: string]: any;
}

export function Model(props: ModelProps): JSX.Element {
  const { nodes, materials } = useGLTF("/hall3.glb") as GLTFResult;
  const wallTexture: THREE.Texture = useTexture("./walls.png");

  // Configure wall texture for Backrooms aesthetic
  wallTexture.wrapS = wallTexture.wrapT = THREE.RepeatWrapping;
  wallTexture.repeat.set(10, 26);
  wallTexture.minFilter = THREE.LinearFilter;
  wallTexture.magFilter = THREE.LinearFilter;

  // Create enhanced materials with the wall texture
  const wallMaterial: THREE.MeshLambertMaterial = new THREE.MeshLambertMaterial(
    {
      map: wallTexture,
      color: "#f7f3d0",
    }
  );

  const ceilingMaterial: THREE.MeshLambertMaterial =
    new THREE.MeshLambertMaterial({
      map: wallTexture,
      color: "#f0ead6",
    });

  const floorMaterial: THREE.MeshLambertMaterial =
    new THREE.MeshLambertMaterial({
      map: wallTexture,
      color: "#e8dcc0",
    });

  return (
    <group {...props} dispose={null}>
      {/* Point lights with adjusted intensity for Backrooms atmosphere */}
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[-3.139, 12.505, -79.602]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[5.003, 12.505, -79.602]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[5.003, 12.505, -60.007]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[5.003, 12.505, -40.04]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[5.003, 12.505, -20.151]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[5.003, 12.505, -0.312]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[5.003, 12.505, 19.728]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[5.003, 12.505, 39.533]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[5.003, 12.505, 59.538]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[5.003, 12.505, 59.538]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[5.003, 12.505, 79.66]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[-3.139, 12.505, -79.602]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[-3.139, 12.505, -60.233]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[-3.139, 12.505, -40.098]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[-3.139, 12.505, -20.173]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[-3.139, 12.505, -0.264]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[-3.139, 12.505, 19.886]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[-3.139, 12.505, 39.57]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[-3.139, 12.505, 59.748]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[-3.139, 12.505, 79.364]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[-18.952, 12.505, 87.671]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[-18.952, 12.505, 67.987]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[-18.952, 12.505, 49.531]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[-18.952, 12.505, 14.278]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[-18.952, 12.505, 5.475]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[-18.952, 12.505, -6.82]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[-18.952, 12.505, -13.816]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[-18.952, 12.505, -29.367]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[-18.952, 12.505, -69.714]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[-18.952, 12.505, -89.601]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[20.903, 12.505, -89.601]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[20.903, 12.505, -68.719]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[20.903, 12.505, -47.839]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[20.903, 12.505, -28.703]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[20.903, 12.505, -13.531]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[20.903, 12.505, -4.959]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[20.903, 13.521, 28.253]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[20.903, 13.521, 49.072]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[20.903, 13.521, 69.322]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[20.903, 13.521, 88.235]}
        rotation={[-Math.PI / 2, 0, 0]}
      />

      {/* Wall meshes with textured materials */}
      <mesh
        geometry={nodes.Cube002.geometry}
        material={wallMaterial}
        position={[-16.537, 6.099, 100]}
        scale={[13.573, 6, 0.235]}
      />
      <mesh
        geometry={nodes.Cube004.geometry}
        material={wallMaterial}
        position={[19.977, 6.099, 80]}
        scale={[10, 6, 0.235]}
      />
      <mesh
        geometry={nodes.Cube005.geometry}
        material={wallMaterial}
        position={[-16.537, 6.099, -100]}
        scale={[13.573, 6, 0.235]}
      />
      <mesh
        geometry={nodes.Cube007.geometry}
        material={ceilingMaterial}
        position={[-0.02, 10.724, -100]}
        scale={[3.163, 1.4, 0.235]}
      />
      <mesh
        geometry={nodes.Cube006.geometry}
        material={ceilingMaterial}
        position={[-0.02, 10.724, 100]}
        scale={[3.163, 1.4, 0.235]}
      />
      <mesh
        geometry={nodes.Cube019.geometry}
        material={wallMaterial}
        position={[16.539, 6.099, 100]}
        scale={[13.573, 6, 0.235]}
      />
      <mesh
        geometry={nodes.Cube001.geometry}
        material={wallMaterial}
        position={[-29.901, 6.099, -0.054]}
        rotation={[0, Math.PI / 2, 0]}
        scale={[100.51, 6, 0.235]}
      />
      <mesh
        geometry={nodes.Cube003.geometry}
        material={wallMaterial}
        position={[16.539, 6.099, -100]}
        scale={[13.573, 6, 0.235]}
      />
      <mesh
        geometry={nodes.Cube009.geometry}
        material={wallMaterial}
        position={[10.213, 6.099, -95.317]}
        rotation={[Math.PI, -Math.PI / 2, 0]}
        scale={[-4.334, -6, -0.235]}
      />
      <mesh
        geometry={nodes.Cube010.geometry}
        material={wallMaterial}
        position={[19.977, 6.099, -80]}
        scale={[10, 6, 0.235]}
      />
      <mesh
        geometry={nodes.Cube011.geometry}
        material={wallMaterial}
        position={[19.977, 6.099, -60]}
        scale={[10, 6, 0.235]}
      />
      <mesh
        geometry={nodes.Cube012.geometry}
        material={wallMaterial}
        position={[19.977, 6.099, -40]}
        scale={[10, 6, 0.235]}
      />
      <mesh
        geometry={nodes.Cube013.geometry}
        material={wallMaterial}
        position={[19.977, 6.099, -20]}
        scale={[10, 6, 0.235]}
      />
      <mesh
        geometry={nodes.Cube014.geometry}
        material={wallMaterial}
        position={[19.977, 6.099, 0]}
        scale={[10, 6, 0.235]}
      />
      <mesh
        geometry={nodes.Cube015.geometry}
        material={wallMaterial}
        position={[19.977, 6.099, 20]}
        scale={[10, 6, 0.235]}
      />
      <mesh
        geometry={nodes.Cube016.geometry}
        material={wallMaterial}
        position={[19.977, 6.099, 40]}
        scale={[10, 6, 0.235]}
      />
      <mesh
        geometry={nodes.Cube017.geometry}
        material={wallMaterial}
        position={[19.977, 6.099, 60]}
        scale={[10, 6, 0.235]}
      />
      <mesh
        geometry={nodes.Cube018.geometry}
        material={wallMaterial}
        position={[-20.195, 6.099, -80]}
        scale={[10, 6, 0.235]}
      />
      <mesh
        geometry={nodes.Cube020.geometry}
        material={wallMaterial}
        position={[-20.195, 6.099, 80]}
        scale={[10, 6, 0.235]}
      />
      <mesh
        geometry={nodes.Cube021.geometry}
        material={wallMaterial}
        position={[-20.195, 6.099, 60]}
        scale={[10, 6, 0.235]}
      />
      <mesh
        geometry={nodes.Cube022.geometry}
        material={wallMaterial}
        position={[-20.195, 6.099, 40]}
        scale={[10, 6, 0.235]}
      />
      <mesh
        geometry={nodes.Cube023.geometry}
        material={wallMaterial}
        position={[-20.195, 6.099, 20]}
        scale={[10, 6, 0.235]}
      />
      <mesh
        geometry={nodes.Cube024.geometry}
        material={wallMaterial}
        position={[-20.195, 6.099, 0]}
        scale={[10, 6, 0.235]}
      />
      <mesh
        geometry={nodes.Cube025.geometry}
        material={wallMaterial}
        position={[-20.195, 6.099, -20]}
        scale={[10, 6, 0.235]}
      />
      <mesh
        geometry={nodes.Cube026.geometry}
        material={wallMaterial}
        position={[-20.195, 6.099, -40]}
        scale={[10, 6, 0.235]}
      />
      <mesh
        geometry={nodes.Cube027.geometry}
        material={wallMaterial}
        position={[-20.195, 6.099, -60]}
        scale={[10, 6, 0.235]}
      />
      <mesh
        geometry={nodes.Cube008.geometry}
        material={wallMaterial}
        position={[29.859, 6.099, -0.054]}
        rotation={[0, Math.PI / 2, 0]}
        scale={[100.51, 6, 0.235]}
      />

      {/* Keep the rest of the original meshes with original materials for pillars, floors, etc. */}
      <mesh
        geometry={nodes.Cube029.geometry}
        material={materials["Material.002"]}
        position={[10.213, 6.099, -82.171]}
        rotation={[Math.PI, -Math.PI / 2, 0]}
        scale={[-2.35, -6, -0.235]}
      />
      <mesh
        geometry={nodes.Cube030.geometry}
        material={materials["Material.002"]}
        position={[10.213, 6.099, -73.341]}
        rotation={[Math.PI, -Math.PI / 2, 0]}
        scale={[-6.626, -6, -0.235]}
      />
      <mesh
        geometry={nodes.Cube031.geometry}
        material={materials["Material.002"]}
        position={[10.213, 6.099, -45.107]}
        rotation={[Math.PI, -Math.PI / 2, 0]}
        scale={[-5.243, -6, -0.235]}
      />
      <mesh
        geometry={nodes.Cube032.geometry}
        material={materials["Material.002"]}
        position={[10.213, 6.099, -57.706]}
        rotation={[Math.PI, -Math.PI / 2, 0]}
        scale={[-2.052, -6, -0.235]}
      />
      <mesh
        geometry={nodes.Cube033.geometry}
        material={materials["Material.002"]}
        position={[10.213, 6.099, -35.052]}
        rotation={[Math.PI, -Math.PI / 2, 0]}
        scale={[-5.243, -6, -0.235]}
      />
      <mesh
        geometry={nodes.Cube034.geometry}
        material={materials["Material.002"]}
        position={[10.213, 6.099, -22.542]}
        rotation={[Math.PI, -Math.PI / 2, 0]}
        scale={[-2.61, -6, -0.235]}
      />
      <mesh
        geometry={nodes.Cube035.geometry}
        material={materials["Material.002"]}
        position={[-9.947, 6.099, -15.573]}
        rotation={[Math.PI, -Math.PI / 2, 0]}
        scale={[-4.527, -6, -0.235]}
      />
      <mesh
        geometry={nodes.Cube036.geometry}
        material={materials["Material.002"]}
        position={[10.213, 6.099, -3.34]}
        rotation={[Math.PI, -Math.PI / 2, 0]}
        scale={[-3.121, -6, -0.235]}
      />
      <mesh
        geometry={nodes.Cube037.geometry}
        material={materials.pillars}
        position={[10.63, 6.099, 25.058]}
        rotation={[0, Math.PI / 2, 0]}
        scale={[0.604, 6, 0.665]}
      />
      <mesh
        geometry={nodes.Cube038.geometry}
        material={materials.pillars}
        position={[10.63, 6.099, 35.009]}
        rotation={[0, Math.PI / 2, 0]}
        scale={[0.604, 6, 0.665]}
      />
      <mesh
        geometry={nodes.Cube039.geometry}
        material={materials.pillars}
        position={[10.63, 6.099, 30.115]}
        rotation={[0, Math.PI / 2, 0]}
        scale={[0.604, 6, 0.665]}
      />
      <mesh
        geometry={nodes.Cube041.geometry}
        material={materials.pillars}
        position={[-10.815, 6.099, -4.49]}
        rotation={[0, Math.PI / 2, 0]}
        scale={[0.604, 6, 0.665]}
      />
      <mesh
        geometry={nodes.Cube042.geometry}
        material={materials["Material.002"]}
        position={[10.213, 6.099, 2.964]}
        rotation={[Math.PI, -Math.PI / 2, 0]}
        scale={[-3.121, -6, -0.235]}
      />
      <mesh
        geometry={nodes.Cube043.geometry}
        material={materials.pillars}
        position={[10.63, 6.099, 13.228]}
        rotation={[0, Math.PI / 2, 0]}
        scale={[0.604, 6, 0.665]}
      />
      <mesh
        geometry={nodes.Cube045.geometry}
        material={materials["Material.002"]}
        position={[10.213, 6.099, 63.142]}
        rotation={[Math.PI, -Math.PI / 2, 0]}
        scale={[-3.159, -6, -0.235]}
      />
      <mesh
        geometry={nodes.Cube044.geometry}
        material={materials["Material.002"]}
        position={[10.213, 6.099, 81.847]}
        rotation={[Math.PI, -Math.PI / 2, 0]}
        scale={[-1.757, -6, -0.235]}
      />
      <mesh
        geometry={nodes.Cube046.geometry}
        material={materials["Material.002"]}
        position={[10.213, 6.099, 46.488]}
        rotation={[Math.PI, -Math.PI / 2, 0]}
        scale={[-6.71, -6, -0.235]}
      />
      <mesh
        geometry={nodes.Cube047.geometry}
        material={materials["Material.002"]}
        position={[10.213, 6.099, 94.992]}
        rotation={[Math.PI, -Math.PI / 2, 0]}
        scale={[-5.274, -6, -0.235]}
      />
      <mesh
        geometry={nodes.Cube048.geometry}
        material={materials["Material.002"]}
        position={[10.213, 6.099, 77.005]}
        rotation={[Math.PI, -Math.PI / 2, 0]}
        scale={[-3.159, -6, -0.235]}
      />
      <mesh
        geometry={nodes.Cube049.geometry}
        material={materials.pillars}
        position={[10.63, 6.099, -16.504]}
        rotation={[0, Math.PI / 2, 0]}
        scale={[0.604, 6, 0.665]}
      />
      <mesh
        geometry={nodes.Cube050.geometry}
        material={materials["Material.002"]}
        position={[-10.285, 6.099, 20.679]}
        rotation={[Math.PI, -Math.PI / 2, 0]}
        scale={[-4.527, -6, -0.235]}
      />
      <mesh
        geometry={nodes.Cube051.geometry}
        material={materials["Material.002"]}
        position={[-10.298, 6.099, 4.328]}
        rotation={[Math.PI, -Math.PI / 2, 0]}
        scale={[-4.527, -6, -0.235]}
      />
      <mesh
        geometry={nodes.Cube052.geometry}
        material={materials["Material.002"]}
        position={[-9.947, 6.099, -22.958]}
        rotation={[Math.PI, -Math.PI / 2, 0]}
        scale={[-4.527, -6, -0.235]}
      />
      <mesh
        geometry={nodes.Cube053.geometry}
        material={materials["Material.002"]}
        position={[-9.947, 6.099, -37.705]}
        rotation={[Math.PI, -Math.PI / 2, 0]}
        scale={[-4.527, -6, -0.235]}
      />
      <mesh
        geometry={nodes.Cube054.geometry}
        material={materials.pillars}
        position={[-10.815, 6.099, -50.89]}
        rotation={[0, Math.PI / 2, 0]}
        scale={[0.604, 6, 0.665]}
      />
      <mesh
        geometry={nodes.Cube055.geometry}
        material={materials.pillars}
        position={[-10.815, 6.099, -83.914]}
        rotation={[0, Math.PI / 2, 0]}
        scale={[0.604, 6, 0.665]}
      />
      <mesh
        geometry={nodes.Cube056.geometry}
        material={materials["Material.002"]}
        position={[-9.947, 6.099, -62.992]}
        rotation={[Math.PI, -Math.PI / 2, 0]}
        scale={[-5.248, -6, -0.235]}
      />
      <mesh
        geometry={nodes.Cube057.geometry}
        material={materials["Material.002"]}
        position={[-9.947, 6.099, -77.2]}
        rotation={[Math.PI, -Math.PI / 2, 0]}
        scale={[-2.95, -6, -0.235]}
      />
      <mesh
        geometry={nodes.Cube058.geometry}
        material={materials["Material.002"]}
        position={[-9.947, 6.099, -94.854]}
        rotation={[Math.PI, -Math.PI / 2, 0]}
        scale={[-5.248, -6, -0.235]}
      />
      <mesh
        geometry={nodes.Cube059.geometry}
        material={materials["Material.002"]}
        position={[-10.285, 6.099, 37.565]}
        rotation={[Math.PI, -Math.PI / 2, 0]}
        scale={[-4.527, -6, -0.235]}
      />
      <mesh
        geometry={nodes.Cube060.geometry}
        material={materials.pillars}
        position={[-10.815, 6.099, 55.39]}
        rotation={[0, Math.PI / 2, 0]}
        scale={[0.604, 6, 0.665]}
      />
      <mesh
        geometry={nodes.Cube061.geometry}
        material={materials.pillars}
        position={[-10.815, 6.099, 48.562]}
        rotation={[0, Math.PI / 2, 0]}
        scale={[0.604, 6, 0.665]}
      />
      <mesh
        geometry={nodes.Cube062.geometry}
        material={materials["Material.002"]}
        position={[-10.285, 6.099, 84.655]}
        rotation={[Math.PI, -Math.PI / 2, 0]}
        scale={[-4.527, -6, -0.235]}
      />
      <mesh
        geometry={nodes.Cube063.geometry}
        material={materials["Material.002"]}
        position={[-10.285, 6.099, 76.414]}
        rotation={[Math.PI, -Math.PI / 2, 0]}
        scale={[-3.827, -6, -0.235]}
      />
      <mesh
        geometry={nodes.Cube064.geometry}
        material={materials["Material.002"]}
        position={[-10.285, 6.099, 63.681]}
        rotation={[Math.PI, -Math.PI / 2, 0]}
        scale={[-3.827, -6, -0.235]}
      />
      <mesh
        geometry={nodes.Cube065.geometry}
        material={materials["Material.002"]}
        position={[-10.285, 6.099, 97.116]}
        rotation={[Math.PI, -Math.PI / 2, 0]}
        scale={[-2.997, -6, -0.235]}
      />

      {/* Floor and ceiling planes with textures */}
      <mesh
        geometry={nodes.Plane.geometry}
        material={ceilingMaterial}
        position={[1.445, 12.15, -0.259]}
        scale={[200, 500, 70]}
      />
      <mesh
        geometry={nodes.Plane001.geometry}
        material={floorMaterial}
        position={[-3.284, 0.234, -8.813]}
        scale={[43.453, 122.615, 122.615]}
      />

      {/* Keep original lighting fixtures */}
      <mesh
        geometry={nodes.Cube028.geometry}
        material={nodes.Cube028.material}
        position={[20.624, 12.144, -5.065]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube040.geometry}
        material={nodes.Cube040.material}
        position={[20.624, 12.144, -13.541]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube066.geometry}
        material={nodes.Cube066.material}
        position={[20.624, 12.144, -28.423]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube067.geometry}
        material={nodes.Cube067.material}
        position={[20.624, 12.144, -48.004]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube068.geometry}
        material={nodes.Cube068.material}
        position={[20.624, 12.144, -68.621]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube069.geometry}
        material={nodes.Cube069.material}
        position={[20.624, 12.144, -89.564]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube070.geometry}
        material={nodes.Cube070.material}
        position={[-19.155, 12.144, -89.564]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube071.geometry}
        material={nodes.Cube071.material}
        position={[-19.155, 12.144, -69.903]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube072.geometry}
        material={nodes.Cube072.material}
        position={[-19.155, 12.144, -29.465]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube073.geometry}
        material={nodes.Cube073.material}
        position={[-19.155, 12.144, -6.896]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube074.geometry}
        material={nodes.Cube074.material}
        position={[-19.155, 12.144, -13.661]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube075.geometry}
        material={nodes.Cube075.material}
        position={[-19.155, 12.144, 14.312]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube076.geometry}
        material={nodes.Cube076.material}
        position={[-19.155, 12.144, 5.523]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube077.geometry}
        material={nodes.Cube077.material}
        position={[-19.155, 12.144, 5.523]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube078.geometry}
        material={nodes.Cube078.material}
        position={[-19.155, 12.144, 5.523]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube079.geometry}
        material={nodes.Cube079.material}
        position={[20.063, 12.144, 28.409]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube080.geometry}
        material={nodes.Cube080.material}
        position={[-19.155, 12.144, 49.468]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube081.geometry}
        material={nodes.Cube081.material}
        position={[19.798, 12.144, 49.468]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube082.geometry}
        material={nodes.Cube082.material}
        position={[19.798, 12.144, 69.6]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube083.geometry}
        material={nodes.Cube083.material}
        position={[19.798, 12.144, 69.6]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube084.geometry}
        material={nodes.Cube084.material}
        position={[-19.155, 12.144, 67.845]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube085.geometry}
        material={nodes.Cube085.material}
        position={[-19.155, 12.144, 87.498]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube086.geometry}
        material={nodes.Cube086.material}
        position={[19.798, 12.144, 88.939]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Plane002.geometry}
        material={floorMaterial}
        position={[-3.284, 0.233, -0.259]}
        scale={[43.453, 122.615, 122.615]}
      />
      {/* <mesh
        geometry={nodes.Plane003.geometry}
        material={floorMaterial}
        position={[-3.284, 0.233, -8.813]}
        scale={[43.453, 122.615, 122.615]}
      /> */}

      {/* More lighting fixtures */}
      <mesh
        geometry={nodes.Cube090.geometry}
        material={nodes.Cube090.material}
        position={[-3.001, 12.144, -79.612]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube091.geometry}
        material={nodes.Cube091.material}
        position={[5.141, 12.144, -79.612]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube092.geometry}
        material={nodes.Cube092.material}
        position={[5.141, 12.144, -60.018]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube093.geometry}
        material={nodes.Cube093.material}
        position={[5.141, 12.144, -40.051]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube094.geometry}
        material={nodes.Cube094.material}
        position={[5.141, 12.144, -20.161]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube095.geometry}
        material={nodes.Cube095.material}
        position={[5.141, 12.144, -0.323]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube096.geometry}
        material={nodes.Cube096.material}
        position={[5.141, 12.144, 19.718]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube097.geometry}
        material={nodes.Cube097.material}
        position={[5.141, 12.144, 39.523]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube098.geometry}
        material={nodes.Cube098.material}
        position={[5.141, 12.144, 59.528]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube099.geometry}
        material={nodes.Cube099.material}
        position={[5.141, 12.144, 59.528]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube100.geometry}
        material={nodes.Cube100.material}
        position={[5.141, 12.144, 79.649]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube101.geometry}
        material={nodes.Cube101.material}
        position={[-3.001, 12.144, -79.612]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube102.geometry}
        material={nodes.Cube102.material}
        position={[-3.001, 12.144, -60.244]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube103.geometry}
        material={nodes.Cube103.material}
        position={[-3.001, 12.144, -40.108]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube104.geometry}
        material={nodes.Cube104.material}
        position={[-3.001, 12.144, -20.184]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube105.geometry}
        material={nodes.Cube105.material}
        position={[-3.001, 12.144, -0.274]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube106.geometry}
        material={nodes.Cube106.material}
        position={[-3.001, 12.144, 19.875]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube107.geometry}
        material={nodes.Cube107.material}
        position={[-3.001, 12.144, 39.559]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube108.geometry}
        material={nodes.Cube108.material}
        position={[-3.001, 12.144, 59.737]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube109.geometry}
        material={nodes.Cube109.material}
        position={[-3.001, 12.144, 79.353]}
        scale={[0.754, 0.112, 0.907]}
      />
    </group>
  );
}

useGLTF.preload("/hall3.glb");

```

`/home/suhas/Desktop/pune/blockroomsv2/client/docs/06-react-hooks-pattern.md`:

```md
# 6. React Hooks Pattern - Dojo Game Starter

## 🎯 Hook-Based Architecture Philosophy

The Dojo Game Starter uses a **sophisticated hook pattern** that separates concerns while maintaining seamless integration between React components and blockchain operations. Each hook has a specific responsibility, but they work together to create a unified, reactive gaming experience.

```
🔗 Hook Dependency Graph

┌─────────────────────────────────────────────────────────────────┐
│                        COMPONENT LAYER                          │
├─────────────────────────────────────────────────────────────────┤
│  📱 StatusBar    │  🎮 GameActions   │  📊 PlayerStats          │
│  - Connection    │  - Train/Mine     │  - Experience            │
│  - Player Status │  - Rest Actions   │  - Health/Coins          │
└─────────────────────────────────────────────────────────────────┘
                                    │
                                    ▼
┌─────────────────────────────────────────────────────────────────┐
│                      HOOK ORCHESTRATION                         │
├─────────────────────────────────────────────────────────────────┤
│  🔌 useStarknetConnect → 👤 usePlayer → 🎮 useSpawnPlayer      │
│                           ↓              ↓                      │
│                    🏋️ useTrainAction  ⛏️ useMineAction         │
│                    💤 useRestAction   📊 useGameStats          │
└─────────────────────────────────────────────────────────────────┘
                                    │
                                    ▼
┌─────────────────────────────────────────────────────────────────┐
│                     INTEGRATION LAYER                           │
├─────────────────────────────────────────────────────────────────┤
│  🏪 Zustand Store  │  🔗 Dojo SDK     │  📡 GraphQL Queries     │
│  - Global State   │  - Contracts     │  - Torii Indexer        │
└─────────────────────────────────────────────────────────────────┘
```

---

## 🔌 Connection Layer Hooks

### **`useStarknetConnect`** - Wallet Connection Foundation

This hook manages the **fundamental connection** to Starknet via Cartridge Controller.

**🔑 Core Connection Logic:**
```typescript
const handleConnect = useCallback(async () => {
  const connector = connectors[0]; // Cartridge Controller

  try {
    setIsConnecting(true);
    console.log("🔗 Attempting to connect controller...");

    // Opens Cartridge Controller interface
    await connect({ connector });

    console.log("✅ Controller connected successfully");
  } catch (error) {
    console.error("❌ Connection failed:", error);
  } finally {
    setIsConnecting(false);
  }
}, [connect, connectors]);
```

**📤 Return Interface:**
```typescript
return {
  status,           // 'connected' | 'disconnected' | 'connecting'
  address,          // Wallet address when connected
  isConnecting,     // Connection loading state
  handleConnect,    // Function to initiate connection
  handleDisconnect, // Function to disconnect
};
```

**🎯 Key Responsibilities:**
- **Controller Integration**: Direct interface with Cartridge Controller
- **Connection State**: Comprehensive connection status management
- **Error Handling**: Robust error management for connection failures
- **Auto-Reconnection**: Supports automatic reconnection on page refresh

---

## 👤 Data Layer Hooks

### **`usePlayer`** - Player Data Management

The **data backbone** of the game, connecting GraphQL queries to Zustand state.

**🔍 GraphQL Query Structure:**
```typescript
const PLAYER_QUERY = `
  query GetPlayer($playerOwner: ContractAddress!) {
    fullStarterReactPlayerModels(where: { owner: $playerOwner }) {
      edges {
        node {
          owner
          experience
          health
          coins
          creation_day
        }
      }
    }
  }
`;
```

**🔄 Data Fetching Logic:**
```typescript
const fetchPlayerData = async (playerOwner: string): Promise<Player | null> => {
  const response = await fetch(TORII_URL, {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({
      query: PLAYER_QUERY,
      variables: { playerOwner }
    }),
  });

  const result = await response.json();

  if (!result.data?.fullStarterReactPlayerModels?.edges?.length) {
    return null; // Player not found
  }

  // Convert hex blockchain values to JavaScript numbers
  const rawData = result.data.fullStarterReactPlayerModels.edges[0].node;
  return {
    owner: rawData.owner,
    experience: hexToNumber(rawData.experience),
    health: hexToNumber(rawData.health),
    coins: hexToNumber(rawData.coins),
    creation_day: hexToNumber(rawData.creation_day)
  };
};
```

**🏪 Zustand Integration:**
```typescript
// Get player from store and setter function
const storePlayer = useAppStore(state => state.player);
const setPlayer = useAppStore(state => state.setPlayer);

// Auto-fetch when wallet address changes
useEffect(() => {
  if (userAddress) {
    fetchPlayerData(userAddress).then(setPlayer);
  }
}, [userAddress]);
```

**🎯 Key Features:**
- **GraphQL Integration**: Direct queries to Torii indexer
- **Data Transformation**: Converts hex blockchain values to JavaScript numbers
- **Zustand Integration**: Seamless state management
- **Caching**: Leverages store for performance
- **Auto-Refresh**: Reacts to wallet address changes

---

## 🎮 Initialization Layer Hook

### **`useSpawnPlayer`** - Player Creation Orchestrator

The **most complex hook**, handling player creation and initialization logic.

**🛡️ Race Condition Prevention:**
```typescript
const [isInitializing, setIsInitializing] = useState(false);

const initializePlayer = useCallback(async () => {
  // Prevent multiple executions
  if (isInitializing) {
    return { success: false, error: "Already initializing" };
  }
  setIsInitializing(true);
  // ... rest of logic
}, [isInitializing]);
```

**✅ Validation Chain:**
```typescript
// Multi-step validation before creating player
if (status !== "connected") {
  return { success: false, error: "Controller not connected" };
}

if (!account) {
  return { success: false, error: "No account found" };
}
```

**🔍 Player Existence Check:**
```typescript
// Check if player already exists
console.log("🔄 Checking for existing player...");
setInitState(prev => ({ ...prev, step: 'checking' }));

await refetchPlayer(); // Use usePlayer hook to refresh data

if (player) {
  // Player exists - no need to create
  return { success: true, playerExists: true };
}
```

**🎮 Player Creation Flow:**
```typescript
// Create new player via Dojo SDK
console.log("🎮 Creating new player...");
setInitState(prev => ({ ...prev, step: 'spawning', txStatus: 'PENDING' }));

const txResult = await client.game.spawnPlayer(account);

if (txResult && txResult.code === "SUCCESS") {
  // Refresh player data after creation
  await refetchPlayer();

  return {
    success: true,
    playerExists: false,
    transactionHash: txResult.transaction_hash
  };
}
```

**📊 Complex State Tracking:**
```typescript
interface InitializeState {
  isInitializing: boolean;
  error: string | null;
  step: 'checking' | 'spawning' | 'loading' | 'success';
  txHash: string | null;
  txStatus: 'PENDING' | 'SUCCESS' | 'REJECTED' | null;
}
```

**🎯 Complex State Management:**
- **Multi-step Process**: Checking → Spawning → Loading → Success
- **Transaction Tracking**: Complete transaction lifecycle
- **Error Recovery**: Comprehensive error handling
- **Race Condition Prevention**: Multiple execution guards
- **Hook Integration**: Coordinates with `usePlayer` and `useStarknetConnect`

---

## ⚡ Game Action Hooks

### **`useTrainAction`** - Training Action with Optimistic Updates

Each game action follows the **same optimistic pattern** but with action-specific logic.

**🎯 Action Validation:**
```typescript
const { account, status } = useAccount();
const { player } = useAppStore();

const isConnected = status === "connected";
const hasPlayer = player !== null;
const canTrain = isConnected && hasPlayer && !trainState.isLoading;
```

**⚡ Optimistic Update Pattern:**
```typescript
const executeTrain = useCallback(async () => {
  try {
    // 1. ⚡ IMMEDIATE UI UPDATE
    setTrainState({ isLoading: true, txStatus: 'PENDING', ... });
    updatePlayerExperience((player?.experience || 0) + 10);

    // 2. 🔗 BLOCKCHAIN TRANSACTION
    const tx = await client.game.train(account);

    // 3. ✅ CONFIRMATION
    if (tx && tx.code === "SUCCESS") {
      setTrainState({ txStatus: 'SUCCESS', isLoading: false });
    }
  } catch (error) {
    // 4. ❌ ROLLBACK on failure
    updatePlayerExperience((player?.experience || 0) - 10);
    setTrainState({ error: error.message, txStatus: 'REJECTED' });
  }
}, [client, account, player]);
```

**🔄 Auto-Cleanup Logic:**
```typescript
// Auto-clear success state after 3 seconds
setTimeout(() => {
  setTrainState({
    isLoading: false,
    error: null,
    txHash: null,
    txStatus: null
  });
}, 3000);
```

### **Action Hook Variations**

Each action hook follows the same pattern but with different validation and effects:

**⛏️ useMineAction - Health Validation:**
```typescript
const hasEnoughHealth = (player?.health || 0) > 5;
const canMine = isConnected && hasPlayer && hasEnoughHealth && !mineState.isLoading;

// Optimistic update: +5 coins, -5 health
updatePlayerCoins((player?.coins || 0) + 5);
updatePlayerHealth(Math.max(0, (player?.health || 100) - 5));
```

**💤 useRestAction - Full Health Check:**
```typescript
const needsHealth = (player?.health || 0) < 100;
const canRest = isConnected && hasPlayer && needsHealth && !restState.isLoading;

// Optimistic update: +20 health (max 100)
updatePlayerHealth(Math.min(100, (player?.health || 100) + 20));
```

---

## 🔄 Hook Integration Patterns

### **Component Usage Pattern**

```typescript
// GameActions.tsx - Component using multiple action hooks
export function GameActions() {
  const player = useAppStore(state => state.player);

  // Each action has its own dedicated hook
  const { trainState, executeTrain, canTrain } = useTrainAction();
  const { mineState, executeMine, canMine } = useMineAction();
  const { restState, executeRest, canRest } = useRestAction();

  const actions = [
    {
      icon: Dumbbell,
      label: "Train",
      description: "+10 EXP",
      onClick: executeTrain,
      state: trainState,
      canExecute: canTrain,
      color: "from-blue-500 to-blue-600",
    },
    {
      icon: Hammer,
      label: "Mine",
      description: "+5 Coins, -5 Health",
      onClick: executeMine,
      state: mineState,
      canExecute: canMine,
      color: "from-yellow-500 to-yellow-600",
      disabledReason: !canMine && player && (player.health || 0) <= 5
        ? "Low Health!"
        : undefined,
    },
    {
      icon: Bed,
      label: "Rest",
      description: "+20 Health",
      onClick: executeRest,
      state: restState,
      canExecute: canRest,
      color: "from-green-500 to-green-600",
      disabledReason: !canRest && player && (player.health || 0) >= 100
        ? "Full Health!"
        : undefined,
    },
  ];

  return (
    <div className="space-y-4">
      {actions.map((action) => {
        const Icon = action.icon;
        const isLoading = action.state.isLoading;

        return (
          <Button
            key={action.label}
            onClick={action.onClick}
            disabled={!action.canExecute || isLoading}
            className={`w-full h-14 bg-gradient-to-r ${action.color} hover:scale-105 transition-all duration-300`}
          >
            {isLoading ? (
              <>
                <Loader2 className="w-4 h-4 mr-2 animate-spin" />
                {action.label}ing...
              </>
            ) : (
              <>
                <Icon className="w-5 h-5 mr-2" />
                {action.label} ({action.description})
              </>
            )}
          </Button>
        );
      })}
    </div>
  );
}
```

### **Status Bar Integration**

```typescript
// StatusBar.tsx - Orchestrating multiple hooks
export function StatusBar() {
  const { status, address, handleConnect, handleDisconnect } = useStarknetConnect();
  const { player, isLoading: playerLoading } = usePlayer();
  const { initializePlayer, isInitializing, txStatus } = useSpawnPlayer();
  const { connector } = useAccount();

  const isConnected = status === "connected";
  const isLoading = isConnecting || isInitializing || playerLoading;

  // 🎮 Auto-initialize player after connection
  useEffect(() => {
    if (isConnected && !player && !isInitializing && !playerLoading) {
      console.log("🎮 Controller connected, auto-initializing player...");
      setTimeout(() => {
        initializePlayer().then(result => {
          console.log("🎮 Auto-initialization result:", result);
        });
      }, 500);
    }
  }, [isConnected, player, isInitializing, playerLoading, initializePlayer]);

  // Status message logic
  const getStatusMessage = () => {
    if (!isConnected) return "Connect your controller to start playing";
    if (playerLoading) return "Loading player data...";
    if (isInitializing) {
      if (txStatus === 'PENDING') return "Creating player on blockchain...";
      if (txStatus === 'SUCCESS') return "Player created successfully!";
      return "Initializing player...";
    }
    if (player) return "Ready to play!";
    return "Preparing...";
  };

  return (
    <div className="status-bar">
      {/* Connection UI */}
      {!isConnected ? (
        <Button onClick={handleConnect} disabled={isLoading}>
          {isConnecting ? "Connecting..." : "Connect Controller"}
        </Button>
      ) : (
        <div className="connected-state">
          <span>Connected: {formatAddress(address)}</span>
          <span>{getStatusMessage()}</span>
        </div>
      )}
    </div>
  );
}
```

---

## 🧠 Hook Coordination Patterns

### **Data Flow Between Hooks**

```
1. useStarknetConnect establishes wallet connection
   ↓
2. usePlayer automatically fetches player data when address changes
   ↓
3. useSpawnPlayer uses player data to determine if creation is needed
   ↓
4. Game action hooks (useTrainAction, etc.) use player data for validation
   ↓
5. All hooks update Zustand store for reactive UI updates
```

---

The React hooks pattern in Dojo Game Starter provides a clean, reusable, and maintainable way to manage complex blockchain interactions while maintaining excellent user experience through optimistic updates and comprehensive error handling.

**Next**: We'll explore the complete [**Data Flow**](./07-data-flow.md) to understand how all these pieces work together in real-time gameplay scenarios.

```

`/home/suhas/Desktop/pune/blockroomsv2/client/docs/Gun1.tsx`:

```tsx
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 ./public/gun1.glb 
Author: DJMaesen (https://sketchfab.com/bumstrum)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/animated-pistol-bd896167e7ca44f19597d3afe6a8d83f
Title: animated pistol
Converted to TypeScript
*/

import React from "react";
import { useGraph } from "@react-three/fiber";
import { useGLTF } from "@react-three/drei";
import { SkeletonUtils } from "three-stdlib";
import * as THREE from "three";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    [key: string]: THREE.Mesh | THREE.Bone | THREE.Object3D;
    stopper_beretta_0: THREE.Mesh;
    bullet_2_2_beretta_0: THREE.Mesh;
    shell_beretta_0: THREE.Mesh;
    bullet_beretta_0: THREE.Mesh;
    shell_1_2_beretta_0: THREE.Mesh;
    mag_beretta_0: THREE.Mesh;
    hammer_beretta_0: THREE.Mesh;
    trigger_beretta_0: THREE.Mesh;
    slide_beretta_0: THREE.Mesh;
    base_beretta_0: THREE.Mesh;
    bullet_2_beretta_0: THREE.Mesh;
    shell_1_beretta_0: THREE.Mesh;
    _rootJoint: THREE.Bone;
    Object_83: THREE.SkinnedMesh;
  };
  materials: {
    [key: string]: THREE.Material;
    beretta: THREE.Material;
    arms: THREE.Material;
  };
};

interface ModelProps {
  [key: string]: any;
}

export function Model(props: ModelProps): JSX.Element {
  const group = React.useRef<THREE.Group>(null);
  const { scene }: GLTF = useGLTF("/gun1.glb");
  const clone: THREE.Object3D = React.useMemo(
    () => SkeletonUtils.clone(scene),
    [scene]
  );
  const { nodes, materials }: GLTFResult = useGraph(clone) as GLTFResult;
  // const { actions } = useAnimations(animations, group);

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Sketchfab_Scene">
        <group name="Sketchfab_model" rotation={[-Math.PI / 2, 0, 0]}>
          <group
            name="105d2810571c4501ba07ac55c5582245fbx"
            rotation={[Math.PI / 2, 0, 0]}
            scale={0.01}
          >
            <group name="Object_2">
              <group name="RootNode">
                <group name="Root" position={[0, 16.327, -8.923]}>
                  <group name="Object_5">
                    <group name="pistol" position={[0, -12.318, 25.913]}>
                      <group name="stopper" position={[1.26, 5.502, 5.615]}>
                        <mesh
                          name="stopper_beretta_0"
                          geometry={nodes.stopper_beretta_0.geometry}
                          material={materials.beretta}
                        />
                      </group>
                      <group
                        name="mag"
                        position={[0, -0.379, 0.406]}
                        rotation={[0.262, 0, 0]}
                      >
                        <group
                          name="shell"
                          position={[0, 7.4, -0.455]}
                          rotation={[-0.262, 0, 0]}
                        >
                          <group name="bullet_2_2" position={[0, 0, 0.935]}>
                            <mesh
                              name="bullet_2_2_beretta_0"
                              geometry={nodes.bullet_2_2_beretta_0.geometry}
                              material={materials.beretta}
                            />
                          </group>
                          <mesh
                            name="shell_beretta_0"
                            geometry={nodes.shell_beretta_0.geometry}
                            material={materials.beretta}
                          />
                        </group>
                        <group
                          name="shell_1_2"
                          position={[0, 6.293, -0.158]}
                          rotation={[-0.262, 0, 0]}
                        >
                          <group name="bullet" position={[0, 0, 0.935]}>
                            <mesh
                              name="bullet_beretta_0"
                              geometry={nodes.bullet_beretta_0.geometry}
                              material={materials.beretta}
                            />
                          </group>
                          <mesh
                            name="shell_1_2_beretta_0"
                            geometry={nodes.shell_1_2_beretta_0.geometry}
                            material={materials.beretta}
                          />
                        </group>
                        <mesh
                          name="mag_beretta_0"
                          geometry={nodes.mag_beretta_0.geometry}
                          material={materials.beretta}
                        />
                      </group>
                      <group
                        name="hammer"
                        position={[0, 5.573, -1.608]}
                        rotation={[-1.242, 0, 0]}
                      >
                        <mesh
                          name="hammer_beretta_0"
                          geometry={nodes.hammer_beretta_0.geometry}
                          material={materials.beretta}
                        />
                      </group>
                      <group name="trigger" position={[0, 4.404, 6.033]}>
                        <mesh
                          name="trigger_beretta_0"
                          geometry={nodes.trigger_beretta_0.geometry}
                          material={materials.beretta}
                        />
                      </group>
                      <group name="slide" position={[0, 7.341, 3.872]}>
                        <mesh
                          name="slide_beretta_0"
                          geometry={nodes.slide_beretta_0.geometry}
                          material={materials.beretta}
                        />
                      </group>
                      <group name="base">
                        <mesh
                          name="base_beretta_0"
                          geometry={nodes.base_beretta_0.geometry}
                          material={materials.beretta}
                        />
                      </group>
                      <group name="shell_1" position={[0, 7.849, 6.937]}>
                        <group name="bullet_2" position={[0, 0, 0.935]}>
                          <mesh
                            name="bullet_2_beretta_0"
                            geometry={nodes.bullet_2_beretta_0.geometry}
                            material={materials.beretta}
                          />
                        </group>
                        <mesh
                          name="shell_1_beretta_0"
                          geometry={nodes.shell_1_beretta_0.geometry}
                          material={materials.beretta}
                        />
                      </group>
                    </group>
                    <primitive object={nodes._rootJoint} />
                    <group name="Object_82" position={[0, 3.036, -1.334]} />
                    <skinnedMesh
                      name="Object_83"
                      geometry={nodes.Object_83.geometry}
                      material={materials.arms}
                      skeleton={nodes.Object_83.skeleton}
                    />
                  </group>
                </group>
                <group
                  name="armsmesh"
                  position={[0, 3.036, -1.334]}
                  rotation={[-0.002, 0, -0.011]}
                />
              </group>
            </group>
          </group>
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("/gun1.glb");

```

`/home/suhas/Desktop/pune/blockroomsv2/client/pnpm-lock.yaml`:

```yaml
lockfileVersion: '9.0'

settings:
  autoInstallPeers: true
  excludeLinksFromLockfile: false

importers:

  .:
    dependencies:
      '@cartridge/connector':
        specifier: ^0.7.13
        version: 0.7.13(@metamask/sdk@0.32.1(bufferutil@4.0.9)(encoding@0.1.13)(utf-8-validate@5.0.10))(@solana/web3.js@1.98.2(bufferutil@4.0.9)(encoding@0.1.13)(typescript@5.8.3)(utf-8-validate@5.0.10))(@starknet-react/core@3.7.4(bufferutil@4.0.9)(get-starknet-core@4.0.0)(react@18.3.1)(starknet@6.23.1(encoding@0.1.13))(typescript@5.8.3)(utf-8-validate@5.0.10))(@types/react@18.3.23)(bufferutil@4.0.9)(encoding@0.1.13)(open@10.1.2)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)(starknet@6.23.1(encoding@0.1.13))(starknetkit@2.10.4(bufferutil@4.0.9)(starknet@6.23.1(encoding@0.1.13))(typescript@5.8.3)(utf-8-validate@5.0.10)(zod@3.24.1))(typescript@5.8.3)(utf-8-validate@5.0.10)(zod@3.24.1)
      '@cartridge/controller':
        specifier: ^0.7.13
        version: 0.7.13(@metamask/sdk@0.32.1(bufferutil@4.0.9)(encoding@0.1.13)(utf-8-validate@5.0.10))(@solana/web3.js@1.98.2(bufferutil@4.0.9)(encoding@0.1.13)(typescript@5.8.3)(utf-8-validate@5.0.10))(@types/react@18.3.23)(bufferutil@4.0.9)(encoding@0.1.13)(open@10.1.2)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)(starknet@6.23.1(encoding@0.1.13))(starknetkit@2.10.4(bufferutil@4.0.9)(starknet@6.23.1(encoding@0.1.13))(typescript@5.8.3)(utf-8-validate@5.0.10)(zod@3.24.1))(typescript@5.8.3)(utf-8-validate@5.0.10)(zod@3.24.1)
      '@dojoengine/core':
        specifier: ^1.5.15
        version: 1.5.15(bufferutil@4.0.9)(encoding@0.1.13)(typescript@5.8.3)(utf-8-validate@5.0.10)
      '@dojoengine/create-burner':
        specifier: ^1.5.15
        version: 1.5.15(bufferutil@4.0.9)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)(starknet@6.23.1(encoding@0.1.13))(typescript@5.8.3)(utf-8-validate@5.0.10)
      '@dojoengine/predeployed-connector':
        specifier: ^1.5.15
        version: 1.5.15(@starknet-react/core@3.7.4(bufferutil@4.0.9)(get-starknet-core@4.0.0)(react@18.3.1)(starknet@6.23.1(encoding@0.1.13))(typescript@5.8.3)(utf-8-validate@5.0.10))(react-dom@18.3.1(react@18.3.1))(react@18.3.1)(starknet@6.23.1(encoding@0.1.13))
      '@dojoengine/sdk':
        specifier: ^1.5.16
        version: 1.5.16(@tanstack/react-query@5.66.0(react@18.3.1))(@types/react-dom@18.3.7(@types/react@18.3.23))(@types/react@18.3.23)(bufferutil@4.0.9)(encoding@0.1.13)(get-starknet-core@4.0.0)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)(starknet@6.23.1(encoding@0.1.13))(typescript@5.8.3)(utf-8-validate@5.0.10)(zod@3.24.1)
      '@dojoengine/torii-client':
        specifier: ^1.5.14
        version: 1.5.14
      '@dojoengine/torii-wasm':
        specifier: ^1.5.14
        version: 1.5.14
      '@dojoengine/utils':
        specifier: ^1.5.14
        version: 1.5.14(bufferutil@4.0.9)(starknet@6.23.1(encoding@0.1.13))(typescript@5.8.3)(utf-8-validate@5.0.10)(zod@3.24.1)
      '@radix-ui/react-progress':
        specifier: ^1.1.7
        version: 1.1.7(@types/react-dom@18.3.7(@types/react@18.3.23))(@types/react@18.3.23)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-slot':
        specifier: ^1.2.3
        version: 1.2.3(@types/react@18.3.23)(react@18.3.1)
      '@react-three/drei':
        specifier: ^9.122.0
        version: 9.122.0(@react-three/fiber@8.18.0(@types/react@18.3.23)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)(three@0.158.0))(@types/react@18.3.23)(@types/three@0.177.0)(immer@10.1.1)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)(three@0.158.0)(use-sync-external-store@1.4.0(react@18.3.1))
      '@react-three/fiber':
        specifier: ^8.18.0
        version: 8.18.0(@types/react@18.3.23)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)(three@0.158.0)
      '@starknet-react/chains':
        specifier: ^3.1.3
        version: 3.1.3
      '@starknet-react/core':
        specifier: ^3.7.4
        version: 3.7.4(bufferutil@4.0.9)(get-starknet-core@4.0.0)(react@18.3.1)(starknet@6.23.1(encoding@0.1.13))(typescript@5.8.3)(utf-8-validate@5.0.10)
      '@types/uuid':
        specifier: ^10.0.0
        version: 10.0.0
      buffer:
        specifier: ^6.0.3
        version: 6.0.3
      class-variance-authority:
        specifier: ^0.7.1
        version: 0.7.1
      clsx:
        specifier: ^2.1.1
        version: 2.1.1
      immer:
        specifier: ^10.1.1
        version: 10.1.1
      lucide-react:
        specifier: ^0.518.0
        version: 0.518.0(react@18.3.1)
      react:
        specifier: ^18.3.1
        version: 18.3.1
      react-dom:
        specifier: ^18.3.1
        version: 18.3.1(react@18.3.1)
      starknet:
        specifier: ^6.23.1
        version: 6.23.1(encoding@0.1.13)
      tailwind-merge:
        specifier: ^3.3.1
        version: 3.3.1
      three:
        specifier: ^0.158.0
        version: 0.158.0
      uuid:
        specifier: ^10.0.0
        version: 10.0.0
      vite-plugin-top-level-await:
        specifier: ^1.5.0
        version: 1.5.0(@swc/helpers@0.5.17)(rollup@4.34.4)(vite@5.4.19(@types/node@22.15.32))
      vite-plugin-wasm:
        specifier: ^3.4.1
        version: 3.4.1(vite@5.4.19(@types/node@22.15.32))
      zustand:
        specifier: ^4.5.7
        version: 4.5.7(@types/react@18.3.23)(immer@10.1.1)(react@18.3.1)
    devDependencies:
      '@eslint/js':
        specifier: ^9.29.0
        version: 9.29.0
      '@types/node':
        specifier: ^22.15.32
        version: 22.15.32
      '@types/react':
        specifier: ^18.3.23
        version: 18.3.23
      '@types/react-dom':
        specifier: ^18.3.7
        version: 18.3.7(@types/react@18.3.23)
      '@types/three':
        specifier: ^0.177.0
        version: 0.177.0
      '@vitejs/plugin-react':
        specifier: ^4.5.2
        version: 4.6.0(vite@5.4.19(@types/node@22.15.32))
      autoprefixer:
        specifier: ^10.4.21
        version: 10.4.21(postcss@8.5.6)
      eslint:
        specifier: ^9.29.0
        version: 9.29.0(jiti@1.21.7)
      eslint-plugin-react-hooks:
        specifier: 5.2.0
        version: 5.2.0(eslint@9.29.0(jiti@1.21.7))
      eslint-plugin-react-refresh:
        specifier: ^0.4.20
        version: 0.4.20(eslint@9.29.0(jiti@1.21.7))
      globals:
        specifier: ^15.15.0
        version: 15.15.0
      postcss:
        specifier: ^8.5.6
        version: 8.5.6
      tailwindcss:
        specifier: ^3.4.17
        version: 3.4.17
      typescript:
        specifier: ^5.8.3
        version: 5.8.3
      typescript-eslint:
        specifier: ^8.34.1
        version: 8.34.1(eslint@9.29.0(jiti@1.21.7))(typescript@5.8.3)
      vite:
        specifier: ^5.4.19
        version: 5.4.19(@types/node@22.15.32)

packages:

  '@adraffy/ens-normalize@1.10.0':
    resolution: {integrity: sha512-nA9XHtlAkYfJxY7bce8DcN7eKxWWCWkU+1GR9d+U6MbNpfwQp8TI7vqOsBsMcHoT4mBu2kypKoSKnghEzOOq5Q==}

  '@adraffy/ens-normalize@1.10.1':
    resolution: {integrity: sha512-96Z2IP3mYmF1Xg2cDm8f1gWGf/HUVedQ3FMifV4kG/PQ4yEP51xDtRAEfhVNt5f/uzpNkZHwWQuUcu6D6K+Ekw==}

  '@adraffy/ens-normalize@1.11.0':
    resolution: {integrity: sha512-/3DDPKHqqIqxUULp8yP4zODUY1i+2xvVWsv8A79xGWdCAG+8sb0hRh0Rk2QyOJUnnbyPUAZYcpBuRe3nS2OIUg==}

  '@alloc/quick-lru@5.2.0':
    resolution: {integrity: sha512-UrcABB+4bUrFABwbluTIBErXwvbsU/V7TZWfmbgJfbkwiBuziS9gxdODUyuiecfdGQ85jglMW6juS3+z5TsKLw==}
    engines: {node: '>=10'}

  '@ampproject/remapping@2.3.0':
    resolution: {integrity: sha512-30iZtAPgz+LTIYoeivqYo853f02jBYSd5uGnGpkFV0M3xOt9aN73erkgYAmZU43x4VfqcnLxW9Kpg3R5LC4YYw==}
    engines: {node: '>=6.0.0'}

  '@babel/code-frame@7.27.1':
    resolution: {integrity: sha512-cjQ7ZlQ0Mv3b47hABuTevyTuYN4i+loJKGeV9flcCgIK37cCXRh+L1bd3iBHlynerhQ7BhCkn2BPbQUL+rGqFg==}
    engines: {node: '>=6.9.0'}

  '@babel/compat-data@7.27.5':
    resolution: {integrity: sha512-KiRAp/VoJaWkkte84TvUd9qjdbZAdiqyvMxrGl1N6vzFogKmaLgoM3L1kgtLicp2HP5fBJS8JrZKLVIZGVJAVg==}
    engines: {node: '>=6.9.0'}

  '@babel/core@7.27.4':
    resolution: {integrity: sha512-bXYxrXFubeYdvB0NhD/NBB3Qi6aZeV20GOWVI47t2dkecCEoneR4NPVcb7abpXDEvejgrUfFtG6vG/zxAKmg+g==}
    engines: {node: '>=6.9.0'}

  '@babel/generator@7.27.5':
    resolution: {integrity: sha512-ZGhA37l0e/g2s1Cnzdix0O3aLYm66eF8aufiVteOgnwxgnRP8GoyMj7VWsgWnQbVKXyge7hqrFh2K2TQM6t1Hw==}
    engines: {node: '>=6.9.0'}

  '@babel/helper-compilation-targets@7.27.2':
    resolution: {integrity: sha512-2+1thGUUWWjLTYTHZWK1n8Yga0ijBz1XAhUXcKy81rd5g6yh7hGqMp45v7cadSbEHc9G3OTv45SyneRN3ps4DQ==}
    engines: {node: '>=6.9.0'}

  '@babel/helper-module-imports@7.27.1':
    resolution: {integrity: sha512-0gSFWUPNXNopqtIPQvlD5WgXYI5GY2kP2cCvoT8kczjbfcfuIljTbcWrulD1CIPIX2gt1wghbDy08yE1p+/r3w==}
    engines: {node: '>=6.9.0'}

  '@babel/helper-module-transforms@7.27.3':
    resolution: {integrity: sha512-dSOvYwvyLsWBeIRyOeHXp5vPj5l1I011r52FM1+r1jCERv+aFXYk4whgQccYEGYxK2H3ZAIA8nuPkQ0HaUo3qg==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0

  '@babel/helper-plugin-utils@7.27.1':
    resolution: {integrity: sha512-1gn1Up5YXka3YYAHGKpbideQ5Yjf1tDa9qYcgysz+cNCXukyLl6DjPXhD3VRwSb8c0J9tA4b2+rHEZtc6R0tlw==}
    engines: {node: '>=6.9.0'}

  '@babel/helper-string-parser@7.25.9':
    resolution: {integrity: sha512-4A/SCr/2KLd5jrtOMFzaKjVtAei3+2r/NChoBNoZ3EyP/+GlhoaEGoWOZUmFmoITP7zOJyHIMm+DYRd8o3PvHA==}
    engines: {node: '>=6.9.0'}

  '@babel/helper-string-parser@7.27.1':
    resolution: {integrity: sha512-qMlSxKbpRlAridDExk92nSobyDdpPijUq2DW6oDnUqd0iOGxmQjyqhMIihI9+zv4LPyZdRje2cavWPbCbWm3eA==}
    engines: {node: '>=6.9.0'}

  '@babel/helper-validator-identifier@7.25.9':
    resolution: {integrity: sha512-Ed61U6XJc3CVRfkERJWDz4dJwKe7iLmmJsbOGu9wSloNSFttHV0I8g6UAgb7qnK5ly5bGLPd4oXZlxCdANBOWQ==}
    engines: {node: '>=6.9.0'}

  '@babel/helper-validator-identifier@7.27.1':
    resolution: {integrity: sha512-D2hP9eA+Sqx1kBZgzxZh0y1trbuU+JoDkiEwqhQ36nodYqJwyEIhPSdMNd7lOm/4io72luTPWH20Yda0xOuUow==}
    engines: {node: '>=6.9.0'}

  '@babel/helper-validator-option@7.27.1':
    resolution: {integrity: sha512-YvjJow9FxbhFFKDSuFnVCe2WxXk1zWc22fFePVNEaWJEu8IrZVlda6N0uHwzZrUM1il7NC9Mlp4MaJYbYd9JSg==}
    engines: {node: '>=6.9.0'}

  '@babel/helpers@7.27.6':
    resolution: {integrity: sha512-muE8Tt8M22638HU31A3CgfSUciwz1fhATfoVai05aPXGor//CdWDCbnlY1yvBPo07njuVOCNGCSp/GTt12lIug==}
    engines: {node: '>=6.9.0'}

  '@babel/parser@7.26.7':
    resolution: {integrity: sha512-kEvgGGgEjRUutvdVvZhbn/BxVt+5VSpwXz1j3WYXQbXDo8KzFOPNG2GQbdAiNq8g6wn1yKk7C/qrke03a84V+w==}
    engines: {node: '>=6.0.0'}
    hasBin: true

  '@babel/parser@7.27.5':
    resolution: {integrity: sha512-OsQd175SxWkGlzbny8J3K8TnnDD0N3lrIUtB92xwyRpzaenGZhxDvxN/JgU00U3CDZNj9tPuDJ5H0WS4Nt3vKg==}
    engines: {node: '>=6.0.0'}
    hasBin: true

  '@babel/plugin-transform-react-jsx-self@7.27.1':
    resolution: {integrity: sha512-6UzkCs+ejGdZ5mFFC/OCUrv028ab2fp1znZmCZjAOBKiBK2jXD1O+BPSfX8X2qjJ75fZBMSnQn3Rq2mrBJK2mw==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0

  '@babel/plugin-transform-react-jsx-source@7.27.1':
    resolution: {integrity: sha512-zbwoTsBruTeKB9hSq73ha66iFeJHuaFkUbwvqElnygoNbj/jHRsSeokowZFN3CZ64IvEqcmmkVe89OPXc7ldAw==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0

  '@babel/runtime@7.26.7':
    resolution: {integrity: sha512-AOPI3D+a8dXnja+iwsUqGRjr1BbZIe771sXdapOtYI531gSqpi92vXivKcq2asu/DFpdl1ceFAKZyRzK2PCVcQ==}
    engines: {node: '>=6.9.0'}

  '@babel/template@7.27.2':
    resolution: {integrity: sha512-LPDZ85aEJyYSd18/DkjNh4/y1ntkE5KwUHWTiqgRxruuZL2F1yuHligVHLvcHY2vMHXttKFpJn6LwfI7cw7ODw==}
    engines: {node: '>=6.9.0'}

  '@babel/traverse@7.27.4':
    resolution: {integrity: sha512-oNcu2QbHqts9BtOWJosOVJapWjBDSxGCpFvikNR5TGDYDQf3JwpIoMzIKrvfoti93cLfPJEG4tH9SPVeyCGgdA==}
    engines: {node: '>=6.9.0'}

  '@babel/types@7.26.7':
    resolution: {integrity: sha512-t8kDRGrKXyp6+tjUh7hw2RLyclsW4TRoRvRHtSyAX9Bb5ldlFh+90YAYY6awRXrlB4G5G2izNeGySpATlFzmOg==}
    engines: {node: '>=6.9.0'}

  '@babel/types@7.27.6':
    resolution: {integrity: sha512-ETyHEk2VHHvl9b9jZP5IHPavHYk57EhanlRRuae9XCpb/j5bDCbPPMOBfCWhnl/7EDJz0jEMCi/RhccCE8r1+Q==}
    engines: {node: '>=6.9.0'}

  '@cartridge/account-wasm@0.7.13':
    resolution: {integrity: sha512-2/cFS96jN31N9piK2Hs/Egxz6cstJ9gV8pgBrqo5vSPckFv2yD9u/8euqDD26MJtLnDa59OYefNJBbKgsK9vHg==}

  '@cartridge/connector@0.7.13':
    resolution: {integrity: sha512-OSlWo5mXiO0WLvHUddnO7Uvx/PlVJcKfkttJgOM4kQz3iSar8B2QlYPXQQ6uqIBFzJ4Pep5E5E3tpUbGNA9BFQ==}
    peerDependencies:
      '@starknet-react/core': ^3.7.3

  '@cartridge/controller@0.7.13':
    resolution: {integrity: sha512-LBor+FxYtAETgj8+m+23BDVhwXEZ+FqtwaLAVBEen6oz4//o3pU+wP2xBl8YAtcAL6mJ8gYcOhfqdHK/Ux5rwQ==}
    peerDependencies:
      '@metamask/sdk': ^0.32.1
      '@solana/web3.js': ^1.98.0
      open: ^10.1.0
      starknet: ^6.21.0
      starknetkit: ^2.6.1

  '@cartridge/penpal@6.2.4':
    resolution: {integrity: sha512-tdpOnSJJBFMlgLZ1+z9Ho5e6cG5EgMAb1Cmmh1lGT2tmplogU/XPMjLE6CwvKAPDoe6a38iMnbH+ySTAWWIOKA==}

  '@cartridge/utils@0.7.13':
    resolution: {integrity: sha512-gNoDw9TCvBaOPh3swGyGY383Am4e/gBFR9mMFq0nkRyfqYOiMlnnxZkGGDYbFSz5LAqbyB80JizmgaTVtKsi4w==}

  '@cbor-extract/cbor-extract-darwin-arm64@2.2.0':
    resolution: {integrity: sha512-P7swiOAdF7aSi0H+tHtHtr6zrpF3aAq/W9FXx5HektRvLTM2O89xCyXF3pk7pLc7QpaY7AoaE8UowVf9QBdh3w==}
    cpu: [arm64]
    os: [darwin]

  '@cbor-extract/cbor-extract-darwin-x64@2.2.0':
    resolution: {integrity: sha512-1liF6fgowph0JxBbYnAS7ZlqNYLf000Qnj4KjqPNW4GViKrEql2MgZnAsExhY9LSy8dnvA4C0qHEBgPrll0z0w==}
    cpu: [x64]
    os: [darwin]

  '@cbor-extract/cbor-extract-linux-arm64@2.2.0':
    resolution: {integrity: sha512-rQvhNmDuhjTVXSPFLolmQ47/ydGOFXtbR7+wgkSY0bdOxCFept1hvg59uiLPT2fVDuJFuEy16EImo5tE2x3RsQ==}
    cpu: [arm64]
    os: [linux]

  '@cbor-extract/cbor-extract-linux-arm@2.2.0':
    resolution: {integrity: sha512-QeBcBXk964zOytiedMPQNZr7sg0TNavZeuUCD6ON4vEOU/25+pLhNN6EDIKJ9VLTKaZ7K7EaAriyYQ1NQ05s/Q==}
    cpu: [arm]
    os: [linux]

  '@cbor-extract/cbor-extract-linux-x64@2.2.0':
    resolution: {integrity: sha512-cWLAWtT3kNLHSvP4RKDzSTX9o0wvQEEAj4SKvhWuOVZxiDAeQazr9A+PSiRILK1VYMLeDml89ohxCnUNQNQNCw==}
    cpu: [x64]
    os: [linux]

  '@cbor-extract/cbor-extract-win32-x64@2.2.0':
    resolution: {integrity: sha512-l2M+Z8DO2vbvADOBNLbbh9y5ST1RY5sqkWOg/58GkUPBYou/cuNZ68SGQ644f1CvZ8kcOxyZtw06+dxWHIoN/w==}
    cpu: [x64]
    os: [win32]

  '@dimforge/rapier3d-compat@0.12.0':
    resolution: {integrity: sha512-uekIGetywIgopfD97oDL5PfeezkFpNhwlzlaEYNOA0N6ghdsOvh/HYjSMek5Q2O1PYvRSDFcqFVJl4r4ZBwOow==}

  '@dojoengine/core@1.5.15':
    resolution: {integrity: sha512-yXLhAsjsfysHtCR0Z6+NR/0SiRKfCpLlRXzKfApHRFg4oxadWqgPBynIL+ibrWvt2L6ftpPWgTI9z9mLPcBQeg==}

  '@dojoengine/create-burner@1.5.15':
    resolution: {integrity: sha512-2UCSn18E7F+IFQi5MTIzNcF+g/RhjdF5l6raEfzgmCxNj1dwgxCGp95Rn080GYRXDDPnY0162aAPOoiiSCFKLQ==}
    peerDependencies:
      react: ^18.2.0
      react-dom: ^18.2.0
      starknet: 6.23.1

  '@dojoengine/predeployed-connector@1.5.15':
    resolution: {integrity: sha512-12ZA+ijbOzElF6SruIqNK2frhUDN8BNk9dHwMkklEJ9Gv0P0i5dww8R/uRE8tvu8bDOsOs7usCcYxqsVlOOCMQ==}
    engines: {node: '>=18.0.0'}
    peerDependencies:
      '@starknet-react/core': ^3.6.2
      react: ^18.3.1
      react-dom: ^18.3.1
      starknet: 6.23.1

  '@dojoengine/recs@2.0.13':
    resolution: {integrity: sha512-Cgz4Unlnk2FSDoFTYKrJexX/KiSYPMFMxftxQkC+9LUKS5yNGkgFQM7xu4/L1HvpDAenL7NjUmH6ynRAS7Iifw==}

  '@dojoengine/sdk@1.5.16':
    resolution: {integrity: sha512-ZYgLYuXBoUY2FOH8N8t9SgC7HFKs8JCXLvzfnBehksvRJxd3oT4kqCxJJ1+yR1WO3qv/R1W8X91J17+DX62BOw==}
    engines: {node: '>=18.0.0'}
    peerDependencies:
      '@tanstack/react-query': ^5.62.16
      '@types/react': ^18.3.1
      '@types/react-dom': ^18.3.1
      react: ^18.3.1
      react-dom: ^18.3.1
      starknet: 6.23.1

  '@dojoengine/torii-client@1.5.14':
    resolution: {integrity: sha512-557pmBHba9FWQR2UcMSRYIXbpASeHvg+rTw/uj2dhrWx+/kbSmlt0UZOAXspW8BHV3zbY3CulgRBGrA2SO8OAQ==}

  '@dojoengine/torii-wasm@1.5.14':
    resolution: {integrity: sha512-kWtmw7hQgE3Iz1skwb7BKnRQx3fhDVNVq9aSLelT3V3OG97RzMqnhtockBvFu64ZGqV2zoC6P4pKKKxiJNERZg==}

  '@dojoengine/utils@1.5.14':
    resolution: {integrity: sha512-QpKvBlzEb6rxVxCCNBh5xY8GP1XmoLjCSa90XUwIhdmHKxgVd3o++2o3b0i51MYrDsYjlChLB+6WMoTBdKRoYQ==}
    peerDependencies:
      starknet: 6.23.1

  '@ecies/ciphers@0.2.3':
    resolution: {integrity: sha512-tapn6XhOueMwht3E2UzY0ZZjYokdaw9XtL9kEyjhQ/Fb9vL9xTFbOaI+fV0AWvTpYu4BNloC6getKW6NtSg4mA==}
    engines: {bun: '>=1', deno: '>=2', node: '>=16'}
    peerDependencies:
      '@noble/ciphers': ^1.0.0

  '@esbuild/aix-ppc64@0.21.5':
    resolution: {integrity: sha512-1SDgH6ZSPTlggy1yI6+Dbkiz8xzpHJEVAlF/AM1tHPLsf5STom9rwtjE4hKAF20FfXXNTFqEYXyJNWh1GiZedQ==}
    engines: {node: '>=12'}
    cpu: [ppc64]
    os: [aix]

  '@esbuild/android-arm64@0.21.5':
    resolution: {integrity: sha512-c0uX9VAUBQ7dTDCjq+wdyGLowMdtR/GoC2U5IYk/7D1H1JYC0qseD7+11iMP2mRLN9RcCMRcjC4YMclCzGwS/A==}
    engines: {node: '>=12'}
    cpu: [arm64]
    os: [android]

  '@esbuild/android-arm@0.21.5':
    resolution: {integrity: sha512-vCPvzSjpPHEi1siZdlvAlsPxXl7WbOVUBBAowWug4rJHb68Ox8KualB+1ocNvT5fjv6wpkX6o/iEpbDrf68zcg==}
    engines: {node: '>=12'}
    cpu: [arm]
    os: [android]

  '@esbuild/android-x64@0.21.5':
    resolution: {integrity: sha512-D7aPRUUNHRBwHxzxRvp856rjUHRFW1SdQATKXH2hqA0kAZb1hKmi02OpYRacl0TxIGz/ZmXWlbZgjwWYaCakTA==}
    engines: {node: '>=12'}
    cpu: [x64]
    os: [android]

  '@esbuild/darwin-arm64@0.21.5':
    resolution: {integrity: sha512-DwqXqZyuk5AiWWf3UfLiRDJ5EDd49zg6O9wclZ7kUMv2WRFr4HKjXp/5t8JZ11QbQfUS6/cRCKGwYhtNAY88kQ==}
    engines: {node: '>=12'}
    cpu: [arm64]
    os: [darwin]

  '@esbuild/darwin-x64@0.21.5':
    resolution: {integrity: sha512-se/JjF8NlmKVG4kNIuyWMV/22ZaerB+qaSi5MdrXtd6R08kvs2qCN4C09miupktDitvh8jRFflwGFBQcxZRjbw==}
    engines: {node: '>=12'}
    cpu: [x64]
    os: [darwin]

  '@esbuild/freebsd-arm64@0.21.5':
    resolution: {integrity: sha512-5JcRxxRDUJLX8JXp/wcBCy3pENnCgBR9bN6JsY4OmhfUtIHe3ZW0mawA7+RDAcMLrMIZaf03NlQiX9DGyB8h4g==}
    engines: {node: '>=12'}
    cpu: [arm64]
    os: [freebsd]

  '@esbuild/freebsd-x64@0.21.5':
    resolution: {integrity: sha512-J95kNBj1zkbMXtHVH29bBriQygMXqoVQOQYA+ISs0/2l3T9/kj42ow2mpqerRBxDJnmkUDCaQT/dfNXWX/ZZCQ==}
    engines: {node: '>=12'}
    cpu: [x64]
    os: [freebsd]

  '@esbuild/linux-arm64@0.21.5':
    resolution: {integrity: sha512-ibKvmyYzKsBeX8d8I7MH/TMfWDXBF3db4qM6sy+7re0YXya+K1cem3on9XgdT2EQGMu4hQyZhan7TeQ8XkGp4Q==}
    engines: {node: '>=12'}
    cpu: [arm64]
    os: [linux]

  '@esbuild/linux-arm@0.21.5':
    resolution: {integrity: sha512-bPb5AHZtbeNGjCKVZ9UGqGwo8EUu4cLq68E95A53KlxAPRmUyYv2D6F0uUI65XisGOL1hBP5mTronbgo+0bFcA==}
    engines: {node: '>=12'}
    cpu: [arm]
    os: [linux]

  '@esbuild/linux-ia32@0.21.5':
    resolution: {integrity: sha512-YvjXDqLRqPDl2dvRODYmmhz4rPeVKYvppfGYKSNGdyZkA01046pLWyRKKI3ax8fbJoK5QbxblURkwK/MWY18Tg==}
    engines: {node: '>=12'}
    cpu: [ia32]
    os: [linux]

  '@esbuild/linux-loong64@0.21.5':
    resolution: {integrity: sha512-uHf1BmMG8qEvzdrzAqg2SIG/02+4/DHB6a9Kbya0XDvwDEKCoC8ZRWI5JJvNdUjtciBGFQ5PuBlpEOXQj+JQSg==}
    engines: {node: '>=12'}
    cpu: [loong64]
    os: [linux]

  '@esbuild/linux-mips64el@0.21.5':
    resolution: {integrity: sha512-IajOmO+KJK23bj52dFSNCMsz1QP1DqM6cwLUv3W1QwyxkyIWecfafnI555fvSGqEKwjMXVLokcV5ygHW5b3Jbg==}
    engines: {node: '>=12'}
    cpu: [mips64el]
    os: [linux]

  '@esbuild/linux-ppc64@0.21.5':
    resolution: {integrity: sha512-1hHV/Z4OEfMwpLO8rp7CvlhBDnjsC3CttJXIhBi+5Aj5r+MBvy4egg7wCbe//hSsT+RvDAG7s81tAvpL2XAE4w==}
    engines: {node: '>=12'}
    cpu: [ppc64]
    os: [linux]

  '@esbuild/linux-riscv64@0.21.5':
    resolution: {integrity: sha512-2HdXDMd9GMgTGrPWnJzP2ALSokE/0O5HhTUvWIbD3YdjME8JwvSCnNGBnTThKGEB91OZhzrJ4qIIxk/SBmyDDA==}
    engines: {node: '>=12'}
    cpu: [riscv64]
    os: [linux]

  '@esbuild/linux-s390x@0.21.5':
    resolution: {integrity: sha512-zus5sxzqBJD3eXxwvjN1yQkRepANgxE9lgOW2qLnmr8ikMTphkjgXu1HR01K4FJg8h1kEEDAqDcZQtbrRnB41A==}
    engines: {node: '>=12'}
    cpu: [s390x]
    os: [linux]

  '@esbuild/linux-x64@0.21.5':
    resolution: {integrity: sha512-1rYdTpyv03iycF1+BhzrzQJCdOuAOtaqHTWJZCWvijKD2N5Xu0TtVC8/+1faWqcP9iBCWOmjmhoH94dH82BxPQ==}
    engines: {node: '>=12'}
    cpu: [x64]
    os: [linux]

  '@esbuild/netbsd-x64@0.21.5':
    resolution: {integrity: sha512-Woi2MXzXjMULccIwMnLciyZH4nCIMpWQAs049KEeMvOcNADVxo0UBIQPfSmxB3CWKedngg7sWZdLvLczpe0tLg==}
    engines: {node: '>=12'}
    cpu: [x64]
    os: [netbsd]

  '@esbuild/openbsd-x64@0.21.5':
    resolution: {integrity: sha512-HLNNw99xsvx12lFBUwoT8EVCsSvRNDVxNpjZ7bPn947b8gJPzeHWyNVhFsaerc0n3TsbOINvRP2byTZ5LKezow==}
    engines: {node: '>=12'}
    cpu: [x64]
    os: [openbsd]

  '@esbuild/sunos-x64@0.21.5':
    resolution: {integrity: sha512-6+gjmFpfy0BHU5Tpptkuh8+uw3mnrvgs+dSPQXQOv3ekbordwnzTVEb4qnIvQcYXq6gzkyTnoZ9dZG+D4garKg==}
    engines: {node: '>=12'}
    cpu: [x64]
    os: [sunos]

  '@esbuild/win32-arm64@0.21.5':
    resolution: {integrity: sha512-Z0gOTd75VvXqyq7nsl93zwahcTROgqvuAcYDUr+vOv8uHhNSKROyU961kgtCD1e95IqPKSQKH7tBTslnS3tA8A==}
    engines: {node: '>=12'}
    cpu: [arm64]
    os: [win32]

  '@esbuild/win32-ia32@0.21.5':
    resolution: {integrity: sha512-SWXFF1CL2RVNMaVs+BBClwtfZSvDgtL//G/smwAc5oVK/UPu2Gu9tIaRgFmYFFKrmg3SyAjSrElf0TiJ1v8fYA==}
    engines: {node: '>=12'}
    cpu: [ia32]
    os: [win32]

  '@esbuild/win32-x64@0.21.5':
    resolution: {integrity: sha512-tQd/1efJuzPC6rCFwEvLtci/xNFcTZknmXs98FYDfGE4wP9ClFV98nyKrzJKVPMhdDnjzLhdUyMX4PsQAPjwIw==}
    engines: {node: '>=12'}
    cpu: [x64]
    os: [win32]

  '@eslint-community/eslint-utils@4.7.0':
    resolution: {integrity: sha512-dyybb3AcajC7uha6CvhdVRJqaKyn7w2YKqKyAN37NKYgZT36w+iRb0Dymmc5qEJ549c/S31cMMSFd75bteCpCw==}
    engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0}
    peerDependencies:
      eslint: ^6.0.0 || ^7.0.0 || >=8.0.0

  '@eslint-community/regexpp@4.12.1':
    resolution: {integrity: sha512-CCZCDJuduB9OUkFkY2IgppNZMi2lBQgD2qzwXkEia16cge2pijY/aXi96CJMquDMn3nJdlPV1A5KrJEXwfLNzQ==}
    engines: {node: ^12.0.0 || ^14.0.0 || >=16.0.0}

  '@eslint/config-array@0.20.1':
    resolution: {integrity: sha512-OL0RJzC/CBzli0DrrR31qzj6d6i6Mm3HByuhflhl4LOBiWxN+3i6/t/ZQQNii4tjksXi8r2CRW1wMpWA2ULUEw==}
    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}

  '@eslint/config-helpers@0.2.2':
    resolution: {integrity: sha512-+GPzk8PlG0sPpzdU5ZvIRMPidzAnZDl/s9L+y13iodqvb8leL53bTannOrQ/Im7UkpsmFU5Ily5U60LWixnmLg==}
    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}

  '@eslint/core@0.14.0':
    resolution: {integrity: sha512-qIbV0/JZr7iSDjqAc60IqbLdsj9GDt16xQtWD+B78d/HAlvysGdZZ6rpJHGAc2T0FQx1X6thsSPdnoiGKdNtdg==}
    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}

  '@eslint/eslintrc@3.3.1':
    resolution: {integrity: sha512-gtF186CXhIl1p4pJNGZw8Yc6RlshoePRvE0X91oPGb3vZ8pM3qOS9W9NGPat9LziaBV7XrJWGylNQXkGcnM3IQ==}
    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}

  '@eslint/js@9.29.0':
    resolution: {integrity: sha512-3PIF4cBw/y+1u2EazflInpV+lYsSG0aByVIQzAgb1m1MhHFSbqTyNqtBKHgWf/9Ykud+DhILS9EGkmekVhbKoQ==}
    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}

  '@eslint/object-schema@2.1.6':
    resolution: {integrity: sha512-RBMg5FRL0I0gs51M/guSAj5/e14VQ4tpZnQNWwuDT66P14I43ItmPfIZRhO9fUVIPOAQXU47atlywZ/czoqFPA==}
    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}

  '@eslint/plugin-kit@0.3.1':
    resolution: {integrity: sha512-0J+zgWxHN+xXONWIyPWKFMgVuJoZuGiIFu8yxk7RJjxkzpGmyja5wRFqZIVtjDVOQpV+Rw0iOAjYPE2eQyjr0w==}
    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}

  '@ethereumjs/common@3.2.0':
    resolution: {integrity: sha512-pksvzI0VyLgmuEF2FA/JR/4/y6hcPq8OUail3/AvycBaW1d5VSauOZzqGvJ3RTmR4MU35lWE8KseKOsEhrFRBA==}

  '@ethereumjs/rlp@4.0.1':
    resolution: {integrity: sha512-tqsQiBQDQdmPWE1xkkBq4rlSW5QZpLOUJ5RJh2/9fug+q9tnUhuZoVLk7s0scUIKTOzEtR72DFBXI4WiZcMpvw==}
    engines: {node: '>=14'}
    hasBin: true

  '@ethereumjs/tx@4.2.0':
    resolution: {integrity: sha512-1nc6VO4jtFd172BbSnTnDQVr9IYBFl1y4xPzZdtkrkKIncBCkdbgfdRV+MiTkJYAtTxvV12GRZLqBFT1PNK6Yw==}
    engines: {node: '>=14'}

  '@ethereumjs/util@8.1.0':
    resolution: {integrity: sha512-zQ0IqbdX8FZ9aw11vP+dZkKDkS+kgIvQPHnSAXzP9pLu+Rfu3D3XEeLbicvoXJTYnhZiPmsZUxgdzXwNKxRPbA==}
    engines: {node: '>=14'}

  '@hpke/chacha20poly1305@1.6.2':
    resolution: {integrity: sha512-LAzcHlX+GfrVqwjx+EqqHmEdkzE5YYIlzZz4Q1uN2Keq81iOB9IveJpufhsbyB1zw7W5/Y4gJ6dfAZq4gFO/sA==}
    engines: {node: '>=16.0.0'}

  '@hpke/common@1.7.3':
    resolution: {integrity: sha512-6wbbjlOPWZb2MnBETFNJRMcnEcB8jXMnjepGUs8412xEQX2Prds1n1yibvaxwUmQiKsHvjkGX+vTlWjqiiSiKw==}
    engines: {node: '>=16.0.0'}

  '@hpke/core@1.7.2':
    resolution: {integrity: sha512-WPsy/Wp1oF+47EVfQdXG55TGS+rOKAAZJ4W/4BFnTENGGq/EAJeX1h0ooCarkqWrJsREsrpa4EiIZkz1m8hMOA==}
    engines: {node: '>=16.0.0'}

  '@hpke/dhkem-x25519@1.6.2':
    resolution: {integrity: sha512-xL//FDIY0ai3/JZyr3UI/jaw8eLEcs+SU7Z9K5uxO8R4xzvwOfGajI4VE9GH+QXGMrHncQDLIDPX9pcdqkGSvQ==}
    engines: {node: '>=16.0.0'}

  '@hpke/dhkem-x448@1.6.2':
    resolution: {integrity: sha512-uA5DJczlkjpvfjHUvLTk9Ux7ET5ERnkFR0KxvdRHtArN72Bzf4MKVSB/9hqKB/rD+zx8oWIy9KHrlYxj+0DS7g==}
    engines: {node: '>=16.0.0'}

  '@humanfs/core@0.19.1':
    resolution: {integrity: sha512-5DyQ4+1JEUzejeK1JGICcideyfUbGixgS9jNgex5nqkW+cY7WZhxBigmieN5Qnw9ZosSNVC9KQKyb+GUaGyKUA==}
    engines: {node: '>=18.18.0'}

  '@humanfs/node@0.16.6':
    resolution: {integrity: sha512-YuI2ZHQL78Q5HbhDiBA1X4LmYdXCKCMQIfw0pw7piHJwyREFebJUvrQN4cMssyES6x+vfUbx1CIpaQUKYdQZOw==}
    engines: {node: '>=18.18.0'}

  '@humanwhocodes/module-importer@1.0.1':
    resolution: {integrity: sha512-bxveV4V8v5Yb4ncFTT3rPSgZBOpCkjfK0y4oVVVJwIuDVBRMDXrPyXRL988i5ap9m9bnyEEjWfm5WkBmtffLfA==}
    engines: {node: '>=12.22'}

  '@humanwhocodes/retry@0.3.1':
    resolution: {integrity: sha512-JBxkERygn7Bv/GbN5Rv8Ul6LVknS+5Bp6RgDC/O8gEBU/yeH5Ui5C/OlWrTb6qct7LjjfT6Re2NxB0ln0yYybA==}
    engines: {node: '>=18.18'}

  '@humanwhocodes/retry@0.4.3':
    resolution: {integrity: sha512-bV0Tgo9K4hfPCek+aMAn81RppFKv2ySDQeMoSZuvTASywNTnVJCArCZE2FWqpvIatKu7VMRLWlR1EazvVhDyhQ==}
    engines: {node: '>=18.18'}

  '@isaacs/cliui@8.0.2':
    resolution: {integrity: sha512-O8jcjabXaleOG9DQ0+ARXWZBTfnP4WNAqzuiJK7ll44AmxGKv/J2M4TPjxjY3znBCfvBXFzucm1twdyFybFqEA==}
    engines: {node: '>=12'}

  '@jridgewell/gen-mapping@0.3.8':
    resolution: {integrity: sha512-imAbBGkb+ebQyxKgzv5Hu2nmROxoDOXHh80evxdoXNOrvAnVx7zimzc1Oo5h9RlfV4vPXaE2iM5pOFbvOCClWA==}
    engines: {node: '>=6.0.0'}

  '@jridgewell/resolve-uri@3.1.2':
    resolution: {integrity: sha512-bRISgCIjP20/tbWSPWMEi54QVPRZExkuD9lJL+UIxUKtwVJA8wW1Trb1jMs1RFXo1CBTNZ/5hpC9QvmKWdopKw==}
    engines: {node: '>=6.0.0'}

  '@jridgewell/set-array@1.2.1':
    resolution: {integrity: sha512-R8gLRTZeyp03ymzP/6Lil/28tGeGEzhx1q2k703KGWRAI1VdvPIXdG70VJc2pAMw3NA6JKL5hhFu1sJX0Mnn/A==}
    engines: {node: '>=6.0.0'}

  '@jridgewell/sourcemap-codec@1.5.0':
    resolution: {integrity: sha512-gv3ZRaISU3fjPAgNsriBRqGWQL6quFx04YMPW/zD8XMLsU32mhCCbfbO6KZFLjvYpCZ8zyDEgqsgf+PwPaM7GQ==}

  '@jridgewell/trace-mapping@0.3.25':
    resolution: {integrity: sha512-vNk6aEwybGtawWmy/PzwnGDOjCkLWSD2wqvjGGAgOAwCGWySYXfYoxt00IJkTF+8Lb57DwOb3Aa0o9CApepiYQ==}

  '@latticexyz/schema-type@2.0.12':
    resolution: {integrity: sha512-QDnHU3iCQmY8e24CGR3hKUEprHrrNUfFTiUaSuj3J0d/x9iaIafYT2+dWydxgcpCmK4Xl7PgurvJiAVCmcLokg==}

  '@latticexyz/utils@2.0.12':
    resolution: {integrity: sha512-AwniovUlWY7YL92Mjz/3R0V9g8c5wYg5t3agRmMZ9wgktUB6BYZC65n+sKp88wUuN3DrMLb51UFZOycGh0JD2w==}

  '@latticexyz/utils@2.2.17':
    resolution: {integrity: sha512-8ql/lFRQsh1a0OiH+DzOt17nbE2lroKj7nU+70Wxy+O6MqCYJwMoU7kCvOjm9VPp0l0JicR8qZxjYwSr+V5FQg==}

  '@lit-labs/ssr-dom-shim@1.3.0':
    resolution: {integrity: sha512-nQIWonJ6eFAvUUrSlwyHDm/aE8PBDu5kRpL0vHMg6K8fK3Diq1xdPjTnsJSwxABhaZ+5eBi1btQB5ShUTKo4nQ==}

  '@lit/reactive-element@2.1.0':
    resolution: {integrity: sha512-L2qyoZSQClcBmq0qajBVbhYEcG6iK0XfLn66ifLe/RfC0/ihpc+pl0Wdn8bJ8o+hj38cG0fGXRgSS20MuXn7qA==}

  '@mediapipe/tasks-vision@0.10.17':
    resolution: {integrity: sha512-CZWV/q6TTe8ta61cZXjfnnHsfWIdFhms03M9T7Cnd5y2mdpylJM0rF1qRq+wsQVRMLz1OYPVEBU9ph2Bx8cxrg==}

  '@metamask/json-rpc-engine@8.0.2':
    resolution: {integrity: sha512-IoQPmql8q7ABLruW7i4EYVHWUbF74yrp63bRuXV5Zf9BQwcn5H9Ww1eLtROYvI1bUXwOiHZ6qT5CWTrDc/t/AA==}
    engines: {node: '>=16.0.0'}

  '@metamask/json-rpc-middleware-stream@7.0.2':
    resolution: {integrity: sha512-yUdzsJK04Ev98Ck4D7lmRNQ8FPioXYhEUZOMS01LXW8qTvPGiRVXmVltj2p4wrLkh0vW7u6nv0mNl5xzC5Qmfg==}
    engines: {node: '>=16.0.0'}

  '@metamask/object-multiplex@2.1.0':
    resolution: {integrity: sha512-4vKIiv0DQxljcXwfpnbsXcfa5glMj5Zg9mqn4xpIWqkv6uJ2ma5/GtUfLFSxhlxnR8asRMv8dDmWya1Tc1sDFA==}
    engines: {node: ^16.20 || ^18.16 || >=20}

  '@metamask/onboarding@1.0.1':
    resolution: {integrity: sha512-FqHhAsCI+Vacx2qa5mAFcWNSrTcVGMNjzxVgaX8ECSny/BJ9/vgXP9V7WF/8vb9DltPeQkxr+Fnfmm6GHfmdTQ==}

  '@metamask/providers@16.1.0':
    resolution: {integrity: sha512-znVCvux30+3SaUwcUGaSf+pUckzT5ukPRpcBmy+muBLC0yaWnBcvDqGfcsw6CBIenUdFrVoAFa8B6jsuCY/a+g==}
    engines: {node: ^18.18 || >=20}

  '@metamask/rpc-errors@6.4.0':
    resolution: {integrity: sha512-1ugFO1UoirU2esS3juZanS/Fo8C8XYocCuBpfZI5N7ECtoG+zu0wF+uWZASik6CkO6w9n/Iebt4iI4pT0vptpg==}
    engines: {node: '>=16.0.0'}

  '@metamask/safe-event-emitter@3.1.2':
    resolution: {integrity: sha512-5yb2gMI1BDm0JybZezeoX/3XhPDOtTbcFvpTXM9kxsoZjPZFh4XciqRbpD6N86HYZqWDhEaKUDuOyR0sQHEjMA==}
    engines: {node: '>=12.0.0'}

  '@metamask/sdk-communication-layer@0.32.0':
    resolution: {integrity: sha512-dmj/KFjMi1fsdZGIOtbhxdg3amxhKL/A5BqSU4uh/SyDKPub/OT+x5pX8bGjpTL1WPWY/Q0OIlvFyX3VWnT06Q==}
    peerDependencies:
      cross-fetch: ^4.0.0
      eciesjs: '*'
      eventemitter2: ^6.4.9
      readable-stream: ^3.6.2
      socket.io-client: ^4.5.1

  '@metamask/sdk-install-modal-web@0.32.1':
    resolution: {integrity: sha512-MGmAo6qSjf1tuYXhCu2EZLftq+DSt5Z7fsIKr2P+lDgdTPWgLfZB1tJKzNcwKKOdf6q9Qmmxn7lJuI/gq5LrKw==}

  '@metamask/sdk@0.32.1':
    resolution: {integrity: sha512-ulvScxyuX+A8VYgQ9FGugtpH5l2U8AF0lOjaw6XyqwnL7I/U0Lk9yyz9pns4Zyq356Z4+nIBzxmb6czWLzp8UQ==}

  '@metamask/superstruct@3.2.1':
    resolution: {integrity: sha512-fLgJnDOXFmuVlB38rUN5SmU7hAFQcCjrg3Vrxz67KTY7YHFnSNEKvX4avmEBdOI0yTCxZjwMCFEqsC8k2+Wd3g==}
    engines: {node: '>=16.0.0'}

  '@metamask/utils@8.5.0':
    resolution: {integrity: sha512-I6bkduevXb72TIM9q2LRO63JSsF9EXduh3sBr9oybNX2hNNpr/j1tEjXrsG0Uabm4MJ1xkGAQEMwifvKZIkyxQ==}
    engines: {node: '>=16.0.0'}

  '@metamask/utils@9.3.0':
    resolution: {integrity: sha512-w8CVbdkDrVXFJbfBSlDfafDR6BAkpDmv1bC1UJVCoVny5tW2RKAdn9i68Xf7asYT4TnUhl/hN4zfUiKQq9II4g==}
    engines: {node: '>=16.0.0'}

  '@module-federation/runtime@0.1.21':
    resolution: {integrity: sha512-/p4BhZ0SnjJuiL0wwu+FebFgIUJ9vM+oCY7CyprUHImyi/Y23ulI61WNWMVrKQGgdMoXQDQCL8RH4EnrVP2ZFw==}

  '@module-federation/sdk@0.1.21':
    resolution: {integrity: sha512-r7xPiAm+O4e+8Zvw+8b4ToeD0D0VJD004nHmt+Y8r/l98J2eA6di72Vn1FeyjtQbCrFtiMw3ts/dlqtcmIBipw==}

  '@monogrid/gainmap-js@3.1.0':
    resolution: {integrity: sha512-Obb0/gEd/HReTlg8ttaYk+0m62gQJmCblMOjHSMHRrBP2zdfKMHLCRbh/6ex9fSUJMKdjjIEiohwkbGD3wj2Nw==}
    peerDependencies:
      three: '>= 0.159.0'

  '@msgpack/msgpack@3.1.2':
    resolution: {integrity: sha512-JEW4DEtBzfe8HvUYecLU9e6+XJnKDlUAIve8FvPzF3Kzs6Xo/KuZkZJsDH0wJXl/qEZbeeE7edxDNY3kMs39hQ==}
    engines: {node: '>= 18'}

  '@noble/ciphers@0.5.3':
    resolution: {integrity: sha512-B0+6IIHiqEs3BPMT0hcRmHvEj2QHOLu+uwt+tqDDeVd0oyVzh7BPrDcPjRnV1PV/5LaknXJJQvOuRGR0zQJz+w==}

  '@noble/ciphers@1.2.1':
    resolution: {integrity: sha512-rONPWMC7PeExE077uLE4oqWrZ1IvAfz3oH9LibVAcVCopJiA9R62uavnbEzdkVmJYI6M6Zgkbeb07+tWjlq2XA==}
    engines: {node: ^14.21.3 || >=16}

  '@noble/ciphers@1.3.0':
    resolution: {integrity: sha512-2I0gnIVPtfnMw9ee9h1dJG7tp81+8Ob3OJb3Mv37rx5L40/b0i7djjCVvGOVqc9AEIQyvyu1i6ypKdFw8R8gQw==}
    engines: {node: ^14.21.3 || >=16}

  '@noble/curves@1.0.0':
    resolution: {integrity: sha512-2upgEu0iLiDVDZkNLeFV2+ht0BAVgQnEmCk6JsOch9Rp8xfkMCbvbAZlA2pBHQc73dbl+vFOXfqkf4uemdn0bw==}

  '@noble/curves@1.2.0':
    resolution: {integrity: sha512-oYclrNgRaM9SsBUBVbb8M6DTV7ZHRTKugureoYEncY5c65HOmRzvSiTE3y5CYaPYJA/GVkrhXEoF0M3Ya9PMnw==}

  '@noble/curves@1.4.0':
    resolution: {integrity: sha512-p+4cb332SFCrReJkCYe8Xzm0OWi4Jji5jVdIZRL/PmacmDkFNw6MrrV+gGpiPxLHbV+zKFRywUWbaseT+tZRXg==}

  '@noble/curves@1.4.2':
    resolution: {integrity: sha512-TavHr8qycMChk8UwMld0ZDRvatedkzWfH8IiaeGCfymOP5i0hSCozz9vHOL0nkwk7HRMlFnAiKpS2jrUmSybcw==}

  '@noble/curves@1.7.0':
    resolution: {integrity: sha512-UTMhXK9SeDhFJVrHeUJ5uZlI6ajXg10O6Ddocf9S6GjbSBVZsJo88HzKwXznNfGpMTRDyJkqMjNDPYgf0qFWnw==}
    engines: {node: ^14.21.3 || >=16}

  '@noble/curves@1.8.0':
    resolution: {integrity: sha512-j84kjAbzEnQHaSIhRPUmB3/eVXu2k3dKPl2LOrR8fSOIL+89U+7lV117EWHtq/GHM3ReGHM46iRBdZfpc4HRUQ==}
    engines: {node: ^14.21.3 || >=16}

  '@noble/curves@1.8.1':
    resolution: {integrity: sha512-warwspo+UYUPep0Q+vtdVB4Ugn8GGQj8iyB3gnRWsztmUHTI3S1nhdiWNsPUGL0vud7JlRRk1XEu7Lq1KGTnMQ==}
    engines: {node: ^14.21.3 || >=16}

  '@noble/curves@1.9.1':
    resolution: {integrity: sha512-k11yZxZg+t+gWvBbIswW0yoJlu8cHOC7dhunwOzoWH/mXGBiYyR4YY6hAEK/3EUs4UpB8la1RfdRpeGsFHkWsA==}
    engines: {node: ^14.21.3 || >=16}

  '@noble/curves@1.9.2':
    resolution: {integrity: sha512-HxngEd2XUcg9xi20JkwlLCtYwfoFw4JGkuZpT+WlsPD4gB/cxkvTD8fSsoAnphGZhFdZYKeQIPCuFlWPm1uE0g==}
    engines: {node: ^14.21.3 || >=16}

  '@noble/hashes@1.3.0':
    resolution: {integrity: sha512-ilHEACi9DwqJB0pw7kv+Apvh50jiiSyR/cQ3y4W7lOR5mhvn/50FLUfsnfJz0BDZtl/RR16kXvptiv6q1msYZg==}

  '@noble/hashes@1.3.2':
    resolution: {integrity: sha512-MVC8EAQp7MvEcm30KWENFjgR+Mkmf+D189XJTkFIlwohU5hcBbn1ZkKq7KVTi2Hme3PMGF390DaL52beVrIihQ==}
    engines: {node: '>= 16'}

  '@noble/hashes@1.3.3':
    resolution: {integrity: sha512-V7/fPHgl+jsVPXqqeOzT8egNj2iBIVt+ECeMMG8TdcnTikP3oaBtUVqpT/gYCR68aEBJSF+XbYUxStjbFMqIIA==}
    engines: {node: '>= 16'}

  '@noble/hashes@1.4.0':
    resolution: {integrity: sha512-V1JJ1WTRUqHHrOSh597hURcMqVKVGL/ea3kv0gSnEdsEZ0/+VyPghM1lMNGc00z7CIQorSvbKpuJkxvuHbvdbg==}
    engines: {node: '>= 16'}

  '@noble/hashes@1.6.0':
    resolution: {integrity: sha512-YUULf0Uk4/mAA89w+k3+yUYh6NrEvxZa5T6SY3wlMvE2chHkxFUUIDI8/XW1QSC357iA5pSnqt7XEhvFOqmDyQ==}
    engines: {node: ^14.21.3 || >=16}

  '@noble/hashes@1.7.0':
    resolution: {integrity: sha512-HXydb0DgzTpDPwbVeDGCG1gIu7X6+AuU6Zl6av/E/KG8LMsvPntvq+w17CHRpKBmN6Ybdrt1eP3k4cj8DJa78w==}
    engines: {node: ^14.21.3 || >=16}

  '@noble/hashes@1.7.1':
    resolution: {integrity: sha512-B8XBPsn4vT/KJAGqDzbwztd+6Yte3P4V7iafm24bxgDe/mlRuK6xmWPuCNrKt2vDafZ8MfJLlchDG/vYafQEjQ==}
    engines: {node: ^14.21.3 || >=16}

  '@noble/hashes@1.8.0':
    resolution: {integrity: sha512-jCs9ldd7NwzpgXDIf6P3+NrHh9/sD6CQdxHyjQI+h/6rDNo88ypBxxz45UDuZHz9r3tNz7N/VInSVoVdtXEI4A==}
    engines: {node: ^14.21.3 || >=16}

  '@nodelib/fs.scandir@2.1.5':
    resolution: {integrity: sha512-vq24Bq3ym5HEQm2NKCr3yXDwjc7vTsEThRDnkp2DK9p1uqLR+DHurm/NOTo0KG7HYHU7eppKZj3MyqYuMBf62g==}
    engines: {node: '>= 8'}

  '@nodelib/fs.stat@2.0.5':
    resolution: {integrity: sha512-RkhPPp2zrqDAQA/2jNhnztcPAlv64XdhIp7a7454A5ovI7Bukxgt7MX7udwAu3zg1DcpPU0rz3VV1SeaqvY4+A==}
    engines: {node: '>= 8'}

  '@nodelib/fs.walk@1.2.8':
    resolution: {integrity: sha512-oGB+UxlgWcgQkgwo8GcEGwemoTFt3FIO9ababBmaGwXIoBKZ+GTy0pP185beGg7Llih/NSHSV2XAs1lnznocSg==}
    engines: {node: '>= 8'}

  '@paulmillr/qr@0.2.1':
    resolution: {integrity: sha512-IHnV6A+zxU7XwmKFinmYjUcwlyK9+xkG3/s9KcQhI9BjQKycrJ1JRO+FbNYPwZiPKW3je/DR0k7w8/gLa5eaxQ==}
    deprecated: 'The package is now available as "qr": npm install qr'

  '@pkgjs/parseargs@0.11.0':
    resolution: {integrity: sha512-+1VkjdD0QBLPodGrJUeqarH8VAIvQODIbwh9XpP5Syisf7YoQgsJKPNFoqqLQlu+VQ/tVSshMR6loPMn8U+dPg==}
    engines: {node: '>=14'}

  '@radix-ui/react-compose-refs@1.1.2':
    resolution: {integrity: sha512-z4eqJvfiNnFMHIIvXP3CY57y2WJs5g2v3X0zm9mEJkrkNv4rDxu+sg9Jh8EkXyeqBkB7SOcboo9dMVqhyrACIg==}
    peerDependencies:
      '@types/react': '*'
      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
    peerDependenciesMeta:
      '@types/react':
        optional: true

  '@radix-ui/react-context@1.1.2':
    resolution: {integrity: sha512-jCi/QKUM2r1Ju5a3J64TH2A5SpKAgh0LpknyqdQ4m6DCV0xJ2HG1xARRwNGPQfi1SLdLWZ1OJz6F4OMBBNiGJA==}
    peerDependencies:
      '@types/react': '*'
      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
    peerDependenciesMeta:
      '@types/react':
        optional: true

  '@radix-ui/react-primitive@2.1.3':
    resolution: {integrity: sha512-m9gTwRkhy2lvCPe6QJp4d3G1TYEUHn/FzJUtq9MjH46an1wJU+GdoGC5VLof8RX8Ft/DlpshApkhswDLZzHIcQ==}
    peerDependencies:
      '@types/react': '*'
      '@types/react-dom': '*'
      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
    peerDependenciesMeta:
      '@types/react':
        optional: true
      '@types/react-dom':
        optional: true

  '@radix-ui/react-progress@1.1.7':
    resolution: {integrity: sha512-vPdg/tF6YC/ynuBIJlk1mm7Le0VgW6ub6J2UWnTQ7/D23KXcPI1qy+0vBkgKgd38RCMJavBXpB83HPNFMTb0Fg==}
    peerDependencies:
      '@types/react': '*'
      '@types/react-dom': '*'
      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
    peerDependenciesMeta:
      '@types/react':
        optional: true
      '@types/react-dom':
        optional: true

  '@radix-ui/react-slot@1.2.3':
    resolution: {integrity: sha512-aeNmHnBxbi2St0au6VBVC7JXFlhLlOnvIIlePNniyUNAClzmtAUEY8/pBiK3iHjufOlwA+c20/8jngo7xcrg8A==}
    peerDependencies:
      '@types/react': '*'
      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
    peerDependenciesMeta:
      '@types/react':
        optional: true

  '@react-spring/animated@9.7.5':
    resolution: {integrity: sha512-Tqrwz7pIlsSDITzxoLS3n/v/YCUHQdOIKtOJf4yL6kYVSDTSmVK1LI1Q3M/uu2Sx4X3pIWF3xLUhlsA6SPNTNg==}
    peerDependencies:
      react: ^16.8.0 || ^17.0.0 || ^18.0.0

  '@react-spring/core@9.7.5':
    resolution: {integrity: sha512-rmEqcxRcu7dWh7MnCcMXLvrf6/SDlSokLaLTxiPlAYi11nN3B5oiCUAblO72o+9z/87j2uzxa2Inm8UbLjXA+w==}
    peerDependencies:
      react: ^16.8.0 || ^17.0.0 || ^18.0.0

  '@react-spring/rafz@9.7.5':
    resolution: {integrity: sha512-5ZenDQMC48wjUzPAm1EtwQ5Ot3bLIAwwqP2w2owG5KoNdNHpEJV263nGhCeKKmuA3vG2zLLOdu3or6kuDjA6Aw==}

  '@react-spring/shared@9.7.5':
    resolution: {integrity: sha512-wdtoJrhUeeyD/PP/zo+np2s1Z820Ohr/BbuVYv+3dVLW7WctoiN7std8rISoYoHpUXtbkpesSKuPIw/6U1w1Pw==}
    peerDependencies:
      react: ^16.8.0 || ^17.0.0 || ^18.0.0

  '@react-spring/three@9.7.5':
    resolution: {integrity: sha512-RxIsCoQfUqOS3POmhVHa1wdWS0wyHAUway73uRLp3GAL5U2iYVNdnzQsep6M2NZ994BlW8TcKuMtQHUqOsy6WA==}
    peerDependencies:
      '@react-three/fiber': '>=6.0'
      react: ^16.8.0 || ^17.0.0 || ^18.0.0
      three: '>=0.126'

  '@react-spring/types@9.7.5':
    resolution: {integrity: sha512-HVj7LrZ4ReHWBimBvu2SKND3cDVUPWKLqRTmWe/fNY6o1owGOX0cAHbdPDTMelgBlVbrTKrre6lFkhqGZErK/g==}

  '@react-three/drei@9.122.0':
    resolution: {integrity: sha512-SEO/F/rBCTjlLez7WAlpys+iGe9hty4rNgjZvgkQeXFSiwqD4Hbk/wNHMAbdd8vprO2Aj81mihv4dF5bC7D0CA==}
    peerDependencies:
      '@react-three/fiber': ^8
      react: ^18
      react-dom: ^18
      three: '>=0.137'
    peerDependenciesMeta:
      react-dom:
        optional: true

  '@react-three/fiber@8.18.0':
    resolution: {integrity: sha512-FYZZqD0UUHUswKz3LQl2Z7H24AhD14XGTsIRw3SJaXUxyfVMi+1yiZGmqTcPt/CkPpdU7rrxqcyQ1zJE5DjvIQ==}
    peerDependencies:
      expo: '>=43.0'
      expo-asset: '>=8.4'
      expo-file-system: '>=11.0'
      expo-gl: '>=11.0'
      react: '>=18 <19'
      react-dom: '>=18 <19'
      react-native: '>=0.64'
      three: '>=0.133'
    peerDependenciesMeta:
      expo:
        optional: true
      expo-asset:
        optional: true
      expo-file-system:
        optional: true
      expo-gl:
        optional: true
      react-dom:
        optional: true
      react-native:
        optional: true

  '@reown/appkit-common@1.7.8':
    resolution: {integrity: sha512-ridIhc/x6JOp7KbDdwGKY4zwf8/iK8EYBl+HtWrruutSLwZyVi5P8WaZa+8iajL6LcDcDF7LoyLwMTym7SRuwQ==}

  '@reown/appkit-controllers@1.7.8':
    resolution: {integrity: sha512-IdXlJlivrlj6m63VsGLsjtPHHsTWvKGVzWIP1fXZHVqmK+rZCBDjCi9j267Rb9/nYRGHWBtlFQhO8dK35WfeDA==}

  '@reown/appkit-pay@1.7.8':
    resolution: {integrity: sha512-OSGQ+QJkXx0FEEjlpQqIhT8zGJKOoHzVnyy/0QFrl3WrQTjCzg0L6+i91Ad5Iy1zb6V5JjqtfIFpRVRWN4M3pw==}

  '@reown/appkit-polyfills@1.7.8':
    resolution: {integrity: sha512-W/kq786dcHHAuJ3IV2prRLEgD/2iOey4ueMHf1sIFjhhCGMynMkhsOhQMUH0tzodPqUgAC494z4bpIDYjwWXaA==}

  '@reown/appkit-scaffold-ui@1.7.8':
    resolution: {integrity: sha512-RCeHhAwOrIgcvHwYlNWMcIDibdI91waaoEYBGw71inE0kDB8uZbE7tE6DAXJmDkvl0qPh+DqlC4QbJLF1FVYdQ==}

  '@reown/appkit-ui@1.7.8':
    resolution: {integrity: sha512-1hjCKjf6FLMFzrulhl0Y9Vb9Fu4royE+SXCPSWh4VhZhWqlzUFc7kutnZKx8XZFVQH4pbBvY62SpRC93gqoHow==}

  '@reown/appkit-utils@1.7.8':
    resolution: {integrity: sha512-8X7UvmE8GiaoitCwNoB86pttHgQtzy4ryHZM9kQpvjQ0ULpiER44t1qpVLXNM4X35O0v18W0Dk60DnYRMH2WRw==}
    peerDependencies:
      valtio: 1.13.2

  '@reown/appkit-wallet@1.7.8':
    resolution: {integrity: sha512-kspz32EwHIOT/eg/ZQbFPxgXq0B/olDOj3YMu7gvLEFz4xyOFd/wgzxxAXkp5LbG4Cp++s/elh79rVNmVFdB9A==}

  '@reown/appkit@1.7.8':
    resolution: {integrity: sha512-51kTleozhA618T1UvMghkhKfaPcc9JlKwLJ5uV+riHyvSoWPKPRIa5A6M1Wano5puNyW0s3fwywhyqTHSilkaA==}

  '@rolldown/pluginutils@1.0.0-beta.19':
    resolution: {integrity: sha512-3FL3mnMbPu0muGOCaKAhhFEYmqv9eTfPSJRJmANrCwtgK8VuxpsZDGK+m0LYAGoyO8+0j5uRe4PeyPDK1yA/hA==}

  '@rollup/plugin-virtual@3.0.2':
    resolution: {integrity: sha512-10monEYsBp3scM4/ND4LNH5Rxvh3e/cVeL3jWTgZ2SrQ+BmUoQcopVQvnaMcOnykb1VkxUFuDAN+0FnpTFRy2A==}
    engines: {node: '>=14.0.0'}
    peerDependencies:
      rollup: ^1.20.0||^2.0.0||^3.0.0||^4.0.0
    peerDependenciesMeta:
      rollup:
        optional: true

  '@rollup/rollup-android-arm-eabi@4.34.4':
    resolution: {integrity: sha512-gGi5adZWvjtJU7Axs//CWaQbQd/vGy8KGcnEaCWiyCqxWYDxwIlAHFuSe6Guoxtd0SRvSfVTDMPd5H+4KE2kKA==}
    cpu: [arm]
    os: [android]

  '@rollup/rollup-android-arm64@4.34.4':
    resolution: {integrity: sha512-1aRlh1gqtF7vNPMnlf1vJKk72Yshw5zknR/ZAVh7zycRAGF2XBMVDAHmFQz/Zws5k++nux3LOq/Ejj1WrDR6xg==}
    cpu: [arm64]
    os: [android]

  '@rollup/rollup-darwin-arm64@4.34.4':
    resolution: {integrity: sha512-drHl+4qhFj+PV/jrQ78p9ch6A0MfNVZScl/nBps5a7u01aGf/GuBRrHnRegA9bP222CBDfjYbFdjkIJ/FurvSQ==}
    cpu: [arm64]
    os: [darwin]

  '@rollup/rollup-darwin-x64@4.34.4':
    resolution: {integrity: sha512-hQqq/8QALU6t1+fbNmm6dwYsa0PDD4L5r3TpHx9dNl+aSEMnIksHZkSO3AVH+hBMvZhpumIGrTFj8XCOGuIXjw==}
    cpu: [x64]
    os: [darwin]

  '@rollup/rollup-freebsd-arm64@4.34.4':
    resolution: {integrity: sha512-/L0LixBmbefkec1JTeAQJP0ETzGjFtNml2gpQXA8rpLo7Md+iXQzo9kwEgzyat5Q+OG/C//2B9Fx52UxsOXbzw==}
    cpu: [arm64]
    os: [freebsd]

  '@rollup/rollup-freebsd-x64@4.34.4':
    resolution: {integrity: sha512-6Rk3PLRK+b8L/M6m/x6Mfj60LhAUcLJ34oPaxufA+CfqkUrDoUPQYFdRrhqyOvtOKXLJZJwxlOLbQjNYQcRQfw==}
    cpu: [x64]
    os: [freebsd]

  '@rollup/rollup-linux-arm-gnueabihf@4.34.4':
    resolution: {integrity: sha512-kmT3x0IPRuXY/tNoABp2nDvI9EvdiS2JZsd4I9yOcLCCViKsP0gB38mVHOhluzx+SSVnM1KNn9k6osyXZhLoCA==}
    cpu: [arm]
    os: [linux]

  '@rollup/rollup-linux-arm-musleabihf@4.34.4':
    resolution: {integrity: sha512-3iSA9tx+4PZcJH/Wnwsvx/BY4qHpit/u2YoZoXugWVfc36/4mRkgGEoRbRV7nzNBSCOgbWMeuQ27IQWgJ7tRzw==}
    cpu: [arm]
    os: [linux]

  '@rollup/rollup-linux-arm64-gnu@4.34.4':
    resolution: {integrity: sha512-7CwSJW+sEhM9sESEk+pEREF2JL0BmyCro8UyTq0Kyh0nu1v0QPNY3yfLPFKChzVoUmaKj8zbdgBxUhBRR+xGxg==}
    cpu: [arm64]
    os: [linux]

  '@rollup/rollup-linux-arm64-musl@4.34.4':
    resolution: {integrity: sha512-GZdafB41/4s12j8Ss2izofjeFXRAAM7sHCb+S4JsI9vaONX/zQ8cXd87B9MRU/igGAJkKvmFmJJBeeT9jJ5Cbw==}
    cpu: [arm64]
    os: [linux]

  '@rollup/rollup-linux-loongarch64-gnu@4.34.4':
    resolution: {integrity: sha512-uuphLuw1X6ur11675c2twC6YxbzyLSpWggvdawTUamlsoUv81aAXRMPBC1uvQllnBGls0Qt5Siw8reSIBnbdqQ==}
    cpu: [loong64]
    os: [linux]

  '@rollup/rollup-linux-powerpc64le-gnu@4.34.4':
    resolution: {integrity: sha512-KvLEw1os2gSmD6k6QPCQMm2T9P2GYvsMZMRpMz78QpSoEevHbV/KOUbI/46/JRalhtSAYZBYLAnT9YE4i/l4vg==}
    cpu: [ppc64]
    os: [linux]

  '@rollup/rollup-linux-riscv64-gnu@4.34.4':
    resolution: {integrity: sha512-wcpCLHGM9yv+3Dql/CI4zrY2mpQ4WFergD3c9cpRowltEh5I84pRT/EuHZsG0In4eBPPYthXnuR++HrFkeqwkA==}
    cpu: [riscv64]
    os: [linux]

  '@rollup/rollup-linux-s390x-gnu@4.34.4':
    resolution: {integrity: sha512-nLbfQp2lbJYU8obhRQusXKbuiqm4jSJteLwfjnunDT5ugBKdxqw1X9KWwk8xp1OMC6P5d0WbzxzhWoznuVK6XA==}
    cpu: [s390x]
    os: [linux]

  '@rollup/rollup-linux-x64-gnu@4.34.4':
    resolution: {integrity: sha512-JGejzEfVzqc/XNiCKZj14eb6s5w8DdWlnQ5tWUbs99kkdvfq9btxxVX97AaxiUX7xJTKFA0LwoS0KU8C2faZRg==}
    cpu: [x64]
    os: [linux]

  '@rollup/rollup-linux-x64-musl@4.34.4':
    resolution: {integrity: sha512-/iFIbhzeyZZy49ozAWJ1ZR2KW6ZdYUbQXLT4O5n1cRZRoTpwExnHLjlurDXXPKEGxiAg0ujaR9JDYKljpr2fDg==}
    cpu: [x64]
    os: [linux]

  '@rollup/rollup-win32-arm64-msvc@4.34.4':
    resolution: {integrity: sha512-qORc3UzoD5UUTneiP2Afg5n5Ti1GAW9Gp5vHPxzvAFFA3FBaum9WqGvYXGf+c7beFdOKNos31/41PRMUwh1tpA==}
    cpu: [arm64]
    os: [win32]

  '@rollup/rollup-win32-ia32-msvc@4.34.4':
    resolution: {integrity: sha512-5g7E2PHNK2uvoD5bASBD9aelm44nf1w4I5FEI7MPHLWcCSrR8JragXZWgKPXk5i2FU3JFfa6CGZLw2RrGBHs2Q==}
    cpu: [ia32]
    os: [win32]

  '@rollup/rollup-win32-x64-msvc@4.34.4':
    resolution: {integrity: sha512-p0scwGkR4kZ242xLPBuhSckrJ734frz6v9xZzD+kHVYRAkSUmdSLCIJRfql6H5//aF8Q10K+i7q8DiPfZp0b7A==}
    cpu: [x64]
    os: [win32]

  '@scure/base@1.1.9':
    resolution: {integrity: sha512-8YKhl8GHiNI/pU2VMaofa2Tor7PJRAjwQLBBuilkJ9L5+13yVbC7JO/wS7piioAvPSwR3JKM1IJ/u4xQzbcXKg==}

  '@scure/base@1.2.1':
    resolution: {integrity: sha512-DGmGtC8Tt63J5GfHgfl5CuAXh96VF/LD8K9Hr/Gv0J2lAoRGlPOMpqMpMbCTOoOJMZCk2Xt+DskdDyn6dEFdzQ==}

  '@scure/base@1.2.4':
    resolution: {integrity: sha512-5Yy9czTO47mqz+/J8GM6GIId4umdCk1wc1q8rKERQulIoc8VP9pzDcghv10Tl2E7R96ZUx/PhND3ESYUQX8NuQ==}

  '@scure/base@1.2.6':
    resolution: {integrity: sha512-g/nm5FgUa//MCj1gV09zTJTaM6KBAHqLN907YVQqf7zC49+DcO4B1so4ZX07Ef10Twr6nuqYEH9GEggFXA4Fmg==}

  '@scure/bip32@1.3.2':
    resolution: {integrity: sha512-N1ZhksgwD3OBlwTv3R6KFEcPojl/W4ElJOeCZdi+vuI5QmTFwLq3OFf2zd2ROpKvxFdgZ6hUpb0dx9bVNEwYCA==}

  '@scure/bip32@1.4.0':
    resolution: {integrity: sha512-sVUpc0Vq3tXCkDGYVWGIZTRfnvu8LoTDaev7vbwh0omSvVORONr960MQWdKqJDCReIEmTj3PAr73O3aoxz7OPg==}

  '@scure/bip32@1.6.2':
    resolution: {integrity: sha512-t96EPDMbtGgtb7onKKqxRLfE5g05k7uHnHRM2xdE6BP/ZmxaLtPek4J4KfVn/90IQNrU1IOAqMgiDtUdtbe3nw==}

  '@scure/bip32@1.7.0':
    resolution: {integrity: sha512-E4FFX/N3f4B80AKWp5dP6ow+flD1LQZo/w8UnLGYZO674jS6YnYeepycOOksv+vLPSpgN35wgKgy+ybfTb2SMw==}

  '@scure/bip39@1.2.1':
    resolution: {integrity: sha512-Z3/Fsz1yr904dduJD0NpiyRHhRYHdcnyh73FZWiV+/qhWi83wNJ3NWolYqCEN+ZWsUz2TWwajJggcRE9r1zUYg==}

  '@scure/bip39@1.3.0':
    resolution: {integrity: sha512-disdg7gHuTDZtY+ZdkmLpPCk7fxZSu3gBiEGuoC1XYxv9cGx3Z6cpTggCgW6odSOOIXCiDjuGejW+aJKCY/pIQ==}

  '@scure/bip39@1.5.4':
    resolution: {integrity: sha512-TFM4ni0vKvCfBpohoh+/lY05i9gRbSwXWngAsF4CABQxoaOHijxuaZ2R6cStDQ5CHtHO9aGJTr4ksVJASRRyMA==}

  '@scure/bip39@1.6.0':
    resolution: {integrity: sha512-+lF0BbLiJNwVlev4eKelw1WWLaiKXw7sSl8T6FvBlWkdX+94aGJ4o8XjUdlyhTCjd8c+B3KT3JfS8P0bLRNU6A==}

  '@scure/starknet@1.1.0':
    resolution: {integrity: sha512-83g3M6Ix2qRsPN4wqLDqiRZ2GBNbjVWfboJE/9UjfG+MHr6oDSu/CWgy8hsBSJejr09DkkL+l0Ze4KVrlCIdtQ==}

  '@socket.io/component-emitter@3.1.2':
    resolution: {integrity: sha512-9BCxFwvbGg/RsZK9tjXd8s4UcwR0MWeFQ1XEKIQVVvAGJyINdrqKMcTRyLoK8Rse1GjzLV9cwjWV1olXRWEXVA==}

  '@solana/buffer-layout@4.0.1':
    resolution: {integrity: sha512-E1ImOIAD1tBZFRdjeM4/pzTiTApC0AOBGwyAMS4fwIodCWArzJ3DWdoh8cKxeFM2fElkxBh2Aqts1BPC373rHA==}
    engines: {node: '>=5.10'}

  '@solana/codecs-core@2.1.1':
    resolution: {integrity: sha512-iPQW3UZ2Vi7QFBo2r9tw0NubtH8EdrhhmZulx6lC8V5a+qjaxovtM/q/UW2BTNpqqHLfO0tIcLyBLrNH4HTWPg==}
    engines: {node: '>=20.18.0'}
    peerDependencies:
      typescript: '>=5.3.3'

  '@solana/codecs-numbers@2.1.1':
    resolution: {integrity: sha512-m20IUPJhPUmPkHSlZ2iMAjJ7PaYUvlMtFhCQYzm9BEBSI6OCvXTG3GAPpAnSGRBfg5y+QNqqmKn4QHU3B6zzCQ==}
    engines: {node: '>=20.18.0'}
    peerDependencies:
      typescript: '>=5.3.3'

  '@solana/errors@2.1.1':
    resolution: {integrity: sha512-sj6DaWNbSJFvLzT8UZoabMefQUfSW/8tXK7NTiagsDmh+Q87eyQDDC9L3z+mNmx9b6dEf6z660MOIplDD2nfEw==}
    engines: {node: '>=20.18.0'}
    hasBin: true
    peerDependencies:
      typescript: '>=5.3.3'

  '@solana/web3.js@1.98.2':
    resolution: {integrity: sha512-BqVwEG+TaG2yCkBMbD3C4hdpustR4FpuUFRPUmqRZYYlPI9Hg4XMWxHWOWRzHE9Lkc9NDjzXFX7lDXSgzC7R1A==}

  '@starknet-io/get-starknet-core@4.0.7':
    resolution: {integrity: sha512-ocwQTdDvGa+0CvjGygyaTuFkda2R82dofydts8uXr9p0Diy/bmYW1fkuqJfi1nC5M+YcvvuEpl6wFvwXM1og5w==}

  '@starknet-io/get-starknet@4.0.7':
    resolution: {integrity: sha512-env/ZN5EmDJ6vDtIgjOjsEvvzdKBDaWZ0aLe79IVJ7lq2icqKbX86yR1/CUf4AU31AFYZHWZ3daOaGFT4nHSUQ==}

  '@starknet-io/types-js@0.7.10':
    resolution: {integrity: sha512-1VtCqX4AHWJlRRSYGSn+4X1mqolI1Tdq62IwzoU2vUuEE72S1OlEeGhpvd6XsdqXcfHmVzYfj8k1XtKBQqwo9w==}

  '@starknet-react/chains@3.1.3':
    resolution: {integrity: sha512-b16VQyxqZXfiVmlKEkjfg+Oj8fdSnGWh1KU87O/unn6NpmaD9h511az1Cs6aW/j3qCIF1o5CrqfEnU1NWV7MVA==}

  '@starknet-react/core@3.7.4':
    resolution: {integrity: sha512-fHzme/TLyhSJRIo3BarehiM23IZuLeT0gM0jvTpz8w1/Y05tK+UywpyzBCkueU+iHEwhopsICDpOFhFtqaJJZA==}
    peerDependencies:
      get-starknet-core: ^4.0.0
      react: ^18.0
      starknet: ^6.11.0

  '@swc/core-darwin-arm64@1.11.29':
    resolution: {integrity: sha512-whsCX7URzbuS5aET58c75Dloby3Gtj/ITk2vc4WW6pSDQKSPDuONsIcZ7B2ng8oz0K6ttbi4p3H/PNPQLJ4maQ==}
    engines: {node: '>=10'}
    cpu: [arm64]
    os: [darwin]

  '@swc/core-darwin-x64@1.11.29':
    resolution: {integrity: sha512-S3eTo/KYFk+76cWJRgX30hylN5XkSmjYtCBnM4jPLYn7L6zWYEPajsFLmruQEiTEDUg0gBEWLMNyUeghtswouw==}
    engines: {node: '>=10'}
    cpu: [x64]
    os: [darwin]

  '@swc/core-linux-arm-gnueabihf@1.11.29':
    resolution: {integrity: sha512-o9gdshbzkUMG6azldHdmKklcfrcMx+a23d/2qHQHPDLUPAN+Trd+sDQUYArK5Fcm7TlpG4sczz95ghN0DMkM7g==}
    engines: {node: '>=10'}
    cpu: [arm]
    os: [linux]

  '@swc/core-linux-arm64-gnu@1.11.29':
    resolution: {integrity: sha512-sLoaciOgUKQF1KX9T6hPGzvhOQaJn+3DHy4LOHeXhQqvBgr+7QcZ+hl4uixPKTzxk6hy6Hb0QOvQEdBAAR1gXw==}
    engines: {node: '>=10'}
    cpu: [arm64]
    os: [linux]

  '@swc/core-linux-arm64-musl@1.11.29':
    resolution: {integrity: sha512-PwjB10BC0N+Ce7RU/L23eYch6lXFHz7r3NFavIcwDNa/AAqywfxyxh13OeRy+P0cg7NDpWEETWspXeI4Ek8otw==}
    engines: {node: '>=10'}
    cpu: [arm64]
    os: [linux]

  '@swc/core-linux-x64-gnu@1.11.29':
    resolution: {integrity: sha512-i62vBVoPaVe9A3mc6gJG07n0/e7FVeAvdD9uzZTtGLiuIfVfIBta8EMquzvf+POLycSk79Z6lRhGPZPJPYiQaA==}
    engines: {node: '>=10'}
    cpu: [x64]
    os: [linux]

  '@swc/core-linux-x64-musl@1.11.29':
    resolution: {integrity: sha512-YER0XU1xqFdK0hKkfSVX1YIyCvMDI7K07GIpefPvcfyNGs38AXKhb2byySDjbVxkdl4dycaxxhRyhQ2gKSlsFQ==}
    engines: {node: '>=10'}
    cpu: [x64]
    os: [linux]

  '@swc/core-win32-arm64-msvc@1.11.29':
    resolution: {integrity: sha512-po+WHw+k9g6FAg5IJ+sMwtA/fIUL3zPQ4m/uJgONBATCVnDDkyW6dBA49uHNVtSEvjvhuD8DVWdFP847YTcITw==}
    engines: {node: '>=10'}
    cpu: [arm64]
    os: [win32]

  '@swc/core-win32-ia32-msvc@1.11.29':
    resolution: {integrity: sha512-h+NjOrbqdRBYr5ItmStmQt6x3tnhqgwbj9YxdGPepbTDamFv7vFnhZR0YfB3jz3UKJ8H3uGJ65Zw1VsC+xpFkg==}
    engines: {node: '>=10'}
    cpu: [ia32]
    os: [win32]

  '@swc/core-win32-x64-msvc@1.11.29':
    resolution: {integrity: sha512-Q8cs2BDV9wqDvqobkXOYdC+pLUSEpX/KvI0Dgfun1F+LzuLotRFuDhrvkU9ETJA6OnD2+Fn/ieHgloiKA/Mn/g==}
    engines: {node: '>=10'}
    cpu: [x64]
    os: [win32]

  '@swc/core@1.11.29':
    resolution: {integrity: sha512-g4mThMIpWbNhV8G2rWp5a5/Igv8/2UFRJx2yImrLGMgrDDYZIopqZ/z0jZxDgqNA1QDx93rpwNF7jGsxVWcMlA==}
    engines: {node: '>=10'}
    peerDependencies:
      '@swc/helpers': '>=0.5.17'
    peerDependenciesMeta:
      '@swc/helpers':
        optional: true

  '@swc/counter@0.1.3':
    resolution: {integrity: sha512-e2BR4lsJkkRlKZ/qCHPw9ZaSxc0MVUd7gtbtaB7aMvHeJVYe8sOB8DBZkP2DtISHGSku9sCK6T6cnY0CtXrOCQ==}

  '@swc/helpers@0.5.17':
    resolution: {integrity: sha512-5IKx/Y13RsYd+sauPb2x+U/xZikHjolzfuDgTAl/Tdf3Q8rslRvC19NKDLgAJQ6wsqADk10ntlv08nPFw/gO/A==}

  '@swc/types@0.1.21':
    resolution: {integrity: sha512-2YEtj5HJVbKivud9N4bpPBAyZhj4S2Ipe5LkUG94alTpr7in/GU/EARgPAd3BwU+YOmFVJC2+kjqhGRi3r0ZpQ==}

  '@tanstack/query-core@5.66.0':
    resolution: {integrity: sha512-J+JeBtthiKxrpzUu7rfIPDzhscXF2p5zE/hVdrqkACBP8Yu0M96mwJ5m/8cPPYQE9aRNvXztXHlNwIh4FEeMZw==}

  '@tanstack/react-query@5.66.0':
    resolution: {integrity: sha512-z3sYixFQJe8hndFnXgWu7C79ctL+pI0KAelYyW+khaNJ1m22lWrhJU2QrsTcRKMuVPtoZvfBYrTStIdKo+x0Xw==}
    peerDependencies:
      react: ^18 || ^19

  '@telegram-apps/bridge@1.9.2':
    resolution: {integrity: sha512-SJLcNWLXhbbZr9MiqFH/g2ceuitSJKMxUIZysK4zUNyTUNuonrQG80Q/yrO+XiNbKUj8WdDNM86NBARhuyyinQ==}

  '@telegram-apps/navigation@1.0.13':
    resolution: {integrity: sha512-TsUueB5LQp77GQHoMa93nq26Uw7GJjrFCPbyseMVU7aBBxAc+8CV2IYytRwcVp5sv/q7ThK5X4JaKn2V1yBHDQ==}

  '@telegram-apps/sdk@2.11.3':
    resolution: {integrity: sha512-KdULzgRe1gcR8B3Z/t3hQrEaDmLGrfsL2IePtPP6ehtMn5tT0uPfnjtDLjDNQMyI7D4Tv2ZOzvDx45wOhhreXg==}

  '@telegram-apps/signals@1.1.1':
    resolution: {integrity: sha512-vz37r8lemGpPzDiBRfqpXYBynzmy3SFnY6zfHsTZABTYYt0b0WQZyU5mFDqqqugGhka78Gy11xmr9csgy4YgGA==}

  '@telegram-apps/toolkit@1.1.1':
    resolution: {integrity: sha512-+vhKx6ngfvjyTE6Xagl3z1TPVbfx5s7xAkcYzCdHYUo6T60jLIqLgyZMcI1UPoIAMuMu1pHoO+p8QNCj/+tFmw==}

  '@telegram-apps/transformers@1.2.2':
    resolution: {integrity: sha512-vvMwXckd1D7Ozc0h66PSUwF5QLrRV9HlGJFFeBuUex8QEk5mSPtsJkLiqB8aBbwuFDa91+TUSM/CxqPZO/e9YQ==}

  '@telegram-apps/types@1.2.1':
    resolution: {integrity: sha512-so4HLh7clur0YyMthi9KVIgWoGpZdXlFOuQjk3+Q5NAvJZ11nAheBSwPlGw/Ko92+zwvrSBE/lQyN2+p17RP+w==}

  '@trpc/client@10.45.2':
    resolution: {integrity: sha512-ykALM5kYWTLn1zYuUOZ2cPWlVfrXhc18HzBDyRhoPYN0jey4iQHEFSEowfnhg1RvYnrAVjNBgHNeSAXjrDbGwg==}
    peerDependencies:
      '@trpc/server': 10.45.2

  '@trpc/server@10.45.2':
    resolution: {integrity: sha512-wOrSThNNE4HUnuhJG6PfDRp4L2009KDVxsd+2VYH8ro6o/7/jwYZ8Uu5j+VaW+mOmc8EHerHzGcdbGNQSAUPgg==}

  '@turnkey/api-key-stamper@0.4.5':
    resolution: {integrity: sha512-8UeYt/2WtMrK2uSFzjiRXdCVc9SmKlMVuA4f1Z+SlxcsW0wlEpNM/7bd8N4VVVAjoE8Yy50Vhk3ylfQFtlaKsQ==}
    engines: {node: '>=18.0.0'}

  '@turnkey/crypto@2.3.1':
    resolution: {integrity: sha512-fHKCw0inuThEKIpZnC8pvz16egZHf08wES0LdSkM9XrGDcI7p0eqF7nAHgfAMW/0qNVZD8AKW+g/5O97HBwZ4w==}
    engines: {node: '>=18.0.0'}

  '@turnkey/encoding@0.4.0':
    resolution: {integrity: sha512-ptLgcpWVt34KTPx0omF2QLJrosW6I//clCJ4G2+yngYFCzrdR0yBchV/BOcfME67mK1v3MmauyXl9AAnQTmB4Q==}
    engines: {node: '>=18.0.0'}

  '@turnkey/http@3.3.0':
    resolution: {integrity: sha512-m1fP8aqQcI0U4j7Gw89UbavavWP7AWGmEwoJl5nBhQz88mtep6AaZTsUoDDU4HXg0ch+aQ2/lfl0KFPp8s2u5Q==}
    engines: {node: '>=16.0.0'}

  '@turnkey/iframe-stamper@2.5.0':
    resolution: {integrity: sha512-XjntbA5CNjxGRH+loceAlVLL9PG9Q4Y7p5zjBm4DeKclhD6lpUl9h8INArMEXIFbfLwLjjS6Q+SmQG4BHvNY6A==}
    engines: {node: '>=18.0.0'}

  '@turnkey/sdk-browser@4.3.0':
    resolution: {integrity: sha512-TBAWpA28PnqFOeD45Ljzq5RfAabj4Qlnvo1toekt+yf6Hk13Nsm6R5FEiivHUMSNcvKBAwf5uQg+MPbBndymlQ==}
    engines: {node: '>=18.0.0'}

  '@turnkey/wallet-stamper@1.0.3':
    resolution: {integrity: sha512-8DMuVPo/u8oIzQ9Snsa24ZQO3nXVMfpd8VnlPLfZiW2jjZHPFyBGCJOYSArfp+W2xoudpYVu//JElBAVxk/u/g==}

  '@turnkey/webauthn-stamper@0.5.0':
    resolution: {integrity: sha512-iUbTUwD4f4ibdLy5PWWb7ITEz4S4VAP9/mNjFhoRY3cKVVTDfmykrVTKjPOIHWzDgAmLtgrLvySIIC9ZBVENBw==}
    engines: {node: '>=18.0.0'}

  '@tweenjs/tween.js@23.1.3':
    resolution: {integrity: sha512-vJmvvwFxYuGnF2axRtPYocag6Clbb5YS7kLL+SO/TeVFzHqDIWrNKYtcsPMibjDx9O+bu+psAy9NKfWklassUA==}

  '@types/babel__core@7.20.5':
    resolution: {integrity: sha512-qoQprZvz5wQFJwMDqeseRXWv3rqMvhgpbXFfVyWhbx9X47POIA6i/+dXefEmZKoAgOaTdaIgNSMqMIU61yRyzA==}

  '@types/babel__generator@7.6.8':
    resolution: {integrity: sha512-ASsj+tpEDsEiFr1arWrlN6V3mdfjRMZt6LtK/Vp/kreFLnr5QH5+DhvD5nINYZXzwJvXeGq+05iUXcAzVrqWtw==}

  '@types/babel__template@7.4.4':
    resolution: {integrity: sha512-h/NUaSyG5EyxBIp8YRxo4RMe2/qQgvyowRwVMzhYhBCONbW8PUsg4lkFMrhgZhUe5z3L3MiLDuvyJ/CaPa2A8A==}

  '@types/babel__traverse@7.20.6':
    resolution: {integrity: sha512-r1bzfrm0tomOI8g1SzvCaQHo6Lcv6zu0EA+W2kHrt8dyrHQxGzBBL4kdkzIS+jBMV+EYcMAEAqXqYaLJq5rOZg==}

  '@types/connect@3.4.38':
    resolution: {integrity: sha512-K6uROf1LD88uDQqJCktA4yzL1YYAK6NgfsI0v/mTgyPKWsX1CnJ0XPSDhViejru1GcRkLWb8RlzFYJRqGUbaug==}

  '@types/debug@4.1.12':
    resolution: {integrity: sha512-vIChWdVG3LG1SMxEvI/AK+FWJthlrqlTu7fbrlywTkkaONwk/UAGaULXRlf8vkzFBLVm0zkMdCquhL5aOjhXPQ==}

  '@types/draco3d@1.4.10':
    resolution: {integrity: sha512-AX22jp8Y7wwaBgAixaSvkoG4M/+PlAcm3Qs4OW8yT9DM4xUpWKeFhLueTAyZF39pviAdcDdeJoACapiAceqNcw==}

  '@types/estree@1.0.6':
    resolution: {integrity: sha512-AYnb1nQyY49te+VRAVgmzfcgjYS91mY5P0TKUDCLEM+gNnA+3T6rWITXRLYCpahpqSQbN5cE+gHpnPyXjHWxcw==}

  '@types/json-schema@7.0.15':
    resolution: {integrity: sha512-5+fP8P8MFNC+AyZCDxrB2pkZFPGzqQWUzpSeuuVLvm8VMcorNYavBqoFcxK8bQz4Qsbn4oUEEem4wDLfcysGHA==}

  '@types/ms@2.1.0':
    resolution: {integrity: sha512-GsCCIZDE/p3i96vtEqx+7dBUGXrc7zeSK3wwPHIaRThS+9OhWIXRqzs4d6k1SVU8g91DrNRWxWUGhp5KXQb2VA==}

  '@types/node@12.20.55':
    resolution: {integrity: sha512-J8xLz7q2OFulZ2cyGTLE1TbbZcjpno7FaN6zdJNrgAdrJ+DZzh/uFR6YrTb4C+nXakvud8Q4+rbhoIWlYQbUFQ==}

  '@types/node@22.15.32':
    resolution: {integrity: sha512-3jigKqgSjsH6gYZv2nEsqdXfZqIFGAV36XYYjf9KGZ3PSG+IhLecqPnI310RvjutyMwifE2hhhNEklOUrvx/wA==}

  '@types/node@22.7.5':
    resolution: {integrity: sha512-jML7s2NAzMWc//QSJ1a3prpk78cOPchGvXJsC3C6R6PSMoooztvRVQEz89gmBTBY1SPMaqo5teB4uNHPdetShQ==}

  '@types/offscreencanvas@2019.7.3':
    resolution: {integrity: sha512-ieXiYmgSRXUDeOntE1InxjWyvEelZGP63M+cGuquuRLuIKKT1osnkXjxev9B7d1nXSug5vpunx+gNlbVxMlC9A==}

  '@types/prop-types@15.7.14':
    resolution: {integrity: sha512-gNMvNH49DJ7OJYv+KAKn0Xp45p8PLl6zo2YnvDIbTd4J6MER2BmWN49TG7n9LvkyihINxeKW8+3bfS2yDC9dzQ==}

  '@types/react-dom@18.3.7':
    resolution: {integrity: sha512-MEe3UeoENYVFXzoXEWsvcpg6ZvlrFNlOQ7EOsvhI3CfAXwzPfO8Qwuxd40nepsYKqyyVQnTdEfv68q91yLcKrQ==}
    peerDependencies:
      '@types/react': ^18.0.0

  '@types/react-reconciler@0.26.7':
    resolution: {integrity: sha512-mBDYl8x+oyPX/VBb3E638N0B7xG+SPk/EAMcVPeexqus/5aTpTphQi0curhhshOqRrc9t6OPoJfEUkbymse/lQ==}

  '@types/react-reconciler@0.28.9':
    resolution: {integrity: sha512-HHM3nxyUZ3zAylX8ZEyrDNd2XZOnQ0D5XfunJF5FLQnZbHHYq4UWvW1QfelQNXv1ICNkwYhfxjwfnqivYB6bFg==}
    peerDependencies:
      '@types/react': '*'

  '@types/react@18.3.23':
    resolution: {integrity: sha512-/LDXMQh55EzZQ0uVAZmKKhfENivEvWz6E+EYzh+/MCjMhNsotd+ZHhBGIjFDTi6+fz0OhQQQLbTgdQIxxCsC0w==}

  '@types/stats.js@0.17.4':
    resolution: {integrity: sha512-jIBvWWShCvlBqBNIZt0KAshWpvSjhkwkEu4ZUcASoAvhmrgAUI2t1dXrjSL4xXVLB4FznPrIsX3nKXFl/Dt4vA==}

  '@types/three@0.177.0':
    resolution: {integrity: sha512-/ZAkn4OLUijKQySNci47lFO+4JLE1TihEjsGWPUT+4jWqxtwOPPEwJV1C3k5MEx0mcBPCdkFjzRzDOnHEI1R+A==}

  '@types/trusted-types@2.0.7':
    resolution: {integrity: sha512-ScaPdn1dQczgbl0QFTeTOmVHFULt394XJgOQNoyVhZ6r2vLnMLJfBPd53SB52T/3G36VI1/g2MZaX0cwDuXsfw==}

  '@types/uuid@10.0.0':
    resolution: {integrity: sha512-7gqG38EyHgyP1S+7+xomFtL+ZNHcKv6DwNaCZmJmo1vgMugyF3TCnXVg4t1uk89mLNwnLtnY3TpOpCOyp1/xHQ==}

  '@types/uuid@8.3.4':
    resolution: {integrity: sha512-c/I8ZRb51j+pYGAu5CrFMRxqZ2ke4y2grEBO5AUjgSkSk+qT2Ea+OdWElz/OiMf5MNpn2b17kuVBwZLQJXzihw==}

  '@types/webxr@0.5.22':
    resolution: {integrity: sha512-Vr6Stjv5jPRqH690f5I5GLjVk8GSsoQSYJ2FVd/3jJF7KaqfwPi3ehfBS96mlQ2kPCwZaX6U0rG2+NGHBKkA/A==}

  '@types/ws@7.4.7':
    resolution: {integrity: sha512-JQbbmxZTZehdc2iszGKs5oC3NFnjeay7mtAWrdt7qNtAVK0g19muApzAy4bm9byz79xa2ZnO/BOBC2R8RC5Lww==}

  '@types/ws@8.18.1':
    resolution: {integrity: sha512-ThVF6DCVhA8kUGy+aazFQ4kXQ7E1Ty7A3ypFOe0IcJV8O/M511G99AW24irKrW56Wt44yG9+ij8FaqoBGkuBXg==}

  '@typescript-eslint/eslint-plugin@8.34.1':
    resolution: {integrity: sha512-STXcN6ebF6li4PxwNeFnqF8/2BNDvBupf2OPx2yWNzr6mKNGF7q49VM00Pz5FaomJyqvbXpY6PhO+T9w139YEQ==}
    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
    peerDependencies:
      '@typescript-eslint/parser': ^8.34.1
      eslint: ^8.57.0 || ^9.0.0
      typescript: '>=4.8.4 <5.9.0'

  '@typescript-eslint/parser@8.34.1':
    resolution: {integrity: sha512-4O3idHxhyzjClSMJ0a29AcoK0+YwnEqzI6oz3vlRf3xw0zbzt15MzXwItOlnr5nIth6zlY2RENLsOPvhyrKAQA==}
    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
    peerDependencies:
      eslint: ^8.57.0 || ^9.0.0
      typescript: '>=4.8.4 <5.9.0'

  '@typescript-eslint/project-service@8.34.1':
    resolution: {integrity: sha512-nuHlOmFZfuRwLJKDGQOVc0xnQrAmuq1Mj/ISou5044y1ajGNp2BNliIqp7F2LPQ5sForz8lempMFCovfeS1XoA==}
    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
    peerDependencies:
      typescript: '>=4.8.4 <5.9.0'

  '@typescript-eslint/scope-manager@8.34.1':
    resolution: {integrity: sha512-beu6o6QY4hJAgL1E8RaXNC071G4Kso2MGmJskCFQhRhg8VOH/FDbC8soP8NHN7e/Hdphwp8G8cE6OBzC8o41ZA==}
    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}

  '@typescript-eslint/tsconfig-utils@8.34.1':
    resolution: {integrity: sha512-K4Sjdo4/xF9NEeA2khOb7Y5nY6NSXBnod87uniVYW9kHP+hNlDV8trUSFeynA2uxWam4gIWgWoygPrv9VMWrYg==}
    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
    peerDependencies:
      typescript: '>=4.8.4 <5.9.0'

  '@typescript-eslint/type-utils@8.34.1':
    resolution: {integrity: sha512-Tv7tCCr6e5m8hP4+xFugcrwTOucB8lshffJ6zf1mF1TbU67R+ntCc6DzLNKM+s/uzDyv8gLq7tufaAhIBYeV8g==}
    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
    peerDependencies:
      eslint: ^8.57.0 || ^9.0.0
      typescript: '>=4.8.4 <5.9.0'

  '@typescript-eslint/types@8.34.1':
    resolution: {integrity: sha512-rjLVbmE7HR18kDsjNIZQHxmv9RZwlgzavryL5Lnj2ujIRTeXlKtILHgRNmQ3j4daw7zd+mQgy+uyt6Zo6I0IGA==}
    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}

  '@typescript-eslint/typescript-estree@8.34.1':
    resolution: {integrity: sha512-rjCNqqYPuMUF5ODD+hWBNmOitjBWghkGKJg6hiCHzUvXRy6rK22Jd3rwbP2Xi+R7oYVvIKhokHVhH41BxPV5mA==}
    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
    peerDependencies:
      typescript: '>=4.8.4 <5.9.0'

  '@typescript-eslint/utils@8.34.1':
    resolution: {integrity: sha512-mqOwUdZ3KjtGk7xJJnLbHxTuWVn3GO2WZZuM+Slhkun4+qthLdXx32C8xIXbO1kfCECb3jIs3eoxK3eryk7aoQ==}
    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
    peerDependencies:
      eslint: ^8.57.0 || ^9.0.0
      typescript: '>=4.8.4 <5.9.0'

  '@typescript-eslint/visitor-keys@8.34.1':
    resolution: {integrity: sha512-xoh5rJ+tgsRKoXnkBPFRLZ7rjKM0AfVbC68UZ/ECXoDbfggb9RbEySN359acY1vS3qZ0jVTVWzbtfapwm5ztxw==}
    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}

  '@use-gesture/core@10.3.1':
    resolution: {integrity: sha512-WcINiDt8WjqBdUXye25anHiNxPc0VOrlT8F6LLkU6cycrOGUDyY/yyFmsg3k8i5OLvv25llc0QC45GhR/C8llw==}

  '@use-gesture/react@10.3.1':
    resolution: {integrity: sha512-Yy19y6O2GJq8f7CHf7L0nxL8bf4PZCPaVOCgJrusOeFHY1LvHgYXnmnXg6N5iwAnbgbZCDjo60SiM6IPJi9C5g==}
    peerDependencies:
      react: '>= 16.8.0'

  '@vitejs/plugin-react@4.6.0':
    resolution: {integrity: sha512-5Kgff+m8e2PB+9j51eGHEpn5kUzRKH2Ry0qGoe8ItJg7pqnkPrYPkDQZGgGmTa0EGarHrkjLvOdU3b1fzI8otQ==}
    engines: {node: ^14.18.0 || >=16.0.0}
    peerDependencies:
      vite: ^4.2.0 || ^5.0.0 || ^6.0.0 || ^7.0.0-beta.0

  '@walletconnect/core@2.21.0':
    resolution: {integrity: sha512-o6R7Ua4myxR8aRUAJ1z3gT9nM+jd2B2mfamu6arzy1Cc6vi10fIwFWb6vg3bC8xJ6o9H3n/cN5TOW3aA9Y1XVw==}
    engines: {node: '>=18'}

  '@walletconnect/core@2.21.3':
    resolution: {integrity: sha512-kMjo5bI6VOsFe/DmxgeTMxCdAIfSzUzG8kCDrpxUXrTnMgaU4H2JBW+tGn7KP/YY1x49+lErZsN5JiQsE5n6Rw==}
    engines: {node: '>=18'}

  '@walletconnect/environment@1.0.1':
    resolution: {integrity: sha512-T426LLZtHj8e8rYnKfzsw1aG6+M0BT1ZxayMdv/p8yM0MU+eJDISqNY3/bccxRr4LrF9csq02Rhqt08Ibl0VRg==}

  '@walletconnect/ethereum-provider@2.21.3':
    resolution: {integrity: sha512-8LY7dpp994ZZc86/iIzOrNPhzuO1TdvNPDGnmCqY17XhR9aqhsrope/WupjpygeBCidBd8mlqx/hG8Rim6vsnQ==}

  '@walletconnect/events@1.0.1':
    resolution: {integrity: sha512-NPTqaoi0oPBVNuLv7qPaJazmGHs5JGyO8eEAk5VGKmJzDR7AHzD4k6ilox5kxk1iwiOnFopBOOMLs86Oa76HpQ==}

  '@walletconnect/heartbeat@1.2.2':
    resolution: {integrity: sha512-uASiRmC5MwhuRuf05vq4AT48Pq8RMi876zV8rr8cV969uTOzWdB/k+Lj5yI2PBtB1bGQisGen7MM1GcZlQTBXw==}

  '@walletconnect/jsonrpc-http-connection@1.0.8':
    resolution: {integrity: sha512-+B7cRuaxijLeFDJUq5hAzNyef3e3tBDIxyaCNmFtjwnod5AGis3RToNqzFU33vpVcxFhofkpE7Cx+5MYejbMGw==}

  '@walletconnect/jsonrpc-provider@1.0.14':
    resolution: {integrity: sha512-rtsNY1XqHvWj0EtITNeuf8PHMvlCLiS3EjQL+WOkxEOA4KPxsohFnBDeyPYiNm4ZvkQdLnece36opYidmtbmow==}

  '@walletconnect/jsonrpc-types@1.0.4':
    resolution: {integrity: sha512-P6679fG/M+wuWg9TY8mh6xFSdYnFyFjwFelxyISxMDrlbXokorEVXYOxiqEbrU3x1BmBoCAJJ+vtEaEoMlpCBQ==}

  '@walletconnect/jsonrpc-utils@1.0.8':
    resolution: {integrity: sha512-vdeb03bD8VzJUL6ZtzRYsFMq1eZQcM3EAzT0a3st59dyLfJ0wq+tKMpmGH7HlB7waD858UWgfIcudbPFsbzVdw==}

  '@walletconnect/jsonrpc-ws-connection@1.0.16':
    resolution: {integrity: sha512-G81JmsMqh5nJheE1mPst1W0WfVv0SG3N7JggwLLGnI7iuDZJq8cRJvQwLGKHn5H1WTW7DEPCo00zz5w62AbL3Q==}

  '@walletconnect/keyvaluestorage@1.1.1':
    resolution: {integrity: sha512-V7ZQq2+mSxAq7MrRqDxanTzu2RcElfK1PfNYiaVnJgJ7Q7G7hTVwF8voIBx92qsRyGHZihrwNPHuZd1aKkd0rA==}
    peerDependencies:
      '@react-native-async-storage/async-storage': 1.x
    peerDependenciesMeta:
      '@react-native-async-storage/async-storage':
        optional: true

  '@walletconnect/logger@2.1.2':
    resolution: {integrity: sha512-aAb28I3S6pYXZHQm5ESB+V6rDqIYfsnHaQyzFbwUUBFY4H0OXx/YtTl8lvhUNhMMfb9UxbwEBS253TlXUYJWSw==}

  '@walletconnect/relay-api@1.0.11':
    resolution: {integrity: sha512-tLPErkze/HmC9aCmdZOhtVmYZq1wKfWTJtygQHoWtgg722Jd4homo54Cs4ak2RUFUZIGO2RsOpIcWipaua5D5Q==}

  '@walletconnect/relay-auth@1.1.0':
    resolution: {integrity: sha512-qFw+a9uRz26jRCDgL7Q5TA9qYIgcNY8jpJzI1zAWNZ8i7mQjaijRnWFKsCHAU9CyGjvt6RKrRXyFtFOpWTVmCQ==}

  '@walletconnect/safe-json@1.0.2':
    resolution: {integrity: sha512-Ogb7I27kZ3LPC3ibn8ldyUr5544t3/STow9+lzz7Sfo808YD7SBWk7SAsdBFlYgP2zDRy2hS3sKRcuSRM0OTmA==}

  '@walletconnect/sign-client@2.21.0':
    resolution: {integrity: sha512-z7h+PeLa5Au2R591d/8ZlziE0stJvdzP9jNFzFolf2RG/OiXulgFKum8PrIyXy+Rg2q95U9nRVUF9fWcn78yBA==}

  '@walletconnect/sign-client@2.21.3':
    resolution: {integrity: sha512-Z6sTCBrset7u5CNjPWlqQuWxmLL2WlGLZYKoB7g/Nvg8wLWo0VaaNeTtNsuopLfJeqdV9/4nV/qHE4xXs2nMIQ==}

  '@walletconnect/time@1.0.2':
    resolution: {integrity: sha512-uzdd9woDcJ1AaBZRhqy5rNC9laqWGErfc4dxA9a87mPdKOgWMD85mcFo9dIYIts/Jwocfwn07EC6EzclKubk/g==}

  '@walletconnect/types@2.21.0':
    resolution: {integrity: sha512-ll+9upzqt95ZBWcfkOszXZkfnpbJJ2CmxMfGgE5GmhdxxxCcO5bGhXkI+x8OpiS555RJ/v/sXJYMSOLkmu4fFw==}

  '@walletconnect/types@2.21.3':
    resolution: {integrity: sha512-4fDchSb6q/YIuUokaIvp+/tpWtmiL+dOWuKUCq0+w81R0unsQzn4Zc57Xh+TkNAlBGSJmZ44ZQPevN4vaTnjwg==}

  '@walletconnect/universal-provider@2.21.0':
    resolution: {integrity: sha512-mtUQvewt+X0VBQay/xOJBvxsB3Xsm1lTwFjZ6WUwSOTR1X+FNb71hSApnV5kbsdDIpYPXeQUbGt2se1n5E5UBg==}

  '@walletconnect/universal-provider@2.21.3':
    resolution: {integrity: sha512-Tlkfbtp5oNvSb9yEUl3Fxs0A1y8kLbGJOq7F3zyjVu2EvG96cMqqmlYlPRsi55VDn3scmw8zr2zN+BMsMAuDPw==}

  '@walletconnect/utils@2.21.0':
    resolution: {integrity: sha512-zfHLiUoBrQ8rP57HTPXW7rQMnYxYI4gT9yTACxVW6LhIFROTF6/ytm5SKNoIvi4a5nX5dfXG4D9XwQUCu8Ilig==}

  '@walletconnect/utils@2.21.3':
    resolution: {integrity: sha512-LHxYX69vG7aPCQB9YT1F8ibwAfRNYwqCEBMplrmquAX+l4lMHTpXvsFF/a5NWFT23DKzbWZ4VTfQTDZ//XJKpg==}

  '@walletconnect/window-getters@1.0.1':
    resolution: {integrity: sha512-vHp+HqzGxORPAN8gY03qnbTMnhqIwjeRJNOMOAzePRg4xVEEE2WvYsI9G2NMjOknA8hnuYbU3/hwLcKbjhc8+Q==}

  '@walletconnect/window-metadata@1.0.1':
    resolution: {integrity: sha512-9koTqyGrM2cqFRW517BPY/iEtUDx2r1+Pwwu5m7sJ7ka79wi3EyqhqcICk/yDmv6jAS1rjKgTKXlEhanYjijcA==}

  '@webgpu/types@0.1.61':
    resolution: {integrity: sha512-w2HbBvH+qO19SB5pJOJFKs533CdZqxl3fcGonqL321VHkW7W/iBo6H8bjDy6pr/+pbMwIu5dnuaAxH7NxBqUrQ==}

  abi-wan-kanabi@2.2.4:
    resolution: {integrity: sha512-0aA81FScmJCPX+8UvkXLki3X1+yPQuWxEkqXBVKltgPAK79J+NB+Lp5DouMXa7L6f+zcRlIA/6XO7BN/q9fnvg==}
    hasBin: true

  abitype@1.0.0:
    resolution: {integrity: sha512-NMeMah//6bJ56H5XRj8QCV4AwuW6hB6zqz2LnhhLdcWVQOsXki6/Pn3APeqxCma62nXIcmZWdu1DlHWS74umVQ==}
    peerDependencies:
      typescript: '>=5.0.4'
      zod: ^3 >=3.22.0
    peerDependenciesMeta:
      typescript:
        optional: true
      zod:
        optional: true

  abitype@1.0.8:
    resolution: {integrity: sha512-ZeiI6h3GnW06uYDLx0etQtX/p8E24UaHHBj57RSjK7YBFe7iuVn07EDpOeP451D06sF27VOz9JJPlIKJmXgkEg==}
    peerDependencies:
      typescript: '>=5.0.4'
      zod: ^3 >=3.22.0
    peerDependenciesMeta:
      typescript:
        optional: true
      zod:
        optional: true

  acorn-jsx@5.3.2:
    resolution: {integrity: sha512-rq9s+JNhf0IChjtDXxllJ7g41oZk5SlXtp0LHwyA5cejwn7vKmKp4pPri6YEePv2PU65sAsegbXtIinmDFDXgQ==}
    peerDependencies:
      acorn: ^6.0.0 || ^7.0.0 || ^8.0.0

  acorn@8.15.0:
    resolution: {integrity: sha512-NZyJarBfL7nWwIq+FDL6Zp/yHEhePMNnnJ0y3qfieCrmNvYct8uvtiV41UvlSe6apAfk0fY1FbWx+NwfmpvtTg==}
    engines: {node: '>=0.4.0'}
    hasBin: true

  aes-js@4.0.0-beta.5:
    resolution: {integrity: sha512-G965FqalsNyrPqgEGON7nIx1e/OVENSgiEIzyC63haUMuvNnwIgIjMs52hlTCKhkBny7A2ORNlfY9Zu+jmGk1Q==}

  agentkeepalive@4.6.0:
    resolution: {integrity: sha512-kja8j7PjmncONqaTsB8fQ+wE2mSU2DJ9D4XKoJ5PFWIdRMa6SLSN1ff4mOr4jCbfRSsxR4keIiySJU0N9T5hIQ==}
    engines: {node: '>= 8.0.0'}

  ajv@6.12.6:
    resolution: {integrity: sha512-j3fVLgvTo527anyYyJOGTYJbG+vnnQYvE0m5mmkc1TK+nxAppkCLMIL0aZ4dblVCNoGShhm+kzE4ZUykBoMg4g==}

  ansi-regex@5.0.1:
    resolution: {integrity: sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==}
    engines: {node: '>=8'}

  ansi-regex@6.1.0:
    resolution: {integrity: sha512-7HSX4QQb4CspciLpVFwyRe79O3xsIZDDLER21kERQ71oaPodF8jL725AgJMFAYbooIqolJoRLuM81SpeUkpkvA==}
    engines: {node: '>=12'}

  ansi-styles@4.3.0:
    resolution: {integrity: sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==}
    engines: {node: '>=8'}

  ansi-styles@6.2.1:
    resolution: {integrity: sha512-bN798gFfQX+viw3R7yrGWRqnrN2oRkEkUjjl4JNn4E8GxxbjtG3FbrEIIY3l8/hrwUwIeCZvi4QuOTP4MErVug==}
    engines: {node: '>=12'}

  ansicolors@0.3.2:
    resolution: {integrity: sha512-QXu7BPrP29VllRxH8GwB7x5iX5qWKAAMLqKQGWTeLWVlNHNOpVMJ91dsxQAIWXpjuW5wqvxu3Jd/nRjrJ+0pqg==}

  any-promise@1.3.0:
    resolution: {integrity: sha512-7UvmKalWRt1wgjL1RrGxoSJW/0QZFIegpeGvZG9kjp8vrRu55XTHbwnqq2GpXm9uLbcuhxm3IqX9OB4MZR1b2A==}

  anymatch@3.1.3:
    resolution: {integrity: sha512-KMReFUr0B4t+D+OBkjR3KYqvocp2XaSzO55UcB6mgQMd3KbcE+mWTyvVV7D/zsdEbNnV6acZUutkiHQXvTr1Rw==}
    engines: {node: '>= 8'}

  arg@5.0.2:
    resolution: {integrity: sha512-PYjyFOLKQ9y57JvQ6QLo8dAgNqswh8M1RMJYdQduT6xbWSgK36P/Z/v+p888pM69jMMfS8Xd8F6I1kQ/I9HUGg==}

  argparse@2.0.1:
    resolution: {integrity: sha512-8+9WqebbFzpX9OR+Wa6O29asIogeRMzcGtAINdpMHHyAg10f05aSFVBbcEqGf/PXw1EjAZ+q2/bEBg3DvurK3Q==}

  async-mutex@0.5.0:
    resolution: {integrity: sha512-1A94B18jkJ3DYq284ohPxoXbfTA5HsQ7/Mf4DEhcyLx3Bz27Rh59iScbB6EPiP+B+joue6YCxcMXSbFC1tZKwA==}

  atomic-sleep@1.0.0:
    resolution: {integrity: sha512-kNOjDqAh7px0XWNI+4QbzoiR/nTkHAWNud2uvnJquD1/x5a7EQZMJT0AczqK0Qn67oY/TTQ1LbUKajZpp3I9tQ==}
    engines: {node: '>=8.0.0'}

  autoprefixer@10.4.21:
    resolution: {integrity: sha512-O+A6LWV5LDHSJD3LjHYoNi4VLsj/Whi7k6zG12xTYaU4cQ8oxQGckXNX8cRHK5yOZ/ppVHe0ZBXGzSV9jXdVbQ==}
    engines: {node: ^10 || ^12 || >=14}
    hasBin: true
    peerDependencies:
      postcss: ^8.1.0

  available-typed-arrays@1.0.7:
    resolution: {integrity: sha512-wvUjBtSGN7+7SjNpq/9M2Tg350UZD3q62IFZLbRAR1bSMlCo1ZaeW+BJ+D090e4hIIZLBcTDWe4Mh4jvUDajzQ==}
    engines: {node: '>= 0.4'}

  balanced-match@1.0.2:
    resolution: {integrity: sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==}

  base-x@3.0.11:
    resolution: {integrity: sha512-xz7wQ8xDhdyP7tQxwdteLYeFfS68tSMNCZ/Y37WJ4bhGfKPpqEIlmIyueQHqOyoPhE6xNUqjzRr8ra0eF9VRvA==}

  base-x@4.0.1:
    resolution: {integrity: sha512-uAZ8x6r6S3aUM9rbHGVOIsR15U/ZSc82b3ymnCPsT45Gk1DDvhDPdIgB5MrhirZWt+5K0EEPQH985kNqZgNPFw==}

  base-x@5.0.1:
    resolution: {integrity: sha512-M7uio8Zt++eg3jPj+rHMfCC+IuygQHHCOU+IYsVtik6FWjuYpVt/+MRKcgsAMHh8mMFAwnB+Bs+mTrFiXjMzKg==}

  base64-js@1.5.1:
    resolution: {integrity: sha512-AKpaYlHn8t4SVbOHCy+b5+KKgvR4vrsD8vbvrbiQJps7fKDTkjkDry6ji0rUJjC0kzbNePLwzxq8iypo41qeWA==}

  bidi-js@1.0.3:
    resolution: {integrity: sha512-RKshQI1R3YQ+n9YJz2QQ147P66ELpa1FQEg20Dk8oW9t2KgLbpDLLp9aGZ7y8WHSshDknG0bknqGw5/tyCs5tw==}

  big-integer@1.6.52:
    resolution: {integrity: sha512-QxD8cf2eVqJOOz63z6JIN9BzvVs/dlySa5HGSBH5xtR8dPteIRQnBxxKqkNTiT6jbDTF6jAfrd4oMcND9RGbQg==}
    engines: {node: '>=0.6'}

  big.js@6.2.2:
    resolution: {integrity: sha512-y/ie+Faknx7sZA5MfGA2xKlu0GDv8RWrXGsmlteyJQ2lvoKv9GBK/fpRMc2qlSoBAgNxrixICFCBefIq8WCQpQ==}

  binary-extensions@2.3.0:
    resolution: {integrity: sha512-Ceh+7ox5qe7LJuLHoY0feh3pHuUDHAcRUeyL2VYghZwfpkNIy/+8Ocg0a3UuSoYzavmylwuLWQOf3hl0jjMMIw==}
    engines: {node: '>=8'}

  blakejs@1.2.1:
    resolution: {integrity: sha512-QXUSXI3QVc/gJME0dBpXrag1kbzOqCjCX8/b54ntNyW6sjtoqxqRk3LTmXzaJoh71zMsDCjM+47jS7XiwN/+fQ==}

  bn.js@5.2.2:
    resolution: {integrity: sha512-v2YAxEmKaBLahNwE1mjp4WON6huMNeuDvagFZW+ASCuA/ku0bXR9hSMw0XpiqMoA3+rmnyck/tPRSFQkoC9Cuw==}

  borsh@0.7.0:
    resolution: {integrity: sha512-CLCsZGIBCFnPtkNnieW/a8wmreDmfUtjU2m9yHrzPXIlNbqVs0AQrSatSG6vdNYUqdc83tkQi2eHfF98ubzQLA==}

  bowser@2.11.0:
    resolution: {integrity: sha512-AlcaJBi/pqqJBIQ8U9Mcpc9i8Aqxn88Skv5d+xBX006BY5u8N3mGLHa5Lgppa7L/HfwgwLgZ6NYs+Ag6uUmJRA==}

  brace-expansion@1.1.11:
    resolution: {integrity: sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==}

  brace-expansion@2.0.1:
    resolution: {integrity: sha512-XnAIvQ8eM+kC6aULx6wuQiwVsnzsi9d3WxzV3FpWTGA19F621kwdbsAcFKXgKUHZWsy+mY6iL1sHTxWEFCytDA==}

  braces@3.0.3:
    resolution: {integrity: sha512-yQbXgO/OSZVD2IsiLlro+7Hf6Q18EJrKSEsdoMzKePKXct3gvD8oLcOQdIzGupr5Fj+EDe8gO/lxc1BzfMpxvA==}
    engines: {node: '>=8'}

  broadcast-channel@3.7.0:
    resolution: {integrity: sha512-cIAKJXAxGJceNZGTZSBzMxzyOn72cVgPnKx4dc6LRjQgbaJUQqhy5rzL3zbMxkMWsGKkv2hSFkPRMEXfoMZ2Mg==}

  browserslist@4.24.4:
    resolution: {integrity: sha512-KDi1Ny1gSePi1vm0q4oxSF8b4DR44GF4BbmS2YdhPLOEqd8pDviZOGH/GsmRwoWJ2+5Lr085X7naowMwKHDG1A==}
    engines: {node: ^6 || ^7 || ^8 || ^9 || ^10 || ^11 || ^12 || >=13.7}
    hasBin: true

  bs58@4.0.1:
    resolution: {integrity: sha512-Ok3Wdf5vOIlBrgCvTq96gBkJw+JUEzdBgyaza5HLtPm7yTHkjRy8+JzNyHF7BHa0bNWOQIp3m5YF0nnFcOIKLw==}

  bs58@5.0.0:
    resolution: {integrity: sha512-r+ihvQJvahgYT50JD05dyJNKlmmSlMoOGwn1lCcEzanPglg7TxYjioQUYehQ9mAR/+hOSd2jRc/Z2y5UxBymvQ==}

  bs58@6.0.0:
    resolution: {integrity: sha512-PD0wEnEYg6ijszw/u8s+iI3H17cTymlrwkKhDhPZq+Sokl3AU4htyBFTjAeNAlCCmg0f53g6ih3jATyCKftTfw==}

  bs58check@3.0.1:
    resolution: {integrity: sha512-hjuuJvoWEybo7Hn/0xOrczQKKEKD63WguEjlhLExYs2wUBcebDC1jDNK17eEAD2lYfw82d5ASC1d7K3SWszjaQ==}

  buffer@6.0.3:
    resolution: {integrity: sha512-FTiCpNxtwiZZHEZbcbTIcZjERVICn9yq/pDFkTl95/AxzD1naBctN7YO68riM/gLSDY7sdrMby8hofADYuuqOA==}

  bufferutil@4.0.9:
    resolution: {integrity: sha512-WDtdLmJvAuNNPzByAYpRo2rF1Mmradw6gvWsQKf63476DDXmomT9zUiGypLcG4ibIM67vhAj8jJRdbmEws2Aqw==}
    engines: {node: '>=6.14.2'}

  bundle-name@4.1.0:
    resolution: {integrity: sha512-tjwM5exMg6BGRI+kNmTntNsvdZS1X8BFYS6tnJ2hdH0kVxM6/eVZ2xy+FqStSWvYmtfFMDLIxurorHwDKfDz5Q==}
    engines: {node: '>=18'}

  call-bind-apply-helpers@1.0.2:
    resolution: {integrity: sha512-Sp1ablJ0ivDkSzjcaJdxEunN5/XvksFJ2sMBFfq6x0ryhQV/2b/KwFe21cMpmHtPOSij8K99/wSfoEuTObmuMQ==}
    engines: {node: '>= 0.4'}

  call-bind@1.0.8:
    resolution: {integrity: sha512-oKlSFMcMwpUg2ednkhQ454wfWiU/ul3CkJe/PEHcTKuiX6RpbehUiFMXu13HalGZxfUwCQzZG747YXBn1im9ww==}
    engines: {node: '>= 0.4'}

  call-bound@1.0.4:
    resolution: {integrity: sha512-+ys997U96po4Kx/ABpBCqhA9EuxJaQWDQg7295H4hBphv3IZg0boBKuwYpt4YXp6MZ5AmZQnU/tyMTlRpaSejg==}
    engines: {node: '>= 0.4'}

  callsites@3.1.0:
    resolution: {integrity: sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ==}
    engines: {node: '>=6'}

  camelcase-css@2.0.1:
    resolution: {integrity: sha512-QOSvevhslijgYwRx6Rv7zKdMF8lbRmx+uQGx2+vDc+KI/eBnsy9kit5aj23AgGu3pa4t9AgwbnXWqS+iOY+2aA==}
    engines: {node: '>= 6'}

  camelcase@5.3.1:
    resolution: {integrity: sha512-L28STB170nwWS63UjtlEOE3dldQApaJXZkOI1uMFfzf3rRuPegHaHesyee+YxQ+W6SvRDQV6UrdOdRiR153wJg==}
    engines: {node: '>=6'}

  camera-controls@2.10.1:
    resolution: {integrity: sha512-KnaKdcvkBJ1Irbrzl8XD6WtZltkRjp869Jx8c0ujs9K+9WD+1D7ryBsCiVqJYUqt6i/HR5FxT7RLASieUD+Q5w==}
    peerDependencies:
      three: '>=0.126.1'

  caniuse-lite@1.0.30001724:
    resolution: {integrity: sha512-WqJo7p0TbHDOythNTqYujmaJTvtYRZrjpP8TCvH6Vb9CYJerJNKamKzIWOM4BkQatWj9H2lYulpdAQNBe7QhNA==}

  cardinal@2.1.1:
    resolution: {integrity: sha512-JSr5eOgoEymtYHBjNWyjrMqet9Am2miJhlfKNdqLp6zoeAh0KN5dRAcxlecj5mAJrmQomgiOBj35xHLrFjqBpw==}
    hasBin: true

  cbor-extract@2.2.0:
    resolution: {integrity: sha512-Ig1zM66BjLfTXpNgKpvBePq271BPOvu8MR0Jl080yG7Jsl+wAZunfrwiwA+9ruzm/WEdIV5QF/bjDZTqyAIVHA==}
    hasBin: true

  cbor-x@1.6.0:
    resolution: {integrity: sha512-0kareyRwHSkL6ws5VXHEf8uY1liitysCVJjlmhaLG+IXLqhSaOO+t63coaso7yjwEzWZzLy8fJo06gZDVQM9Qg==}

  chalk@4.1.2:
    resolution: {integrity: sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==}
    engines: {node: '>=10'}

  chalk@5.4.1:
    resolution: {integrity: sha512-zgVZuo2WcZgfUEmsn6eO3kINexW8RAE4maiQ8QNs8CtpPCSyMiYsULR3HQYkm3w8FIA3SberyMJMSldGsW+U3w==}
    engines: {node: ^12.17.0 || ^14.13 || >=16.0.0}

  chokidar@3.6.0:
    resolution: {integrity: sha512-7VT13fmjotKpGipCW9JEQAusEPE+Ei8nl6/g4FBAmIm0GOOLMua9NDDo/DWp0ZAxCr3cPq5ZpBqmPAQgDda2Pw==}
    engines: {node: '>= 8.10.0'}

  chokidar@4.0.3:
    resolution: {integrity: sha512-Qgzu8kfBvo+cA4962jnP1KkS6Dop5NS6g7R5LFYJr4b8Ub94PPQXUksCw9PvXoeXPRRddRNC5C1JQUR2SMGtnA==}
    engines: {node: '>= 14.16.0'}

  class-variance-authority@0.7.1:
    resolution: {integrity: sha512-Ka+9Trutv7G8M6WT6SeiRWz792K5qEqIGEGzXKhAE6xOWAY6pPH8U+9IY3oCMv6kqTmLsv7Xh/2w2RigkePMsg==}

  cliui@6.0.0:
    resolution: {integrity: sha512-t6wbgtoCXvAzst7QgXxJYqPt0usEfbgQdftEPbLL/cvv6HPE5VgvqCuAIDR0NgU52ds6rFwqrgakNLrHEjCbrQ==}

  cliui@8.0.1:
    resolution: {integrity: sha512-BSeNnyus75C4//NQ9gQt1/csTXyo/8Sb+afLAkzAptFuMsod9HFokGNudZpi/oQV73hnVK+sR+5PVRMd+Dr7YQ==}
    engines: {node: '>=12'}

  clsx@2.1.1:
    resolution: {integrity: sha512-eYm0QWBtUrBWZWG0d386OGAw16Z995PiOVo2B7bjWSbHedGl5e0ZWaq65kOGgUSNesEIDkB9ISbTg/JK9dhCZA==}
    engines: {node: '>=6'}

  color-convert@2.0.1:
    resolution: {integrity: sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==}
    engines: {node: '>=7.0.0'}

  color-name@1.1.4:
    resolution: {integrity: sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==}

  commander@13.1.0:
    resolution: {integrity: sha512-/rFeCpNJQbhSZjGVwO9RFV3xPqbnERS8MmIQzCtD/zl6gpJuV/bMLuN92oG3F7d8oDEHHRrujSXNUr8fpjntKw==}
    engines: {node: '>=18'}

  commander@2.20.3:
    resolution: {integrity: sha512-GpVkmM8vF2vQUkj2LvZmD35JxeJOLCwJ9cUkugyk2nuhbv3+mJvpLYYt+0+USMxE+oj+ey/lJEnhZw75x/OMcQ==}

  commander@4.1.1:
    resolution: {integrity: sha512-NOKm8xhkzAjzFx8B2v5OAHT+u5pRQc2UCa2Vq9jYL/31o2wi9mxBA7LIFs3sV5VSC49z6pEhfbMULvShKj26WA==}
    engines: {node: '>= 6'}

  complex.js@2.4.2:
    resolution: {integrity: sha512-qtx7HRhPGSCBtGiST4/WGHuW+zeaND/6Ld+db6PbrulIB1i2Ev/2UPiqcmpQNPSyfBKraC0EOvOKCB5dGZKt3g==}

  concat-map@0.0.1:
    resolution: {integrity: sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg==}

  convert-source-map@2.0.0:
    resolution: {integrity: sha512-Kvp459HrV2FEJ1CAsi1Ku+MY3kasH19TFykTz2xWmMeq6bk2NU3XXvfJ+Q61m0xktWwt+1HSYf3JZsTms3aRJg==}

  cookie-es@1.2.2:
    resolution: {integrity: sha512-+W7VmiVINB+ywl1HGXJXmrqkOhpKrIiVZV6tQuV54ZyQC7MMuBt81Vc336GMLoHBq5hV/F9eXgt5Mnx0Rha5Fg==}

  core-util-is@1.0.3:
    resolution: {integrity: sha512-ZQBvi1DcpJ4GDqanjucZ2Hj3wEO5pZDS89BWbkcrvdxksJorwUDDZamX9ldFkp9aw2lmBDLgkObEA4DWNJ9FYQ==}

  crc-32@1.2.2:
    resolution: {integrity: sha512-ROmzCKrTnOwybPcJApAA6WBWij23HVfGVNKqqrZpuyZOHqK2CwHSvpGuyt/UNNvaIjEd8X5IFGp4Mh+Ie1IHJQ==}
    engines: {node: '>=0.8'}
    hasBin: true

  cross-env@7.0.3:
    resolution: {integrity: sha512-+/HKd6EgcQCJGh2PSjZuUitQBQynKor4wrFbRg4DtAgS1aWO+gU52xpH7M9ScGgXSYmAVS9bIJ8EzuaGw0oNAw==}
    engines: {node: '>=10.14', npm: '>=6', yarn: '>=1'}
    hasBin: true

  cross-fetch@3.2.0:
    resolution: {integrity: sha512-Q+xVJLoGOeIMXZmbUK4HYk+69cQH6LudR0Vu/pRm2YlU/hDV9CiS0gKUMaWY5f2NeUH9C1nV3bsTlCo0FsTV1Q==}

  cross-fetch@4.1.0:
    resolution: {integrity: sha512-uKm5PU+MHTootlWEY+mZ4vvXoCn4fLQxT9dSc1sXVMSFkINTJVN8cAQROpwcKm8bJ/c7rgZVIBWzH5T78sNZZw==}

  cross-spawn@7.0.6:
    resolution: {integrity: sha512-uV2QOWP2nWzsy2aMp8aRibhi9dlzF5Hgh5SHaB9OiTGEyDTiJJyx0uy51QXdyWbtAHNua4XJzUKca3OzKUd3vA==}
    engines: {node: '>= 8'}

  crossws@0.3.5:
    resolution: {integrity: sha512-ojKiDvcmByhwa8YYqbQI/hg7MEU0NC03+pSdEq4ZUnZR9xXpwk7E43SMNGkn+JxJGPFtNvQ48+vV2p+P1ml5PA==}

  cssesc@3.0.0:
    resolution: {integrity: sha512-/Tb/JcjK111nNScGob5MNtsntNM1aCNUDipB/TkwZFhyDrrE47SOx/18wF2bbjgc3ZzCSKW1T5nt5EbFoAz/Vg==}
    engines: {node: '>=4'}
    hasBin: true

  csstype@3.1.3:
    resolution: {integrity: sha512-M1uQkMl8rQK/szD0LNhtqxIPLpimGm8sOBwU7lLnCpSbTyY3yeU1Vc7l4KT5zT4s/yOxHH5O7tIuuLOCnLADRw==}

  date-fns@2.30.0:
    resolution: {integrity: sha512-fnULvOpxnC5/Vg3NCiWelDsLiUc9bRwAPs/+LfTLNvetFCtCTN+yQz15C/fs4AwX1R9K5GLtLfn8QW+dWisaAw==}
    engines: {node: '>=0.11'}

  dayjs@1.11.13:
    resolution: {integrity: sha512-oaMBel6gjolK862uaPQOVTA7q3TZhuSvuMQAAglQDOWYO9A91IrAOUJEyKVlqJlHE0vq5p5UXxzdPfMH/x6xNg==}

  debug@4.3.7:
    resolution: {integrity: sha512-Er2nc/H7RrMXZBFCEim6TCmMk02Z8vLC2Rbi1KEBggpo0fS6l0S1nnapwmIi3yW/+GOJap1Krg4w0Hg80oCqgQ==}
    engines: {node: '>=6.0'}
    peerDependencies:
      supports-color: '*'
    peerDependenciesMeta:
      supports-color:
        optional: true

  debug@4.4.0:
    resolution: {integrity: sha512-6WTZ/IxCY/T6BALoZHaE4ctp9xm+Z5kY/pzYaCHRFeyVhojxlrm+46y68HA6hr0TcwEssoxNiDEUJQjfPZ/RYA==}
    engines: {node: '>=6.0'}
    peerDependencies:
      supports-color: '*'
    peerDependenciesMeta:
      supports-color:
        optional: true

  decamelize@1.2.0:
    resolution: {integrity: sha512-z2S+W9X73hAUUki+N+9Za2lBlun89zigOyGrsax+KUQ6wKW4ZoWpEYBkGhQjwAjjDCkWxhY0VKEhk8wzY7F5cA==}
    engines: {node: '>=0.10.0'}

  decimal.js@10.5.0:
    resolution: {integrity: sha512-8vDa8Qxvr/+d94hSh5P3IJwI5t8/c0KsMp+g8bNw9cY2icONa5aPfvKeieW1WlG0WQYwwhJ7mjui2xtiePQSXw==}

  decode-uri-component@0.2.2:
    resolution: {integrity: sha512-FqUYQ+8o158GyGTrMFJms9qh3CqTKvAqgqsTnkLI8sKu0028orqBhxNMFkFen0zGyg6epACD32pjVk58ngIErQ==}
    engines: {node: '>=0.10'}

  deep-is@0.1.4:
    resolution: {integrity: sha512-oIPzksmTg4/MriiaYGO+okXDT7ztn/w3Eptv/+gSIdMdKsJo0u4CfYNFJPy+4SKMuCqGw2wxnA+URMg3t8a/bQ==}

  default-browser-id@5.0.0:
    resolution: {integrity: sha512-A6p/pu/6fyBcA1TRz/GqWYPViplrftcW2gZC9q79ngNCKAeR/X3gcEdXQHl4KNXV+3wgIJ1CPkJQ3IHM6lcsyA==}
    engines: {node: '>=18'}

  default-browser@5.2.1:
    resolution: {integrity: sha512-WY/3TUME0x3KPYdRRxEJJvXRHV4PyPoUsxtZa78lwItwRQRHhd2U9xOscaT/YTf8uCXIAjeJOFBVEh/7FtD8Xg==}
    engines: {node: '>=18'}

  define-data-property@1.1.4:
    resolution: {integrity: sha512-rBMvIzlpA8v6E+SJZoo++HAYqsLrkg7MSfIinMPFhmkorw7X+dOXVJQs+QT69zGkzMyfDnIMN2Wid1+NbL3T+A==}
    engines: {node: '>= 0.4'}

  define-lazy-prop@3.0.0:
    resolution: {integrity: sha512-N+MeXYoqr3pOgn8xfyRPREN7gHakLYjhsHhWGT3fWAiL4IkAt0iDw14QiiEm2bE30c5XX5q0FtAA3CK5f9/BUg==}
    engines: {node: '>=12'}

  defu@6.1.4:
    resolution: {integrity: sha512-mEQCMmwJu317oSz8CwdIOdwf3xMif1ttiM8LTufzc3g6kR+9Pe236twL8j3IYT1F7GfRgGcW6MWxzZjLIkuHIg==}

  delay@5.0.0:
    resolution: {integrity: sha512-ReEBKkIfe4ya47wlPYf/gu5ib6yUG0/Aez0JQZQz94kiWtRQvZIQbTiehsnwHvLSWJnQdhVeqYue7Id1dKr0qw==}
    engines: {node: '>=10'}

  dequal@2.0.3:
    resolution: {integrity: sha512-0je+qPKHEMohvfRTCEo3CrPG6cAzAYgmzKyxRiYSSDkS6eGJdyVJm7WaYA5ECaAD9wLB2T4EEeymA5aFVcYXCA==}
    engines: {node: '>=6'}

  derive-valtio@0.1.0:
    resolution: {integrity: sha512-OCg2UsLbXK7GmmpzMXhYkdO64vhJ1ROUUGaTFyHjVwEdMEcTTRj7W1TxLbSBxdY8QLBPCcp66MTyaSy0RpO17A==}
    peerDependencies:
      valtio: '*'

  destr@2.0.5:
    resolution: {integrity: sha512-ugFTXCtDZunbzasqBxrK93Ik/DRYsO6S/fedkWEMKqt04xZ4csmnmwGDBAb07QWNaGMAmnTIemsYZCksjATwsA==}

  detect-browser@5.3.0:
    resolution: {integrity: sha512-53rsFbGdwMwlF7qvCt0ypLM5V5/Mbl0szB7GPN8y9NCcbknYOeVVXdrXEq+90IwAfrrzt6Hd+u2E2ntakICU8w==}

  detect-gpu@5.0.70:
    resolution: {integrity: sha512-bqerEP1Ese6nt3rFkwPnGbsUF9a4q+gMmpTVVOEzoCyeCc+y7/RvJnQZJx1JwhgQI5Ntg0Kgat8Uu7XpBqnz1w==}

  detect-libc@2.0.4:
    resolution: {integrity: sha512-3UDv+G9CsCKO1WKMGw9fwq/SWJYbI0c5Y7LU1AXYoDdbhE2AHQ6N6Nb34sG8Fj7T5APy8qXDCKuuIHd1BR0tVA==}
    engines: {node: '>=8'}

  detect-node@2.1.0:
    resolution: {integrity: sha512-T0NIuQpnTvFDATNuHN5roPwSBG83rFsuO+MXXH9/3N1eFbn4wcPjttvjMLEPWJ0RGUYgQE7cGgS3tNxbqCGM7g==}

  didyoumean@1.2.2:
    resolution: {integrity: sha512-gxtyfqMg7GKyhQmb056K7M3xszy/myH8w+B4RT+QXBQsvAOdc3XymqDDPHx1BgPgsdAA5SIifona89YtRATDzw==}

  dijkstrajs@1.0.3:
    resolution: {integrity: sha512-qiSlmBq9+BCdCA/L46dw8Uy93mloxsPSbwnm5yrKn2vMPiy8KyAskTF6zuV/j5BMsmOGZDPs7KjU+mjb670kfA==}

  dlv@1.1.3:
    resolution: {integrity: sha512-+HlytyjlPKnIG8XuRG8WvmBP8xs8P71y+SKKS6ZXWoEgLuePxtDoUEiH7WkdePWrQ5JBpE6aoVqfZfJUQkjXwA==}

  draco3d@1.5.7:
    resolution: {integrity: sha512-m6WCKt/erDXcw+70IJXnG7M3awwQPAsZvJGX5zY7beBqpELw6RDGkYVU0W43AFxye4pDZ5i2Lbyc/NNGqwjUVQ==}

  dunder-proto@1.0.1:
    resolution: {integrity: sha512-KIN/nDJBQRcXw0MLVhZE9iQHmG68qAVIBg9CqmUYjmQIhgij9U5MFvrqkUL5FbtyyzZuOeOt0zdeRe4UY7ct+A==}
    engines: {node: '>= 0.4'}

  duplexify@4.1.3:
    resolution: {integrity: sha512-M3BmBhwJRZsSx38lZyhE53Csddgzl5R7xGJNk7CVddZD6CcmwMCH8J+7AprIrQKH7TonKxaCjcv27Qmf+sQ+oA==}

  eastasianwidth@0.2.0:
    resolution: {integrity: sha512-I88TYZWc9XiYHRQ4/3c5rjjfgkjhLyW2luGIheGERbNQ6OY7yTybanSpDXZa8y7VUP9YmDcYa+eyq4ca7iLqWA==}

  eciesjs@0.4.15:
    resolution: {integrity: sha512-r6kEJXDKecVOCj2nLMuXK/FCPeurW33+3JRpfXVbjLja3XUYFfD9I/JBreH6sUyzcm3G/YQboBjMla6poKeSdA==}
    engines: {bun: '>=1', deno: '>=2', node: '>=16'}

  electron-to-chromium@1.5.93:
    resolution: {integrity: sha512-M+29jTcfNNoR9NV7la4SwUqzWAxEwnc7ThA5e1m6LRSotmpfpCpLcIfgtSCVL+MllNLgAyM/5ru86iMRemPzDQ==}

  emoji-regex@8.0.0:
    resolution: {integrity: sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==}

  emoji-regex@9.2.2:
    resolution: {integrity: sha512-L18DaJsXSUk2+42pv8mLs5jJT2hqFkFE4j21wOmgbUqsZ2hL72NsUU785g9RXgo3s0ZNgVl42TiHp3ZtOv/Vyg==}

  encode-utf8@1.0.3:
    resolution: {integrity: sha512-ucAnuBEhUK4boH2HjVYG5Q2mQyPorvv0u/ocS+zhdw0S8AlHYY+GOFhP1Gio5z4icpP2ivFSvhtFjQi8+T9ppw==}

  encoding@0.1.13:
    resolution: {integrity: sha512-ETBauow1T35Y/WZMkio9jiM0Z5xjHHmJ4XmjZOq1l/dXz3lr2sRn87nJy20RupqSh1F2m3HHPSp8ShIPQJrJ3A==}

  end-of-stream@1.4.5:
    resolution: {integrity: sha512-ooEGc6HP26xXq/N+GCGOT0JKCLDGrq2bQUZrQ7gyrJiZANJ/8YDTxTpQBXGMn+WbIQXNVpyWymm7KYVICQnyOg==}

  engine.io-client@6.6.3:
    resolution: {integrity: sha512-T0iLjnyNWahNyv/lcjS2y4oE358tVS/SYQNxYXGAJ9/GLgH4VCvOQ/mhTjqU88mLZCQgiG8RIegFHYCdVC+j5w==}

  engine.io-parser@5.2.3:
    resolution: {integrity: sha512-HqD3yTBfnBxIrbnM1DoD6Pcq8NECnh8d4As1Qgh0z5Gg3jRRIqijury0CL3ghu/edArpUYiYqQiDUQBIs4np3Q==}
    engines: {node: '>=10.0.0'}

  es-define-property@1.0.1:
    resolution: {integrity: sha512-e3nRfgfUZ4rNGL232gUgX06QNyyez04KdjFrF+LTRoOXmrOgFKDg4BCdsjW8EnT69eqdYGmRpJwiPVYNrCaW3g==}
    engines: {node: '>= 0.4'}

  es-errors@1.3.0:
    resolution: {integrity: sha512-Zf5H2Kxt2xjTvbJvP2ZWLEICxA6j+hAmMzIlypy4xcBg1vKVnx89Wy0GbS+kf5cwCVFFzdCFh2XSCFNULS6csw==}
    engines: {node: '>= 0.4'}

  es-object-atoms@1.1.1:
    resolution: {integrity: sha512-FGgH2h8zKNim9ljj7dankFPcICIK9Cp5bm+c2gQSYePhpaG5+esrLODihIorn+Pe6FGJzWhXQotPv73jTaldXA==}
    engines: {node: '>= 0.4'}

  es-toolkit@1.33.0:
    resolution: {integrity: sha512-X13Q/ZSc+vsO1q600bvNK4bxgXMkHcf//RxCmYDaRY5DAcT+eoXjY5hoAPGMdRnWQjvyLEcyauG3b6hz76LNqg==}

  es-toolkit@1.39.3:
    resolution: {integrity: sha512-Qb/TCFCldgOy8lZ5uC7nLGdqJwSabkQiYQShmw4jyiPk1pZzaYWTwaYKYP7EgLccWYgZocMrtItrwh683voaww==}

  es6-promise@4.2.8:
    resolution: {integrity: sha512-HJDGx5daxeIvxdBxvG2cb9g4tEvwIk3i8+nhX0yGrYmZUzbkdg8QbDevheDB8gd0//uPj4c1EQua8Q+MViT0/w==}

  es6-promisify@5.0.0:
    resolution: {integrity: sha512-C+d6UdsYDk0lMebHNR4S2NybQMMngAOnOwYBQjTOiv0MkoJMP0Myw2mgpDLBcpfCmRLxyFqYhS/CfOENq4SJhQ==}

  esbuild@0.21.5:
    resolution: {integrity: sha512-mg3OPMV4hXywwpoDxu3Qda5xCKQi+vCTZq8S9J/EpkhB2HzKXq4SNFZE3+NK93JYxc8VMSep+lOUSC/RVKaBqw==}
    engines: {node: '>=12'}
    hasBin: true

  escalade@3.2.0:
    resolution: {integrity: sha512-WUj2qlxaQtO4g6Pq5c29GTcWGDyd8itL8zTlipgECz3JesAiiOKotd8JU6otB3PACgG6xkJUyVhboMS+bje/jA==}
    engines: {node: '>=6'}

  escape-latex@1.2.0:
    resolution: {integrity: sha512-nV5aVWW1K0wEiUIEdZ4erkGGH8mDxGyxSeqPzRNtWP7ataw+/olFObw7hujFWlVjNsaDFw5VZ5NzVSIqRgfTiw==}

  escape-string-regexp@4.0.0:
    resolution: {integrity: sha512-TtpcNJ3XAzx3Gq8sWRzJaVajRs0uVxA2YAkdb1jm2YkPz4G6egUFAyA3n5vtEIZefPk5Wa4UXbKuS5fKkJWdgA==}
    engines: {node: '>=10'}

  eslint-plugin-react-hooks@5.2.0:
    resolution: {integrity: sha512-+f15FfK64YQwZdJNELETdn5ibXEUQmW1DZL6KXhNnc2heoy/sg9VJJeT7n8TlMWouzWqSWavFkIhHyIbIAEapg==}
    engines: {node: '>=10'}
    peerDependencies:
      eslint: ^3.0.0 || ^4.0.0 || ^5.0.0 || ^6.0.0 || ^7.0.0 || ^8.0.0-0 || ^9.0.0

  eslint-plugin-react-refresh@0.4.20:
    resolution: {integrity: sha512-XpbHQ2q5gUF8BGOX4dHe+71qoirYMhApEPZ7sfhF/dNnOF1UXnCMGZf79SFTBO7Bz5YEIT4TMieSlJBWhP9WBA==}
    peerDependencies:
      eslint: '>=8.40'

  eslint-scope@8.4.0:
    resolution: {integrity: sha512-sNXOfKCn74rt8RICKMvJS7XKV/Xk9kA7DyJr8mJik3S7Cwgy3qlkkmyS2uQB3jiJg6VNdZd/pDBJu0nvG2NlTg==}
    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}

  eslint-visitor-keys@3.4.3:
    resolution: {integrity: sha512-wpc+LXeiyiisxPlEkUzU6svyS1frIO3Mgxj1fdy7Pm8Ygzguax2N3Fa/D/ag1WqbOprdI+uY6wMUl8/a2G+iag==}
    engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0}

  eslint-visitor-keys@4.2.1:
    resolution: {integrity: sha512-Uhdk5sfqcee/9H/rCOJikYz67o0a2Tw2hGRPOG2Y1R2dg7brRe1uG0yaNQDHu+TO/uQPF/5eCapvYSmHUjt7JQ==}
    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}

  eslint@9.29.0:
    resolution: {integrity: sha512-GsGizj2Y1rCWDu6XoEekL3RLilp0voSePurjZIkxL3wlm5o5EC9VpgaP7lrCvjnkuLvzFBQWB3vWB3K5KQTveQ==}
    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
    hasBin: true
    peerDependencies:
      jiti: '*'
    peerDependenciesMeta:
      jiti:
        optional: true

  espree@10.4.0:
    resolution: {integrity: sha512-j6PAQ2uUr79PZhBjP5C5fhl8e39FmRnOjsD5lGnWrFU8i2G776tBK7+nP8KuQUTTyAZUwfQqXAgrVH5MbH9CYQ==}
    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}

  esprima@4.0.1:
    resolution: {integrity: sha512-eGuFFw7Upda+g4p+QHvnW0RyTX/SVeJBDM/gCtMARO0cLuT2HcEKnTPvhjV6aGeqrCB/sbNop0Kszm0jsaWU4A==}
    engines: {node: '>=4'}
    hasBin: true

  esquery@1.6.0:
    resolution: {integrity: sha512-ca9pw9fomFcKPvFLXhBKUK90ZvGibiGOvRJNbjljY7s7uq/5YO4BOzcYtJqExdx99rF6aAcnRxHmcUHcz6sQsg==}
    engines: {node: '>=0.10'}

  esrecurse@4.3.0:
    resolution: {integrity: sha512-KmfKL3b6G+RXvP8N1vr3Tq1kL/oCFgn2NYXEtqP8/L3pKapUA4G8cFVaoF3SU323CD4XypR/ffioHmkti6/Tag==}
    engines: {node: '>=4.0'}

  estraverse@5.3.0:
    resolution: {integrity: sha512-MMdARuVEQziNTeJD8DgMqmhwR11BRQ/cBP+pLtYdSTnf3MIO8fFeiINEbX36ZdNlfU/7A9f3gUw49B3oQsvwBA==}
    engines: {node: '>=4.0'}

  esutils@2.0.3:
    resolution: {integrity: sha512-kVscqXk4OCp68SZ0dkgEKVi6/8ij300KBWTJq32P/dYeWTSwK41WyTxalN1eRmA5Z9UU/LX9D7FWSmV9SAYx6g==}
    engines: {node: '>=0.10.0'}

  eth-rpc-errors@4.0.3:
    resolution: {integrity: sha512-Z3ymjopaoft7JDoxZcEb3pwdGh7yiYMhOwm2doUt6ASXlMavpNlK6Cre0+IMl2VSGyEU9rkiperQhp5iRxn5Pg==}

  ethereum-cryptography@2.2.1:
    resolution: {integrity: sha512-r/W8lkHSiTLxUxW8Rf3u4HGB0xQweG2RyETjywylKZSzLWoWAijRz8WCuOtJ6wah+avllXBqZuk29HCCvhEIRg==}

  ethers@6.14.4:
    resolution: {integrity: sha512-Jm/dzRs2Z9iBrT6e9TvGxyb5YVKAPLlpna7hjxH7KH/++DSh2T/JVmQUv7iHI5E55hDbp/gEVvstWYXVxXFzsA==}
    engines: {node: '>=14.0.0'}

  eventemitter2@6.4.9:
    resolution: {integrity: sha512-JEPTiaOt9f04oa6NOkc4aH+nVp5I3wEjpHbIPqfgCdD5v5bUzy7xQqwcVO2aDQgOWhI28da57HksMrzK9HlRxg==}

  eventemitter3@5.0.1:
    resolution: {integrity: sha512-GWkBvjiSZK87ELrYOSESUYeVIc9mvLLf/nXalMOS5dYrgZq9o5OVkbZAVM06CVxYsCwH9BDZFPlQTlPA1j4ahA==}

  events@3.3.0:
    resolution: {integrity: sha512-mQw+2fkQbALzQ7V0MY0IqdnXNOeTtP4r0lN9z7AAawCXgqea7bDii20AYrIBrFd/Hx0M2Ocz6S111CaFkUcb0Q==}
    engines: {node: '>=0.8.x'}

  extension-port-stream@3.0.0:
    resolution: {integrity: sha512-an2S5quJMiy5bnZKEf6AkfH/7r8CzHvhchU40gxN+OM6HPhe7Z9T1FUychcf2M9PpPOO0Hf7BAEfJkw2TDIBDw==}
    engines: {node: '>=12.0.0'}

  eyes@0.1.8:
    resolution: {integrity: sha512-GipyPsXO1anza0AOZdy69Im7hGFCNB7Y/NGjDlZGJ3GJJLtwNSb2vrzYrTYJRrRloVx7pl+bhUaTB8yiccPvFQ==}
    engines: {node: '> 0.1.90'}

  fast-deep-equal@3.1.3:
    resolution: {integrity: sha512-f3qQ9oQy9j2AhBe/H9VC91wLmKBCCU/gDOnKNAYG5hswO7BLKj09Hc5HYNz9cGI++xlpDCIgDaitVs03ATR84Q==}

  fast-glob@3.3.3:
    resolution: {integrity: sha512-7MptL8U0cqcFdzIzwOTHoilX9x5BrNqye7Z/LuC7kCMRio1EMSyqRK3BEAUD7sXRq4iT4AzTVuZdhgQ2TCvYLg==}
    engines: {node: '>=8.6.0'}

  fast-json-stable-stringify@2.1.0:
    resolution: {integrity: sha512-lhd/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw==}

  fast-levenshtein@2.0.6:
    resolution: {integrity: sha512-DCXu6Ifhqcks7TZKY3Hxp3y6qphY5SJZmrWMDrKcERSOXWQdMhU9Ig/PYrzyw/ul9jOIyh0N4M0tbC5hodg8dw==}

  fast-redact@3.5.0:
    resolution: {integrity: sha512-dwsoQlS7h9hMeYUq1W++23NDcBLV4KqONnITDV9DjfS3q1SgDGVrBdvvTLUotWtPSD7asWDV9/CmsZPy8Hf70A==}
    engines: {node: '>=6'}

  fast-safe-stringify@2.1.1:
    resolution: {integrity: sha512-W+KJc2dmILlPplD/H4K9l9LcAHAfPtP6BY84uVLXQ6Evcz9Lcg33Y2z1IVblT6xdY54PXYVHEv+0Wpq8Io6zkA==}

  fast-stable-stringify@1.0.0:
    resolution: {integrity: sha512-wpYMUmFu5f00Sm0cj2pfivpmawLZ0NKdviQ4w9zJeR8JVtOpOxHmLaJuj0vxvGqMJQWyP/COUkF75/57OKyRag==}

  fastq@1.19.0:
    resolution: {integrity: sha512-7SFSRCNjBQIZH/xZR3iy5iQYR8aGBE0h3VG6/cwlbrpdciNYBMotQav8c1XI3HjHH+NikUpP53nPdlZSdWmFzA==}

  fetch-cookie@3.0.1:
    resolution: {integrity: sha512-ZGXe8Y5Z/1FWqQ9q/CrJhkUD73DyBU9VF0hBQmEO/wPHe4A9PKTjplFDLeFX8aOsYypZUcX5Ji/eByn3VCVO3Q==}

  fflate@0.6.10:
    resolution: {integrity: sha512-IQrh3lEPM93wVCEczc9SaAOvkmcoQn/G8Bo1e8ZPlY3X3bnAxWaBdvTdvM1hP62iZp0BXWDy4vTAy4fF0+Dlpg==}

  fflate@0.8.2:
    resolution: {integrity: sha512-cPJU47OaAoCbg0pBvzsgpTPhmhqI5eJjh/JIu8tPj5q+T7iLvW/JAYUqmE7KOB4R1ZyEhzBaIQpQpardBF5z8A==}

  file-entry-cache@8.0.0:
    resolution: {integrity: sha512-XXTUwCvisa5oacNGRP9SfNtYBNAMi+RPwBFmblZEF7N7swHYQS6/Zfk7SRwx4D5j3CH211YNRco1DEMNVfZCnQ==}
    engines: {node: '>=16.0.0'}

  fill-range@7.1.1:
    resolution: {integrity: sha512-YsGpe3WHLK8ZYi4tWDg2Jy3ebRz2rXowDxnld4bkQB00cc/1Zw9AWnC0i9ztDJitivtQvaI9KaLyKrc+hBW0yg==}
    engines: {node: '>=8'}

  filter-obj@1.1.0:
    resolution: {integrity: sha512-8rXg1ZnX7xzy2NGDVkBVaAy+lSlPNwad13BtgSlLuxfIslyt5Vg64U7tFcCt4WS1R0hvtnQybT/IyCkGZ3DpXQ==}
    engines: {node: '>=0.10.0'}

  find-up@4.1.0:
    resolution: {integrity: sha512-PpOwAdQ/YlXQ2vj8a3h8IipDuYRi3wceVQQGYWxNINccq40Anw7BlsEXCMbt1Zt+OLA6Fq9suIpIWD0OsnISlw==}
    engines: {node: '>=8'}

  find-up@5.0.0:
    resolution: {integrity: sha512-78/PXT1wlLLDgTzDs7sjq9hzz0vXD+zn+7wypEe4fXQxCmdmqfGsEPQxmiCSQI3ajFV91bVSsvNtrJRiW6nGng==}
    engines: {node: '>=10'}

  flat-cache@4.0.1:
    resolution: {integrity: sha512-f7ccFPK3SXFHpx15UIGyRJ/FJQctuKZ0zVuN3frBo4HnK3cay9VEW0R6yPYFHC0AgqhukPzKjq22t5DmAyqGyw==}
    engines: {node: '>=16'}

  flatted@3.3.2:
    resolution: {integrity: sha512-AiwGJM8YcNOaobumgtng+6NHuOqC3A7MixFeDafM3X9cIUM+xUXoS5Vfgf+OihAYe20fxqNM9yPBXJzRtZ/4eA==}

  for-each@0.3.5:
    resolution: {integrity: sha512-dKx12eRCVIzqCxFGplyFKJMPvLEWgmNtUrpTiJIR5u97zEhRG8ySrtboPHZXx7daLxQVrl643cTzbab2tkQjxg==}
    engines: {node: '>= 0.4'}

  foreground-child@3.3.0:
    resolution: {integrity: sha512-Ld2g8rrAyMYFXBhEqMz8ZAHBi4J4uS1i/CxGMDnjyFWddMXLVcDp051DZfu+t7+ab7Wv6SMqpWmyFIj5UbfFvg==}
    engines: {node: '>=14'}

  fraction.js@4.3.4:
    resolution: {integrity: sha512-pwiTgt0Q7t+GHZA4yaLjObx4vXmmdcS0iSJ19o8d/goUGgItX9UZWKWNnLHehxviD8wU2IWRsnR8cD5+yOJP2Q==}

  fraction.js@4.3.7:
    resolution: {integrity: sha512-ZsDfxO51wGAXREY55a7la9LScWpwv9RxIrYABrlvOFBlH/ShPnrtsXeuUIfXKKOVicNxQ+o8JTbJvjS4M89yew==}

  fs-extra@10.1.0:
    resolution: {integrity: sha512-oRXApq54ETRj4eMiFzGnHWGy+zo5raudjuxN0b8H7s/RU2oW0Wvsx9O0ACRN/kRq9E8Vu/ReskGB5o3ji+FzHQ==}
    engines: {node: '>=12'}

  fs.realpath@1.0.0:
    resolution: {integrity: sha512-OO0pH2lK6a0hZnAdau5ItzHPI6pUlvI7jMVnxUQRtw4owF2wk8lOSabtGDCTP4Ggrg2MbGnWO9X8K1t4+fGMDw==}

  fsevents@2.3.3:
    resolution: {integrity: sha512-5xoDfX+fL7faATnagmWPpbFtwh/R77WmMMqqHGS65C3vvB0YHrgF+B1YmZ3441tMj5n63k0212XNoJwzlhffQw==}
    engines: {node: ^8.16.0 || ^10.6.0 || >=11.0.0}
    os: [darwin]

  function-bind@1.1.2:
    resolution: {integrity: sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==}

  gensync@1.0.0-beta.2:
    resolution: {integrity: sha512-3hN7NaskYvMDLQY55gnW3NQ+mesEAepTqlg+VEbj7zzqEMBVNhzcGYYeqFo/TlYz6eQiFcp1HcsCZO+nGgS8zg==}
    engines: {node: '>=6.9.0'}

  get-caller-file@2.0.5:
    resolution: {integrity: sha512-DyFP3BM/3YHTQOCUL/w0OZHR0lpKeGrxotcHWcqNEdnltqFwXVfhEBQ94eIo34AfQpo0rGki4cyIiftY06h2Fg==}
    engines: {node: 6.* || 8.* || >= 10.*}

  get-intrinsic@1.3.0:
    resolution: {integrity: sha512-9fSjSaos/fRIVIp+xSJlE6lfwhES7LNtKaCBIamHsjr2na1BiABJPo0mOjjz8GJDURarmCPGqaiVg5mfjb98CQ==}
    engines: {node: '>= 0.4'}

  get-proto@1.0.1:
    resolution: {integrity: sha512-sTSfBjoXBp89JvIKIefqw7U2CCebsc74kiY6awiGogKtoSGbgjYE/G/+l9sF3MWFPNc9IcoOC4ODfKHfxFmp0g==}
    engines: {node: '>= 0.4'}

  get-starknet-core@4.0.0:
    resolution: {integrity: sha512-6pLmidQZkC3wZsrHY99grQHoGpuuXqkbSP65F8ov1/JsEI8DDLkhsAuLCKFzNOK56cJp+f1bWWfTJ57e9r5eqQ==}
    deprecated: Package no longer supported. Please use @starknet-io/get-starknet-core

  glob-parent@5.1.2:
    resolution: {integrity: sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==}
    engines: {node: '>= 6'}

  glob-parent@6.0.2:
    resolution: {integrity: sha512-XxwI8EOhVQgWp6iDL+3b0r86f4d6AX6zSU55HfB4ydCEuXLXc5FcYeOu+nnGftS4TEju/11rt4KJPTMgbfmv4A==}
    engines: {node: '>=10.13.0'}

  glob@10.4.5:
    resolution: {integrity: sha512-7Bv8RF0k6xjo7d4A/PxYLbUCfb6c+Vpd2/mB2yRDlew7Jb5hEXiCD9ibfO7wpk8i4sevK6DFny9h7EYbM3/sHg==}
    hasBin: true

  glob@7.2.3:
    resolution: {integrity: sha512-nFR0zLpU2YCaRxwoCJvL6UvCH2JFyFVIvwTLsIf21AuHlMskA1hhTdk+LlYJtOlYt9v6dvszD2BGRqBL+iQK9Q==}
    deprecated: Glob versions prior to v9 are no longer supported

  globals@11.12.0:
    resolution: {integrity: sha512-WOBp/EEGUiIsJSp7wcv/y6MO+lV9UoncWqxuFfm8eBwzWNgyfBd6Gz+IeKQ9jCmyhoH99g15M3T+QaVHFjizVA==}
    engines: {node: '>=4'}

  globals@14.0.0:
    resolution: {integrity: sha512-oahGvuMGQlPw/ivIYBjVSrWAfWLBeku5tpPE2fOPLi+WHffIWbuh2tCjhyQhTBPMf5E9jDEH4FOmTYgYwbKwtQ==}
    engines: {node: '>=18'}

  globals@15.15.0:
    resolution: {integrity: sha512-7ACyT3wmyp3I61S4fG682L0VA2RGD9otkqGJIwNUMF1SWUombIIk+af1unuDYgMm082aHYwD+mzJvv9Iu8dsgg==}
    engines: {node: '>=18'}

  glsl-noise@0.0.0:
    resolution: {integrity: sha512-b/ZCF6amfAUb7dJM/MxRs7AetQEahYzJ8PtgfrmEdtw6uyGOr+ZSGtgjFm6mfsBkxJ4d2W7kg+Nlqzqvn3Bc0w==}

  gopd@1.2.0:
    resolution: {integrity: sha512-ZUKRh6/kUFoAiTAtTYPZJ3hw9wNxx+BIBOijnlG9PnrJsCcSjs1wyyD6vJpaYtgnzDrKYRSqf3OO6Rfa93xsRg==}
    engines: {node: '>= 0.4'}

  graceful-fs@4.2.11:
    resolution: {integrity: sha512-RbJ5/jmFcNNCcDV5o9eTnBLJ/HszWV0P73bc+Ff4nS/rJj+YaS6IGyiOL0VoBYX+l1Wrl3k63h/KrH+nhJ0XvQ==}

  graphemer@1.4.0:
    resolution: {integrity: sha512-EtKwoO6kxCL9WO5xipiHTZlSzBm7WLT627TqC/uVRd0HKmq8NXyebnNYxDoBi7wt8eTWrUrKXCOVaFq9x1kgag==}

  h3@1.15.3:
    resolution: {integrity: sha512-z6GknHqyX0h9aQaTx22VZDf6QyZn+0Nh+Ym8O/u0SGSkyF5cuTJYKlc8MkzW3Nzf9LE1ivcpmYC3FUGpywhuUQ==}

  has-flag@4.0.0:
    resolution: {integrity: sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==}
    engines: {node: '>=8'}

  has-property-descriptors@1.0.2:
    resolution: {integrity: sha512-55JNKuIW+vq4Ke1BjOTjM2YctQIvCT7GFzHwmfZPGo5wnrgkid0YQtnAleFSqumZm4az3n2BS+erby5ipJdgrg==}

  has-symbols@1.1.0:
    resolution: {integrity: sha512-1cDNdwJ2Jaohmb3sg4OmKaMBwuC48sYni5HUw2DvsC8LjGTLK9h+eb1X6RyuOHe4hT0ULCW68iomhjUoKUqlPQ==}
    engines: {node: '>= 0.4'}

  has-tostringtag@1.0.2:
    resolution: {integrity: sha512-NqADB8VjPFLM2V0VvHUewwwsw0ZWBaIdgo+ieHtK3hasLz4qeCRjYcqfB6AQrBggRKppKF8L52/VqdVsO47Dlw==}
    engines: {node: '>= 0.4'}

  hasown@2.0.2:
    resolution: {integrity: sha512-0hJU9SCPvmMzIBdZFqNPXWa6dqh7WdH0cII9y+CyS8rG3nL48Bclra9HmKhVVUHyPWNH5Y7xDwAB7bfgSjkUMQ==}
    engines: {node: '>= 0.4'}

  hls.js@1.6.5:
    resolution: {integrity: sha512-KMn5n7JBK+olC342740hDPHnGWfE8FiHtGMOdJPfUjRdARTWj9OB+8c13fnsf9sk1VtpuU2fKSgUjHvg4rNbzQ==}

  hpke-js@1.6.2:
    resolution: {integrity: sha512-HllaSHiEEd9bZ9L0F0hFERSu2iAWDptkzVUqxra3lTapSPP8Bnyc6J9Viwn/oktPLBXOJpX57lfXSHYsh4HLag==}
    engines: {node: '>=16.0.0'}

  humanize-ms@1.2.1:
    resolution: {integrity: sha512-Fl70vYtsAFb/C06PTS9dZBo7ihau+Tu/DNCk/OyHhea07S+aeMWpFFkUaXRa8fI+ScZbEI8dfSxwY7gxZ9SAVQ==}

  iconv-lite@0.6.3:
    resolution: {integrity: sha512-4fCk79wshMdzMp2rH06qWrJE4iolqLhCUH+OiuIgU++RB0+94NlDL81atO7GX55uUKueo0txHNtvEyI6D7WdMw==}
    engines: {node: '>=0.10.0'}

  idb-keyval@6.2.2:
    resolution: {integrity: sha512-yjD9nARJ/jb1g+CvD0tlhUHOrJ9Sy0P8T9MF3YaLlHnSRpwPfpTX0XIvpmw3gAJUmEu3FiICLBDPXVwyEvrleg==}

  ieee754@1.2.1:
    resolution: {integrity: sha512-dcyqhDvX1C46lXZcVqCpK+FtMRQVdIMN6/Df5js2zouUsqG7I6sFxitIC+7KYK29KdXOLHdu9zL4sFnoVQnqaA==}

  ignore@5.3.2:
    resolution: {integrity: sha512-hsBTNUqQTDwkWtcdYI2i06Y/nUBEsNEDJKjWdigLvegy8kDuJAS8uRlpkkcQpyEXL0Z/pjDy5HBmMjRCJ2gq+g==}
    engines: {node: '>= 4'}

  ignore@7.0.5:
    resolution: {integrity: sha512-Hs59xBNfUIunMFgWAbGX5cq6893IbWg4KnrjbYwX3tx0ztorVgTDA6B2sxf8ejHJ4wz8BqGUMYlnzNBer5NvGg==}
    engines: {node: '>= 4'}

  immediate@3.0.6:
    resolution: {integrity: sha512-XXOFtyqDjNDAQxVfYxuF7g9Il/IbWmmlQg2MYKOH8ExIT1qg6xc4zyS3HaEEATgs1btfzxq15ciUiY7gjSXRGQ==}

  immer@10.1.1:
    resolution: {integrity: sha512-s2MPrmjovJcoMaHtx6K11Ra7oD05NT97w1IC5zpMkT6Atjr7H8LjaDd81iIxUYpMKSRRNMJE703M1Fhr/TctHw==}

  import-fresh@3.3.1:
    resolution: {integrity: sha512-TR3KfrTZTYLPB6jUjfx6MF9WcWrHL9su5TObK4ZkYgBdWKPOFoSoQIdEuTuR82pmtxH2spWG9h6etwfr1pLBqQ==}
    engines: {node: '>=6'}

  imurmurhash@0.1.4:
    resolution: {integrity: sha512-JmXMZ6wuvDmLiHEml9ykzqO6lwFbof0GG4IkcGaENdCRDDmMVnny7s5HsIgHCbaq0w2MyPhDqkhTUgS2LU2PHA==}
    engines: {node: '>=0.8.19'}

  inflight@1.0.6:
    resolution: {integrity: sha512-k92I/b08q4wvFscXCLvqfsHCrjrF7yiXsQuIVvVE7N82W3+aqpzuUdBbfhWcy/FZR3/4IgflMgKLOsvPDrGCJA==}
    deprecated: This module is not supported, and leaks memory. Do not use it. Check out lru-cache if you want a good and tested way to coalesce async requests by a key value, which is much more comprehensive and powerful.

  inherits@2.0.4:
    resolution: {integrity: sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==}

  iron-webcrypto@1.2.1:
    resolution: {integrity: sha512-feOM6FaSr6rEABp/eDfVseKyTMDt+KGpeB35SkVn9Tyn0CqvVsY3EwI0v5i8nMHyJnzCIQf7nsy3p41TPkJZhg==}

  is-arguments@1.2.0:
    resolution: {integrity: sha512-7bVbi0huj/wrIAOzb8U1aszg9kdi3KN/CyU19CTI7tAoZYEZoL9yCDXpbXN+uPsuWnP02cyug1gleqq+TU+YCA==}
    engines: {node: '>= 0.4'}

  is-binary-path@2.1.0:
    resolution: {integrity: sha512-ZMERYes6pDydyuGidse7OsHxtbI7WVeUEozgR/g7rd0xUimYNlvZRE/K2MgZTjWy725IfelLeVcEM97mmtRGXw==}
    engines: {node: '>=8'}

  is-callable@1.2.7:
    resolution: {integrity: sha512-1BC0BVFhS/p0qtw6enp8e+8OD0UrK0oFLztSjNzhcKA3WDuJxxAPXzPuPtKkjEY9UUoEWlX/8fgKeu2S8i9JTA==}
    engines: {node: '>= 0.4'}

  is-core-module@2.16.1:
    resolution: {integrity: sha512-UfoeMA6fIJ8wTYFEUjelnaGI67v6+N7qXJEvQuIGa99l4xsCruSYOVSQ0uPANn4dAzm8lkYPaKLrrijLq7x23w==}
    engines: {node: '>= 0.4'}

  is-docker@3.0.0:
    resolution: {integrity: sha512-eljcgEDlEns/7AXFosB5K/2nCM4P7FQPkGc/DWLy5rmFEWvZayGrik1d9/QIY5nJ4f9YsVvBkA6kJpHn9rISdQ==}
    engines: {node: ^12.20.0 || ^14.13.1 || >=16.0.0}
    hasBin: true

  is-extglob@2.1.1:
    resolution: {integrity: sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==}
    engines: {node: '>=0.10.0'}

  is-fullwidth-code-point@3.0.0:
    resolution: {integrity: sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==}
    engines: {node: '>=8'}

  is-generator-function@1.1.0:
    resolution: {integrity: sha512-nPUB5km40q9e8UfN/Zc24eLlzdSf9OfKByBw9CIdw4H1giPMeA0OIJvbchsCu4npfI2QcMVBsGEBHKZ7wLTWmQ==}
    engines: {node: '>= 0.4'}

  is-glob@4.0.3:
    resolution: {integrity: sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==}
    engines: {node: '>=0.10.0'}

  is-inside-container@1.0.0:
    resolution: {integrity: sha512-KIYLCCJghfHZxqjYBE7rEy0OBuTd5xCHS7tHVgvCLkx7StIoaxwNW3hCALgEUjFfeRk+MG/Qxmp/vtETEF3tRA==}
    engines: {node: '>=14.16'}
    hasBin: true

  is-number@7.0.0:
    resolution: {integrity: sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==}
    engines: {node: '>=0.12.0'}

  is-promise@2.2.2:
    resolution: {integrity: sha512-+lP4/6lKUBfQjZ2pdxThZvLUAafmZb8OAxFb8XXtiQmS35INgr85hdOGoEs124ez1FCnZJt6jau/T+alh58QFQ==}

  is-promise@4.0.0:
    resolution: {integrity: sha512-hvpoI6korhJMnej285dSg6nu1+e6uxs7zG3BYAm5byqDsgJNWwxzM6z6iZiAgQR4TJ30JmBTOwqZUw3WlyH3AQ==}

  is-regex@1.2.1:
    resolution: {integrity: sha512-MjYsKHO5O7mCsmRGxWcLWheFqN9DJ/2TmngvjKXihe6efViPqc274+Fx/4fYj/r03+ESvBdTXK0V6tA3rgez1g==}
    engines: {node: '>= 0.4'}

  is-stream@2.0.1:
    resolution: {integrity: sha512-hFoiJiTl63nn+kstHGBtewWSKnQLpyb155KHheA1l39uvtO9nWIop1p3udqPcUd/xbF1VLMO4n7OI6p7RbngDg==}
    engines: {node: '>=8'}

  is-typed-array@1.1.15:
    resolution: {integrity: sha512-p3EcsicXjit7SaskXHs1hA91QxgTw46Fv6EFKKGS5DRFLD8yKnohjF3hxoju94b/OcMZoQukzpPpBE9uLVKzgQ==}
    engines: {node: '>= 0.4'}

  is-wsl@3.1.0:
    resolution: {integrity: sha512-UcVfVfaK4Sc4m7X3dUSoHoozQGBEFeDC+zVo06t98xe8CzHSZZBekNXH+tu0NalHolcJ/QAGqS46Hef7QXBIMw==}
    engines: {node: '>=16'}

  isarray@1.0.0:
    resolution: {integrity: sha512-VLghIWNM6ELQzo7zwmcg0NmTVyWKYjvIeM83yjp0wRDTmUnrM678fQbcKBo6n2CJEF0szoG//ytg+TKla89ALQ==}

  isexe@2.0.0:
    resolution: {integrity: sha512-RHxMLp9lnKHGHRng9QFhRCMbYAcVpn69smSGcq3f36xjgVVWThj4qqLbTLlq7Ssj8B+fIQ1EuCEGI2lKsyQeIw==}

  isomorphic-fetch@3.0.0:
    resolution: {integrity: sha512-qvUtwJ3j6qwsF3jLxkZ72qCgjMysPzDfeV240JHiGZsANBYd+EEuu35v7dfrJ9Up0Ak07D7GGSkGhCHTqg/5wA==}

  isomorphic-ws@4.0.1:
    resolution: {integrity: sha512-BhBvN2MBpWTaSHdWRb/bwdZJ1WaehQ2L1KngkCkfLUGF0mAWAT1sQUQacEmQ0jXkFw/czDXPNQSL5u2/Krsz1w==}
    peerDependencies:
      ws: '*'

  isows@1.0.3:
    resolution: {integrity: sha512-2cKei4vlmg2cxEjm3wVSqn8pcoRF/LX/wpifuuNquFO4SQmPwarClT+SUCA2lt+l581tTeZIPIZuIDo2jWN1fg==}
    peerDependencies:
      ws: '*'

  isows@1.0.6:
    resolution: {integrity: sha512-lPHCayd40oW98/I0uvgaHKWCSvkzY27LjWLbtzOm64yQ+G3Q5npjjbdppU65iZXkK1Zt+kH9pfegli0AYfwYYw==}
    peerDependencies:
      ws: '*'

  isows@1.0.7:
    resolution: {integrity: sha512-I1fSfDCZL5P0v33sVqeTDSpcstAg/N+wF5HS033mogOVIp4B+oHC7oOCsA3axAbBSGTJ8QubbNmnIRN/h8U7hg==}
    peerDependencies:
      ws: '*'

  its-fine@1.2.5:
    resolution: {integrity: sha512-fXtDA0X0t0eBYAGLVM5YsgJGsJ5jEmqZEPrGbzdf5awjv0xE7nqv3TVnvtUF060Tkes15DbDAKW/I48vsb6SyA==}
    peerDependencies:
      react: '>=18.0'

  jackspeak@3.4.3:
    resolution: {integrity: sha512-OGlZQpz2yfahA/Rd1Y8Cd9SIEsqvXkLVoSw/cgwhnhFMDbsQFeZYoJJ7bIZBS9BcamUW96asq/npPWugM+RQBw==}

  javascript-natural-sort@0.7.1:
    resolution: {integrity: sha512-nO6jcEfZWQXDhOiBtG2KvKyEptz7RVbpGP4vTD2hLBdmNQSsCiicO2Ioinv6UI4y9ukqnBpy+XZ9H6uLNgJTlw==}

  jayson@4.2.0:
    resolution: {integrity: sha512-VfJ9t1YLwacIubLhONk0KFeosUBwstRWQ0IRT1KDjEjnVnSOVHC3uwugyV7L0c7R9lpVyrUGT2XWiBA1UTtpyg==}
    engines: {node: '>=8'}
    hasBin: true

  jiti@1.21.7:
    resolution: {integrity: sha512-/imKNG4EbWNrVjoNC/1H5/9GFy+tqjGBHCaSsN+P2RnPqjsLmv6UD3Ej+Kj8nBWaRAwyk7kK5ZUc+OEatnTR3A==}
    hasBin: true

  js-cookie@3.0.5:
    resolution: {integrity: sha512-cEiJEAEoIbWfCZYKWhVwFuvPX1gETRYPw6LlaTKoxD3s2AkXzkCjnp6h0V77ozyqj0jakteJ4YqDJT830+lVGw==}
    engines: {node: '>=14'}

  js-sha3@0.8.0:
    resolution: {integrity: sha512-gF1cRrHhIzNfToc802P800N8PpXS+evLLXfsVpowqmAFR9uwbi89WvXg2QspOmXL8QL86J4T1EpFu+yUkwJY3Q==}

  js-tokens@4.0.0:
    resolution: {integrity: sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ==}

  js-yaml@4.1.0:
    resolution: {integrity: sha512-wpxZs9NoxZaJESJGIZTyDEaYpl0FKSA+FB9aJiyemKhMwkxQg63h4T1KJgUGHpTqPDNRcmmYLugrRjJlBtWvRA==}
    hasBin: true

  jsesc@3.1.0:
    resolution: {integrity: sha512-/sM3dO2FOzXjKQhJuo0Q173wf2KOo8t4I8vHy6lF9poUp7bKT0/NHE8fPX23PwfhnykfqnC2xRxOnVw5XuGIaA==}
    engines: {node: '>=6'}
    hasBin: true

  json-buffer@3.0.1:
    resolution: {integrity: sha512-4bV5BfR2mqfQTJm+V5tPPdf+ZpuhiIvTuAB5g8kcrXOZpTT/QwwVRWBywX1ozr6lEuPdbHxwaJlm9G6mI2sfSQ==}

  json-schema-traverse@0.4.1:
    resolution: {integrity: sha512-xbbCH5dCYU5T8LcEhhuh7HJ88HXuW3qsI3Y0zOZFKfZEHcpWiHU/Jxzk629Brsab/mMiHQti9wMP+845RPe3Vg==}

  json-stable-stringify-without-jsonify@1.0.1:
    resolution: {integrity: sha512-Bdboy+l7tA3OGW6FjyFHWkP5LuByj1Tk33Ljyq0axyzdk9//JSi2u3fP1QSmd1KNwq6VOKYGlAu87CisVir6Pw==}

  json-stringify-safe@5.0.1:
    resolution: {integrity: sha512-ZClg6AaYvamvYEE82d3Iyd3vSSIjQ+odgjaTzRuO3s7toCdFKczob2i0zCh7JE8kWn17yvAWhUVxvqGwUalsRA==}

  json5@2.2.3:
    resolution: {integrity: sha512-XmOWe7eyHYH14cLdVPoyg+GOH3rYX++KpzrylJwSW98t3Nk+U8XOl8FWKOgwtzdb8lXGf6zYwDUzeHMWfxasyg==}
    engines: {node: '>=6'}
    hasBin: true

  jsonfile@6.1.0:
    resolution: {integrity: sha512-5dgndWOriYSm5cnYaJNhalLNDKOqFwyDB/rr1E9ZsGciGvKPs8R2xYGCacuf3z6K1YKDz182fd+fY3cn3pMqXQ==}

  keyv@4.5.4:
    resolution: {integrity: sha512-oxVHkHR/EJf2CNXnWxRLW6mg7JyCCUcG0DtEGmL2ctUo1PNTin1PUil+r/+4r5MpVgC/fn1kjsx7mjSujKqIpw==}

  keyvaluestorage-interface@1.0.0:
    resolution: {integrity: sha512-8t6Q3TclQ4uZynJY9IGr2+SsIGwK9JHcO6ootkHCGA0CrQCRy+VkouYNO2xicET6b9al7QKzpebNow+gkpCL8g==}

  levn@0.4.1:
    resolution: {integrity: sha512-+bT2uH4E5LGE7h/n3evcS/sQlJXCpIp6ym8OWJ5eV6+67Dsql/LaaT7qJBAt2rzfoa/5QBGBhxDix1dMt2kQKQ==}
    engines: {node: '>= 0.8.0'}

  lie@3.3.0:
    resolution: {integrity: sha512-UaiMJzeWRlEujzAuw5LokY1L5ecNQYZKfmyZ9L7wDHb/p5etKaxXhohBcrw0EYby+G/NA52vRSN4N39dxHAIwQ==}

  lilconfig@3.1.3:
    resolution: {integrity: sha512-/vlFKAoH5Cgt3Ie+JLhRbwOsCQePABiU3tJ1egGvyQ+33R/vcwM2Zl2QR/LzjsBeItPt3oSVXapn+m4nQDvpzw==}
    engines: {node: '>=14'}

  lines-and-columns@1.2.4:
    resolution: {integrity: sha512-7ylylesZQ/PV29jhEDl3Ufjo6ZX7gCqJr5F7PKrqc93v7fzSymt1BpwEU8nAUXs8qzzvqhbjhK5QZg6Mt/HkBg==}

  lit-element@4.2.0:
    resolution: {integrity: sha512-MGrXJVAI5x+Bfth/pU9Kst1iWID6GHDLEzFEnyULB/sFiRLgkd8NPK/PeeXxktA3T6EIIaq8U3KcbTU5XFcP2Q==}

  lit-html@3.3.0:
    resolution: {integrity: sha512-RHoswrFAxY2d8Cf2mm4OZ1DgzCoBKUKSPvA1fhtSELxUERq2aQQ2h05pO9j81gS1o7RIRJ+CePLogfyahwmynw==}

  lit@3.3.0:
    resolution: {integrity: sha512-DGVsqsOIHBww2DqnuZzW7QsuCdahp50ojuDaBPC7jUDRpYoH0z7kHBBYZewRzer75FwtrkmkKk7iOAwSaWdBmw==}

  locate-path@5.0.0:
    resolution: {integrity: sha512-t7hw9pI+WvuwNJXwk5zVHpyhIqzg2qTlklJOf0mVxGSbe3Fp2VieZcduNYjaLDoy6p9uGpQEGWG87WpMKlNq8g==}
    engines: {node: '>=8'}

  locate-path@6.0.0:
    resolution: {integrity: sha512-iPZK6eYjbxRu3uB4/WZ3EsEIMJFMqAoopl3R+zuq0UjcAm/MO6KCweDgPfP3elTztoKP3KtnVHxTn2NHBSDVUw==}
    engines: {node: '>=10'}

  lodash-es@4.17.21:
    resolution: {integrity: sha512-mKnC+QJ9pWVzv+C4/U3rRsHapFfHvQFoFB92e52xeyGMcX6/OlIl78je1u8vePzYZSkkogMPJ2yjxxsb89cxyw==}

  lodash.merge@4.6.2:
    resolution: {integrity: sha512-0KpjqXRVvrYyCsX1swR/XTK0va6VQkQM6MNo7PqW77ByjAhoARA8EfrP1N4+KlKj8YS0ZUCtRT/YUuhyYDujIQ==}

  loose-envify@1.4.0:
    resolution: {integrity: sha512-lyuxPGr/Wfhrlem2CL/UcnUc1zcqKAImBDzukY7Y5F/yQiNdko6+fRLevlw1HgMySw7f611UIY408EtxRSoK3Q==}
    hasBin: true

  lossless-json@4.0.2:
    resolution: {integrity: sha512-+z0EaLi2UcWi8MZRxA5iTb6m4Ys4E80uftGY+yG5KNFJb5EceQXOhdW/pWJZ8m97s26u7yZZAYMcKWNztSZssA==}

  lru-cache@10.4.3:
    resolution: {integrity: sha512-JNAzZcXrCt42VGLuYz0zfAzDfAvJWW6AfYlDBQyDV5DClI2m5sAmK+OIO7s59XfsRsWHp02jAJrRadPRGTt6SQ==}

  lru-cache@5.1.1:
    resolution: {integrity: sha512-KpNARQA3Iwv+jTA0utUVVbrh+Jlrr1Fv0e56GGzAFOXN7dk/FviaDW8LHmK52DlcH4WP2n6gI8vN1aesBFgo9w==}

  lucide-react@0.518.0:
    resolution: {integrity: sha512-kFg34uQqnVl/7HwAiigxPSpj//43VIVHQbMygQPtS1yT4btMXHCWUipHcgcXHD2pm1Z2nUBA/M+Vnh/YmWXQUw==}
    peerDependencies:
      react: ^16.5.1 || ^17.0.0 || ^18.0.0 || ^19.0.0

  maath@0.10.8:
    resolution: {integrity: sha512-tRvbDF0Pgqz+9XUa4jjfgAQ8/aPKmQdWXilFu2tMy4GWj4NOsx99HlULO4IeREfbO3a0sA145DZYyvXPkybm0g==}
    peerDependencies:
      '@types/three': '>=0.134.0'
      three: '>=0.134.0'

  match-sorter@6.3.4:
    resolution: {integrity: sha512-jfZW7cWS5y/1xswZo8VBOdudUiSd9nifYRWphc9M5D/ee4w4AoXLgBEdRbgVaxbMuagBPeUC5y2Hi8DO6o9aDg==}

  math-intrinsics@1.1.0:
    resolution: {integrity: sha512-/IXtbwEk5HTPyEwyKX6hGkYXxM9nbj64B+ilVJnC/R6B0pH5G4V3b0pVbL7DBj4tkhBAppbQUlf6F6Xl9LHu1g==}
    engines: {node: '>= 0.4'}

  mathjs@12.4.3:
    resolution: {integrity: sha512-oHdGPDbp7gO873xxG90RLq36IuicuKvbpr/bBG5g9c8Obm/VsKVrK9uoRZZHUodohzlnmCEqfDzbR3LH6m+aAQ==}
    engines: {node: '>= 18'}
    hasBin: true

  merge2@1.4.1:
    resolution: {integrity: sha512-8q7VEgMJW4J8tcfVPy8g09NcQwZdbwFEqhe/WZkoIzjn/3TGDwtOCYtXGxA3O8tPzpczCCDgv+P2P5y00ZJOOg==}
    engines: {node: '>= 8'}

  meshline@3.3.1:
    resolution: {integrity: sha512-/TQj+JdZkeSUOl5Mk2J7eLcYTLiQm2IDzmlSvYm7ov15anEcDJ92GHqqazxTSreeNgfnYu24kiEvvv0WlbCdFQ==}
    peerDependencies:
      three: '>=0.137'

  meshoptimizer@0.18.1:
    resolution: {integrity: sha512-ZhoIoL7TNV4s5B6+rx5mC//fw8/POGyNxS/DZyCJeiZ12ScLfVwRE/GfsxwiTkMYYD5DmK2/JXnEVXqL4rF+Sw==}

  micro-ftch@0.3.1:
    resolution: {integrity: sha512-/0LLxhzP0tfiR5hcQebtudP56gUurs2CLkGarnCiB/OqEyUFQ6U3paQi/tgLv0hBJYt2rnr9MNpxz4fiiugstg==}

  micro-starknet@0.2.3:
    resolution: {integrity: sha512-6XBcC+GerlwJSR4iA0VaeXtS2wrayWFcA4PEzrJPMuFmWCaUtuGIq5K/DB5F/XgnL54/zl2Bxo690Lj7mYVA8A==}

  micromatch@4.0.8:
    resolution: {integrity: sha512-PXwfBhYu0hBCPw8Dn0E+WDYb7af3dSLVWKi3HGv84IdF4TyFoC0ysxFd0Goxw7nSv4T/PzEJQxsYsEiFCKo2BA==}
    engines: {node: '>=8.6'}

  microseconds@0.2.0:
    resolution: {integrity: sha512-n7DHHMjR1avBbSpsTBj6fmMGh2AGrifVV4e+WYc3Q9lO+xnSZ3NyhcBND3vzzatt05LFhoKFRxrIyklmLlUtyA==}

  minimatch@3.1.2:
    resolution: {integrity: sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==}

  minimatch@9.0.5:
    resolution: {integrity: sha512-G6T0ZX48xgozx7587koeX9Ys2NYy6Gmv//P89sEte9V9whIapMNF4idKxnW2QtCcLiTWlb/wfCabAtAFWhhBow==}
    engines: {node: '>=16 || 14 >=14.17'}

  minipass@7.1.2:
    resolution: {integrity: sha512-qOOzS1cBTWYF4BH8fVePDBOO9iptMnGUEZwNc/cMWnTV2nVLZ7VoNWEPHkYczZA0pdoA7dl6e7FL659nX9S2aw==}
    engines: {node: '>=16 || 14 >=14.17'}

  mipd@0.0.7:
    resolution: {integrity: sha512-aAPZPNDQ3uMTdKbuO2YmAw2TxLHO0moa4YKAyETM/DTj5FloZo+a+8tU+iv4GmW+sOxKLSRwcSFuczk+Cpt6fg==}
    peerDependencies:
      typescript: '>=5.0.4'
    peerDependenciesMeta:
      typescript:
        optional: true

  mobx@6.13.6:
    resolution: {integrity: sha512-r19KNV0uBN4b+ER8Z0gA4y+MzDYIQ2SvOmn3fUrqPnWXdQfakd9yfbPBDBF/p5I+bd3N5Rk1fHONIvMay+bJGA==}

  ms@2.1.3:
    resolution: {integrity: sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==}

  multiformats@9.9.0:
    resolution: {integrity: sha512-HoMUjhH9T8DDBNT+6xzkrd9ga/XiBI4xLr58LJACwK6G3HTOPeMz4nB4KJs33L2BelrIJa7P0VuNaVF3hMYfjg==}

  mz@2.7.0:
    resolution: {integrity: sha512-z81GNO7nnYMEhrGh9LeymoE4+Yr0Wn5McHIZMK5cfQCl+NDX08sCZgUc9/6MHni9IWuFLm1Z3HTCXu2z9fN62Q==}

  nano-time@1.0.0:
    resolution: {integrity: sha512-flnngywOoQ0lLQOTRNexn2gGSNuM9bKj9RZAWSzhQ+UJYaAFG9bac4DW9VHjUAzrOaIcajHybCTHe/bkvozQqA==}

  nanoid@3.3.11:
    resolution: {integrity: sha512-N8SpfPUnUp1bK+PMYW8qSWdl9U+wwNWI4QKxOYDy9JAro3WMX7p2OeVRF9v+347pnakNevPmiHhNmZ2HbFA76w==}
    engines: {node: ^10 || ^12 || ^13.7 || ^14 || >=15.0.1}
    hasBin: true

  natural-compare@1.4.0:
    resolution: {integrity: sha512-OWND8ei3VtNC9h7V60qff3SVobHr996CTwgxubgyQYEpg290h9J0buyECNNJexkFm5sOajh5G116RYA1c8ZMSw==}

  neverthrow@8.2.0:
    resolution: {integrity: sha512-kOCT/1MCPAxY5iUV3wytNFUMUolzuwd/VF/1KCx7kf6CutrOsTie+84zTGTpgQycjvfLdBBdvBvFLqFD2c0wkQ==}
    engines: {node: '>=18'}

  node-fetch-native@1.6.6:
    resolution: {integrity: sha512-8Mc2HhqPdlIfedsuZoc3yioPuzp6b+L5jRCRY1QzuWZh2EGJVQrGppC6V6cF0bLdbW0+O2YpqCA25aF/1lvipQ==}

  node-fetch@2.7.0:
    resolution: {integrity: sha512-c4FRfUm/dbcWZ7U+1Wq0AwCyFL+3nt2bEw05wfxSz+DWpWsitgmSgYmy2dQdWyKC1694ELPqMs/YzUSNozLt8A==}
    engines: {node: 4.x || >=6.0.0}
    peerDependencies:
      encoding: ^0.1.0
    peerDependenciesMeta:
      encoding:
        optional: true

  node-gyp-build-optional-packages@5.1.1:
    resolution: {integrity: sha512-+P72GAjVAbTxjjwUmwjVrqrdZROD4nf8KgpBoDxqXXTiYZZt/ud60dE5yvCSr9lRO8e8yv6kgJIC0K0PfZFVQw==}
    hasBin: true

  node-gyp-build@4.8.4:
    resolution: {integrity: sha512-LA4ZjwlnUblHVgq0oBF3Jl/6h/Nvs5fzBLwdEF4nuxnFdsfajde4WfxtJr3CaiH+F6ewcIB/q4jQ4UzPyid+CQ==}
    hasBin: true

  node-mock-http@1.0.0:
    resolution: {integrity: sha512-0uGYQ1WQL1M5kKvGRXWQ3uZCHtLTO8hln3oBjIusM75WoesZ909uQJs/Hb946i2SS+Gsrhkaa6iAO17jRIv6DQ==}

  node-releases@2.0.19:
    resolution: {integrity: sha512-xxOWJsBKtzAq7DY0J+DTzuz58K8e7sJbdgwkbMWQe8UYB6ekmsQ45q0M/tJDsGaZmbC+l7n57UV8Hl5tHxO9uw==}

  normalize-path@3.0.0:
    resolution: {integrity: sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA==}
    engines: {node: '>=0.10.0'}

  normalize-range@0.1.2:
    resolution: {integrity: sha512-bdok/XvKII3nUpklnV6P2hxtMNrCboOjAcyBuQnWEhO665FwrSNRxU+AqpsyvO6LgGYPspN+lu5CLtw4jPRKNA==}
    engines: {node: '>=0.10.0'}

  obj-multiplex@1.0.0:
    resolution: {integrity: sha512-0GNJAOsHoBHeNTvl5Vt6IWnpUEcc3uSRxzBri7EDyIcMgYvnY2JL2qdeV5zTMjWQX5OHcD5amcW2HFfDh0gjIA==}

  object-assign@4.1.1:
    resolution: {integrity: sha512-rJgTQnkUnH1sFw8yT6VSU3zD3sWmu6sZhIseY8VX+GRu3P6F7Fu+JNDoXfklElbLJSnc3FUQHVe4cU5hj+BcUg==}
    engines: {node: '>=0.10.0'}

  object-hash@3.0.0:
    resolution: {integrity: sha512-RSn9F68PjH9HqtltsSnqYC1XXoWe9Bju5+213R98cNGttag9q9yAOTzdbsqvIa7aNm5WffBZFpWYr2aWrklWAw==}
    engines: {node: '>= 6'}

  oblivious-set@1.0.0:
    resolution: {integrity: sha512-z+pI07qxo4c2CulUHCDf9lcqDlMSo72N/4rLUpRXf6fu+q8vjt8y0xS+Tlf8NTJDdTXHbdeO1n3MlbctwEoXZw==}

  ofetch@1.4.1:
    resolution: {integrity: sha512-QZj2DfGplQAr2oj9KzceK9Hwz6Whxazmn85yYeVuS3u9XTMOGMRx0kO95MQ+vLsj/S/NwBDMMLU5hpxvI6Tklw==}

  on-exit-leak-free@0.2.0:
    resolution: {integrity: sha512-dqaz3u44QbRXQooZLTUKU41ZrzYrcvLISVgbrzbyCMxpmSLJvZ3ZamIJIZ29P6OhZIkNIQKosdeM6t1LYbA9hg==}

  once@1.4.0:
    resolution: {integrity: sha512-lNaJgI+2Q5URQBkccEKHTQOPaXdUxnZZElQTZY0MFUAuaEqe1E+Nyvgdz/aIyNi6Z9MzO5dv1H8n58/GELp3+w==}

  open@10.1.2:
    resolution: {integrity: sha512-cxN6aIDPz6rm8hbebcP7vrQNhvRcveZoJU72Y7vskh4oIm+BZwBECnx5nTmrlres1Qapvx27Qo1Auukpf8PKXw==}
    engines: {node: '>=18'}

  optionator@0.9.4:
    resolution: {integrity: sha512-6IpQ7mKUxRcZNLIObR0hz7lxsapSSIYNZJwXPGeF0mTVqGKFIXj1DQcMoT22S3ROcLyY/rz0PWaWZ9ayWmad9g==}
    engines: {node: '>= 0.8.0'}

  ox@0.6.7:
    resolution: {integrity: sha512-17Gk/eFsFRAZ80p5eKqv89a57uXjd3NgIf1CaXojATPBuujVc/fQSVhBeAU9JCRB+k7J50WQAyWTxK19T9GgbA==}
    peerDependencies:
      typescript: '>=5.4.0'
    peerDependenciesMeta:
      typescript:
        optional: true

  ox@0.7.1:
    resolution: {integrity: sha512-+k9fY9PRNuAMHRFIUbiK9Nt5seYHHzSQs9Bj+iMETcGtlpS7SmBzcGSVUQO3+nqGLEiNK4598pHNFlVRaZbRsg==}
    peerDependencies:
      typescript: '>=5.4.0'
    peerDependenciesMeta:
      typescript:
        optional: true

  ox@0.8.1:
    resolution: {integrity: sha512-e+z5epnzV+Zuz91YYujecW8cF01mzmrUtWotJ0oEPym/G82uccs7q0WDHTYL3eiONbTUEvcZrptAKLgTBD3u2A==}
    peerDependencies:
      typescript: '>=5.4.0'
    peerDependenciesMeta:
      typescript:
        optional: true

  p-limit@2.3.0:
    resolution: {integrity: sha512-//88mFWSJx8lxCzwdAABTJL2MyWB12+eIY7MDL2SqLmAkeKU9qxRvWuSyTjm3FUmpBEMuFfckAIqEaVGUDxb6w==}
    engines: {node: '>=6'}

  p-limit@3.1.0:
    resolution: {integrity: sha512-TYOanM3wGwNGsZN2cVTYPArw454xnXj5qmWF1bEoAc4+cU/ol7GVh7odevjp1FNHduHc3KZMcFduxU5Xc6uJRQ==}
    engines: {node: '>=10'}

  p-locate@4.1.0:
    resolution: {integrity: sha512-R79ZZ/0wAxKGu3oYMlz8jy/kbhsNrS7SKZ7PxEHBgJ5+F2mtFW2fK2cOtBh1cHYkQsbzFV7I+EoRKe6Yt0oK7A==}
    engines: {node: '>=8'}

  p-locate@5.0.0:
    resolution: {integrity: sha512-LaNjtRWUBY++zB5nE/NwcaoMylSPk+S+ZHNB1TzdbMJMny6dynpAGt7X/tl/QYq3TIeE6nxHppbo2LGymrG5Pw==}
    engines: {node: '>=10'}

  p-try@2.2.0:
    resolution: {integrity: sha512-R4nPAVTAU0B9D35/Gk3uJf/7XYbQcyohSKdvAxIRSNghFl4e71hVoGnBNQz9cWaXxO2I10KTC+3jMdvvoKw6dQ==}
    engines: {node: '>=6'}

  package-json-from-dist@1.0.1:
    resolution: {integrity: sha512-UEZIS3/by4OC8vL3P2dTXRETpebLI2NiI5vIrjaD/5UtrkFX/tNbwjTSRAGC/+7CAo2pIcBaRgWmcBBHcsaCIw==}

  pako@2.1.0:
    resolution: {integrity: sha512-w+eufiZ1WuJYgPXbV/PO3NCMEc3xqylkKHzp8bxp1uW4qaSNQUkwmLLEc3kKsfz8lpV1F8Ht3U1Cm+9Srog2ug==}

  parent-module@1.0.1:
    resolution: {integrity: sha512-GQ2EWRpQV8/o+Aw8YqtfZZPfNRWZYkbidE9k5rpl/hC3vtHHBfGm2Ifi6qWV+coDGkrUKZAxE3Lot5kcsRlh+g==}
    engines: {node: '>=6'}

  path-exists@4.0.0:
    resolution: {integrity: sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAHfZQ8FnmB4MG4LWy7/w==}
    engines: {node: '>=8'}

  path-is-absolute@1.0.1:
    resolution: {integrity: sha512-AVbw3UJ2e9bq64vSaS9Am0fje1Pa8pbGqTTsmXfaIiMpnr5DlDhfJOuLj9Sf95ZPVDAUerDfEk88MPmPe7UCQg==}
    engines: {node: '>=0.10.0'}

  path-key@3.1.1:
    resolution: {integrity: sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==}
    engines: {node: '>=8'}

  path-parse@1.0.7:
    resolution: {integrity: sha512-LDJzPVEEEPR+y48z93A0Ed0yXb8pAByGWo/k5YYdYgpY2/2EsOsksJrq7lOHxryrVOn1ejG6oAp8ahvOIQD8sw==}

  path-scurry@1.11.1:
    resolution: {integrity: sha512-Xa4Nw17FS9ApQFJ9umLiJS4orGjm7ZzwUrwamcGQuHSzDyth9boKDaycYdDcZDuqYATXw4HFXgaqWTctW/v1HA==}
    engines: {node: '>=16 || 14 >=14.18'}

  picocolors@1.1.1:
    resolution: {integrity: sha512-xceH2snhtb5M9liqDsmEw56le376mTZkEX/jEb/RxNFyegNul7eNslCXP9FDj/Lcu0X8KEyMceP2ntpaHrDEVA==}

  picomatch@2.3.1:
    resolution: {integrity: sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==}
    engines: {node: '>=8.6'}

  pify@2.3.0:
    resolution: {integrity: sha512-udgsAY+fTnvv7kI7aaxbqwWNb0AHiB0qBO89PZKPkoTmGOgdbrHDKD+0B2X4uTfJ/FT1R09r9gTsjUjNJotuog==}
    engines: {node: '>=0.10.0'}

  pino-abstract-transport@0.5.0:
    resolution: {integrity: sha512-+KAgmVeqXYbTtU2FScx1XS3kNyfZ5TrXY07V96QnUSFqo2gAqlvmaxH67Lj7SWazqsMabf+58ctdTcBgnOLUOQ==}

  pino-std-serializers@4.0.0:
    resolution: {integrity: sha512-cK0pekc1Kjy5w9V2/n+8MkZwusa6EyyxfeQCB799CQRhRt/CqYKiWs5adeu8Shve2ZNffvfC/7J64A2PJo1W/Q==}

  pino@7.11.0:
    resolution: {integrity: sha512-dMACeu63HtRLmCG8VKdy4cShCPKaYDR4youZqoSWLxl5Gu99HUw8bw75thbPv9Nip+H+QYX8o3ZJbTdVZZ2TVg==}
    hasBin: true

  pirates@4.0.6:
    resolution: {integrity: sha512-saLsH7WeYYPiD25LDuLRRY/i+6HaPYr6G1OUlN39otzkSTxKnubR9RTxS3/Kk50s1g2JTgFwWQDQyplC5/SHZg==}
    engines: {node: '>= 6'}

  pngjs@5.0.0:
    resolution: {integrity: sha512-40QW5YalBNfQo5yRYmiw7Yz6TKKVr3h6970B2YE+3fQpsWcrbj1PzJgxeJ19DRQjhMbKPIuMY8rFaXc8moolVw==}
    engines: {node: '>=10.13.0'}

  pony-cause@2.1.11:
    resolution: {integrity: sha512-M7LhCsdNbNgiLYiP4WjsfLUuFmCfnjdF6jKe2R9NKl4WFN+HZPGHJZ9lnLP7f9ZnKe3U9nuWD0szirmj+migUg==}
    engines: {node: '>=12.0.0'}

  possible-typed-array-names@1.1.0:
    resolution: {integrity: sha512-/+5VFTchJDoVj3bhoqi6UeymcD00DAwb1nJwamzPvHEszJ4FpF6SNNbUbOS8yI56qHzdV8eK0qEfOSiodkTdxg==}
    engines: {node: '>= 0.4'}

  postcss-import@15.1.0:
    resolution: {integrity: sha512-hpr+J05B2FVYUAXHeK1YyI267J/dDDhMU6B6civm8hSY1jYJnBXxzKDKDswzJmtLHryrjhnDjqqp/49t8FALew==}
    engines: {node: '>=14.0.0'}
    peerDependencies:
      postcss: ^8.0.0

  postcss-js@4.0.1:
    resolution: {integrity: sha512-dDLF8pEO191hJMtlHFPRa8xsizHaM82MLfNkUHdUtVEV3tgTp5oj+8qbEqYM57SLfc74KSbw//4SeJma2LRVIw==}
    engines: {node: ^12 || ^14 || >= 16}
    peerDependencies:
      postcss: ^8.4.21

  postcss-load-config@4.0.2:
    resolution: {integrity: sha512-bSVhyJGL00wMVoPUzAVAnbEoWyqRxkjv64tUl427SKnPrENtq6hJwUojroMz2VB+Q1edmi4IfrAPpami5VVgMQ==}
    engines: {node: '>= 14'}
    peerDependencies:
      postcss: '>=8.0.9'
      ts-node: '>=9.0.0'
    peerDependenciesMeta:
      postcss:
        optional: true
      ts-node:
        optional: true

  postcss-nested@6.2.0:
    resolution: {integrity: sha512-HQbt28KulC5AJzG+cZtj9kvKB93CFCdLvog1WFLf1D+xmMvPGlBstkpTEZfK5+AN9hfJocyBFCNiqyS48bpgzQ==}
    engines: {node: '>=12.0'}
    peerDependencies:
      postcss: ^8.2.14

  postcss-selector-parser@6.1.2:
    resolution: {integrity: sha512-Q8qQfPiZ+THO/3ZrOrO0cJJKfpYCagtMUkXbnEfmgUjwXg6z/WBeOyS9APBBPCTSiDV+s4SwQGu8yFsiMRIudg==}
    engines: {node: '>=4'}

  postcss-value-parser@4.2.0:
    resolution: {integrity: sha512-1NNCs6uurfkVbeXG4S8JFT9t19m45ICnif8zWLd5oPSZ50QnwMfK+H3jv408d4jw/7Bttv5axS5IiHoLaVNHeQ==}

  postcss@8.5.6:
    resolution: {integrity: sha512-3Ybi1tAuwAP9s0r1UQ2J4n5Y0G05bJkpUIO0/bI9MhwmD70S5aTWbXGBwxHrelT+XM1k6dM0pk+SwNkpTRN7Pg==}
    engines: {node: ^10 || ^12 || >=14}

  posthog-js-lite@3.2.1:
    resolution: {integrity: sha512-F+S+T9XiQr2rOkD0UFTr8yu8qScm4aM2lR5PmyknxxqlkC5gpRKS+Hi8cq5CYda7Q3BODh0h7pdW1P2XfZjEag==}

  potpack@1.0.2:
    resolution: {integrity: sha512-choctRBIV9EMT9WGAZHn3V7t0Z2pMQyl0EZE6pFc/6ml3ssw7Dlf/oAOvFwjm1HVsqfQN8GfeFyJ+d8tRzqueQ==}

  prelude-ls@1.2.1:
    resolution: {integrity: sha512-vkcDPrRZo1QZLbn5RLGPpg/WmIQ65qoWWhcGKf/b5eplkkarX0m9z8ppCat4mlOqUsWpyNuYgO3VRyrYHSzX5g==}
    engines: {node: '>= 0.8.0'}

  process-nextick-args@2.0.1:
    resolution: {integrity: sha512-3ouUOpQhtgrbOa17J7+uxOTpITYWaGP7/AhoR3+A+/1e9skrzelGi/dXzEYyvbxubEF6Wn2ypscTKiKJFFn1ag==}

  process-warning@1.0.0:
    resolution: {integrity: sha512-du4wfLyj4yCZq1VupnVSZmRsPJsNuxoDQFdCFHLaYiEbFBD7QE0a+I4D7hOxrVnh78QE/YipFAj9lXHiXocV+Q==}

  promise-worker-transferable@1.0.4:
    resolution: {integrity: sha512-bN+0ehEnrXfxV2ZQvU2PetO0n4gqBD4ulq3MI1WOPLgr7/Mg9yRQkX5+0v1vagr74ZTsl7XtzlaYDo2EuCeYJw==}

  prop-types@15.8.1:
    resolution: {integrity: sha512-oj87CgZICdulUohogVAR7AjlC0327U4el4L6eAvOqCeudMDVU0NThNaV+b9Df4dXgSP1gXMTnPdhfe/2qDH5cg==}

  proxy-compare@2.6.0:
    resolution: {integrity: sha512-8xuCeM3l8yqdmbPoYeLbrAXCBWu19XEYc5/F28f5qOaoAIMyfmBUkl5axiK+x9olUvRlcekvnm98AP9RDngOIw==}

  proxy-deep@3.1.1:
    resolution: {integrity: sha512-kppbvLUNJ4IOMZds9/4gz/rtT5OFiesy3XosLsgMKlF3vb6GA5Y3ptyDlzKLcOcUBW+zaY+RiMINTsgE+O6e+Q==}

  psl@1.15.0:
    resolution: {integrity: sha512-JZd3gMVBAVQkSs6HdNZo9Sdo0LNcQeMNP3CozBJb3JYC/QUYZTnKxP+f8oWRX4rHP5EurWxqAHTSwUCjlNKa1w==}

  pump@3.0.3:
    resolution: {integrity: sha512-todwxLMY7/heScKmntwQG8CXVkWUOdYxIvY2s0VWAAMh/nd8SoYiRaKjlr7+iCs984f2P8zvrfWcDDYVb73NfA==}

  punycode@2.3.1:
    resolution: {integrity: sha512-vYt7UD1U9Wg6138shLtLOvdAu+8DsC/ilFtEVHcH+wydcSpNE20AfSOduf6MkRFahL5FY7X1oU7nKVZFtfq8Fg==}
    engines: {node: '>=6'}

  qrcode@1.5.3:
    resolution: {integrity: sha512-puyri6ApkEHYiVl4CFzo1tDkAZ+ATcnbJrJ6RiBM1Fhctdn/ix9MTE3hRph33omisEbC/2fcfemsseiKgBPKZg==}
    engines: {node: '>=10.13.0'}
    hasBin: true

  query-string@7.1.3:
    resolution: {integrity: sha512-hh2WYhq4fi8+b+/2Kg9CEge4fDPvHS534aOOvOZeQ3+Vf2mCFsaFBYj0i+iXcAq6I9Vzp5fjMFBlONvayDC1qg==}
    engines: {node: '>=6'}

  querystringify@2.2.0:
    resolution: {integrity: sha512-FIqgj2EUvTa7R50u0rGsyTftzjYmv/a3hO345bZNrqabNqjtgiDMgmo4mkUjd+nzU5oF3dClKqFIPUKybUyqoQ==}

  queue-microtask@1.2.3:
    resolution: {integrity: sha512-NuaNSa6flKT5JaSYQzJok04JzTL1CA6aGhv5rfLW3PgqA+M2ChpZQnAC8h8i4ZFkBS8X5RqkDBHA7r4hej3K9A==}

  quick-format-unescaped@4.0.4:
    resolution: {integrity: sha512-tYC1Q1hgyRuHgloV/YXs2w15unPVh8qfu/qCTfhTYamaw7fyhumKa2yGpdSo87vY32rIclj+4fWYQXUMs9EHvg==}

  radix3@1.1.2:
    resolution: {integrity: sha512-b484I/7b8rDEdSDKckSSBA8knMpcdsXudlE/LNL639wFoHKwLbEkQFZHWEYwDC0wa0FKUcCY+GAF73Z7wxNVFA==}

  react-composer@5.0.3:
    resolution: {integrity: sha512-1uWd07EME6XZvMfapwZmc7NgCZqDemcvicRi3wMJzXsQLvZ3L7fTHVyPy1bZdnWXM4iPjYuNE+uJ41MLKeTtnA==}
    peerDependencies:
      react: ^15.0.0 || ^16.0.0 || ^17.0.0 || ^18.0.0

  react-dom@18.3.1:
    resolution: {integrity: sha512-5m4nQKp+rZRb09LNH59GM4BxTh9251/ylbKIbpe7TpGxfJ+9kv6BLkLBXIjjspbgbnIBNqlI23tRnTWT0snUIw==}
    peerDependencies:
      react: ^18.3.1

  react-is@16.13.1:
    resolution: {integrity: sha512-24e6ynE2H+OKt4kqsOvNd8kBpV65zoxbA4BVsEOB3ARVWQki/DHzaUoC5KuON/BiccDaCCTZBuOcfZs70kR8bQ==}

  react-query@3.39.3:
    resolution: {integrity: sha512-nLfLz7GiohKTJDuT4us4X3h/8unOh+00MLb2yJoGTPjxKs2bc1iDhkNx2bd5MKklXnOD3NrVZ+J2UXujA5In4g==}
    peerDependencies:
      react: ^16.8.0 || ^17.0.0 || ^18.0.0
      react-dom: '*'
      react-native: '*'
    peerDependenciesMeta:
      react-dom:
        optional: true
      react-native:
        optional: true

  react-reconciler@0.27.0:
    resolution: {integrity: sha512-HmMDKciQjYmBRGuuhIaKA1ba/7a+UsM5FzOZsMO2JYHt9Jh8reCb7j1eDC95NOyUlKM9KRyvdx0flBuDvYSBoA==}
    engines: {node: '>=0.10.0'}
    peerDependencies:
      react: ^18.0.0

  react-refresh@0.17.0:
    resolution: {integrity: sha512-z6F7K9bV85EfseRCp2bzrpyQ0Gkw1uLoCel9XBVWPg/TjRj94SkJzUTGfOa4bs7iJvBWtQG0Wq7wnI0syw3EBQ==}
    engines: {node: '>=0.10.0'}

  react-use-measure@2.1.7:
    resolution: {integrity: sha512-KrvcAo13I/60HpwGO5jpW7E9DfusKyLPLvuHlUyP5zqnmAPhNc6qTRjUQrdTADl0lpPpDVU2/Gg51UlOGHXbdg==}
    peerDependencies:
      react: '>=16.13'
      react-dom: '>=16.13'
    peerDependenciesMeta:
      react-dom:
        optional: true

  react@18.3.1:
    resolution: {integrity: sha512-wS+hAgJShR0KhEvPJArfuPVN1+Hz1t0Y6n5jLrGQbkb4urgPE/0Rve+1kMB1v/oWgHgm4WIcV+i7F2pTVj+2iQ==}
    engines: {node: '>=0.10.0'}

  read-cache@1.0.0:
    resolution: {integrity: sha512-Owdv/Ft7IjOgm/i0xvNDZ1LrRANRfew4b2prF3OWMQLxLfu3bS8FVhCsrSCMK4lR56Y9ya+AThoTpDCTxCmpRA==}

  readable-stream@2.3.8:
    resolution: {integrity: sha512-8p0AUk4XODgIewSi0l8Epjs+EVnWiK7NoDIEGU0HhE7+ZyY8D1IMY7odu5lRrFXGg71L15KG8QrPmum45RTtdA==}

  readable-stream@3.6.2:
    resolution: {integrity: sha512-9u/sniCrY3D5WdsERHzHE4G2YCXqoG5FTHUiCC4SIbr6XcLZBY05ya9EKjYek9O5xOAwjGq+1JdGBAS7Q9ScoA==}
    engines: {node: '>= 6'}

  readdirp@3.6.0:
    resolution: {integrity: sha512-hOS089on8RduqdbhvQ5Z37A0ESjsqz6qnRcffsMU3495FuTdqSm+7bhJ29JvIOsBDEEnan5DPu9t3To9VRlMzA==}
    engines: {node: '>=8.10.0'}

  readdirp@4.1.2:
    resolution: {integrity: sha512-GDhwkLfywWL2s6vEjyhri+eXmfH6j1L7JE27WhqLeYzoh/A3DBaYGEj2H/HFZCn/kMfim73FXxEJTw06WtxQwg==}
    engines: {node: '>= 14.18.0'}

  real-require@0.1.0:
    resolution: {integrity: sha512-r/H9MzAWtrv8aSVjPCMFpDMl5q66GqtmmRkRjpHTsp4zBAa+snZyiQNlMONiUmEJcsnaw0wCauJ2GWODr/aFkg==}
    engines: {node: '>= 12.13.0'}

  redeyed@2.1.1:
    resolution: {integrity: sha512-FNpGGo1DycYAdnrKFxCMmKYgo/mILAqtRYbkdQD8Ep/Hk2PQ5+aEAEx+IU713RTDmuBaH0c8P5ZozurNu5ObRQ==}

  regenerator-runtime@0.14.1:
    resolution: {integrity: sha512-dYnhHh0nJoMfnkZs6GmmhFknAGRrLznOu5nc9ML+EJxGvrx6H7teuevqVqCuPcPK//3eDrrjQhehXVx9cnkGdw==}

  remove-accents@0.5.0:
    resolution: {integrity: sha512-8g3/Otx1eJaVD12e31UbJj1YzdtVvzH85HV7t+9MJYk/u3XmkOUJ5Ys9wQrf9PCPK8+xn4ymzqYCiZl6QWKn+A==}

  require-directory@2.1.1:
    resolution: {integrity: sha512-fGxEI7+wsG9xrvdjsrlmL22OMTTiHRwAMroiEeMgq8gzoLC/PQr7RsRDSTLUg/bZAZtF+TVIkHc6/4RIKrui+Q==}
    engines: {node: '>=0.10.0'}

  require-from-string@2.0.2:
    resolution: {integrity: sha512-Xf0nWe6RseziFMu+Ap9biiUbmplq6S9/p+7w7YXP/JBHhrUDDUhwa+vANyubuqfZWTveU//DYVGsDG7RKL/vEw==}
    engines: {node: '>=0.10.0'}

  require-main-filename@2.0.0:
    resolution: {integrity: sha512-NKN5kMDylKuldxYLSUfrbo5Tuzh4hd+2E8NPPX02mZtn1VuREQToYe/ZdlJy+J3uCpfaiGF05e7B8W0iXbQHmg==}

  requires-port@1.0.0:
    resolution: {integrity: sha512-KigOCHcocU3XODJxsu8i/j8T9tzT4adHiecwORRQ0ZZFcp7ahwXuRU1m+yuO90C5ZUyGeGfocHDI14M3L3yDAQ==}

  resolve-from@4.0.0:
    resolution: {integrity: sha512-pb/MYmXstAkysRFx8piNI1tGFNQIFA3vkE3Gq4EuA1dF6gHp/+vgZqsCGJapvy8N3Q+4o7FwvquPJcnZ7RYy4g==}
    engines: {node: '>=4'}

  resolve@1.22.10:
    resolution: {integrity: sha512-NPRy+/ncIMeDlTAsuqwKIiferiawhefFJtkNSW0qZJEqMEb+qBt/77B/jGeeek+F0uOeN05CDa6HXbbIgtVX4w==}
    engines: {node: '>= 0.4'}
    hasBin: true

  reusify@1.0.4:
    resolution: {integrity: sha512-U9nH88a3fc/ekCF1l0/UP1IosiuIjyTh7hBvXVMHYgVcfGvt897Xguj2UOLDeI5BG2m7/uwyaLVT6fbtCwTyzw==}
    engines: {iojs: '>=1.0.0', node: '>=0.10.0'}

  rimraf@3.0.2:
    resolution: {integrity: sha512-JZkJMZkAGFFPP2YqXZXPbMlMBgsxzE8ILs4lMIX/2o0L9UBw9O/Y3o6wFw/i9YLapcUJWwqbi3kdxIPdC62TIA==}
    deprecated: Rimraf versions prior to v4 are no longer supported
    hasBin: true

  rollup@4.34.4:
    resolution: {integrity: sha512-spF66xoyD7rz3o08sHP7wogp1gZ6itSq22SGa/IZTcUDXDlOyrShwMwkVSB+BUxFRZZCUYqdb3KWDEOMVQZxuw==}
    engines: {node: '>=18.0.0', npm: '>=8.0.0'}
    hasBin: true

  rpc-websockets@9.1.1:
    resolution: {integrity: sha512-1IXGM/TfPT6nfYMIXkJdzn+L4JEsmb0FL1O2OBjaH03V3yuUDdKFulGLMFG6ErV+8pZ5HVC0limve01RyO+saA==}

  run-applescript@7.0.0:
    resolution: {integrity: sha512-9by4Ij99JUr/MCFBUkDKLWK3G9HVXmabKz9U5MlIAIuvuzkiOicRYs8XJLxX+xahD+mLiiCYDqF9dKAgtzKP1A==}
    engines: {node: '>=18'}

  run-parallel@1.2.0:
    resolution: {integrity: sha512-5l4VyZR86LZ/lDxZTR6jqL8AFE2S0IFLMP26AbjsLVADxHdhB/c0GUsH+y39UfCi3dzz8OlQuPmnaJOMoDHQBA==}

  rxjs@7.5.5:
    resolution: {integrity: sha512-sy+H0pQofO95VDmFLzyaw9xNJU4KTRSwQIGM6+iG3SypAtCiLDzpeG8sJrNCWn2Up9km+KhkvTdbkrdy+yzZdw==}

  safe-buffer@5.1.2:
    resolution: {integrity: sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g==}

  safe-buffer@5.2.1:
    resolution: {integrity: sha512-rp3So07KcdmmKbGvgaNxQSJr7bGVSVk5S9Eq1F+ppbRo70+YeaDxkw5Dd8NPN+GD6bjnYm2VuPuCXmpuYvmCXQ==}

  safe-regex-test@1.1.0:
    resolution: {integrity: sha512-x/+Cz4YrimQxQccJf5mKEbIa1NzeCRNI5Ecl/ekmlYaampdNLPalVyIcCZNNH3MvmqBugV5TMYZXv0ljslUlaw==}
    engines: {node: '>= 0.4'}

  safe-stable-stringify@2.5.0:
    resolution: {integrity: sha512-b3rppTKm9T+PsVCBEOUR46GWI7fdOs00VKZ1+9c1EWDaDMvjQc6tUwuFyIprgGgTcWoVHSKrU8H31ZHA2e0RHA==}
    engines: {node: '>=10'}

  safer-buffer@2.1.2:
    resolution: {integrity: sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg==}

  scheduler@0.21.0:
    resolution: {integrity: sha512-1r87x5fz9MXqswA2ERLo0EbOAU74DpIUO090gIasYTqlVoJeMcl+Z1Rg7WHz+qtPujhS/hGIt9kxZOYBV3faRQ==}

  scheduler@0.23.2:
    resolution: {integrity: sha512-UOShsPwz7NrMUqhR6t0hWjFduvOzbtv7toDH1/hIrfRNIDBnnBWd0CwJTGvTpngVlmwGCdP9/Zl/tVrDqcuYzQ==}

  seedrandom@3.0.5:
    resolution: {integrity: sha512-8OwmbklUNzwezjGInmZ+2clQmExQPvomqjL7LFqOYqtmuxRgQYqOD3mHaU+MvZn5FLUeVxVfQjwLZW/n/JFuqg==}

  semver@6.3.1:
    resolution: {integrity: sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==}
    hasBin: true

  semver@7.7.1:
    resolution: {integrity: sha512-hlq8tAfn0m/61p4BVRcPzIGr6LKiMwo4VM6dGi6pt4qcRkmNzTcWq6eCEjEh+qXjkMDvPlOFFSGwQjoEa6gyMA==}
    engines: {node: '>=10'}
    hasBin: true

  set-blocking@2.0.0:
    resolution: {integrity: sha512-KiKBS8AnWGEyLzofFfmvKwpdPzqiy16LvQfK3yv/fVH7Bj13/wl3JSR1J+rfgRE9q7xUJK4qvgS8raSOeLUehw==}

  set-cookie-parser@2.7.1:
    resolution: {integrity: sha512-IOc8uWeOZgnb3ptbCURJWNjWUPcO3ZnTTdzsurqERrP6nPyv+paC55vJM0LpOlT2ne+Ix+9+CRG1MNLlyZ4GjQ==}

  set-function-length@1.2.2:
    resolution: {integrity: sha512-pgRc4hJ4/sNjWCSS9AmnS40x3bNMDTknHgL5UaMBTMyJnU90EgWh1Rz+MC9eFu4BuN/UwZjKQuY/1v3rM7HMfg==}
    engines: {node: '>= 0.4'}

  sha256-uint8array@0.10.7:
    resolution: {integrity: sha512-1Q6JQU4tX9NqsDGodej6pkrUVQVNapLZnvkwIhddH/JqzBZF1fSaxSWNY6sziXBE8aEa2twtGkXUrwzGeZCMpQ==}

  shebang-command@2.0.0:
    resolution: {integrity: sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==}
    engines: {node: '>=8'}

  shebang-regex@3.0.0:
    resolution: {integrity: sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==}
    engines: {node: '>=8'}

  signal-exit@4.1.0:
    resolution: {integrity: sha512-bzyZ1e88w9O1iNJbKnOlvYTrWPDl46O1bG0D3XInv+9tkPrxrN8jUUTiFlDkkmKWgn1M6CfIA13SuGqOa9Korw==}
    engines: {node: '>=14'}

  socket.io-client@4.8.1:
    resolution: {integrity: sha512-hJVXfu3E28NmzGk8o1sHhN3om52tRvwYeidbj7xKy2eIIse5IoKX3USlS6Tqt3BHAtflLIkCQBkzVrEEfWUyYQ==}
    engines: {node: '>=10.0.0'}

  socket.io-parser@4.2.4:
    resolution: {integrity: sha512-/GbIKmo8ioc+NIWIhwdecY0ge+qVBSMdgxGygevmdHj24bsfgtCmcUUcQ5ZzcylGFHsN3k4HB4Cgkl96KVnuew==}
    engines: {node: '>=10.0.0'}

  sonic-boom@2.8.0:
    resolution: {integrity: sha512-kuonw1YOYYNOve5iHdSahXPOK49GqwA+LZhI6Wz/l0rP57iKyXXIHaRagOBHAPmGwJC6od2Z9zgvZ5loSgMlVg==}

  source-map-js@1.2.1:
    resolution: {integrity: sha512-UXWMKhLOwVKb728IUtQPXxfYU+usdybtUrK/8uGE8CQMvrhOpwvzDBwj0QhSL7MQc7vIsISBG8VQ8+IDQxpfQA==}
    engines: {node: '>=0.10.0'}

  split-on-first@1.1.0:
    resolution: {integrity: sha512-43ZssAJaMusuKWL8sKUBQXHWOpq8d6CfN/u1p4gUzfJkM05C8rxTmYrkIPTXapZpORA6LkkzcUulJ8FqA7Uudw==}
    engines: {node: '>=6'}

  split2@4.2.0:
    resolution: {integrity: sha512-UcjcJOWknrNkF6PLX83qcHM6KHgVKNkV62Y8a5uYDVv9ydGQVwAHMKqHdJje1VTWpljG0WYpCDhrCdAOYH4TWg==}
    engines: {node: '>= 10.x'}

  starknet@6.23.1:
    resolution: {integrity: sha512-vQV9luXpmwZZs9RVZaRwm2iD8T0PYx1AzgZeQsCvD89tR0HwUF0paty27ZzuJrdPe0CmAs/ipAYFCE55jbj0RQ==}

  starknetkit@2.10.4:
    resolution: {integrity: sha512-POdv8GdGzBmwgMxn+FQhGXxcc4kFY6tnCHoB/c3j5vigZO2fLVxi5tJX9nYsITRX7QzoV3yal7W5e2agJ4SFSA==}
    peerDependencies:
      starknet: ^6.21.1

  stats-gl@2.4.2:
    resolution: {integrity: sha512-g5O9B0hm9CvnM36+v7SFl39T7hmAlv541tU81ME8YeSb3i1CIP5/QdDeSB3A0la0bKNHpxpwxOVRo2wFTYEosQ==}
    peerDependencies:
      '@types/three': '*'
      three: '*'

  stats.js@0.17.0:
    resolution: {integrity: sha512-hNKz8phvYLPEcRkeG1rsGmV5ChMjKDAWU7/OJJdDErPBNChQXxCo3WZurGpnWc6gZhAzEPFad1aVgyOANH1sMw==}

  stream-chain@2.2.5:
    resolution: {integrity: sha512-1TJmBx6aSWqZ4tx7aTpBDXK0/e2hhcNSTV8+CbFJtDjbb+I1mZ8lHit0Grw9GRT+6JbIrrDd8esncgBi8aBXGA==}

  stream-json@1.9.1:
    resolution: {integrity: sha512-uWkjJ+2Nt/LO9Z/JyKZbMusL8Dkh97uUBTv3AJQ74y07lVahLY4eEFsPsE97pxYBwr8nnjMAIch5eqI0gPShyw==}

  stream-shift@1.0.3:
    resolution: {integrity: sha512-76ORR0DO1o1hlKwTbi/DM3EXWGf3ZJYO8cXX5RJwnul2DEg2oyoZyjLNoQM8WsvZiFKCRfC1O0J7iCvie3RZmQ==}

  strict-uri-encode@2.0.0:
    resolution: {integrity: sha512-QwiXZgpRcKkhTj2Scnn++4PKtWsH0kpzZ62L2R6c/LUVYv7hVnZqcg2+sMuT6R7Jusu1vviK/MFsu6kNJfWlEQ==}
    engines: {node: '>=4'}

  string-width@4.2.3:
    resolution: {integrity: sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==}
    engines: {node: '>=8'}

  string-width@5.1.2:
    resolution: {integrity: sha512-HnLOCR3vjcY8beoNLtcjZ5/nxn2afmME6lhrDrebokqMap+XbeW8n9TXpPDOqdGK5qcI3oT0GKTW6wC7EMiVqA==}
    engines: {node: '>=12'}

  string_decoder@1.1.1:
    resolution: {integrity: sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==}

  string_decoder@1.3.0:
    resolution: {integrity: sha512-hkRX8U1WjJFd8LsDJ2yQ/wWWxaopEsABU1XfkM8A+j0+85JAGppt16cr1Whg6KIbb4okU6Mql6BOj+uup/wKeA==}

  strip-ansi@6.0.1:
    resolution: {integrity: sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==}
    engines: {node: '>=8'}

  strip-ansi@7.1.0:
    resolution: {integrity: sha512-iq6eVVI64nQQTRYq2KtEg2d2uU7LElhTJwsH4YzIHZshxlgZms/wIc4VoDQTlG/IvVIrBKG06CrZnp0qv7hkcQ==}
    engines: {node: '>=12'}

  strip-json-comments@3.1.1:
    resolution: {integrity: sha512-6fPc+R4ihwqP6N/aIv2f1gMH8lOVtWQHoqC4yK6oSDVVocumAsfCqjkXnqiYMhmMwS/mEHLp7Vehlt3ql6lEig==}
    engines: {node: '>=8'}

  sucrase@3.35.0:
    resolution: {integrity: sha512-8EbVDiu9iN/nESwxeSxDKe0dunta1GOlHufmSSXxMD2z2/tMZpDMpvXQGsc+ajGo8y2uYUmixaSRUc/QPoQ0GA==}
    engines: {node: '>=16 || 14 >=14.17'}
    hasBin: true

  superstruct@2.0.2:
    resolution: {integrity: sha512-uV+TFRZdXsqXTL2pRvujROjdZQ4RAlBUS5BTh9IGm+jTqQntYThciG/qu57Gs69yjnVUSqdxF9YLmSnpupBW9A==}
    engines: {node: '>=14.0.0'}

  supports-color@7.2.0:
    resolution: {integrity: sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==}
    engines: {node: '>=8'}

  supports-preserve-symlinks-flag@1.0.0:
    resolution: {integrity: sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w==}
    engines: {node: '>= 0.4'}

  suspend-react@0.1.3:
    resolution: {integrity: sha512-aqldKgX9aZqpoDp3e8/BZ8Dm7x1pJl+qI3ZKxDN0i/IQTWUwBx/ManmlVJ3wowqbno6c2bmiIfs+Um6LbsjJyQ==}
    peerDependencies:
      react: '>=17.0'

  svelte-forms@2.3.1:
    resolution: {integrity: sha512-ExX9PM0JgvdOWlHl2ztD7XzLNPOPt9U5hBKV8sUAisMfcYWpPRnyz+6EFmh35BOBGJJmuhTDBGm5/7seLjOTIA==}

  swr@2.3.3:
    resolution: {integrity: sha512-dshNvs3ExOqtZ6kJBaAsabhPdHyeY4P2cKwRCniDVifBMoG/SVI7tfLWqPXriVspf2Rg4tPzXJTnwaihIeFw2A==}
    peerDependencies:
      react: ^16.11.0 || ^17.0.0 || ^18.0.0 || ^19.0.0

  tailwind-merge@3.3.1:
    resolution: {integrity: sha512-gBXpgUm/3rp1lMZZrM/w7D8GKqshif0zAymAhbCyIt8KMe+0v9DQ7cdYLR4FHH/cKpdTXb+A/tKKU3eolfsI+g==}

  tailwindcss@3.4.17:
    resolution: {integrity: sha512-w33E2aCvSDP0tW9RZuNXadXlkHXqFzSkQew/aIa2i/Sj8fThxwovwlXHSPXTbAHwEIhBFXAedUhP2tueAKP8Og==}
    engines: {node: '>=14.0.0'}
    hasBin: true

  text-encoding-utf-8@1.0.2:
    resolution: {integrity: sha512-8bw4MY9WjdsD2aMtO0OzOCY3pXGYNx2d2FfHRVUKkiCPDWjKuOlhLVASS+pD7VkLTVjW268LYJHwsnPFlBpbAg==}

  thenify-all@1.6.0:
    resolution: {integrity: sha512-RNxQH/qI8/t3thXJDwcstUO4zeqo64+Uy/+sNVRBx4Xn2OX+OZ9oP+iJnNFqplFra2ZUVeKCSa2oVWi3T4uVmA==}
    engines: {node: '>=0.8'}

  thenify@3.3.1:
    resolution: {integrity: sha512-RVZSIV5IG10Hk3enotrhvz0T9em6cyHBLkH/YAZuKqd8hRkKhSfCGIcP2KUY0EPxndzANBmNllzWPwak+bheSw==}

  thread-stream@0.15.2:
    resolution: {integrity: sha512-UkEhKIg2pD+fjkHQKyJO3yoIvAP3N6RlNFt2dUhcS1FGvCD1cQa1M/PGknCLFIyZdtJOWQjejp7bdNqmN7zwdA==}

  three-mesh-bvh@0.7.8:
    resolution: {integrity: sha512-BGEZTOIC14U0XIRw3tO4jY7IjP7n7v24nv9JXS1CyeVRWOCkcOMhRnmENUjuV39gktAw4Ofhr0OvIAiTspQrrw==}
    deprecated: Deprecated due to three.js version incompatibility. Please use v0.8.0, instead.
    peerDependencies:
      three: '>= 0.151.0'

  three-stdlib@2.36.0:
    resolution: {integrity: sha512-kv0Byb++AXztEGsULgMAs8U2jgUdz6HPpAB/wDJnLiLlaWQX2APHhiTJIN7rqW+Of0eRgcp7jn05U1BsCP3xBA==}
    peerDependencies:
      three: '>=0.128.0'

  three@0.158.0:
    resolution: {integrity: sha512-TALj4EOpdDPF1henk2Q+s17K61uEAAWQ7TJB68nr7FKxqwyDr3msOt5IWdbGm4TaWKjrtWS8DJJWe9JnvsWOhQ==}

  tiny-emitter@2.1.0:
    resolution: {integrity: sha512-NB6Dk1A9xgQPMoGqC5CVXn123gWyte215ONT5Pp5a0yt4nlEoO1ZWeCwpncaekPHXO60i47ihFnZPiRPjRMq4Q==}

  to-regex-range@5.0.1:
    resolution: {integrity: sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==}
    engines: {node: '>=8.0'}

  tough-cookie@4.1.4:
    resolution: {integrity: sha512-Loo5UUvLD9ScZ6jh8beX1T6sO1w2/MpCRpEP7V280GKMVUQ0Jzar2U3UJPsrdbziLEMMhu3Ujnq//rhiFuIeag==}
    engines: {node: '>=6'}

  tr46@0.0.3:
    resolution: {integrity: sha512-N3WMsuqV66lT30CrXNbEjx4GEwlow3v6rr4mCcv6prnfwhS01rkgyFdjPNBYd9br7LpXV1+Emh01fHnq2Gdgrw==}

  troika-three-text@0.52.4:
    resolution: {integrity: sha512-V50EwcYGruV5rUZ9F4aNsrytGdKcXKALjEtQXIOBfhVoZU9VAqZNIoGQ3TMiooVqFAbR1w15T+f+8gkzoFzawg==}
    peerDependencies:
      three: '>=0.125.0'

  troika-three-utils@0.52.4:
    resolution: {integrity: sha512-NORAStSVa/BDiG52Mfudk4j1FG4jC4ILutB3foPnfGbOeIs9+G5vZLa0pnmnaftZUGm4UwSoqEpWdqvC7zms3A==}
    peerDependencies:
      three: '>=0.125.0'

  troika-worker-utils@0.52.0:
    resolution: {integrity: sha512-W1CpvTHykaPH5brv5VHLfQo9D1OYuo0cSBEUQFFT/nBUzM8iD6Lq2/tgG/f1OelbAS1WtaTPQzE5uM49egnngw==}

  trpc-browser@1.4.4:
    resolution: {integrity: sha512-5ZH/LqSoF008W8KU+4tfQ+g3F4Yl6BywDUnSlx5jT6fKa87mm8PkIXfhjGN1k6LoxjpMjy82bxvQzNLkJ3vUvw==}
    peerDependencies:
      '@trpc/client': ^10.0.0
      '@trpc/server': ^10.0.0

  ts-api-utils@2.1.0:
    resolution: {integrity: sha512-CUgTZL1irw8u29bzrOD/nH85jqyc74D6SshFgujOIA7osm2Rz7dYH77agkx7H4FBNxDq7Cjf+IjaX/8zwFW+ZQ==}
    engines: {node: '>=18.12'}
    peerDependencies:
      typescript: '>=4.8.4'

  ts-interface-checker@0.1.13:
    resolution: {integrity: sha512-Y/arvbn+rrz3JCKl9C4kVNfTfSm2/mEp5FSz5EsZSANGPSlQrpRI5M4PKF+mJnE52jOO90PnPSc3Ur3bTQw0gA==}

  ts-mixer@6.0.4:
    resolution: {integrity: sha512-ufKpbmrugz5Aou4wcr5Wc1UUFWOLhq+Fm6qa6P0w0K5Qw2yhaUoiWszhCVuNQyNwrlGiscHOmqYoAox1PtvgjA==}

  tslib@1.14.1:
    resolution: {integrity: sha512-Xni35NKzjgMrwevysHTCArtLDpPvye8zV/0E4EyYn43P7/7qvQwPh9BGkHewbMulVntbigmcT7rdX3BNo9wRJg==}

  tslib@2.7.0:
    resolution: {integrity: sha512-gLXCKdN1/j47AiHiOkJN69hJmcbGTHI0ImLmbYLHykhgeN0jVGola9yVjFgzCUklsZQMW55o+dW7IXv3RCXDzA==}

  tslib@2.8.1:
    resolution: {integrity: sha512-oJFu94HQb+KVduSUQL7wnpmqnfmLsOA/nAh6b6EH0wCEoK0/mPeXU6c3wKDV83MkOuHPRHtSXKKU99IBazS/2w==}

  tunnel-rat@0.1.2:
    resolution: {integrity: sha512-lR5VHmkPhzdhrM092lI2nACsLO4QubF0/yoOhzX7c+wIpbN1GjHNzCc91QlpxBi+cnx8vVJ+Ur6vL5cEoQPFpQ==}

  type-check@0.4.0:
    resolution: {integrity: sha512-XleUoc9uwGXqjWwXaUTZAmzMcFZ5858QA2vvx1Ur5xIcixXIP+8LnFDgRplU30us6teqdlskFfu+ae4K79Ooew==}
    engines: {node: '>= 0.8.0'}

  typed-function@4.2.1:
    resolution: {integrity: sha512-EGjWssW7Tsk4DGfE+5yluuljS1OGYWiI1J6e8puZz9nTMM51Oug8CD5Zo4gWMsOhq5BI+1bF+rWTm4Vbj3ivRA==}
    engines: {node: '>= 18'}

  typescript-eslint@8.34.1:
    resolution: {integrity: sha512-XjS+b6Vg9oT1BaIUfkW3M3LvqZE++rbzAMEHuccCfO/YkP43ha6w3jTEMilQxMF92nVOYCcdjv1ZUhAa1D/0ow==}
    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
    peerDependencies:
      eslint: ^8.57.0 || ^9.0.0
      typescript: '>=4.8.4 <5.9.0'

  typescript@5.8.3:
    resolution: {integrity: sha512-p1diW6TqL9L07nNxvRMM7hMMw4c5XOo/1ibL4aAIGmSAt9slTE1Xgw5KWuof2uTOvCg9BY7ZRi+GaF+7sfgPeQ==}
    engines: {node: '>=14.17'}
    hasBin: true

  ufo@1.6.1:
    resolution: {integrity: sha512-9a4/uxlTWJ4+a5i0ooc1rU7C7YOw3wT+UGqdeNNHWnOF9qcMBgLRS+4IYUqbczewFx4mLEig6gawh7X6mFlEkA==}

  uint8arrays@3.1.0:
    resolution: {integrity: sha512-ei5rfKtoRO8OyOIor2Rz5fhzjThwIHJZ3uyDPnDHTXbP0aMQ1RN/6AI5B5d9dBxJOU+BvOAk7ZQ1xphsX8Lrog==}

  uint8arrays@3.1.1:
    resolution: {integrity: sha512-+QJa8QRnbdXVpHYjLoTpJIdCTiw9Ir62nocClWuXIq2JIh4Uta0cQsTSpFL678p2CN8B+XSApwcU+pQEqVpKWg==}

  uncrypto@0.1.3:
    resolution: {integrity: sha512-Ql87qFHB3s/De2ClA9e0gsnS6zXG27SkTiSJwjCc9MebbfapQfuPzumMIUMi38ezPZVNFcHI9sUIepeQfw8J8Q==}

  undici-types@6.19.8:
    resolution: {integrity: sha512-ve2KP6f/JnbPBFyobGHuerC9g1FYGn/F8n1LWTwNxCEzd6IfqTwUQcNXgEtmmQ6DlRrC1hrSrBnCZPokRrDHjw==}

  undici-types@6.21.0:
    resolution: {integrity: sha512-iwDZqg0QAGrg9Rav5H4n0M64c3mkR59cJ6wQp+7C4nI0gsmExaedaYLNO44eT4AtBBwjbTiGPMlt2Md0T9H9JQ==}

  universalify@0.2.0:
    resolution: {integrity: sha512-CJ1QgKmNg3CwvAv/kOFmtnEN05f0D/cn9QntgNOQlQF9dgvVTHj3t+8JPdjqawCHk7V/KA+fbUqzZ9XWhcqPUg==}
    engines: {node: '>= 4.0.0'}

  universalify@2.0.1:
    resolution: {integrity: sha512-gptHNQghINnc/vTGIk0SOFGFNXw7JVrlRUtConJRlvaw6DuX0wO5Jeko9sWrMBhh+PsYAZ7oXAiOnf/UKogyiw==}
    engines: {node: '>= 10.0.0'}

  unload@2.2.0:
    resolution: {integrity: sha512-B60uB5TNBLtN6/LsgAf3udH9saB5p7gqJwcFfbOEZ8BcBHnGwCf6G/TGiEqkRAxX7zAFIUtzdrXQSdL3Q/wqNA==}

  unstorage@1.16.0:
    resolution: {integrity: sha512-WQ37/H5A7LcRPWfYOrDa1Ys02xAbpPJq6q5GkO88FBXVSQzHd7+BjEwfRqyaSWCv9MbsJy058GWjjPjcJ16GGA==}
    peerDependencies:
      '@azure/app-configuration': ^1.8.0
      '@azure/cosmos': ^4.2.0
      '@azure/data-tables': ^13.3.0
      '@azure/identity': ^4.6.0
      '@azure/keyvault-secrets': ^4.9.0
      '@azure/storage-blob': ^12.26.0
      '@capacitor/preferences': ^6.0.3 || ^7.0.0
      '@deno/kv': '>=0.9.0'
      '@netlify/blobs': ^6.5.0 || ^7.0.0 || ^8.1.0
      '@planetscale/database': ^1.19.0
      '@upstash/redis': ^1.34.3
      '@vercel/blob': '>=0.27.1'
      '@vercel/kv': ^1.0.1
      aws4fetch: ^1.0.20
      db0: '>=0.2.1'
      idb-keyval: ^6.2.1
      ioredis: ^5.4.2
      uploadthing: ^7.4.4
    peerDependenciesMeta:
      '@azure/app-configuration':
        optional: true
      '@azure/cosmos':
        optional: true
      '@azure/data-tables':
        optional: true
      '@azure/identity':
        optional: true
      '@azure/keyvault-secrets':
        optional: true
      '@azure/storage-blob':
        optional: true
      '@capacitor/preferences':
        optional: true
      '@deno/kv':
        optional: true
      '@netlify/blobs':
        optional: true
      '@planetscale/database':
        optional: true
      '@upstash/redis':
        optional: true
      '@vercel/blob':
        optional: true
      '@vercel/kv':
        optional: true
      aws4fetch:
        optional: true
      db0:
        optional: true
      idb-keyval:
        optional: true
      ioredis:
        optional: true
      uploadthing:
        optional: true

  update-browserslist-db@1.1.2:
    resolution: {integrity: sha512-PPypAm5qvlD7XMZC3BujecnaOxwhrtoFR+Dqkk5Aa/6DssiH0ibKoketaj9w8LP7Bont1rYeoV5plxD7RTEPRg==}
    hasBin: true
    peerDependencies:
      browserslist: '>= 4.21.0'

  uri-js@4.4.1:
    resolution: {integrity: sha512-7rKUyy33Q1yc98pQ1DAmLtwX109F7TIfWlW1Ydo8Wl1ii1SeHieeh0HHfPeL2fMXK6z0s8ecKs9frCuLJvndBg==}

  url-parse@1.5.10:
    resolution: {integrity: sha512-WypcfiRhfeUP9vvF0j6rw0J3hrWrw6iZv3+22h6iRMJ/8z1Tj6XfLP4DsUix5MhMPnXpiHDoKyoZ/bdCkwBCiQ==}

  use-sync-external-store@1.2.0:
    resolution: {integrity: sha512-eEgnFxGQ1Ife9bzYs6VLi8/4X6CObHMw9Qr9tPY43iKwsPw8xE8+EFsf/2cFZ5S3esXgpWgtSCtLNS41F+sKPA==}
    peerDependencies:
      react: ^16.8.0 || ^17.0.0 || ^18.0.0

  use-sync-external-store@1.4.0:
    resolution: {integrity: sha512-9WXSPC5fMv61vaupRkCKCxsPxBocVnwakBEkMIHHpkTTg6icbJtg6jzgtLDm4bl3cSHAca52rYWih0k4K3PfHw==}
    peerDependencies:
      react: ^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0

  utf-8-validate@5.0.10:
    resolution: {integrity: sha512-Z6czzLq4u8fPOyx7TU6X3dvUZVvoJmxSQ+IcrlmagKhilxlhZgxPK6C5Jqbkw1IDUmFTM+cz9QDnnLTwDz/2gQ==}
    engines: {node: '>=6.14.2'}

  util-deprecate@1.0.2:
    resolution: {integrity: sha512-EPD5q1uXyFxJpCrLnCc1nHnq3gOa6DZBocAIiI2TaSCA7VCJ1UJDMagCzIkXNsUYfD1daK//LTEQ8xiIbrHtcw==}

  util@0.12.5:
    resolution: {integrity: sha512-kZf/K6hEIrWHI6XqOFUiiMa+79wE/D8Q+NCNAWclkyg3b4d2k7s0QGepNjiABc+aR3N1PAyHL7p6UcLY6LmrnA==}

  utility-types@3.11.0:
    resolution: {integrity: sha512-6Z7Ma2aVEWisaL6TvBCy7P8rm2LQoPv6dJ7ecIaIixHcwfbJ0x7mWdbcwlIM5IGQxPZSFYeqRCqlOOeKoJYMkw==}
    engines: {node: '>= 4'}

  uuid@10.0.0:
    resolution: {integrity: sha512-8XkAphELsDnEGrDxUOHB3RGvXz6TeuYSGEZBOjtTtPm2lwhGBjLgOzLHB63IUWfBpNucQjND6d3AOudO+H3RWQ==}
    hasBin: true

  uuid@8.3.2:
    resolution: {integrity: sha512-+NYs2QeMWy+GWFOEm9xnn6HCDp0l7QBD7ml8zLUmJ+93Q5NF0NocErnwkTkXVFNiX3/fpC6afS8Dhb/gz7R7eg==}
    hasBin: true

  uuid@9.0.1:
    resolution: {integrity: sha512-b+1eJOlsR9K8HJpow9Ok3fiWOWSIcIzXodvv0rQjVoOVNpWMpxf1wZNpt4y9h10odCNrqnYp1OBzRktckBe3sA==}
    hasBin: true

  valtio@1.13.2:
    resolution: {integrity: sha512-Qik0o+DSy741TmkqmRfjq+0xpZBXi/Y6+fXZLn0xNF1z/waFMbE3rkivv5Zcf9RrMUp6zswf2J7sbh2KBlba5A==}
    engines: {node: '>=12.20.0'}
    peerDependencies:
      '@types/react': '>=16.8'
      react: '>=16.8'
    peerDependenciesMeta:
      '@types/react':
        optional: true
      react:
        optional: true

  viem@2.22.22:
    resolution: {integrity: sha512-0z7EFheP+paC/KRlVpu7zXYiqkTX6GR86G0p84LnYr5NgaVxGz0mGsiERy41ThERX1ahkTdEWGGiNgfi6wVqBQ==}
    peerDependencies:
      typescript: '>=5.0.4'
    peerDependenciesMeta:
      typescript:
        optional: true

  viem@2.23.2:
    resolution: {integrity: sha512-NVmW/E0c5crMOtbEAqMF0e3NmvQykFXhLOc/CkLIXOlzHSA6KXVz3CYVmaKqBF8/xtjsjHAGjdJN3Ru1kFJLaA==}
    peerDependencies:
      typescript: '>=5.0.4'
    peerDependenciesMeta:
      typescript:
        optional: true

  viem@2.31.0:
    resolution: {integrity: sha512-U7OMQ6yqK+bRbEIarf2vqxL7unSEQvNxvML/1zG7suAmKuJmipqdVTVJGKBCJiYsm/EremyO2FS4dHIPpGv+eA==}
    peerDependencies:
      typescript: '>=5.0.4'
    peerDependenciesMeta:
      typescript:
        optional: true

  viem@2.31.4:
    resolution: {integrity: sha512-0UZ/asvzl6p44CIBRDbwEcn3HXIQQurBZcMo5qmLhQ8s27Ockk+RYohgTLlpLvkYs8/t4UUEREAbHLuek1kXcw==}
    peerDependencies:
      typescript: '>=5.0.4'
    peerDependenciesMeta:
      typescript:
        optional: true

  viem@2.9.20:
    resolution: {integrity: sha512-PHb1MrBHMrSZ8Ayuk3Y/6wUTcMbzlACQaM6AJBSv9kRKX3xYSZ/kehi+gvS0swQJeAlTQ4eZM7jsHQJNAOarmg==}
    peerDependencies:
      typescript: '>=5.0.4'
    peerDependenciesMeta:
      typescript:
        optional: true

  vite-plugin-top-level-await@1.5.0:
    resolution: {integrity: sha512-r/DtuvHrSqUVk23XpG2cl8gjt1aATMG5cjExXL1BUTcSNab6CzkcPua9BPEc9fuTP5UpwClCxUe3+dNGL0yrgQ==}
    peerDependencies:
      vite: '>=2.8'

  vite-plugin-wasm@3.4.1:
    resolution: {integrity: sha512-ja3nSo2UCkVeitltJGkS3pfQHAanHv/DqGatdI39ja6McgABlpsZ5hVgl6wuR8Qx5etY3T5qgDQhOWzc5RReZA==}
    peerDependencies:
      vite: ^2 || ^3 || ^4 || ^5 || ^6

  vite@5.4.19:
    resolution: {integrity: sha512-qO3aKv3HoQC8QKiNSTuUM1l9o/XX3+c+VTgLHbJWHZGeTPVAg2XwazI9UWzoxjIJCGCV2zU60uqMzjeLZuULqA==}
    engines: {node: ^18.0.0 || >=20.0.0}
    hasBin: true
    peerDependencies:
      '@types/node': ^18.0.0 || >=20.0.0
      less: '*'
      lightningcss: ^1.21.0
      sass: '*'
      sass-embedded: '*'
      stylus: '*'
      sugarss: '*'
      terser: ^5.4.0
    peerDependenciesMeta:
      '@types/node':
        optional: true
      less:
        optional: true
      lightningcss:
        optional: true
      sass:
        optional: true
      sass-embedded:
        optional: true
      stylus:
        optional: true
      sugarss:
        optional: true
      terser:
        optional: true

  webextension-polyfill@0.10.0:
    resolution: {integrity: sha512-c5s35LgVa5tFaHhrZDnr3FpQpjj1BB+RXhLTYUxGqBVN460HkbM8TBtEqdXWbpTKfzwCcjAZVF7zXCYSKtcp9g==}

  webgl-constants@1.1.1:
    resolution: {integrity: sha512-LkBXKjU5r9vAW7Gcu3T5u+5cvSvh5WwINdr0C+9jpzVB41cjQAP5ePArDtk/WHYdVj0GefCgM73BA7FlIiNtdg==}

  webgl-sdf-generator@1.1.1:
    resolution: {integrity: sha512-9Z0JcMTFxeE+b2x1LJTdnaT8rT8aEp7MVxkNwoycNmJWwPdzoXzMh0BjJSh/AEFP+KPYZUli814h8bJZFIZ2jA==}

  webidl-conversions@3.0.1:
    resolution: {integrity: sha512-2JAn3z8AR6rjK8Sm8orRC0h/bcl/DqL7tRPdGZ4I1CjdF+EaMLmYxBHyXuKL849eucPFhvBoxMsflfOb8kxaeQ==}

  whatwg-fetch@3.6.20:
    resolution: {integrity: sha512-EqhiFU6daOA8kpjOWTL0olhVOF3i7OrFzSYiGsEMB8GcXS+RrzauAERX65xMeNWVqxA6HXH2m69Z9LaKKdisfg==}

  whatwg-url@5.0.0:
    resolution: {integrity: sha512-saE57nupxk6v3HY35+jzBwYa0rKSy0XR8JSxZPwgLr7ys0IBzhGviA1/TUGJLmSVqs8pb9AnvICXEuOHLprYTw==}

  which-module@2.0.1:
    resolution: {integrity: sha512-iBdZ57RDvnOR9AGBhML2vFZf7h8vmBjhoaZqODJBFWHVtKkDmKuHai3cx5PgVMrX5YDNp27AofYbAwctSS+vhQ==}

  which-typed-array@1.1.19:
    resolution: {integrity: sha512-rEvr90Bck4WZt9HHFC4DJMsjvu7x+r6bImz0/BrbWb7A2djJ8hnZMrWnHo9F8ssv0OMErasDhftrfROTyqSDrw==}
    engines: {node: '>= 0.4'}

  which@2.0.2:
    resolution: {integrity: sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==}
    engines: {node: '>= 8'}
    hasBin: true

  word-wrap@1.2.5:
    resolution: {integrity: sha512-BN22B5eaMMI9UMtjrGd5g5eCYPpCPDUy0FJXbYsaT5zYxjFOckS53SQDE3pWkVoWpHXVb3BrYcEN4Twa55B5cA==}
    engines: {node: '>=0.10.0'}

  wrap-ansi@6.2.0:
    resolution: {integrity: sha512-r6lPcBGxZXlIcymEu7InxDMhdW0KDxpLgoFLcguasxCaJ/SOIZwINatK9KY/tf+ZrlywOKU0UDj3ATXUBfxJXA==}
    engines: {node: '>=8'}

  wrap-ansi@7.0.0:
    resolution: {integrity: sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==}
    engines: {node: '>=10'}

  wrap-ansi@8.1.0:
    resolution: {integrity: sha512-si7QWI6zUMq56bESFvagtmzMdGOtoxfR+Sez11Mobfc7tm+VkUckk9bW2UeffTGVUbOksxmSw0AA2gs8g71NCQ==}
    engines: {node: '>=12'}

  wrappy@1.0.2:
    resolution: {integrity: sha512-l4Sp/DRseor9wL6EvV2+TuQn63dMkPjZ/sp9XkghTEbV9KlPS1xUsZ3u7/IQO4wxtcFB4bgpQPRcR3QCvezPcQ==}

  ws@7.5.10:
    resolution: {integrity: sha512-+dbF1tHwZpXcbOJdVOkzLDxZP1ailvSxM6ZweXTegylPny803bFhA+vqBYw4s31NSAk4S2Qz+AKXK9a4wkdjcQ==}
    engines: {node: '>=8.3.0'}
    peerDependencies:
      bufferutil: ^4.0.1
      utf-8-validate: ^5.0.2
    peerDependenciesMeta:
      bufferutil:
        optional: true
      utf-8-validate:
        optional: true

  ws@8.13.0:
    resolution: {integrity: sha512-x9vcZYTrFPC7aSIbj7sRCYo7L/Xb8Iy+pW0ng0wt2vCJv7M9HOMy0UoN3rr+IFC7hb7vXoqS+P9ktyLLLhO+LA==}
    engines: {node: '>=10.0.0'}
    peerDependencies:
      bufferutil: ^4.0.1
      utf-8-validate: '>=5.0.2'
    peerDependenciesMeta:
      bufferutil:
        optional: true
      utf-8-validate:
        optional: true

  ws@8.17.1:
    resolution: {integrity: sha512-6XQFvXTkbfUOZOKKILFG1PDK2NDQs4azKQl26T0YS5CxqWLgXajbPZ+h4gZekJyRqFU8pvnbAbbs/3TgRPy+GQ==}
    engines: {node: '>=10.0.0'}
    peerDependencies:
      bufferutil: ^4.0.1
      utf-8-validate: '>=5.0.2'
    peerDependenciesMeta:
      bufferutil:
        optional: true
      utf-8-validate:
        optional: true

  ws@8.18.0:
    resolution: {integrity: sha512-8VbfWfHLbbwu3+N6OKsOMpBdT4kXPDDB9cJk2bJ6mh9ucxdlnNvH1e+roYkKmN9Nxw2yjz7VzeO9oOz2zJ04Pw==}
    engines: {node: '>=10.0.0'}
    peerDependencies:
      bufferutil: ^4.0.1
      utf-8-validate: '>=5.0.2'
    peerDependenciesMeta:
      bufferutil:
        optional: true
      utf-8-validate:
        optional: true

  ws@8.18.2:
    resolution: {integrity: sha512-DMricUmwGZUVr++AEAe2uiVM7UoO9MAVZMDu05UQOaUII0lp+zOzLLU4Xqh/JvTqklB1T4uELaaPBKyjE1r4fQ==}
    engines: {node: '>=10.0.0'}
    peerDependencies:
      bufferutil: ^4.0.1
      utf-8-validate: '>=5.0.2'
    peerDependenciesMeta:
      bufferutil:
        optional: true
      utf-8-validate:
        optional: true

  xmlhttprequest-ssl@2.1.2:
    resolution: {integrity: sha512-TEU+nJVUUnA4CYJFLvK5X9AOeH4KvDvhIfm0vV1GaQRtchnG0hgK5p8hw/xjv8cunWYCsiPCSDzObPyhEwq3KQ==}
    engines: {node: '>=0.4.0'}

  y18n@4.0.3:
    resolution: {integrity: sha512-JKhqTOwSrqNA1NY5lSztJ1GrBiUodLMmIZuLiDaMRJ+itFd+ABVE8XBjOvIWL+rSqNDC74LCSFmlb/U4UZ4hJQ==}

  y18n@5.0.8:
    resolution: {integrity: sha512-0pfFzegeDWJHJIAmTLRP2DwHjdF5s7jo9tuztdQxAhINCdvS+3nGINqPd00AphqJR/0LhANUS6/+7SCb98YOfA==}
    engines: {node: '>=10'}

  yallist@3.1.1:
    resolution: {integrity: sha512-a4UGQaWPH59mOXUYnAG2ewncQS4i4F43Tv3JoAM+s2VDAmS9NsK8GpDMLrCHPksFT7h3K6TOoUNn2pb7RoXx4g==}

  yaml@2.7.0:
    resolution: {integrity: sha512-+hSoy/QHluxmC9kCIJyL/uyFmLmc+e5CFR5Wa+bpIhIj85LVb9ZH2nVnqrHoSvKogwODv0ClqZkmiSSaIH5LTA==}
    engines: {node: '>= 14'}
    hasBin: true

  yargs-parser@18.1.3:
    resolution: {integrity: sha512-o50j0JeToy/4K6OZcaQmW6lyXXKhq7csREXcDwk2omFPJEwUNOVtJKvmDr9EI1fAJZUyZcRF7kxGBWmRXudrCQ==}
    engines: {node: '>=6'}

  yargs-parser@21.1.1:
    resolution: {integrity: sha512-tVpsJW7DdjecAiFpbIB1e3qxIQsE6NoPc5/eTdrbbIC4h0LVsWhnoa3g+m2HclBIujHzsxZ4VJVA+GUuc2/LBw==}
    engines: {node: '>=12'}

  yargs@15.4.1:
    resolution: {integrity: sha512-aePbxDmcYW++PaqBsJ+HYUFwCdv4LVvdnhBy78E57PIor8/OVvhMrADFFEDh8DHDFRv/O9i3lPhsENjO7QX0+A==}
    engines: {node: '>=8'}

  yargs@17.7.2:
    resolution: {integrity: sha512-7dSzzRQ++CKnNI/krKnYRV7JKKPUXMEh61soaHKg9mrWEhzFWhFnxPxGl+69cD1Ou63C13NUPCnmIcrvqCuM6w==}
    engines: {node: '>=12'}

  yocto-queue@0.1.0:
    resolution: {integrity: sha512-rVksvsnNCdJ/ohGc6xgPwyN8eheCxsiLM8mxuE/t/mOVqJewPuO1miLpTHQiRgTKCLexL4MeAFVagts7HmNZ2Q==}
    engines: {node: '>=10'}

  zod@3.22.4:
    resolution: {integrity: sha512-iC+8Io04lddc+mVqQ9AZ7OQ2MrUKGN+oIQyq1vemgt46jwCwLfhq7/pwnBnNXXXZb8VTVLKwp9EDkx+ryxIWmg==}

  zod@3.24.1:
    resolution: {integrity: sha512-muH7gBL9sI1nciMZV67X5fTKKBLtwpZ5VBp1vsOQzj1MhrBZ4wlVCm3gedKZWLp0Oyel8sIGfeiz54Su+OVT+A==}

  zustand@3.7.2:
    resolution: {integrity: sha512-PIJDIZKtokhof+9+60cpockVOq05sJzHCriyvaLBmEJixseQ1a5Kdov6fWZfWOu5SK9c+FhH1jU0tntLxRJYMA==}
    engines: {node: '>=12.7.0'}
    peerDependencies:
      react: '>=16.8'
    peerDependenciesMeta:
      react:
        optional: true

  zustand@4.5.7:
    resolution: {integrity: sha512-CHOUy7mu3lbD6o6LJLfllpjkzhHXSBlX8B9+qPddUsIfeF5S/UZ5q0kmCsnRqT1UHFQZchNFDDzMbQsuesHWlw==}
    engines: {node: '>=12.7.0'}
    peerDependencies:
      '@types/react': '>=16.8'
      immer: '>=9.0.6'
      react: '>=16.8'
    peerDependenciesMeta:
      '@types/react':
        optional: true
      immer:
        optional: true
      react:
        optional: true

  zustand@5.0.5:
    resolution: {integrity: sha512-mILtRfKW9xM47hqxGIxCv12gXusoY/xTSHBYApXozR0HmQv299whhBeeAcRy+KrPPybzosvJBCOmVjq6x12fCg==}
    engines: {node: '>=12.20.0'}
    peerDependencies:
      '@types/react': '>=18.0.0'
      immer: '>=9.0.6'
      react: '>=18.0.0'
      use-sync-external-store: '>=1.2.0'
    peerDependenciesMeta:
      '@types/react':
        optional: true
      immer:
        optional: true
      react:
        optional: true
      use-sync-external-store:
        optional: true

snapshots:

  '@adraffy/ens-normalize@1.10.0': {}

  '@adraffy/ens-normalize@1.10.1': {}

  '@adraffy/ens-normalize@1.11.0': {}

  '@alloc/quick-lru@5.2.0': {}

  '@ampproject/remapping@2.3.0':
    dependencies:
      '@jridgewell/gen-mapping': 0.3.8
      '@jridgewell/trace-mapping': 0.3.25

  '@babel/code-frame@7.27.1':
    dependencies:
      '@babel/helper-validator-identifier': 7.27.1
      js-tokens: 4.0.0
      picocolors: 1.1.1

  '@babel/compat-data@7.27.5': {}

  '@babel/core@7.27.4':
    dependencies:
      '@ampproject/remapping': 2.3.0
      '@babel/code-frame': 7.27.1
      '@babel/generator': 7.27.5
      '@babel/helper-compilation-targets': 7.27.2
      '@babel/helper-module-transforms': 7.27.3(@babel/core@7.27.4)
      '@babel/helpers': 7.27.6
      '@babel/parser': 7.27.5
      '@babel/template': 7.27.2
      '@babel/traverse': 7.27.4
      '@babel/types': 7.27.6
      convert-source-map: 2.0.0
      debug: 4.4.0
      gensync: 1.0.0-beta.2
      json5: 2.2.3
      semver: 6.3.1
    transitivePeerDependencies:
      - supports-color

  '@babel/generator@7.27.5':
    dependencies:
      '@babel/parser': 7.27.5
      '@babel/types': 7.27.6
      '@jridgewell/gen-mapping': 0.3.8
      '@jridgewell/trace-mapping': 0.3.25
      jsesc: 3.1.0

  '@babel/helper-compilation-targets@7.27.2':
    dependencies:
      '@babel/compat-data': 7.27.5
      '@babel/helper-validator-option': 7.27.1
      browserslist: 4.24.4
      lru-cache: 5.1.1
      semver: 6.3.1

  '@babel/helper-module-imports@7.27.1':
    dependencies:
      '@babel/traverse': 7.27.4
      '@babel/types': 7.27.6
    transitivePeerDependencies:
      - supports-color

  '@babel/helper-module-transforms@7.27.3(@babel/core@7.27.4)':
    dependencies:
      '@babel/core': 7.27.4
      '@babel/helper-module-imports': 7.27.1
      '@babel/helper-validator-identifier': 7.27.1
      '@babel/traverse': 7.27.4
    transitivePeerDependencies:
      - supports-color

  '@babel/helper-plugin-utils@7.27.1': {}

  '@babel/helper-string-parser@7.25.9': {}

  '@babel/helper-string-parser@7.27.1': {}

  '@babel/helper-validator-identifier@7.25.9': {}

  '@babel/helper-validator-identifier@7.27.1': {}

  '@babel/helper-validator-option@7.27.1': {}

  '@babel/helpers@7.27.6':
    dependencies:
      '@babel/template': 7.27.2
      '@babel/types': 7.27.6

  '@babel/parser@7.26.7':
    dependencies:
      '@babel/types': 7.26.7

  '@babel/parser@7.27.5':
    dependencies:
      '@babel/types': 7.27.6

  '@babel/plugin-transform-react-jsx-self@7.27.1(@babel/core@7.27.4)':
    dependencies:
      '@babel/core': 7.27.4
      '@babel/helper-plugin-utils': 7.27.1

  '@babel/plugin-transform-react-jsx-source@7.27.1(@babel/core@7.27.4)':
    dependencies:
      '@babel/core': 7.27.4
      '@babel/helper-plugin-utils': 7.27.1

  '@babel/runtime@7.26.7':
    dependencies:
      regenerator-runtime: 0.14.1

  '@babel/template@7.27.2':
    dependencies:
      '@babel/code-frame': 7.27.1
      '@babel/parser': 7.27.5
      '@babel/types': 7.27.6

  '@babel/traverse@7.27.4':
    dependencies:
      '@babel/code-frame': 7.27.1
      '@babel/generator': 7.27.5
      '@babel/parser': 7.27.5
      '@babel/template': 7.27.2
      '@babel/types': 7.27.6
      debug: 4.4.0
      globals: 11.12.0
    transitivePeerDependencies:
      - supports-color

  '@babel/types@7.26.7':
    dependencies:
      '@babel/helper-string-parser': 7.25.9
      '@babel/helper-validator-identifier': 7.25.9

  '@babel/types@7.27.6':
    dependencies:
      '@babel/helper-string-parser': 7.27.1
      '@babel/helper-validator-identifier': 7.27.1

  '@cartridge/account-wasm@0.7.13': {}

  '@cartridge/connector@0.7.13(@metamask/sdk@0.32.1(bufferutil@4.0.9)(encoding@0.1.13)(utf-8-validate@5.0.10))(@solana/web3.js@1.98.2(bufferutil@4.0.9)(encoding@0.1.13)(typescript@5.8.3)(utf-8-validate@5.0.10))(@starknet-react/core@3.7.4(bufferutil@4.0.9)(get-starknet-core@4.0.0)(react@18.3.1)(starknet@6.23.1(encoding@0.1.13))(typescript@5.8.3)(utf-8-validate@5.0.10))(@types/react@18.3.23)(bufferutil@4.0.9)(encoding@0.1.13)(open@10.1.2)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)(starknet@6.23.1(encoding@0.1.13))(starknetkit@2.10.4(bufferutil@4.0.9)(starknet@6.23.1(encoding@0.1.13))(typescript@5.8.3)(utf-8-validate@5.0.10)(zod@3.24.1))(typescript@5.8.3)(utf-8-validate@5.0.10)(zod@3.24.1)':
    dependencies:
      '@cartridge/controller': 0.7.13(@metamask/sdk@0.32.1(bufferutil@4.0.9)(encoding@0.1.13)(utf-8-validate@5.0.10))(@solana/web3.js@1.98.2(bufferutil@4.0.9)(encoding@0.1.13)(typescript@5.8.3)(utf-8-validate@5.0.10))(@types/react@18.3.23)(bufferutil@4.0.9)(encoding@0.1.13)(open@10.1.2)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)(starknet@6.23.1(encoding@0.1.13))(starknetkit@2.10.4(bufferutil@4.0.9)(starknet@6.23.1(encoding@0.1.13))(typescript@5.8.3)(utf-8-validate@5.0.10)(zod@3.24.1))(typescript@5.8.3)(utf-8-validate@5.0.10)(zod@3.24.1)
      '@starknet-react/core': 3.7.4(bufferutil@4.0.9)(get-starknet-core@4.0.0)(react@18.3.1)(starknet@6.23.1(encoding@0.1.13))(typescript@5.8.3)(utf-8-validate@5.0.10)
    transitivePeerDependencies:
      - '@azure/app-configuration'
      - '@azure/cosmos'
      - '@azure/data-tables'
      - '@azure/identity'
      - '@azure/keyvault-secrets'
      - '@azure/storage-blob'
      - '@capacitor/preferences'
      - '@deno/kv'
      - '@metamask/sdk'
      - '@netlify/blobs'
      - '@planetscale/database'
      - '@react-native-async-storage/async-storage'
      - '@solana/web3.js'
      - '@types/react'
      - '@upstash/redis'
      - '@vercel/blob'
      - '@vercel/kv'
      - aws4fetch
      - bufferutil
      - db0
      - encoding
      - ioredis
      - open
      - react
      - react-dom
      - react-native
      - starknet
      - starknetkit
      - typescript
      - uploadthing
      - utf-8-validate
      - zod

  '@cartridge/controller@0.7.13(@metamask/sdk@0.32.1(bufferutil@4.0.9)(encoding@0.1.13)(utf-8-validate@5.0.10))(@solana/web3.js@1.98.2(bufferutil@4.0.9)(encoding@0.1.13)(typescript@5.8.3)(utf-8-validate@5.0.10))(@types/react@18.3.23)(bufferutil@4.0.9)(encoding@0.1.13)(open@10.1.2)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)(starknet@6.23.1(encoding@0.1.13))(starknetkit@2.10.4(bufferutil@4.0.9)(starknet@6.23.1(encoding@0.1.13))(typescript@5.8.3)(utf-8-validate@5.0.10)(zod@3.24.1))(typescript@5.8.3)(utf-8-validate@5.0.10)(zod@3.24.1)':
    dependencies:
      '@cartridge/account-wasm': 0.7.13
      '@cartridge/penpal': 6.2.4
      '@cartridge/utils': 0.7.13(bufferutil@4.0.9)(encoding@0.1.13)(react-dom@18.3.1(react@18.3.1))(typescript@5.8.3)(utf-8-validate@5.0.10)(zod@3.24.1)
      '@metamask/sdk': 0.32.1(bufferutil@4.0.9)(encoding@0.1.13)(utf-8-validate@5.0.10)
      '@solana/web3.js': 1.98.2(bufferutil@4.0.9)(encoding@0.1.13)(typescript@5.8.3)(utf-8-validate@5.0.10)
      '@starknet-io/types-js': 0.7.10
      '@telegram-apps/sdk': 2.11.3
      '@turnkey/sdk-browser': 4.3.0(bufferutil@4.0.9)(encoding@0.1.13)(typescript@5.8.3)(utf-8-validate@5.0.10)(zod@3.24.1)
      '@walletconnect/ethereum-provider': 2.21.3(@types/react@18.3.23)(bufferutil@4.0.9)(encoding@0.1.13)(react@18.3.1)(typescript@5.8.3)(utf-8-validate@5.0.10)(zod@3.24.1)
      cbor-x: 1.6.0
      ethers: 6.14.4(bufferutil@4.0.9)(utf-8-validate@5.0.10)
      mipd: 0.0.7(typescript@5.8.3)
      open: 10.1.2
      starknet: 6.23.1(encoding@0.1.13)
      starknetkit: 2.10.4(bufferutil@4.0.9)(starknet@6.23.1(encoding@0.1.13))(typescript@5.8.3)(utf-8-validate@5.0.10)(zod@3.24.1)
    transitivePeerDependencies:
      - '@azure/app-configuration'
      - '@azure/cosmos'
      - '@azure/data-tables'
      - '@azure/identity'
      - '@azure/keyvault-secrets'
      - '@azure/storage-blob'
      - '@capacitor/preferences'
      - '@deno/kv'
      - '@netlify/blobs'
      - '@planetscale/database'
      - '@react-native-async-storage/async-storage'
      - '@types/react'
      - '@upstash/redis'
      - '@vercel/blob'
      - '@vercel/kv'
      - aws4fetch
      - bufferutil
      - db0
      - encoding
      - ioredis
      - react
      - react-dom
      - react-native
      - typescript
      - uploadthing
      - utf-8-validate
      - zod

  '@cartridge/penpal@6.2.4': {}

  '@cartridge/utils@0.7.13(bufferutil@4.0.9)(encoding@0.1.13)(react-dom@18.3.1(react@18.3.1))(typescript@5.8.3)(utf-8-validate@5.0.10)(zod@3.24.1)':
    dependencies:
      posthog-js-lite: 3.2.1
      react: 18.3.1
      react-query: 3.39.3(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      starknet: 6.23.1(encoding@0.1.13)
      swr: 2.3.3(react@18.3.1)
      viem: 2.22.22(bufferutil@4.0.9)(typescript@5.8.3)(utf-8-validate@5.0.10)(zod@3.24.1)
    transitivePeerDependencies:
      - bufferutil
      - encoding
      - react-dom
      - react-native
      - typescript
      - utf-8-validate
      - zod

  '@cbor-extract/cbor-extract-darwin-arm64@2.2.0':
    optional: true

  '@cbor-extract/cbor-extract-darwin-x64@2.2.0':
    optional: true

  '@cbor-extract/cbor-extract-linux-arm64@2.2.0':
    optional: true

  '@cbor-extract/cbor-extract-linux-arm@2.2.0':
    optional: true

  '@cbor-extract/cbor-extract-linux-x64@2.2.0':
    optional: true

  '@cbor-extract/cbor-extract-win32-x64@2.2.0':
    optional: true

  '@dimforge/rapier3d-compat@0.12.0': {}

  '@dojoengine/core@1.5.15(bufferutil@4.0.9)(encoding@0.1.13)(typescript@5.8.3)(utf-8-validate@5.0.10)':
    dependencies:
      '@dojoengine/recs': 2.0.13(bufferutil@4.0.9)(typescript@5.8.3)(utf-8-validate@5.0.10)(zod@3.24.1)
      starknet: 6.23.1(encoding@0.1.13)
      zod: 3.24.1
    transitivePeerDependencies:
      - bufferutil
      - encoding
      - typescript
      - utf-8-validate

  '@dojoengine/create-burner@1.5.15(bufferutil@4.0.9)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)(starknet@6.23.1(encoding@0.1.13))(typescript@5.8.3)(utf-8-validate@5.0.10)':
    dependencies:
      '@dojoengine/core': 1.5.15(bufferutil@4.0.9)(encoding@0.1.13)(typescript@5.8.3)(utf-8-validate@5.0.10)
      '@scure/bip32': 1.6.2
      '@starknet-react/core': 3.7.4(bufferutil@4.0.9)(get-starknet-core@4.0.0)(react@18.3.1)(starknet@6.23.1(encoding@0.1.13))(typescript@5.8.3)(utf-8-validate@5.0.10)
      encoding: 0.1.13
      get-starknet-core: 4.0.0
      js-cookie: 3.0.5
      react: 18.3.1
      react-dom: 18.3.1(react@18.3.1)
      starknet: 6.23.1(encoding@0.1.13)
    transitivePeerDependencies:
      - bufferutil
      - typescript
      - utf-8-validate

  '@dojoengine/predeployed-connector@1.5.15(@starknet-react/core@3.7.4(bufferutil@4.0.9)(get-starknet-core@4.0.0)(react@18.3.1)(starknet@6.23.1(encoding@0.1.13))(typescript@5.8.3)(utf-8-validate@5.0.10))(react-dom@18.3.1(react@18.3.1))(react@18.3.1)(starknet@6.23.1(encoding@0.1.13))':
    dependencies:
      '@starknet-io/types-js': 0.7.10
      '@starknet-react/core': 3.7.4(bufferutil@4.0.9)(get-starknet-core@4.0.0)(react@18.3.1)(starknet@6.23.1(encoding@0.1.13))(typescript@5.8.3)(utf-8-validate@5.0.10)
      react: 18.3.1
      react-dom: 18.3.1(react@18.3.1)
      starknet: 6.23.1(encoding@0.1.13)

  '@dojoengine/recs@2.0.13(bufferutil@4.0.9)(typescript@5.8.3)(utf-8-validate@5.0.10)(zod@3.24.1)':
    dependencies:
      '@latticexyz/schema-type': 2.0.12(bufferutil@4.0.9)(typescript@5.8.3)(utf-8-validate@5.0.10)(zod@3.24.1)
      '@latticexyz/utils': 2.0.12
      mobx: 6.13.6
      rxjs: 7.5.5
    transitivePeerDependencies:
      - bufferutil
      - typescript
      - utf-8-validate
      - zod

  '@dojoengine/sdk@1.5.16(@tanstack/react-query@5.66.0(react@18.3.1))(@types/react-dom@18.3.7(@types/react@18.3.23))(@types/react@18.3.23)(bufferutil@4.0.9)(encoding@0.1.13)(get-starknet-core@4.0.0)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)(starknet@6.23.1(encoding@0.1.13))(typescript@5.8.3)(utf-8-validate@5.0.10)(zod@3.24.1)':
    dependencies:
      '@dojoengine/core': 1.5.15(bufferutil@4.0.9)(encoding@0.1.13)(typescript@5.8.3)(utf-8-validate@5.0.10)
      '@dojoengine/torii-client': 1.5.14
      '@dojoengine/torii-wasm': 1.5.14
      '@dojoengine/utils': 1.5.14(bufferutil@4.0.9)(starknet@6.23.1(encoding@0.1.13))(typescript@5.8.3)(utf-8-validate@5.0.10)(zod@3.24.1)
      '@starknet-react/chains': 3.1.3
      '@starknet-react/core': 3.7.4(bufferutil@4.0.9)(get-starknet-core@4.0.0)(react@18.3.1)(starknet@6.23.1(encoding@0.1.13))(typescript@5.8.3)(utf-8-validate@5.0.10)
      '@tanstack/react-query': 5.66.0(react@18.3.1)
      '@types/react': 18.3.23
      '@types/react-dom': 18.3.7(@types/react@18.3.23)
      immer: 10.1.1
      neverthrow: 8.2.0
      react: 18.3.1
      react-dom: 18.3.1(react@18.3.1)
      starknet: 6.23.1(encoding@0.1.13)
      zustand: 4.5.7(@types/react@18.3.23)(immer@10.1.1)(react@18.3.1)
    transitivePeerDependencies:
      - bufferutil
      - encoding
      - get-starknet-core
      - typescript
      - utf-8-validate
      - zod

  '@dojoengine/torii-client@1.5.14':
    dependencies:
      '@dojoengine/torii-wasm': 1.5.14

  '@dojoengine/torii-wasm@1.5.14': {}

  '@dojoengine/utils@1.5.14(bufferutil@4.0.9)(starknet@6.23.1(encoding@0.1.13))(typescript@5.8.3)(utf-8-validate@5.0.10)(zod@3.24.1)':
    dependencies:
      '@dojoengine/recs': 2.0.13(bufferutil@4.0.9)(typescript@5.8.3)(utf-8-validate@5.0.10)(zod@3.24.1)
      '@latticexyz/utils': 2.2.17
      mathjs: 12.4.3
      micro-starknet: 0.2.3
      starknet: 6.23.1(encoding@0.1.13)
    transitivePeerDependencies:
      - bufferutil
      - typescript
      - utf-8-validate
      - zod

  '@ecies/ciphers@0.2.3(@noble/ciphers@1.3.0)':
    dependencies:
      '@noble/ciphers': 1.3.0

  '@esbuild/aix-ppc64@0.21.5':
    optional: true

  '@esbuild/android-arm64@0.21.5':
    optional: true

  '@esbuild/android-arm@0.21.5':
    optional: true

  '@esbuild/android-x64@0.21.5':
    optional: true

  '@esbuild/darwin-arm64@0.21.5':
    optional: true

  '@esbuild/darwin-x64@0.21.5':
    optional: true

  '@esbuild/freebsd-arm64@0.21.5':
    optional: true

  '@esbuild/freebsd-x64@0.21.5':
    optional: true

  '@esbuild/linux-arm64@0.21.5':
    optional: true

  '@esbuild/linux-arm@0.21.5':
    optional: true

  '@esbuild/linux-ia32@0.21.5':
    optional: true

  '@esbuild/linux-loong64@0.21.5':
    optional: true

  '@esbuild/linux-mips64el@0.21.5':
    optional: true

  '@esbuild/linux-ppc64@0.21.5':
    optional: true

  '@esbuild/linux-riscv64@0.21.5':
    optional: true

  '@esbuild/linux-s390x@0.21.5':
    optional: true

  '@esbuild/linux-x64@0.21.5':
    optional: true

  '@esbuild/netbsd-x64@0.21.5':
    optional: true

  '@esbuild/openbsd-x64@0.21.5':
    optional: true

  '@esbuild/sunos-x64@0.21.5':
    optional: true

  '@esbuild/win32-arm64@0.21.5':
    optional: true

  '@esbuild/win32-ia32@0.21.5':
    optional: true

  '@esbuild/win32-x64@0.21.5':
    optional: true

  '@eslint-community/eslint-utils@4.7.0(eslint@9.29.0(jiti@1.21.7))':
    dependencies:
      eslint: 9.29.0(jiti@1.21.7)
      eslint-visitor-keys: 3.4.3

  '@eslint-community/regexpp@4.12.1': {}

  '@eslint/config-array@0.20.1':
    dependencies:
      '@eslint/object-schema': 2.1.6
      debug: 4.4.0
      minimatch: 3.1.2
    transitivePeerDependencies:
      - supports-color

  '@eslint/config-helpers@0.2.2': {}

  '@eslint/core@0.14.0':
    dependencies:
      '@types/json-schema': 7.0.15

  '@eslint/eslintrc@3.3.1':
    dependencies:
      ajv: 6.12.6
      debug: 4.4.0
      espree: 10.4.0
      globals: 14.0.0
      ignore: 5.3.2
      import-fresh: 3.3.1
      js-yaml: 4.1.0
      minimatch: 3.1.2
      strip-json-comments: 3.1.1
    transitivePeerDependencies:
      - supports-color

  '@eslint/js@9.29.0': {}

  '@eslint/object-schema@2.1.6': {}

  '@eslint/plugin-kit@0.3.1':
    dependencies:
      '@eslint/core': 0.14.0
      levn: 0.4.1

  '@ethereumjs/common@3.2.0':
    dependencies:
      '@ethereumjs/util': 8.1.0
      crc-32: 1.2.2

  '@ethereumjs/rlp@4.0.1': {}

  '@ethereumjs/tx@4.2.0':
    dependencies:
      '@ethereumjs/common': 3.2.0
      '@ethereumjs/rlp': 4.0.1
      '@ethereumjs/util': 8.1.0
      ethereum-cryptography: 2.2.1

  '@ethereumjs/util@8.1.0':
    dependencies:
      '@ethereumjs/rlp': 4.0.1
      ethereum-cryptography: 2.2.1
      micro-ftch: 0.3.1

  '@hpke/chacha20poly1305@1.6.2':
    dependencies:
      '@hpke/common': 1.7.3
      '@noble/ciphers': 1.3.0

  '@hpke/common@1.7.3': {}

  '@hpke/core@1.7.2':
    dependencies:
      '@hpke/common': 1.7.3

  '@hpke/dhkem-x25519@1.6.2':
    dependencies:
      '@hpke/common': 1.7.3
      '@noble/curves': 1.8.1
      '@noble/hashes': 1.7.1

  '@hpke/dhkem-x448@1.6.2':
    dependencies:
      '@hpke/common': 1.7.3
      '@noble/curves': 1.8.1
      '@noble/hashes': 1.7.1

  '@humanfs/core@0.19.1': {}

  '@humanfs/node@0.16.6':
    dependencies:
      '@humanfs/core': 0.19.1
      '@humanwhocodes/retry': 0.3.1

  '@humanwhocodes/module-importer@1.0.1': {}

  '@humanwhocodes/retry@0.3.1': {}

  '@humanwhocodes/retry@0.4.3': {}

  '@isaacs/cliui@8.0.2':
    dependencies:
      string-width: 5.1.2
      string-width-cjs: string-width@4.2.3
      strip-ansi: 7.1.0
      strip-ansi-cjs: strip-ansi@6.0.1
      wrap-ansi: 8.1.0
      wrap-ansi-cjs: wrap-ansi@7.0.0

  '@jridgewell/gen-mapping@0.3.8':
    dependencies:
      '@jridgewell/set-array': 1.2.1
      '@jridgewell/sourcemap-codec': 1.5.0
      '@jridgewell/trace-mapping': 0.3.25

  '@jridgewell/resolve-uri@3.1.2': {}

  '@jridgewell/set-array@1.2.1': {}

  '@jridgewell/sourcemap-codec@1.5.0': {}

  '@jridgewell/trace-mapping@0.3.25':
    dependencies:
      '@jridgewell/resolve-uri': 3.1.2
      '@jridgewell/sourcemap-codec': 1.5.0

  '@latticexyz/schema-type@2.0.12(bufferutil@4.0.9)(typescript@5.8.3)(utf-8-validate@5.0.10)(zod@3.24.1)':
    dependencies:
      abitype: 1.0.0(typescript@5.8.3)(zod@3.24.1)
      viem: 2.9.20(bufferutil@4.0.9)(typescript@5.8.3)(utf-8-validate@5.0.10)(zod@3.24.1)
    transitivePeerDependencies:
      - bufferutil
      - typescript
      - utf-8-validate
      - zod

  '@latticexyz/utils@2.0.12':
    dependencies:
      mobx: 6.13.6
      proxy-deep: 3.1.1
      rxjs: 7.5.5

  '@latticexyz/utils@2.2.17':
    dependencies:
      mobx: 6.13.6
      proxy-deep: 3.1.1
      rxjs: 7.5.5

  '@lit-labs/ssr-dom-shim@1.3.0': {}

  '@lit/reactive-element@2.1.0':
    dependencies:
      '@lit-labs/ssr-dom-shim': 1.3.0

  '@mediapipe/tasks-vision@0.10.17': {}

  '@metamask/json-rpc-engine@8.0.2':
    dependencies:
      '@metamask/rpc-errors': 6.4.0
      '@metamask/safe-event-emitter': 3.1.2
      '@metamask/utils': 8.5.0
    transitivePeerDependencies:
      - supports-color

  '@metamask/json-rpc-middleware-stream@7.0.2':
    dependencies:
      '@metamask/json-rpc-engine': 8.0.2
      '@metamask/safe-event-emitter': 3.1.2
      '@metamask/utils': 8.5.0
      readable-stream: 3.6.2
    transitivePeerDependencies:
      - supports-color

  '@metamask/object-multiplex@2.1.0':
    dependencies:
      once: 1.4.0
      readable-stream: 3.6.2

  '@metamask/onboarding@1.0.1':
    dependencies:
      bowser: 2.11.0

  '@metamask/providers@16.1.0':
    dependencies:
      '@metamask/json-rpc-engine': 8.0.2
      '@metamask/json-rpc-middleware-stream': 7.0.2
      '@metamask/object-multiplex': 2.1.0
      '@metamask/rpc-errors': 6.4.0
      '@metamask/safe-event-emitter': 3.1.2
      '@metamask/utils': 8.5.0
      detect-browser: 5.3.0
      extension-port-stream: 3.0.0
      fast-deep-equal: 3.1.3
      is-stream: 2.0.1
      readable-stream: 3.6.2
      webextension-polyfill: 0.10.0
    transitivePeerDependencies:
      - supports-color

  '@metamask/rpc-errors@6.4.0':
    dependencies:
      '@metamask/utils': 9.3.0
      fast-safe-stringify: 2.1.1
    transitivePeerDependencies:
      - supports-color

  '@metamask/safe-event-emitter@3.1.2': {}

  '@metamask/sdk-communication-layer@0.32.0(cross-fetch@4.1.0(encoding@0.1.13))(eciesjs@0.4.15)(eventemitter2@6.4.9)(readable-stream@3.6.2)(socket.io-client@4.8.1(bufferutil@4.0.9)(utf-8-validate@5.0.10))':
    dependencies:
      bufferutil: 4.0.9
      cross-fetch: 4.1.0(encoding@0.1.13)
      date-fns: 2.30.0
      debug: 4.4.0
      eciesjs: 0.4.15
      eventemitter2: 6.4.9
      readable-stream: 3.6.2
      socket.io-client: 4.8.1(bufferutil@4.0.9)(utf-8-validate@5.0.10)
      utf-8-validate: 5.0.10
      uuid: 8.3.2
    transitivePeerDependencies:
      - supports-color

  '@metamask/sdk-install-modal-web@0.32.1':
    dependencies:
      '@paulmillr/qr': 0.2.1

  '@metamask/sdk@0.32.1(bufferutil@4.0.9)(encoding@0.1.13)(utf-8-validate@5.0.10)':
    dependencies:
      '@babel/runtime': 7.26.7
      '@metamask/onboarding': 1.0.1
      '@metamask/providers': 16.1.0
      '@metamask/sdk-communication-layer': 0.32.0(cross-fetch@4.1.0(encoding@0.1.13))(eciesjs@0.4.15)(eventemitter2@6.4.9)(readable-stream@3.6.2)(socket.io-client@4.8.1(bufferutil@4.0.9)(utf-8-validate@5.0.10))
      '@metamask/sdk-install-modal-web': 0.32.1
      '@paulmillr/qr': 0.2.1
      bowser: 2.11.0
      cross-fetch: 4.1.0(encoding@0.1.13)
      debug: 4.4.0
      eciesjs: 0.4.15
      eth-rpc-errors: 4.0.3
      eventemitter2: 6.4.9
      obj-multiplex: 1.0.0
      pump: 3.0.3
      readable-stream: 3.6.2
      socket.io-client: 4.8.1(bufferutil@4.0.9)(utf-8-validate@5.0.10)
      tslib: 2.8.1
      util: 0.12.5
      uuid: 8.3.2
    transitivePeerDependencies:
      - bufferutil
      - encoding
      - supports-color
      - utf-8-validate

  '@metamask/superstruct@3.2.1': {}

  '@metamask/utils@8.5.0':
    dependencies:
      '@ethereumjs/tx': 4.2.0
      '@metamask/superstruct': 3.2.1
      '@noble/hashes': 1.8.0
      '@scure/base': 1.2.6
      '@types/debug': 4.1.12
      debug: 4.4.0
      pony-cause: 2.1.11
      semver: 7.7.1
      uuid: 9.0.1
    transitivePeerDependencies:
      - supports-color

  '@metamask/utils@9.3.0':
    dependencies:
      '@ethereumjs/tx': 4.2.0
      '@metamask/superstruct': 3.2.1
      '@noble/hashes': 1.8.0
      '@scure/base': 1.2.6
      '@types/debug': 4.1.12
      debug: 4.4.0
      pony-cause: 2.1.11
      semver: 7.7.1
      uuid: 9.0.1
    transitivePeerDependencies:
      - supports-color

  '@module-federation/runtime@0.1.21':
    dependencies:
      '@module-federation/sdk': 0.1.21

  '@module-federation/sdk@0.1.21': {}

  '@monogrid/gainmap-js@3.1.0(three@0.158.0)':
    dependencies:
      promise-worker-transferable: 1.0.4
      three: 0.158.0

  '@msgpack/msgpack@3.1.2': {}

  '@noble/ciphers@0.5.3': {}

  '@noble/ciphers@1.2.1': {}

  '@noble/ciphers@1.3.0': {}

  '@noble/curves@1.0.0':
    dependencies:
      '@noble/hashes': 1.3.0

  '@noble/curves@1.2.0':
    dependencies:
      '@noble/hashes': 1.3.2

  '@noble/curves@1.4.0':
    dependencies:
      '@noble/hashes': 1.4.0

  '@noble/curves@1.4.2':
    dependencies:
      '@noble/hashes': 1.4.0

  '@noble/curves@1.7.0':
    dependencies:
      '@noble/hashes': 1.6.0

  '@noble/curves@1.8.0':
    dependencies:
      '@noble/hashes': 1.7.0

  '@noble/curves@1.8.1':
    dependencies:
      '@noble/hashes': 1.7.1

  '@noble/curves@1.9.1':
    dependencies:
      '@noble/hashes': 1.8.0

  '@noble/curves@1.9.2':
    dependencies:
      '@noble/hashes': 1.8.0

  '@noble/hashes@1.3.0': {}

  '@noble/hashes@1.3.2': {}

  '@noble/hashes@1.3.3': {}

  '@noble/hashes@1.4.0': {}

  '@noble/hashes@1.6.0': {}

  '@noble/hashes@1.7.0': {}

  '@noble/hashes@1.7.1': {}

  '@noble/hashes@1.8.0': {}

  '@nodelib/fs.scandir@2.1.5':
    dependencies:
      '@nodelib/fs.stat': 2.0.5
      run-parallel: 1.2.0

  '@nodelib/fs.stat@2.0.5': {}

  '@nodelib/fs.walk@1.2.8':
    dependencies:
      '@nodelib/fs.scandir': 2.1.5
      fastq: 1.19.0

  '@paulmillr/qr@0.2.1': {}

  '@pkgjs/parseargs@0.11.0':
    optional: true

  '@radix-ui/react-compose-refs@1.1.2(@types/react@18.3.23)(react@18.3.1)':
    dependencies:
      react: 18.3.1
    optionalDependencies:
      '@types/react': 18.3.23

  '@radix-ui/react-context@1.1.2(@types/react@18.3.23)(react@18.3.1)':
    dependencies:
      react: 18.3.1
    optionalDependencies:
      '@types/react': 18.3.23

  '@radix-ui/react-primitive@2.1.3(@types/react-dom@18.3.7(@types/react@18.3.23))(@types/react@18.3.23)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)':
    dependencies:
      '@radix-ui/react-slot': 1.2.3(@types/react@18.3.23)(react@18.3.1)
      react: 18.3.1
      react-dom: 18.3.1(react@18.3.1)
    optionalDependencies:
      '@types/react': 18.3.23
      '@types/react-dom': 18.3.7(@types/react@18.3.23)

  '@radix-ui/react-progress@1.1.7(@types/react-dom@18.3.7(@types/react@18.3.23))(@types/react@18.3.23)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)':
    dependencies:
      '@radix-ui/react-context': 1.1.2(@types/react@18.3.23)(react@18.3.1)
      '@radix-ui/react-primitive': 2.1.3(@types/react-dom@18.3.7(@types/react@18.3.23))(@types/react@18.3.23)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      react: 18.3.1
      react-dom: 18.3.1(react@18.3.1)
    optionalDependencies:
      '@types/react': 18.3.23
      '@types/react-dom': 18.3.7(@types/react@18.3.23)

  '@radix-ui/react-slot@1.2.3(@types/react@18.3.23)(react@18.3.1)':
    dependencies:
      '@radix-ui/react-compose-refs': 1.1.2(@types/react@18.3.23)(react@18.3.1)
      react: 18.3.1
    optionalDependencies:
      '@types/react': 18.3.23

  '@react-spring/animated@9.7.5(react@18.3.1)':
    dependencies:
      '@react-spring/shared': 9.7.5(react@18.3.1)
      '@react-spring/types': 9.7.5
      react: 18.3.1

  '@react-spring/core@9.7.5(react@18.3.1)':
    dependencies:
      '@react-spring/animated': 9.7.5(react@18.3.1)
      '@react-spring/shared': 9.7.5(react@18.3.1)
      '@react-spring/types': 9.7.5
      react: 18.3.1

  '@react-spring/rafz@9.7.5': {}

  '@react-spring/shared@9.7.5(react@18.3.1)':
    dependencies:
      '@react-spring/rafz': 9.7.5
      '@react-spring/types': 9.7.5
      react: 18.3.1

  '@react-spring/three@9.7.5(@react-three/fiber@8.18.0(@types/react@18.3.23)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)(three@0.158.0))(react@18.3.1)(three@0.158.0)':
    dependencies:
      '@react-spring/animated': 9.7.5(react@18.3.1)
      '@react-spring/core': 9.7.5(react@18.3.1)
      '@react-spring/shared': 9.7.5(react@18.3.1)
      '@react-spring/types': 9.7.5
      '@react-three/fiber': 8.18.0(@types/react@18.3.23)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)(three@0.158.0)
      react: 18.3.1
      three: 0.158.0

  '@react-spring/types@9.7.5': {}

  '@react-three/drei@9.122.0(@react-three/fiber@8.18.0(@types/react@18.3.23)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)(three@0.158.0))(@types/react@18.3.23)(@types/three@0.177.0)(immer@10.1.1)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)(three@0.158.0)(use-sync-external-store@1.4.0(react@18.3.1))':
    dependencies:
      '@babel/runtime': 7.26.7
      '@mediapipe/tasks-vision': 0.10.17
      '@monogrid/gainmap-js': 3.1.0(three@0.158.0)
      '@react-spring/three': 9.7.5(@react-three/fiber@8.18.0(@types/react@18.3.23)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)(three@0.158.0))(react@18.3.1)(three@0.158.0)
      '@react-three/fiber': 8.18.0(@types/react@18.3.23)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)(three@0.158.0)
      '@use-gesture/react': 10.3.1(react@18.3.1)
      camera-controls: 2.10.1(three@0.158.0)
      cross-env: 7.0.3
      detect-gpu: 5.0.70
      glsl-noise: 0.0.0
      hls.js: 1.6.5
      maath: 0.10.8(@types/three@0.177.0)(three@0.158.0)
      meshline: 3.3.1(three@0.158.0)
      react: 18.3.1
      react-composer: 5.0.3(react@18.3.1)
      stats-gl: 2.4.2(@types/three@0.177.0)(three@0.158.0)
      stats.js: 0.17.0
      suspend-react: 0.1.3(react@18.3.1)
      three: 0.158.0
      three-mesh-bvh: 0.7.8(three@0.158.0)
      three-stdlib: 2.36.0(three@0.158.0)
      troika-three-text: 0.52.4(three@0.158.0)
      tunnel-rat: 0.1.2(@types/react@18.3.23)(immer@10.1.1)(react@18.3.1)
      utility-types: 3.11.0
      zustand: 5.0.5(@types/react@18.3.23)(immer@10.1.1)(react@18.3.1)(use-sync-external-store@1.4.0(react@18.3.1))
    optionalDependencies:
      react-dom: 18.3.1(react@18.3.1)
    transitivePeerDependencies:
      - '@types/react'
      - '@types/three'
      - immer
      - use-sync-external-store

  '@react-three/fiber@8.18.0(@types/react@18.3.23)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)(three@0.158.0)':
    dependencies:
      '@babel/runtime': 7.26.7
      '@types/react-reconciler': 0.26.7
      '@types/webxr': 0.5.22
      base64-js: 1.5.1
      buffer: 6.0.3
      its-fine: 1.2.5(@types/react@18.3.23)(react@18.3.1)
      react: 18.3.1
      react-reconciler: 0.27.0(react@18.3.1)
      react-use-measure: 2.1.7(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      scheduler: 0.21.0
      suspend-react: 0.1.3(react@18.3.1)
      three: 0.158.0
      zustand: 3.7.2(react@18.3.1)
    optionalDependencies:
      react-dom: 18.3.1(react@18.3.1)
    transitivePeerDependencies:
      - '@types/react'

  '@reown/appkit-common@1.7.8(bufferutil@4.0.9)(typescript@5.8.3)(utf-8-validate@5.0.10)(zod@3.22.4)':
    dependencies:
      big.js: 6.2.2
      dayjs: 1.11.13
      viem: 2.31.4(bufferutil@4.0.9)(typescript@5.8.3)(utf-8-validate@5.0.10)(zod@3.22.4)
    transitivePeerDependencies:
      - bufferutil
      - typescript
      - utf-8-validate
      - zod

  '@reown/appkit-common@1.7.8(bufferutil@4.0.9)(typescript@5.8.3)(utf-8-validate@5.0.10)(zod@3.24.1)':
    dependencies:
      big.js: 6.2.2
      dayjs: 1.11.13
      viem: 2.31.4(bufferutil@4.0.9)(typescript@5.8.3)(utf-8-validate@5.0.10)(zod@3.24.1)
    transitivePeerDependencies:
      - bufferutil
      - typescript
      - utf-8-validate
      - zod

  '@reown/appkit-controllers@1.7.8(@types/react@18.3.23)(bufferutil@4.0.9)(encoding@0.1.13)(react@18.3.1)(typescript@5.8.3)(utf-8-validate@5.0.10)(zod@3.24.1)':
    dependencies:
      '@reown/appkit-common': 1.7.8(bufferutil@4.0.9)(typescript@5.8.3)(utf-8-validate@5.0.10)(zod@3.24.1)
      '@reown/appkit-wallet': 1.7.8(bufferutil@4.0.9)(typescript@5.8.3)(utf-8-validate@5.0.10)
      '@walletconnect/universal-provider': 2.21.0(bufferutil@4.0.9)(encoding@0.1.13)(typescript@5.8.3)(utf-8-validate@5.0.10)(zod@3.24.1)
      valtio: 1.13.2(@types/react@18.3.23)(react@18.3.1)
      viem: 2.31.4(bufferutil@4.0.9)(typescript@5.8.3)(utf-8-validate@5.0.10)(zod@3.24.1)
    transitivePeerDependencies:
      - '@azure/app-configuration'
      - '@azure/cosmos'
      - '@azure/data-tables'
      - '@azure/identity'
      - '@azure/keyvault-secrets'
      - '@azure/storage-blob'
      - '@capacitor/preferences'
      - '@deno/kv'
      - '@netlify/blobs'
      - '@planetscale/database'
      - '@react-native-async-storage/async-storage'
      - '@types/react'
      - '@upstash/redis'
      - '@vercel/blob'
      - '@vercel/kv'
      - aws4fetch
      - bufferutil
      - db0
      - encoding
      - ioredis
      - react
      - typescript
      - uploadthing
      - utf-8-validate
      - zod

  '@reown/appkit-pay@1.7.8(@types/react@18.3.23)(bufferutil@4.0.9)(encoding@0.1.13)(react@18.3.1)(typescript@5.8.3)(utf-8-validate@5.0.10)(zod@3.24.1)':
    dependencies:
      '@reown/appkit-common': 1.7.8(bufferutil@4.0.9)(typescript@5.8.3)(utf-8-validate@5.0.10)(zod@3.24.1)
      '@reown/appkit-controllers': 1.7.8(@types/react@18.3.23)(bufferutil@4.0.9)(encoding@0.1.13)(react@18.3.1)(typescript@5.8.3)(utf-8-validate@5.0.10)(zod@3.24.1)
      '@reown/appkit-ui': 1.7.8(@types/react@18.3.23)(bufferutil@4.0.9)(encoding@0.1.13)(react@18.3.1)(typescript@5.8.3)(utf-8-validate@5.0.10)(zod@3.24.1)
      '@reown/appkit-utils': 1.7.8(@types/react@18.3.23)(bufferutil@4.0.9)(encoding@0.1.13)(react@18.3.1)(typescript@5.8.3)(utf-8-validate@5.0.10)(valtio@1.13.2(@types/react@18.3.23)(react@18.3.1))(zod@3.24.1)
      lit: 3.3.0
      valtio: 1.13.2(@types/react@18.3.23)(react@18.3.1)
    transitivePeerDependencies:
      - '@azure/app-configuration'
      - '@azure/cosmos'
      - '@azure/data-tables'
      - '@azure/identity'
      - '@azure/keyvault-secrets'
      - '@azure/storage-blob'
      - '@capacitor/preferences'
      - '@deno/kv'
      - '@netlify/blobs'
      - '@planetscale/database'
      - '@react-native-async-storage/async-storage'
      - '@types/react'
      - '@upstash/redis'
      - '@vercel/blob'
      - '@vercel/kv'
      - aws4fetch
      - bufferutil
      - db0
      - encoding
      - ioredis
      - react
      - typescript
      - uploadthing
      - utf-8-validate
      - zod

  '@reown/appkit-polyfills@1.7.8':
    dependencies:
      buffer: 6.0.3

  '@reown/appkit-scaffold-ui@1.7.8(@types/react@18.3.23)(bufferutil@4.0.9)(encoding@0.1.13)(react@18.3.1)(typescript@5.8.3)(utf-8-validate@5.0.10)(valtio@1.13.2(@types/react@18.3.23)(react@18.3.1))(zod@3.24.1)':
    dependencies:
      '@reown/appkit-common': 1.7.8(bufferutil@4.0.9)(typescript@5.8.3)(utf-8-validate@5.0.10)(zod@3.24.1)
      '@reown/appkit-controllers': 1.7.8(@types/react@18.3.23)(bufferutil@4.0.9)(encoding@0.1.13)(react@18.3.1)(typescript@5.8.3)(utf-8-validate@5.0.10)(zod@3.24.1)
      '@reown/appkit-ui': 1.7.8(@types/react@18.3.23)(bufferutil@4.0.9)(encoding@0.1.13)(react@18.3.1)(typescript@5.8.3)(utf-8-validate@5.0.10)(zod@3.24.1)
      '@reown/appkit-utils': 1.7.8(@types/react@18.3.23)(bufferutil@4.0.9)(encoding@0.1.13)(react@18.3.1)(typescript@5.8.3)(utf-8-validate@5.0.10)(valtio@1.13.2(@types/react@18.3.23)(react@18.3.1))(zod@3.24.1)
      '@reown/appkit-wallet': 1.7.8(bufferutil@4.0.9)(typescript@5.8.3)(utf-8-validate@5.0.10)
      lit: 3.3.0
    transitivePeerDependencies:
      - '@azure/app-configuration'
      - '@azure/cosmos'
      - '@azure/data-tables'
      - '@azure/identity'
      - '@azure/keyvault-secrets'
      - '@azure/storage-blob'
      - '@capacitor/preferences'
      - '@deno/kv'
      - '@netlify/blobs'
      - '@planetscale/database'
      - '@react-native-async-storage/async-storage'
      - '@types/react'
      - '@upstash/redis'
      - '@vercel/blob'
      - '@vercel/kv'
      - aws4fetch
      - bufferutil
      - db0
      - encoding
      - ioredis
      - react
      - typescript
      - uploadthing
      - utf-8-validate
      - valtio
      - zod

  '@reown/appkit-ui@1.7.8(@types/react@18.3.23)(bufferutil@4.0.9)(encoding@0.1.13)(react@18.3.1)(typescript@5.8.3)(utf-8-validate@5.0.10)(zod@3.24.1)':
    dependencies:
      '@reown/appkit-common': 1.7.8(bufferutil@4.0.9)(typescript@5.8.3)(utf-8-validate@5.0.10)(zod@3.24.1)
      '@reown/appkit-controllers': 1.7.8(@types/react@18.3.23)(bufferutil@4.0.9)(encoding@0.1.13)(react@18.3.1)(typescript@5.8.3)(utf-8-validate@5.0.10)(zod@3.24.1)
      '@reown/appkit-wallet': 1.7.8(bufferutil@4.0.9)(typescript@5.8.3)(utf-8-validate@5.0.10)
      lit: 3.3.0
      qrcode: 1.5.3
    transitivePeerDependencies:
      - '@azure/app-configuration'
      - '@azure/cosmos'
      - '@azure/data-tables'
      - '@azure/identity'
      - '@azure/keyvault-secrets'
      - '@azure/storage-blob'
      - '@capacitor/preferences'
      - '@deno/kv'
      - '@netlify/blobs'
      - '@planetscale/database'
      - '@react-native-async-storage/async-storage'
      - '@types/react'
      - '@upstash/redis'
      - '@vercel/blob'
      - '@vercel/kv'
      - aws4fetch
      - bufferutil
      - db0
      - encoding
      - ioredis
      - react
      - typescript
      - uploadthing
      - utf-8-validate
      - zod

  '@reown/appkit-utils@1.7.8(@types/react@18.3.23)(bufferutil@4.0.9)(encoding@0.1.13)(react@18.3.1)(typescript@5.8.3)(utf-8-validate@5.0.10)(valtio@1.13.2(@types/react@18.3.23)(react@18.3.1))(zod@3.24.1)':
    dependencies:
      '@reown/appkit-common': 1.7.8(bufferutil@4.0.9)(typescript@5.8.3)(utf-8-validate@5.0.10)(zod@3.24.1)
      '@reown/appkit-controllers': 1.7.8(@types/react@18.3.23)(bufferutil@4.0.9)(encoding@0.1.13)(react@18.3.1)(typescript@5.8.3)(utf-8-validate@5.0.10)(zod@3.24.1)
      '@reown/appkit-polyfills': 1.7.8
      '@reown/appkit-wallet': 1.7.8(bufferutil@4.0.9)(typescript@5.8.3)(utf-8-validate@5.0.10)
      '@walletconnect/logger': 2.1.2
      '@walletconnect/universal-provider': 2.21.0(bufferutil@4.0.9)(encoding@0.1.13)(typescript@5.8.3)(utf-8-validate@5.0.10)(zod@3.24.1)
      valtio: 1.13.2(@types/react@18.3.23)(react@18.3.1)
      viem: 2.31.4(bufferutil@4.0.9)(typescript@5.8.3)(utf-8-validate@5.0.10)(zod@3.24.1)
    transitivePeerDependencies:
      - '@azure/app-configuration'
      - '@azure/cosmos'
      - '@azure/data-tables'
      - '@azure/identity'
      - '@azure/keyvault-secrets'
      - '@azure/storage-blob'
      - '@capacitor/preferences'
      - '@deno/kv'
      - '@netlify/blobs'
      - '@planetscale/database'
      - '@react-native-async-storage/async-storage'
      - '@types/react'
      - '@upstash/redis'
      - '@vercel/blob'
      - '@vercel/kv'
      - aws4fetch
      - bufferutil
      - db0
      - encoding
      - ioredis
      - react
      - typescript
      - uploadthing
      - utf-8-validate
      - zod

  '@reown/appkit-wallet@1.7.8(bufferutil@4.0.9)(typescript@5.8.3)(utf-8-validate@5.0.10)':
    dependencies:
      '@reown/appkit-common': 1.7.8(bufferutil@4.0.9)(typescript@5.8.3)(utf-8-validate@5.0.10)(zod@3.22.4)
      '@reown/appkit-polyfills': 1.7.8
      '@walletconnect/logger': 2.1.2
      zod: 3.22.4
    transitivePeerDependencies:
      - bufferutil
      - typescript
      - utf-8-validate

  '@reown/appkit@1.7.8(@types/react@18.3.23)(bufferutil@4.0.9)(encoding@0.1.13)(react@18.3.1)(typescript@5.8.3)(utf-8-validate@5.0.10)(zod@3.24.1)':
    dependencies:
      '@reown/appkit-common': 1.7.8(bufferutil@4.0.9)(typescript@5.8.3)(utf-8-validate@5.0.10)(zod@3.24.1)
      '@reown/appkit-controllers': 1.7.8(@types/react@18.3.23)(bufferutil@4.0.9)(encoding@0.1.13)(react@18.3.1)(typescript@5.8.3)(utf-8-validate@5.0.10)(zod@3.24.1)
      '@reown/appkit-pay': 1.7.8(@types/react@18.3.23)(bufferutil@4.0.9)(encoding@0.1.13)(react@18.3.1)(typescript@5.8.3)(utf-8-validate@5.0.10)(zod@3.24.1)
      '@reown/appkit-polyfills': 1.7.8
      '@reown/appkit-scaffold-ui': 1.7.8(@types/react@18.3.23)(bufferutil@4.0.9)(encoding@0.1.13)(react@18.3.1)(typescript@5.8.3)(utf-8-validate@5.0.10)(valtio@1.13.2(@types/react@18.3.23)(react@18.3.1))(zod@3.24.1)
      '@reown/appkit-ui': 1.7.8(@types/react@18.3.23)(bufferutil@4.0.9)(encoding@0.1.13)(react@18.3.1)(typescript@5.8.3)(utf-8-validate@5.0.10)(zod@3.24.1)
      '@reown/appkit-utils': 1.7.8(@types/react@18.3.23)(bufferutil@4.0.9)(encoding@0.1.13)(react@18.3.1)(typescript@5.8.3)(utf-8-validate@5.0.10)(valtio@1.13.2(@types/react@18.3.23)(react@18.3.1))(zod@3.24.1)
      '@reown/appkit-wallet': 1.7.8(bufferutil@4.0.9)(typescript@5.8.3)(utf-8-validate@5.0.10)
      '@walletconnect/types': 2.21.0
      '@walletconnect/universal-provider': 2.21.0(bufferutil@4.0.9)(encoding@0.1.13)(typescript@5.8.3)(utf-8-validate@5.0.10)(zod@3.24.1)
      bs58: 6.0.0
      valtio: 1.13.2(@types/react@18.3.23)(react@18.3.1)
      viem: 2.31.4(bufferutil@4.0.9)(typescript@5.8.3)(utf-8-validate@5.0.10)(zod@3.24.1)
    transitivePeerDependencies:
      - '@azure/app-configuration'
      - '@azure/cosmos'
      - '@azure/data-tables'
      - '@azure/identity'
      - '@azure/keyvault-secrets'
      - '@azure/storage-blob'
      - '@capacitor/preferences'
      - '@deno/kv'
      - '@netlify/blobs'
      - '@planetscale/database'
      - '@react-native-async-storage/async-storage'
      - '@types/react'
      - '@upstash/redis'
      - '@vercel/blob'
      - '@vercel/kv'
      - aws4fetch
      - bufferutil
      - db0
      - encoding
      - ioredis
      - react
      - typescript
      - uploadthing
      - utf-8-validate
      - zod

  '@rolldown/pluginutils@1.0.0-beta.19': {}

  '@rollup/plugin-virtual@3.0.2(rollup@4.34.4)':
    optionalDependencies:
      rollup: 4.34.4

  '@rollup/rollup-android-arm-eabi@4.34.4':
    optional: true

  '@rollup/rollup-android-arm64@4.34.4':
    optional: true

  '@rollup/rollup-darwin-arm64@4.34.4':
    optional: true

  '@rollup/rollup-darwin-x64@4.34.4':
    optional: true

  '@rollup/rollup-freebsd-arm64@4.34.4':
    optional: true

  '@rollup/rollup-freebsd-x64@4.34.4':
    optional: true

  '@rollup/rollup-linux-arm-gnueabihf@4.34.4':
    optional: true

  '@rollup/rollup-linux-arm-musleabihf@4.34.4':
    optional: true

  '@rollup/rollup-linux-arm64-gnu@4.34.4':
    optional: true

  '@rollup/rollup-linux-arm64-musl@4.34.4':
    optional: true

  '@rollup/rollup-linux-loongarch64-gnu@4.34.4':
    optional: true

  '@rollup/rollup-linux-powerpc64le-gnu@4.34.4':
    optional: true

  '@rollup/rollup-linux-riscv64-gnu@4.34.4':
    optional: true

  '@rollup/rollup-linux-s390x-gnu@4.34.4':
    optional: true

  '@rollup/rollup-linux-x64-gnu@4.34.4':
    optional: true

  '@rollup/rollup-linux-x64-musl@4.34.4':
    optional: true

  '@rollup/rollup-win32-arm64-msvc@4.34.4':
    optional: true

  '@rollup/rollup-win32-ia32-msvc@4.34.4':
    optional: true

  '@rollup/rollup-win32-x64-msvc@4.34.4':
    optional: true

  '@scure/base@1.1.9': {}

  '@scure/base@1.2.1': {}

  '@scure/base@1.2.4': {}

  '@scure/base@1.2.6': {}

  '@scure/bip32@1.3.2':
    dependencies:
      '@noble/curves': 1.2.0
      '@noble/hashes': 1.3.3
      '@scure/base': 1.1.9

  '@scure/bip32@1.4.0':
    dependencies:
      '@noble/curves': 1.4.2
      '@noble/hashes': 1.4.0
      '@scure/base': 1.1.9

  '@scure/bip32@1.6.2':
    dependencies:
      '@noble/curves': 1.8.1
      '@noble/hashes': 1.7.1
      '@scure/base': 1.2.4

  '@scure/bip32@1.7.0':
    dependencies:
      '@noble/curves': 1.9.2
      '@noble/hashes': 1.8.0
      '@scure/base': 1.2.6

  '@scure/bip39@1.2.1':
    dependencies:
      '@noble/hashes': 1.3.3
      '@scure/base': 1.1.9

  '@scure/bip39@1.3.0':
    dependencies:
      '@noble/hashes': 1.4.0
      '@scure/base': 1.1.9

  '@scure/bip39@1.5.4':
    dependencies:
      '@noble/hashes': 1.7.1
      '@scure/base': 1.2.4

  '@scure/bip39@1.6.0':
    dependencies:
      '@noble/hashes': 1.8.0
      '@scure/base': 1.2.6

  '@scure/starknet@1.1.0':
    dependencies:
      '@noble/curves': 1.7.0
      '@noble/hashes': 1.6.0

  '@socket.io/component-emitter@3.1.2': {}

  '@solana/buffer-layout@4.0.1':
    dependencies:
      buffer: 6.0.3

  '@solana/codecs-core@2.1.1(typescript@5.8.3)':
    dependencies:
      '@solana/errors': 2.1.1(typescript@5.8.3)
      typescript: 5.8.3

  '@solana/codecs-numbers@2.1.1(typescript@5.8.3)':
    dependencies:
      '@solana/codecs-core': 2.1.1(typescript@5.8.3)
      '@solana/errors': 2.1.1(typescript@5.8.3)
      typescript: 5.8.3

  '@solana/errors@2.1.1(typescript@5.8.3)':
    dependencies:
      chalk: 5.4.1
      commander: 13.1.0
      typescript: 5.8.3

  '@solana/web3.js@1.98.2(bufferutil@4.0.9)(encoding@0.1.13)(typescript@5.8.3)(utf-8-validate@5.0.10)':
    dependencies:
      '@babel/runtime': 7.26.7
      '@noble/curves': 1.9.2
      '@noble/hashes': 1.8.0
      '@solana/buffer-layout': 4.0.1
      '@solana/codecs-numbers': 2.1.1(typescript@5.8.3)
      agentkeepalive: 4.6.0
      bn.js: 5.2.2
      borsh: 0.7.0
      bs58: 4.0.1
      buffer: 6.0.3
      fast-stable-stringify: 1.0.0
      jayson: 4.2.0(bufferutil@4.0.9)(utf-8-validate@5.0.10)
      node-fetch: 2.7.0(encoding@0.1.13)
      rpc-websockets: 9.1.1
      superstruct: 2.0.2
    transitivePeerDependencies:
      - bufferutil
      - encoding
      - typescript
      - utf-8-validate

  '@starknet-io/get-starknet-core@4.0.7':
    dependencies:
      '@module-federation/runtime': 0.1.21
      '@starknet-io/types-js': 0.7.10
      async-mutex: 0.5.0

  '@starknet-io/get-starknet@4.0.7':
    dependencies:
      '@starknet-io/get-starknet-core': 4.0.7
      bowser: 2.11.0

  '@starknet-io/types-js@0.7.10': {}

  '@starknet-react/chains@3.1.3': {}

  '@starknet-react/core@3.7.4(bufferutil@4.0.9)(get-starknet-core@4.0.0)(react@18.3.1)(starknet@6.23.1(encoding@0.1.13))(typescript@5.8.3)(utf-8-validate@5.0.10)':
    dependencies:
      '@starknet-io/types-js': 0.7.10
      '@starknet-react/chains': 3.1.3
      '@tanstack/react-query': 5.66.0(react@18.3.1)
      abi-wan-kanabi: 2.2.4
      eventemitter3: 5.0.1
      get-starknet-core: 4.0.0
      react: 18.3.1
      starknet: 6.23.1(encoding@0.1.13)
      viem: 2.22.22(bufferutil@4.0.9)(typescript@5.8.3)(utf-8-validate@5.0.10)(zod@3.24.1)
      zod: 3.24.1
    transitivePeerDependencies:
      - bufferutil
      - typescript
      - utf-8-validate

  '@swc/core-darwin-arm64@1.11.29':
    optional: true

  '@swc/core-darwin-x64@1.11.29':
    optional: true

  '@swc/core-linux-arm-gnueabihf@1.11.29':
    optional: true

  '@swc/core-linux-arm64-gnu@1.11.29':
    optional: true

  '@swc/core-linux-arm64-musl@1.11.29':
    optional: true

  '@swc/core-linux-x64-gnu@1.11.29':
    optional: true

  '@swc/core-linux-x64-musl@1.11.29':
    optional: true

  '@swc/core-win32-arm64-msvc@1.11.29':
    optional: true

  '@swc/core-win32-ia32-msvc@1.11.29':
    optional: true

  '@swc/core-win32-x64-msvc@1.11.29':
    optional: true

  '@swc/core@1.11.29(@swc/helpers@0.5.17)':
    dependencies:
      '@swc/counter': 0.1.3
      '@swc/types': 0.1.21
    optionalDependencies:
      '@swc/core-darwin-arm64': 1.11.29
      '@swc/core-darwin-x64': 1.11.29
      '@swc/core-linux-arm-gnueabihf': 1.11.29
      '@swc/core-linux-arm64-gnu': 1.11.29
      '@swc/core-linux-arm64-musl': 1.11.29
      '@swc/core-linux-x64-gnu': 1.11.29
      '@swc/core-linux-x64-musl': 1.11.29
      '@swc/core-win32-arm64-msvc': 1.11.29
      '@swc/core-win32-ia32-msvc': 1.11.29
      '@swc/core-win32-x64-msvc': 1.11.29
      '@swc/helpers': 0.5.17

  '@swc/counter@0.1.3': {}

  '@swc/helpers@0.5.17':
    dependencies:
      tslib: 2.8.1

  '@swc/types@0.1.21':
    dependencies:
      '@swc/counter': 0.1.3

  '@tanstack/query-core@5.66.0': {}

  '@tanstack/react-query@5.66.0(react@18.3.1)':
    dependencies:
      '@tanstack/query-core': 5.66.0
      react: 18.3.1

  '@telegram-apps/bridge@1.9.2':
    dependencies:
      '@telegram-apps/signals': 1.1.1
      '@telegram-apps/toolkit': 1.1.1
      '@telegram-apps/transformers': 1.2.2
      '@telegram-apps/types': 1.2.1

  '@telegram-apps/navigation@1.0.13':
    dependencies:
      '@telegram-apps/bridge': 1.9.2
      '@telegram-apps/signals': 1.1.1
      '@telegram-apps/toolkit': 1.1.1

  '@telegram-apps/sdk@2.11.3':
    dependencies:
      '@telegram-apps/bridge': 1.9.2
      '@telegram-apps/navigation': 1.0.13
      '@telegram-apps/signals': 1.1.1
      '@telegram-apps/toolkit': 1.1.1
      '@telegram-apps/transformers': 1.2.2

  '@telegram-apps/signals@1.1.1': {}

  '@telegram-apps/toolkit@1.1.1': {}

  '@telegram-apps/transformers@1.2.2':
    dependencies:
      '@telegram-apps/toolkit': 1.1.1
      '@telegram-apps/types': 1.2.1

  '@telegram-apps/types@1.2.1': {}

  '@trpc/client@10.45.2(@trpc/server@10.45.2)':
    dependencies:
      '@trpc/server': 10.45.2

  '@trpc/server@10.45.2': {}

  '@turnkey/api-key-stamper@0.4.5':
    dependencies:
      '@noble/curves': 1.8.1
      '@turnkey/encoding': 0.4.0
      sha256-uint8array: 0.10.7

  '@turnkey/crypto@2.3.1':
    dependencies:
      '@noble/ciphers': 0.5.3
      '@noble/curves': 1.4.0
      '@noble/hashes': 1.4.0
      '@turnkey/encoding': 0.4.0
      bs58: 5.0.0
      bs58check: 3.0.1

  '@turnkey/encoding@0.4.0': {}

  '@turnkey/http@3.3.0(encoding@0.1.13)':
    dependencies:
      '@turnkey/api-key-stamper': 0.4.5
      '@turnkey/encoding': 0.4.0
      '@turnkey/webauthn-stamper': 0.5.0
      cross-fetch: 3.2.0(encoding@0.1.13)
    transitivePeerDependencies:
      - encoding

  '@turnkey/iframe-stamper@2.5.0': {}

  '@turnkey/sdk-browser@4.3.0(bufferutil@4.0.9)(encoding@0.1.13)(typescript@5.8.3)(utf-8-validate@5.0.10)(zod@3.24.1)':
    dependencies:
      '@turnkey/api-key-stamper': 0.4.5
      '@turnkey/crypto': 2.3.1
      '@turnkey/encoding': 0.4.0
      '@turnkey/http': 3.3.0(encoding@0.1.13)
      '@turnkey/iframe-stamper': 2.5.0
      '@turnkey/wallet-stamper': 1.0.3(bufferutil@4.0.9)(typescript@5.8.3)(utf-8-validate@5.0.10)(zod@3.24.1)
      '@turnkey/webauthn-stamper': 0.5.0
      bs58check: 3.0.1
      buffer: 6.0.3
      cross-fetch: 3.2.0(encoding@0.1.13)
      hpke-js: 1.6.2
    transitivePeerDependencies:
      - bufferutil
      - encoding
      - typescript
      - utf-8-validate
      - zod

  '@turnkey/wallet-stamper@1.0.3(bufferutil@4.0.9)(typescript@5.8.3)(utf-8-validate@5.0.10)(zod@3.24.1)':
    dependencies:
      '@turnkey/crypto': 2.3.1
      '@turnkey/encoding': 0.4.0
    optionalDependencies:
      viem: 2.22.22(bufferutil@4.0.9)(typescript@5.8.3)(utf-8-validate@5.0.10)(zod@3.24.1)
    transitivePeerDependencies:
      - bufferutil
      - typescript
      - utf-8-validate
      - zod

  '@turnkey/webauthn-stamper@0.5.0':
    dependencies:
      sha256-uint8array: 0.10.7

  '@tweenjs/tween.js@23.1.3': {}

  '@types/babel__core@7.20.5':
    dependencies:
      '@babel/parser': 7.26.7
      '@babel/types': 7.26.7
      '@types/babel__generator': 7.6.8
      '@types/babel__template': 7.4.4
      '@types/babel__traverse': 7.20.6

  '@types/babel__generator@7.6.8':
    dependencies:
      '@babel/types': 7.26.7

  '@types/babel__template@7.4.4':
    dependencies:
      '@babel/parser': 7.26.7
      '@babel/types': 7.26.7

  '@types/babel__traverse@7.20.6':
    dependencies:
      '@babel/types': 7.26.7

  '@types/connect@3.4.38':
    dependencies:
      '@types/node': 22.15.32

  '@types/debug@4.1.12':
    dependencies:
      '@types/ms': 2.1.0

  '@types/draco3d@1.4.10': {}

  '@types/estree@1.0.6': {}

  '@types/json-schema@7.0.15': {}

  '@types/ms@2.1.0': {}

  '@types/node@12.20.55': {}

  '@types/node@22.15.32':
    dependencies:
      undici-types: 6.21.0

  '@types/node@22.7.5':
    dependencies:
      undici-types: 6.19.8

  '@types/offscreencanvas@2019.7.3': {}

  '@types/prop-types@15.7.14': {}

  '@types/react-dom@18.3.7(@types/react@18.3.23)':
    dependencies:
      '@types/react': 18.3.23

  '@types/react-reconciler@0.26.7':
    dependencies:
      '@types/react': 18.3.23

  '@types/react-reconciler@0.28.9(@types/react@18.3.23)':
    dependencies:
      '@types/react': 18.3.23

  '@types/react@18.3.23':
    dependencies:
      '@types/prop-types': 15.7.14
      csstype: 3.1.3

  '@types/stats.js@0.17.4': {}

  '@types/three@0.177.0':
    dependencies:
      '@dimforge/rapier3d-compat': 0.12.0
      '@tweenjs/tween.js': 23.1.3
      '@types/stats.js': 0.17.4
      '@types/webxr': 0.5.22
      '@webgpu/types': 0.1.61
      fflate: 0.8.2
      meshoptimizer: 0.18.1

  '@types/trusted-types@2.0.7': {}

  '@types/uuid@10.0.0': {}

  '@types/uuid@8.3.4': {}

  '@types/webxr@0.5.22': {}

  '@types/ws@7.4.7':
    dependencies:
      '@types/node': 22.15.32

  '@types/ws@8.18.1':
    dependencies:
      '@types/node': 22.15.32

  '@typescript-eslint/eslint-plugin@8.34.1(@typescript-eslint/parser@8.34.1(eslint@9.29.0(jiti@1.21.7))(typescript@5.8.3))(eslint@9.29.0(jiti@1.21.7))(typescript@5.8.3)':
    dependencies:
      '@eslint-community/regexpp': 4.12.1
      '@typescript-eslint/parser': 8.34.1(eslint@9.29.0(jiti@1.21.7))(typescript@5.8.3)
      '@typescript-eslint/scope-manager': 8.34.1
      '@typescript-eslint/type-utils': 8.34.1(eslint@9.29.0(jiti@1.21.7))(typescript@5.8.3)
      '@typescript-eslint/utils': 8.34.1(eslint@9.29.0(jiti@1.21.7))(typescript@5.8.3)
      '@typescript-eslint/visitor-keys': 8.34.1
      eslint: 9.29.0(jiti@1.21.7)
      graphemer: 1.4.0
      ignore: 7.0.5
      natural-compare: 1.4.0
      ts-api-utils: 2.1.0(typescript@5.8.3)
      typescript: 5.8.3
    transitivePeerDependencies:
      - supports-color

  '@typescript-eslint/parser@8.34.1(eslint@9.29.0(jiti@1.21.7))(typescript@5.8.3)':
    dependencies:
      '@typescript-eslint/scope-manager': 8.34.1
      '@typescript-eslint/types': 8.34.1
      '@typescript-eslint/typescript-estree': 8.34.1(typescript@5.8.3)
      '@typescript-eslint/visitor-keys': 8.34.1
      debug: 4.4.0
      eslint: 9.29.0(jiti@1.21.7)
      typescript: 5.8.3
    transitivePeerDependencies:
      - supports-color

  '@typescript-eslint/project-service@8.34.1(typescript@5.8.3)':
    dependencies:
      '@typescript-eslint/tsconfig-utils': 8.34.1(typescript@5.8.3)
      '@typescript-eslint/types': 8.34.1
      debug: 4.4.0
      typescript: 5.8.3
    transitivePeerDependencies:
      - supports-color

  '@typescript-eslint/scope-manager@8.34.1':
    dependencies:
      '@typescript-eslint/types': 8.34.1
      '@typescript-eslint/visitor-keys': 8.34.1

  '@typescript-eslint/tsconfig-utils@8.34.1(typescript@5.8.3)':
    dependencies:
      typescript: 5.8.3

  '@typescript-eslint/type-utils@8.34.1(eslint@9.29.0(jiti@1.21.7))(typescript@5.8.3)':
    dependencies:
      '@typescript-eslint/typescript-estree': 8.34.1(typescript@5.8.3)
      '@typescript-eslint/utils': 8.34.1(eslint@9.29.0(jiti@1.21.7))(typescript@5.8.3)
      debug: 4.4.0
      eslint: 9.29.0(jiti@1.21.7)
      ts-api-utils: 2.1.0(typescript@5.8.3)
      typescript: 5.8.3
    transitivePeerDependencies:
      - supports-color

  '@typescript-eslint/types@8.34.1': {}

  '@typescript-eslint/typescript-estree@8.34.1(typescript@5.8.3)':
    dependencies:
      '@typescript-eslint/project-service': 8.34.1(typescript@5.8.3)
      '@typescript-eslint/tsconfig-utils': 8.34.1(typescript@5.8.3)
      '@typescript-eslint/types': 8.34.1
      '@typescript-eslint/visitor-keys': 8.34.1
      debug: 4.4.0
      fast-glob: 3.3.3
      is-glob: 4.0.3
      minimatch: 9.0.5
      semver: 7.7.1
      ts-api-utils: 2.1.0(typescript@5.8.3)
      typescript: 5.8.3
    transitivePeerDependencies:
      - supports-color

  '@typescript-eslint/utils@8.34.1(eslint@9.29.0(jiti@1.21.7))(typescript@5.8.3)':
    dependencies:
      '@eslint-community/eslint-utils': 4.7.0(eslint@9.29.0(jiti@1.21.7))
      '@typescript-eslint/scope-manager': 8.34.1
      '@typescript-eslint/types': 8.34.1
      '@typescript-eslint/typescript-estree': 8.34.1(typescript@5.8.3)
      eslint: 9.29.0(jiti@1.21.7)
      typescript: 5.8.3
    transitivePeerDependencies:
      - supports-color

  '@typescript-eslint/visitor-keys@8.34.1':
    dependencies:
      '@typescript-eslint/types': 8.34.1
      eslint-visitor-keys: 4.2.1

  '@use-gesture/core@10.3.1': {}

  '@use-gesture/react@10.3.1(react@18.3.1)':
    dependencies:
      '@use-gesture/core': 10.3.1
      react: 18.3.1

  '@vitejs/plugin-react@4.6.0(vite@5.4.19(@types/node@22.15.32))':
    dependencies:
      '@babel/core': 7.27.4
      '@babel/plugin-transform-react-jsx-self': 7.27.1(@babel/core@7.27.4)
      '@babel/plugin-transform-react-jsx-source': 7.27.1(@babel/core@7.27.4)
      '@rolldown/pluginutils': 1.0.0-beta.19
      '@types/babel__core': 7.20.5
      react-refresh: 0.17.0
      vite: 5.4.19(@types/node@22.15.32)
    transitivePeerDependencies:
      - supports-color

  '@walletconnect/core@2.21.0(bufferutil@4.0.9)(typescript@5.8.3)(utf-8-validate@5.0.10)(zod@3.24.1)':
    dependencies:
      '@walletconnect/heartbeat': 1.2.2
      '@walletconnect/jsonrpc-provider': 1.0.14
      '@walletconnect/jsonrpc-types': 1.0.4
      '@walletconnect/jsonrpc-utils': 1.0.8
      '@walletconnect/jsonrpc-ws-connection': 1.0.16(bufferutil@4.0.9)(utf-8-validate@5.0.10)
      '@walletconnect/keyvaluestorage': 1.1.1
      '@walletconnect/logger': 2.1.2
      '@walletconnect/relay-api': 1.0.11
      '@walletconnect/relay-auth': 1.1.0
      '@walletconnect/safe-json': 1.0.2
      '@walletconnect/time': 1.0.2
      '@walletconnect/types': 2.21.0
      '@walletconnect/utils': 2.21.0(bufferutil@4.0.9)(typescript@5.8.3)(utf-8-validate@5.0.10)(zod@3.24.1)
      '@walletconnect/window-getters': 1.0.1
      es-toolkit: 1.33.0
      events: 3.3.0
      uint8arrays: 3.1.0
    transitivePeerDependencies:
      - '@azure/app-configuration'
      - '@azure/cosmos'
      - '@azure/data-tables'
      - '@azure/identity'
      - '@azure/keyvault-secrets'
      - '@azure/storage-blob'
      - '@capacitor/preferences'
      - '@deno/kv'
      - '@netlify/blobs'
      - '@planetscale/database'
      - '@react-native-async-storage/async-storage'
      - '@upstash/redis'
      - '@vercel/blob'
      - '@vercel/kv'
      - aws4fetch
      - bufferutil
      - db0
      - ioredis
      - typescript
      - uploadthing
      - utf-8-validate
      - zod

  '@walletconnect/core@2.21.3(bufferutil@4.0.9)(typescript@5.8.3)(utf-8-validate@5.0.10)(zod@3.24.1)':
    dependencies:
      '@walletconnect/heartbeat': 1.2.2
      '@walletconnect/jsonrpc-provider': 1.0.14
      '@walletconnect/jsonrpc-types': 1.0.4
      '@walletconnect/jsonrpc-utils': 1.0.8
      '@walletconnect/jsonrpc-ws-connection': 1.0.16(bufferutil@4.0.9)(utf-8-validate@5.0.10)
      '@walletconnect/keyvaluestorage': 1.1.1
      '@walletconnect/logger': 2.1.2
      '@walletconnect/relay-api': 1.0.11
      '@walletconnect/relay-auth': 1.1.0
      '@walletconnect/safe-json': 1.0.2
      '@walletconnect/time': 1.0.2
      '@walletconnect/types': 2.21.3
      '@walletconnect/utils': 2.21.3(bufferutil@4.0.9)(typescript@5.8.3)(utf-8-validate@5.0.10)(zod@3.24.1)
      '@walletconnect/window-getters': 1.0.1
      es-toolkit: 1.39.3
      events: 3.3.0
      uint8arrays: 3.1.1
    transitivePeerDependencies:
      - '@azure/app-configuration'
      - '@azure/cosmos'
      - '@azure/data-tables'
      - '@azure/identity'
      - '@azure/keyvault-secrets'
      - '@azure/storage-blob'
      - '@capacitor/preferences'
      - '@deno/kv'
      - '@netlify/blobs'
      - '@planetscale/database'
      - '@react-native-async-storage/async-storage'
      - '@upstash/redis'
      - '@vercel/blob'
      - '@vercel/kv'
      - aws4fetch
      - bufferutil
      - db0
      - ioredis
      - typescript
      - uploadthing
      - utf-8-validate
      - zod

  '@walletconnect/environment@1.0.1':
    dependencies:
      tslib: 1.14.1

  '@walletconnect/ethereum-provider@2.21.3(@types/react@18.3.23)(bufferutil@4.0.9)(encoding@0.1.13)(react@18.3.1)(typescript@5.8.3)(utf-8-validate@5.0.10)(zod@3.24.1)':
    dependencies:
      '@reown/appkit': 1.7.8(@types/react@18.3.23)(bufferutil@4.0.9)(encoding@0.1.13)(react@18.3.1)(typescript@5.8.3)(utf-8-validate@5.0.10)(zod@3.24.1)
      '@walletconnect/jsonrpc-http-connection': 1.0.8(encoding@0.1.13)
      '@walletconnect/jsonrpc-provider': 1.0.14
      '@walletconnect/jsonrpc-types': 1.0.4
      '@walletconnect/jsonrpc-utils': 1.0.8
      '@walletconnect/keyvaluestorage': 1.1.1
      '@walletconnect/sign-client': 2.21.3(bufferutil@4.0.9)(typescript@5.8.3)(utf-8-validate@5.0.10)(zod@3.24.1)
      '@walletconnect/types': 2.21.3
      '@walletconnect/universal-provider': 2.21.3(bufferutil@4.0.9)(encoding@0.1.13)(typescript@5.8.3)(utf-8-validate@5.0.10)(zod@3.24.1)
      '@walletconnect/utils': 2.21.3(bufferutil@4.0.9)(typescript@5.8.3)(utf-8-validate@5.0.10)(zod@3.24.1)
      events: 3.3.0
    transitivePeerDependencies:
      - '@azure/app-configuration'
      - '@azure/cosmos'
      - '@azure/data-tables'
      - '@azure/identity'
      - '@azure/keyvault-secrets'
      - '@azure/storage-blob'
      - '@capacitor/preferences'
      - '@deno/kv'
      - '@netlify/blobs'
      - '@planetscale/database'
      - '@react-native-async-storage/async-storage'
      - '@types/react'
      - '@upstash/redis'
      - '@vercel/blob'
      - '@vercel/kv'
      - aws4fetch
      - bufferutil
      - db0
      - encoding
      - ioredis
      - react
      - typescript
      - uploadthing
      - utf-8-validate
      - zod

  '@walletconnect/events@1.0.1':
    dependencies:
      keyvaluestorage-interface: 1.0.0
      tslib: 1.14.1

  '@walletconnect/heartbeat@1.2.2':
    dependencies:
      '@walletconnect/events': 1.0.1
      '@walletconnect/time': 1.0.2
      events: 3.3.0

  '@walletconnect/jsonrpc-http-connection@1.0.8(encoding@0.1.13)':
    dependencies:
      '@walletconnect/jsonrpc-utils': 1.0.8
      '@walletconnect/safe-json': 1.0.2
      cross-fetch: 3.2.0(encoding@0.1.13)
      events: 3.3.0
    transitivePeerDependencies:
      - encoding

  '@walletconnect/jsonrpc-provider@1.0.14':
    dependencies:
      '@walletconnect/jsonrpc-utils': 1.0.8
      '@walletconnect/safe-json': 1.0.2
      events: 3.3.0

  '@walletconnect/jsonrpc-types@1.0.4':
    dependencies:
      events: 3.3.0
      keyvaluestorage-interface: 1.0.0

  '@walletconnect/jsonrpc-utils@1.0.8':
    dependencies:
      '@walletconnect/environment': 1.0.1
      '@walletconnect/jsonrpc-types': 1.0.4
      tslib: 1.14.1

  '@walletconnect/jsonrpc-ws-connection@1.0.16(bufferutil@4.0.9)(utf-8-validate@5.0.10)':
    dependencies:
      '@walletconnect/jsonrpc-utils': 1.0.8
      '@walletconnect/safe-json': 1.0.2
      events: 3.3.0
      ws: 7.5.10(bufferutil@4.0.9)(utf-8-validate@5.0.10)
    transitivePeerDependencies:
      - bufferutil
      - utf-8-validate

  '@walletconnect/keyvaluestorage@1.1.1':
    dependencies:
      '@walletconnect/safe-json': 1.0.2
      idb-keyval: 6.2.2
      unstorage: 1.16.0(idb-keyval@6.2.2)
    transitivePeerDependencies:
      - '@azure/app-configuration'
      - '@azure/cosmos'
      - '@azure/data-tables'
      - '@azure/identity'
      - '@azure/keyvault-secrets'
      - '@azure/storage-blob'
      - '@capacitor/preferences'
      - '@deno/kv'
      - '@netlify/blobs'
      - '@planetscale/database'
      - '@upstash/redis'
      - '@vercel/blob'
      - '@vercel/kv'
      - aws4fetch
      - db0
      - ioredis
      - uploadthing

  '@walletconnect/logger@2.1.2':
    dependencies:
      '@walletconnect/safe-json': 1.0.2
      pino: 7.11.0

  '@walletconnect/relay-api@1.0.11':
    dependencies:
      '@walletconnect/jsonrpc-types': 1.0.4

  '@walletconnect/relay-auth@1.1.0':
    dependencies:
      '@noble/curves': 1.8.0
      '@noble/hashes': 1.7.0
      '@walletconnect/safe-json': 1.0.2
      '@walletconnect/time': 1.0.2
      uint8arrays: 3.1.1

  '@walletconnect/safe-json@1.0.2':
    dependencies:
      tslib: 1.14.1

  '@walletconnect/sign-client@2.21.0(bufferutil@4.0.9)(typescript@5.8.3)(utf-8-validate@5.0.10)(zod@3.24.1)':
    dependencies:
      '@walletconnect/core': 2.21.0(bufferutil@4.0.9)(typescript@5.8.3)(utf-8-validate@5.0.10)(zod@3.24.1)
      '@walletconnect/events': 1.0.1
      '@walletconnect/heartbeat': 1.2.2
      '@walletconnect/jsonrpc-utils': 1.0.8
      '@walletconnect/logger': 2.1.2
      '@walletconnect/time': 1.0.2
      '@walletconnect/types': 2.21.0
      '@walletconnect/utils': 2.21.0(bufferutil@4.0.9)(typescript@5.8.3)(utf-8-validate@5.0.10)(zod@3.24.1)
      events: 3.3.0
    transitivePeerDependencies:
      - '@azure/app-configuration'
      - '@azure/cosmos'
      - '@azure/data-tables'
      - '@azure/identity'
      - '@azure/keyvault-secrets'
      - '@azure/storage-blob'
      - '@capacitor/preferences'
      - '@deno/kv'
      - '@netlify/blobs'
      - '@planetscale/database'
      - '@react-native-async-storage/async-storage'
      - '@upstash/redis'
      - '@vercel/blob'
      - '@vercel/kv'
      - aws4fetch
      - bufferutil
      - db0
      - ioredis
      - typescript
      - uploadthing
      - utf-8-validate
      - zod

  '@walletconnect/sign-client@2.21.3(bufferutil@4.0.9)(typescript@5.8.3)(utf-8-validate@5.0.10)(zod@3.24.1)':
    dependencies:
      '@walletconnect/core': 2.21.3(bufferutil@4.0.9)(typescript@5.8.3)(utf-8-validate@5.0.10)(zod@3.24.1)
      '@walletconnect/events': 1.0.1
      '@walletconnect/heartbeat': 1.2.2
      '@walletconnect/jsonrpc-utils': 1.0.8
      '@walletconnect/logger': 2.1.2
      '@walletconnect/time': 1.0.2
      '@walletconnect/types': 2.21.3
      '@walletconnect/utils': 2.21.3(bufferutil@4.0.9)(typescript@5.8.3)(utf-8-validate@5.0.10)(zod@3.24.1)
      events: 3.3.0
    transitivePeerDependencies:
      - '@azure/app-configuration'
      - '@azure/cosmos'
      - '@azure/data-tables'
      - '@azure/identity'
      - '@azure/keyvault-secrets'
      - '@azure/storage-blob'
      - '@capacitor/preferences'
      - '@deno/kv'
      - '@netlify/blobs'
      - '@planetscale/database'
      - '@react-native-async-storage/async-storage'
      - '@upstash/redis'
      - '@vercel/blob'
      - '@vercel/kv'
      - aws4fetch
      - bufferutil
      - db0
      - ioredis
      - typescript
      - uploadthing
      - utf-8-validate
      - zod

  '@walletconnect/time@1.0.2':
    dependencies:
      tslib: 1.14.1

  '@walletconnect/types@2.21.0':
    dependencies:
      '@walletconnect/events': 1.0.1
      '@walletconnect/heartbeat': 1.2.2
      '@walletconnect/jsonrpc-types': 1.0.4
      '@walletconnect/keyvaluestorage': 1.1.1
      '@walletconnect/logger': 2.1.2
      events: 3.3.0
    transitivePeerDependencies:
      - '@azure/app-configuration'
      - '@azure/cosmos'
      - '@azure/data-tables'
      - '@azure/identity'
      - '@azure/keyvault-secrets'
      - '@azure/storage-blob'
      - '@capacitor/preferences'
      - '@deno/kv'
      - '@netlify/blobs'
      - '@planetscale/database'
      - '@react-native-async-storage/async-storage'
      - '@upstash/redis'
      - '@vercel/blob'
      - '@vercel/kv'
      - aws4fetch
      - db0
      - ioredis
      - uploadthing

  '@walletconnect/types@2.21.3':
    dependencies:
      '@walletconnect/events': 1.0.1
      '@walletconnect/heartbeat': 1.2.2
      '@walletconnect/jsonrpc-types': 1.0.4
      '@walletconnect/keyvaluestorage': 1.1.1
      '@walletconnect/logger': 2.1.2
      events: 3.3.0
    transitivePeerDependencies:
      - '@azure/app-configuration'
      - '@azure/cosmos'
      - '@azure/data-tables'
      - '@azure/identity'
      - '@azure/keyvault-secrets'
      - '@azure/storage-blob'
      - '@capacitor/preferences'
      - '@deno/kv'
      - '@netlify/blobs'
      - '@planetscale/database'
      - '@react-native-async-storage/async-storage'
      - '@upstash/redis'
      - '@vercel/blob'
      - '@vercel/kv'
      - aws4fetch
      - db0
      - ioredis
      - uploadthing

  '@walletconnect/universal-provider@2.21.0(bufferutil@4.0.9)(encoding@0.1.13)(typescript@5.8.3)(utf-8-validate@5.0.10)(zod@3.24.1)':
    dependencies:
      '@walletconnect/events': 1.0.1
      '@walletconnect/jsonrpc-http-connection': 1.0.8(encoding@0.1.13)
      '@walletconnect/jsonrpc-provider': 1.0.14
      '@walletconnect/jsonrpc-types': 1.0.4
      '@walletconnect/jsonrpc-utils': 1.0.8
      '@walletconnect/keyvaluestorage': 1.1.1
      '@walletconnect/logger': 2.1.2
      '@walletconnect/sign-client': 2.21.0(bufferutil@4.0.9)(typescript@5.8.3)(utf-8-validate@5.0.10)(zod@3.24.1)
      '@walletconnect/types': 2.21.0
      '@walletconnect/utils': 2.21.0(bufferutil@4.0.9)(typescript@5.8.3)(utf-8-validate@5.0.10)(zod@3.24.1)
      es-toolkit: 1.33.0
      events: 3.3.0
    transitivePeerDependencies:
      - '@azure/app-configuration'
      - '@azure/cosmos'
      - '@azure/data-tables'
      - '@azure/identity'
      - '@azure/keyvault-secrets'
      - '@azure/storage-blob'
      - '@capacitor/preferences'
      - '@deno/kv'
      - '@netlify/blobs'
      - '@planetscale/database'
      - '@react-native-async-storage/async-storage'
      - '@upstash/redis'
      - '@vercel/blob'
      - '@vercel/kv'
      - aws4fetch
      - bufferutil
      - db0
      - encoding
      - ioredis
      - typescript
      - uploadthing
      - utf-8-validate
      - zod

  '@walletconnect/universal-provider@2.21.3(bufferutil@4.0.9)(encoding@0.1.13)(typescript@5.8.3)(utf-8-validate@5.0.10)(zod@3.24.1)':
    dependencies:
      '@walletconnect/events': 1.0.1
      '@walletconnect/jsonrpc-http-connection': 1.0.8(encoding@0.1.13)
      '@walletconnect/jsonrpc-provider': 1.0.14
      '@walletconnect/jsonrpc-types': 1.0.4
      '@walletconnect/jsonrpc-utils': 1.0.8
      '@walletconnect/keyvaluestorage': 1.1.1
      '@walletconnect/logger': 2.1.2
      '@walletconnect/sign-client': 2.21.3(bufferutil@4.0.9)(typescript@5.8.3)(utf-8-validate@5.0.10)(zod@3.24.1)
      '@walletconnect/types': 2.21.3
      '@walletconnect/utils': 2.21.3(bufferutil@4.0.9)(typescript@5.8.3)(utf-8-validate@5.0.10)(zod@3.24.1)
      es-toolkit: 1.39.3
      events: 3.3.0
    transitivePeerDependencies:
      - '@azure/app-configuration'
      - '@azure/cosmos'
      - '@azure/data-tables'
      - '@azure/identity'
      - '@azure/keyvault-secrets'
      - '@azure/storage-blob'
      - '@capacitor/preferences'
      - '@deno/kv'
      - '@netlify/blobs'
      - '@planetscale/database'
      - '@react-native-async-storage/async-storage'
      - '@upstash/redis'
      - '@vercel/blob'
      - '@vercel/kv'
      - aws4fetch
      - bufferutil
      - db0
      - encoding
      - ioredis
      - typescript
      - uploadthing
      - utf-8-validate
      - zod

  '@walletconnect/utils@2.21.0(bufferutil@4.0.9)(typescript@5.8.3)(utf-8-validate@5.0.10)(zod@3.24.1)':
    dependencies:
      '@noble/ciphers': 1.2.1
      '@noble/curves': 1.8.1
      '@noble/hashes': 1.7.1
      '@walletconnect/jsonrpc-utils': 1.0.8
      '@walletconnect/keyvaluestorage': 1.1.1
      '@walletconnect/relay-api': 1.0.11
      '@walletconnect/relay-auth': 1.1.0
      '@walletconnect/safe-json': 1.0.2
      '@walletconnect/time': 1.0.2
      '@walletconnect/types': 2.21.0
      '@walletconnect/window-getters': 1.0.1
      '@walletconnect/window-metadata': 1.0.1
      bs58: 6.0.0
      detect-browser: 5.3.0
      query-string: 7.1.3
      uint8arrays: 3.1.0
      viem: 2.23.2(bufferutil@4.0.9)(typescript@5.8.3)(utf-8-validate@5.0.10)(zod@3.24.1)
    transitivePeerDependencies:
      - '@azure/app-configuration'
      - '@azure/cosmos'
      - '@azure/data-tables'
      - '@azure/identity'
      - '@azure/keyvault-secrets'
      - '@azure/storage-blob'
      - '@capacitor/preferences'
      - '@deno/kv'
      - '@netlify/blobs'
      - '@planetscale/database'
      - '@react-native-async-storage/async-storage'
      - '@upstash/redis'
      - '@vercel/blob'
      - '@vercel/kv'
      - aws4fetch
      - bufferutil
      - db0
      - ioredis
      - typescript
      - uploadthing
      - utf-8-validate
      - zod

  '@walletconnect/utils@2.21.3(bufferutil@4.0.9)(typescript@5.8.3)(utf-8-validate@5.0.10)(zod@3.24.1)':
    dependencies:
      '@msgpack/msgpack': 3.1.2
      '@noble/ciphers': 1.3.0
      '@noble/curves': 1.9.2
      '@noble/hashes': 1.8.0
      '@scure/base': 1.2.6
      '@walletconnect/jsonrpc-utils': 1.0.8
      '@walletconnect/keyvaluestorage': 1.1.1
      '@walletconnect/relay-api': 1.0.11
      '@walletconnect/relay-auth': 1.1.0
      '@walletconnect/safe-json': 1.0.2
      '@walletconnect/time': 1.0.2
      '@walletconnect/types': 2.21.3
      '@walletconnect/window-getters': 1.0.1
      '@walletconnect/window-metadata': 1.0.1
      blakejs: 1.2.1
      bs58: 6.0.0
      detect-browser: 5.3.0
      query-string: 7.1.3
      uint8arrays: 3.1.1
      viem: 2.31.0(bufferutil@4.0.9)(typescript@5.8.3)(utf-8-validate@5.0.10)(zod@3.24.1)
    transitivePeerDependencies:
      - '@azure/app-configuration'
      - '@azure/cosmos'
      - '@azure/data-tables'
      - '@azure/identity'
      - '@azure/keyvault-secrets'
      - '@azure/storage-blob'
      - '@capacitor/preferences'
      - '@deno/kv'
      - '@netlify/blobs'
      - '@planetscale/database'
      - '@react-native-async-storage/async-storage'
      - '@upstash/redis'
      - '@vercel/blob'
      - '@vercel/kv'
      - aws4fetch
      - bufferutil
      - db0
      - ioredis
      - typescript
      - uploadthing
      - utf-8-validate
      - zod

  '@walletconnect/window-getters@1.0.1':
    dependencies:
      tslib: 1.14.1

  '@walletconnect/window-metadata@1.0.1':
    dependencies:
      '@walletconnect/window-getters': 1.0.1
      tslib: 1.14.1

  '@webgpu/types@0.1.61': {}

  abi-wan-kanabi@2.2.4:
    dependencies:
      ansicolors: 0.3.2
      cardinal: 2.1.1
      fs-extra: 10.1.0
      yargs: 17.7.2

  abitype@1.0.0(typescript@5.8.3)(zod@3.24.1):
    optionalDependencies:
      typescript: 5.8.3
      zod: 3.24.1

  abitype@1.0.8(typescript@5.8.3)(zod@3.22.4):
    optionalDependencies:
      typescript: 5.8.3
      zod: 3.22.4

  abitype@1.0.8(typescript@5.8.3)(zod@3.24.1):
    optionalDependencies:
      typescript: 5.8.3
      zod: 3.24.1

  acorn-jsx@5.3.2(acorn@8.15.0):
    dependencies:
      acorn: 8.15.0

  acorn@8.15.0: {}

  aes-js@4.0.0-beta.5: {}

  agentkeepalive@4.6.0:
    dependencies:
      humanize-ms: 1.2.1

  ajv@6.12.6:
    dependencies:
      fast-deep-equal: 3.1.3
      fast-json-stable-stringify: 2.1.0
      json-schema-traverse: 0.4.1
      uri-js: 4.4.1

  ansi-regex@5.0.1: {}

  ansi-regex@6.1.0: {}

  ansi-styles@4.3.0:
    dependencies:
      color-convert: 2.0.1

  ansi-styles@6.2.1: {}

  ansicolors@0.3.2: {}

  any-promise@1.3.0: {}

  anymatch@3.1.3:
    dependencies:
      normalize-path: 3.0.0
      picomatch: 2.3.1

  arg@5.0.2: {}

  argparse@2.0.1: {}

  async-mutex@0.5.0:
    dependencies:
      tslib: 2.8.1

  atomic-sleep@1.0.0: {}

  autoprefixer@10.4.21(postcss@8.5.6):
    dependencies:
      browserslist: 4.24.4
      caniuse-lite: 1.0.30001724
      fraction.js: 4.3.7
      normalize-range: 0.1.2
      picocolors: 1.1.1
      postcss: 8.5.6
      postcss-value-parser: 4.2.0

  available-typed-arrays@1.0.7:
    dependencies:
      possible-typed-array-names: 1.1.0

  balanced-match@1.0.2: {}

  base-x@3.0.11:
    dependencies:
      safe-buffer: 5.2.1

  base-x@4.0.1: {}

  base-x@5.0.1: {}

  base64-js@1.5.1: {}

  bidi-js@1.0.3:
    dependencies:
      require-from-string: 2.0.2

  big-integer@1.6.52: {}

  big.js@6.2.2: {}

  binary-extensions@2.3.0: {}

  blakejs@1.2.1: {}

  bn.js@5.2.2: {}

  borsh@0.7.0:
    dependencies:
      bn.js: 5.2.2
      bs58: 4.0.1
      text-encoding-utf-8: 1.0.2

  bowser@2.11.0: {}

  brace-expansion@1.1.11:
    dependencies:
      balanced-match: 1.0.2
      concat-map: 0.0.1

  brace-expansion@2.0.1:
    dependencies:
      balanced-match: 1.0.2

  braces@3.0.3:
    dependencies:
      fill-range: 7.1.1

  broadcast-channel@3.7.0:
    dependencies:
      '@babel/runtime': 7.26.7
      detect-node: 2.1.0
      js-sha3: 0.8.0
      microseconds: 0.2.0
      nano-time: 1.0.0
      oblivious-set: 1.0.0
      rimraf: 3.0.2
      unload: 2.2.0

  browserslist@4.24.4:
    dependencies:
      caniuse-lite: 1.0.30001724
      electron-to-chromium: 1.5.93
      node-releases: 2.0.19
      update-browserslist-db: 1.1.2(browserslist@4.24.4)

  bs58@4.0.1:
    dependencies:
      base-x: 3.0.11

  bs58@5.0.0:
    dependencies:
      base-x: 4.0.1

  bs58@6.0.0:
    dependencies:
      base-x: 5.0.1

  bs58check@3.0.1:
    dependencies:
      '@noble/hashes': 1.7.1
      bs58: 5.0.0

  buffer@6.0.3:
    dependencies:
      base64-js: 1.5.1
      ieee754: 1.2.1

  bufferutil@4.0.9:
    dependencies:
      node-gyp-build: 4.8.4

  bundle-name@4.1.0:
    dependencies:
      run-applescript: 7.0.0

  call-bind-apply-helpers@1.0.2:
    dependencies:
      es-errors: 1.3.0
      function-bind: 1.1.2

  call-bind@1.0.8:
    dependencies:
      call-bind-apply-helpers: 1.0.2
      es-define-property: 1.0.1
      get-intrinsic: 1.3.0
      set-function-length: 1.2.2

  call-bound@1.0.4:
    dependencies:
      call-bind-apply-helpers: 1.0.2
      get-intrinsic: 1.3.0

  callsites@3.1.0: {}

  camelcase-css@2.0.1: {}

  camelcase@5.3.1: {}

  camera-controls@2.10.1(three@0.158.0):
    dependencies:
      three: 0.158.0

  caniuse-lite@1.0.30001724: {}

  cardinal@2.1.1:
    dependencies:
      ansicolors: 0.3.2
      redeyed: 2.1.1

  cbor-extract@2.2.0:
    dependencies:
      node-gyp-build-optional-packages: 5.1.1
    optionalDependencies:
      '@cbor-extract/cbor-extract-darwin-arm64': 2.2.0
      '@cbor-extract/cbor-extract-darwin-x64': 2.2.0
      '@cbor-extract/cbor-extract-linux-arm': 2.2.0
      '@cbor-extract/cbor-extract-linux-arm64': 2.2.0
      '@cbor-extract/cbor-extract-linux-x64': 2.2.0
      '@cbor-extract/cbor-extract-win32-x64': 2.2.0
    optional: true

  cbor-x@1.6.0:
    optionalDependencies:
      cbor-extract: 2.2.0

  chalk@4.1.2:
    dependencies:
      ansi-styles: 4.3.0
      supports-color: 7.2.0

  chalk@5.4.1: {}

  chokidar@3.6.0:
    dependencies:
      anymatch: 3.1.3
      braces: 3.0.3
      glob-parent: 5.1.2
      is-binary-path: 2.1.0
      is-glob: 4.0.3
      normalize-path: 3.0.0
      readdirp: 3.6.0
    optionalDependencies:
      fsevents: 2.3.3

  chokidar@4.0.3:
    dependencies:
      readdirp: 4.1.2

  class-variance-authority@0.7.1:
    dependencies:
      clsx: 2.1.1

  cliui@6.0.0:
    dependencies:
      string-width: 4.2.3
      strip-ansi: 6.0.1
      wrap-ansi: 6.2.0

  cliui@8.0.1:
    dependencies:
      string-width: 4.2.3
      strip-ansi: 6.0.1
      wrap-ansi: 7.0.0

  clsx@2.1.1: {}

  color-convert@2.0.1:
    dependencies:
      color-name: 1.1.4

  color-name@1.1.4: {}

  commander@13.1.0: {}

  commander@2.20.3: {}

  commander@4.1.1: {}

  complex.js@2.4.2: {}

  concat-map@0.0.1: {}

  convert-source-map@2.0.0: {}

  cookie-es@1.2.2: {}

  core-util-is@1.0.3: {}

  crc-32@1.2.2: {}

  cross-env@7.0.3:
    dependencies:
      cross-spawn: 7.0.6

  cross-fetch@3.2.0(encoding@0.1.13):
    dependencies:
      node-fetch: 2.7.0(encoding@0.1.13)
    transitivePeerDependencies:
      - encoding

  cross-fetch@4.1.0(encoding@0.1.13):
    dependencies:
      node-fetch: 2.7.0(encoding@0.1.13)
    transitivePeerDependencies:
      - encoding

  cross-spawn@7.0.6:
    dependencies:
      path-key: 3.1.1
      shebang-command: 2.0.0
      which: 2.0.2

  crossws@0.3.5:
    dependencies:
      uncrypto: 0.1.3

  cssesc@3.0.0: {}

  csstype@3.1.3: {}

  date-fns@2.30.0:
    dependencies:
      '@babel/runtime': 7.26.7

  dayjs@1.11.13: {}

  debug@4.3.7:
    dependencies:
      ms: 2.1.3

  debug@4.4.0:
    dependencies:
      ms: 2.1.3

  decamelize@1.2.0: {}

  decimal.js@10.5.0: {}

  decode-uri-component@0.2.2: {}

  deep-is@0.1.4: {}

  default-browser-id@5.0.0: {}

  default-browser@5.2.1:
    dependencies:
      bundle-name: 4.1.0
      default-browser-id: 5.0.0

  define-data-property@1.1.4:
    dependencies:
      es-define-property: 1.0.1
      es-errors: 1.3.0
      gopd: 1.2.0

  define-lazy-prop@3.0.0: {}

  defu@6.1.4: {}

  delay@5.0.0: {}

  dequal@2.0.3: {}

  derive-valtio@0.1.0(valtio@1.13.2(@types/react@18.3.23)(react@18.3.1)):
    dependencies:
      valtio: 1.13.2(@types/react@18.3.23)(react@18.3.1)

  destr@2.0.5: {}

  detect-browser@5.3.0: {}

  detect-gpu@5.0.70:
    dependencies:
      webgl-constants: 1.1.1

  detect-libc@2.0.4:
    optional: true

  detect-node@2.1.0: {}

  didyoumean@1.2.2: {}

  dijkstrajs@1.0.3: {}

  dlv@1.1.3: {}

  draco3d@1.5.7: {}

  dunder-proto@1.0.1:
    dependencies:
      call-bind-apply-helpers: 1.0.2
      es-errors: 1.3.0
      gopd: 1.2.0

  duplexify@4.1.3:
    dependencies:
      end-of-stream: 1.4.5
      inherits: 2.0.4
      readable-stream: 3.6.2
      stream-shift: 1.0.3

  eastasianwidth@0.2.0: {}

  eciesjs@0.4.15:
    dependencies:
      '@ecies/ciphers': 0.2.3(@noble/ciphers@1.3.0)
      '@noble/ciphers': 1.3.0
      '@noble/curves': 1.9.2
      '@noble/hashes': 1.8.0

  electron-to-chromium@1.5.93: {}

  emoji-regex@8.0.0: {}

  emoji-regex@9.2.2: {}

  encode-utf8@1.0.3: {}

  encoding@0.1.13:
    dependencies:
      iconv-lite: 0.6.3

  end-of-stream@1.4.5:
    dependencies:
      once: 1.4.0

  engine.io-client@6.6.3(bufferutil@4.0.9)(utf-8-validate@5.0.10):
    dependencies:
      '@socket.io/component-emitter': 3.1.2
      debug: 4.3.7
      engine.io-parser: 5.2.3
      ws: 8.17.1(bufferutil@4.0.9)(utf-8-validate@5.0.10)
      xmlhttprequest-ssl: 2.1.2
    transitivePeerDependencies:
      - bufferutil
      - supports-color
      - utf-8-validate

  engine.io-parser@5.2.3: {}

  es-define-property@1.0.1: {}

  es-errors@1.3.0: {}

  es-object-atoms@1.1.1:
    dependencies:
      es-errors: 1.3.0

  es-toolkit@1.33.0: {}

  es-toolkit@1.39.3: {}

  es6-promise@4.2.8: {}

  es6-promisify@5.0.0:
    dependencies:
      es6-promise: 4.2.8

  esbuild@0.21.5:
    optionalDependencies:
      '@esbuild/aix-ppc64': 0.21.5
      '@esbuild/android-arm': 0.21.5
      '@esbuild/android-arm64': 0.21.5
      '@esbuild/android-x64': 0.21.5
      '@esbuild/darwin-arm64': 0.21.5
      '@esbuild/darwin-x64': 0.21.5
      '@esbuild/freebsd-arm64': 0.21.5
      '@esbuild/freebsd-x64': 0.21.5
      '@esbuild/linux-arm': 0.21.5
      '@esbuild/linux-arm64': 0.21.5
      '@esbuild/linux-ia32': 0.21.5
      '@esbuild/linux-loong64': 0.21.5
      '@esbuild/linux-mips64el': 0.21.5
      '@esbuild/linux-ppc64': 0.21.5
      '@esbuild/linux-riscv64': 0.21.5
      '@esbuild/linux-s390x': 0.21.5
      '@esbuild/linux-x64': 0.21.5
      '@esbuild/netbsd-x64': 0.21.5
      '@esbuild/openbsd-x64': 0.21.5
      '@esbuild/sunos-x64': 0.21.5
      '@esbuild/win32-arm64': 0.21.5
      '@esbuild/win32-ia32': 0.21.5
      '@esbuild/win32-x64': 0.21.5

  escalade@3.2.0: {}

  escape-latex@1.2.0: {}

  escape-string-regexp@4.0.0: {}

  eslint-plugin-react-hooks@5.2.0(eslint@9.29.0(jiti@1.21.7)):
    dependencies:
      eslint: 9.29.0(jiti@1.21.7)

  eslint-plugin-react-refresh@0.4.20(eslint@9.29.0(jiti@1.21.7)):
    dependencies:
      eslint: 9.29.0(jiti@1.21.7)

  eslint-scope@8.4.0:
    dependencies:
      esrecurse: 4.3.0
      estraverse: 5.3.0

  eslint-visitor-keys@3.4.3: {}

  eslint-visitor-keys@4.2.1: {}

  eslint@9.29.0(jiti@1.21.7):
    dependencies:
      '@eslint-community/eslint-utils': 4.7.0(eslint@9.29.0(jiti@1.21.7))
      '@eslint-community/regexpp': 4.12.1
      '@eslint/config-array': 0.20.1
      '@eslint/config-helpers': 0.2.2
      '@eslint/core': 0.14.0
      '@eslint/eslintrc': 3.3.1
      '@eslint/js': 9.29.0
      '@eslint/plugin-kit': 0.3.1
      '@humanfs/node': 0.16.6
      '@humanwhocodes/module-importer': 1.0.1
      '@humanwhocodes/retry': 0.4.3
      '@types/estree': 1.0.6
      '@types/json-schema': 7.0.15
      ajv: 6.12.6
      chalk: 4.1.2
      cross-spawn: 7.0.6
      debug: 4.4.0
      escape-string-regexp: 4.0.0
      eslint-scope: 8.4.0
      eslint-visitor-keys: 4.2.1
      espree: 10.4.0
      esquery: 1.6.0
      esutils: 2.0.3
      fast-deep-equal: 3.1.3
      file-entry-cache: 8.0.0
      find-up: 5.0.0
      glob-parent: 6.0.2
      ignore: 5.3.2
      imurmurhash: 0.1.4
      is-glob: 4.0.3
      json-stable-stringify-without-jsonify: 1.0.1
      lodash.merge: 4.6.2
      minimatch: 3.1.2
      natural-compare: 1.4.0
      optionator: 0.9.4
    optionalDependencies:
      jiti: 1.21.7
    transitivePeerDependencies:
      - supports-color

  espree@10.4.0:
    dependencies:
      acorn: 8.15.0
      acorn-jsx: 5.3.2(acorn@8.15.0)
      eslint-visitor-keys: 4.2.1

  esprima@4.0.1: {}

  esquery@1.6.0:
    dependencies:
      estraverse: 5.3.0

  esrecurse@4.3.0:
    dependencies:
      estraverse: 5.3.0

  estraverse@5.3.0: {}

  esutils@2.0.3: {}

  eth-rpc-errors@4.0.3:
    dependencies:
      fast-safe-stringify: 2.1.1

  ethereum-cryptography@2.2.1:
    dependencies:
      '@noble/curves': 1.4.2
      '@noble/hashes': 1.4.0
      '@scure/bip32': 1.4.0
      '@scure/bip39': 1.3.0

  ethers@6.14.4(bufferutil@4.0.9)(utf-8-validate@5.0.10):
    dependencies:
      '@adraffy/ens-normalize': 1.10.1
      '@noble/curves': 1.2.0
      '@noble/hashes': 1.3.2
      '@types/node': 22.7.5
      aes-js: 4.0.0-beta.5
      tslib: 2.7.0
      ws: 8.17.1(bufferutil@4.0.9)(utf-8-validate@5.0.10)
    transitivePeerDependencies:
      - bufferutil
      - utf-8-validate

  eventemitter2@6.4.9: {}

  eventemitter3@5.0.1: {}

  events@3.3.0: {}

  extension-port-stream@3.0.0:
    dependencies:
      readable-stream: 3.6.2
      webextension-polyfill: 0.10.0

  eyes@0.1.8: {}

  fast-deep-equal@3.1.3: {}

  fast-glob@3.3.3:
    dependencies:
      '@nodelib/fs.stat': 2.0.5
      '@nodelib/fs.walk': 1.2.8
      glob-parent: 5.1.2
      merge2: 1.4.1
      micromatch: 4.0.8

  fast-json-stable-stringify@2.1.0: {}

  fast-levenshtein@2.0.6: {}

  fast-redact@3.5.0: {}

  fast-safe-stringify@2.1.1: {}

  fast-stable-stringify@1.0.0: {}

  fastq@1.19.0:
    dependencies:
      reusify: 1.0.4

  fetch-cookie@3.0.1:
    dependencies:
      set-cookie-parser: 2.7.1
      tough-cookie: 4.1.4

  fflate@0.6.10: {}

  fflate@0.8.2: {}

  file-entry-cache@8.0.0:
    dependencies:
      flat-cache: 4.0.1

  fill-range@7.1.1:
    dependencies:
      to-regex-range: 5.0.1

  filter-obj@1.1.0: {}

  find-up@4.1.0:
    dependencies:
      locate-path: 5.0.0
      path-exists: 4.0.0

  find-up@5.0.0:
    dependencies:
      locate-path: 6.0.0
      path-exists: 4.0.0

  flat-cache@4.0.1:
    dependencies:
      flatted: 3.3.2
      keyv: 4.5.4

  flatted@3.3.2: {}

  for-each@0.3.5:
    dependencies:
      is-callable: 1.2.7

  foreground-child@3.3.0:
    dependencies:
      cross-spawn: 7.0.6
      signal-exit: 4.1.0

  fraction.js@4.3.4: {}

  fraction.js@4.3.7: {}

  fs-extra@10.1.0:
    dependencies:
      graceful-fs: 4.2.11
      jsonfile: 6.1.0
      universalify: 2.0.1

  fs.realpath@1.0.0: {}

  fsevents@2.3.3:
    optional: true

  function-bind@1.1.2: {}

  gensync@1.0.0-beta.2: {}

  get-caller-file@2.0.5: {}

  get-intrinsic@1.3.0:
    dependencies:
      call-bind-apply-helpers: 1.0.2
      es-define-property: 1.0.1
      es-errors: 1.3.0
      es-object-atoms: 1.1.1
      function-bind: 1.1.2
      get-proto: 1.0.1
      gopd: 1.2.0
      has-symbols: 1.1.0
      hasown: 2.0.2
      math-intrinsics: 1.1.0

  get-proto@1.0.1:
    dependencies:
      dunder-proto: 1.0.1
      es-object-atoms: 1.1.1

  get-starknet-core@4.0.0:
    dependencies:
      '@starknet-io/types-js': 0.7.10

  glob-parent@5.1.2:
    dependencies:
      is-glob: 4.0.3

  glob-parent@6.0.2:
    dependencies:
      is-glob: 4.0.3

  glob@10.4.5:
    dependencies:
      foreground-child: 3.3.0
      jackspeak: 3.4.3
      minimatch: 9.0.5
      minipass: 7.1.2
      package-json-from-dist: 1.0.1
      path-scurry: 1.11.1

  glob@7.2.3:
    dependencies:
      fs.realpath: 1.0.0
      inflight: 1.0.6
      inherits: 2.0.4
      minimatch: 3.1.2
      once: 1.4.0
      path-is-absolute: 1.0.1

  globals@11.12.0: {}

  globals@14.0.0: {}

  globals@15.15.0: {}

  glsl-noise@0.0.0: {}

  gopd@1.2.0: {}

  graceful-fs@4.2.11: {}

  graphemer@1.4.0: {}

  h3@1.15.3:
    dependencies:
      cookie-es: 1.2.2
      crossws: 0.3.5
      defu: 6.1.4
      destr: 2.0.5
      iron-webcrypto: 1.2.1
      node-mock-http: 1.0.0
      radix3: 1.1.2
      ufo: 1.6.1
      uncrypto: 0.1.3

  has-flag@4.0.0: {}

  has-property-descriptors@1.0.2:
    dependencies:
      es-define-property: 1.0.1

  has-symbols@1.1.0: {}

  has-tostringtag@1.0.2:
    dependencies:
      has-symbols: 1.1.0

  hasown@2.0.2:
    dependencies:
      function-bind: 1.1.2

  hls.js@1.6.5: {}

  hpke-js@1.6.2:
    dependencies:
      '@hpke/chacha20poly1305': 1.6.2
      '@hpke/common': 1.7.3
      '@hpke/core': 1.7.2
      '@hpke/dhkem-x25519': 1.6.2
      '@hpke/dhkem-x448': 1.6.2
      '@noble/hashes': 1.7.1

  humanize-ms@1.2.1:
    dependencies:
      ms: 2.1.3

  iconv-lite@0.6.3:
    dependencies:
      safer-buffer: 2.1.2

  idb-keyval@6.2.2: {}

  ieee754@1.2.1: {}

  ignore@5.3.2: {}

  ignore@7.0.5: {}

  immediate@3.0.6: {}

  immer@10.1.1: {}

  import-fresh@3.3.1:
    dependencies:
      parent-module: 1.0.1
      resolve-from: 4.0.0

  imurmurhash@0.1.4: {}

  inflight@1.0.6:
    dependencies:
      once: 1.4.0
      wrappy: 1.0.2

  inherits@2.0.4: {}

  iron-webcrypto@1.2.1: {}

  is-arguments@1.2.0:
    dependencies:
      call-bound: 1.0.4
      has-tostringtag: 1.0.2

  is-binary-path@2.1.0:
    dependencies:
      binary-extensions: 2.3.0

  is-callable@1.2.7: {}

  is-core-module@2.16.1:
    dependencies:
      hasown: 2.0.2

  is-docker@3.0.0: {}

  is-extglob@2.1.1: {}

  is-fullwidth-code-point@3.0.0: {}

  is-generator-function@1.1.0:
    dependencies:
      call-bound: 1.0.4
      get-proto: 1.0.1
      has-tostringtag: 1.0.2
      safe-regex-test: 1.1.0

  is-glob@4.0.3:
    dependencies:
      is-extglob: 2.1.1

  is-inside-container@1.0.0:
    dependencies:
      is-docker: 3.0.0

  is-number@7.0.0: {}

  is-promise@2.2.2: {}

  is-promise@4.0.0: {}

  is-regex@1.2.1:
    dependencies:
      call-bound: 1.0.4
      gopd: 1.2.0
      has-tostringtag: 1.0.2
      hasown: 2.0.2

  is-stream@2.0.1: {}

  is-typed-array@1.1.15:
    dependencies:
      which-typed-array: 1.1.19

  is-wsl@3.1.0:
    dependencies:
      is-inside-container: 1.0.0

  isarray@1.0.0: {}

  isexe@2.0.0: {}

  isomorphic-fetch@3.0.0(encoding@0.1.13):
    dependencies:
      node-fetch: 2.7.0(encoding@0.1.13)
      whatwg-fetch: 3.6.20
    transitivePeerDependencies:
      - encoding

  isomorphic-ws@4.0.1(ws@7.5.10(bufferutil@4.0.9)(utf-8-validate@5.0.10)):
    dependencies:
      ws: 7.5.10(bufferutil@4.0.9)(utf-8-validate@5.0.10)

  isows@1.0.3(ws@8.13.0(bufferutil@4.0.9)(utf-8-validate@5.0.10)):
    dependencies:
      ws: 8.13.0(bufferutil@4.0.9)(utf-8-validate@5.0.10)

  isows@1.0.6(ws@8.18.0(bufferutil@4.0.9)(utf-8-validate@5.0.10)):
    dependencies:
      ws: 8.18.0(bufferutil@4.0.9)(utf-8-validate@5.0.10)

  isows@1.0.7(ws@8.18.2(bufferutil@4.0.9)(utf-8-validate@5.0.10)):
    dependencies:
      ws: 8.18.2(bufferutil@4.0.9)(utf-8-validate@5.0.10)

  its-fine@1.2.5(@types/react@18.3.23)(react@18.3.1):
    dependencies:
      '@types/react-reconciler': 0.28.9(@types/react@18.3.23)
      react: 18.3.1
    transitivePeerDependencies:
      - '@types/react'

  jackspeak@3.4.3:
    dependencies:
      '@isaacs/cliui': 8.0.2
    optionalDependencies:
      '@pkgjs/parseargs': 0.11.0

  javascript-natural-sort@0.7.1: {}

  jayson@4.2.0(bufferutil@4.0.9)(utf-8-validate@5.0.10):
    dependencies:
      '@types/connect': 3.4.38
      '@types/node': 12.20.55
      '@types/ws': 7.4.7
      commander: 2.20.3
      delay: 5.0.0
      es6-promisify: 5.0.0
      eyes: 0.1.8
      isomorphic-ws: 4.0.1(ws@7.5.10(bufferutil@4.0.9)(utf-8-validate@5.0.10))
      json-stringify-safe: 5.0.1
      stream-json: 1.9.1
      uuid: 8.3.2
      ws: 7.5.10(bufferutil@4.0.9)(utf-8-validate@5.0.10)
    transitivePeerDependencies:
      - bufferutil
      - utf-8-validate

  jiti@1.21.7: {}

  js-cookie@3.0.5: {}

  js-sha3@0.8.0: {}

  js-tokens@4.0.0: {}

  js-yaml@4.1.0:
    dependencies:
      argparse: 2.0.1

  jsesc@3.1.0: {}

  json-buffer@3.0.1: {}

  json-schema-traverse@0.4.1: {}

  json-stable-stringify-without-jsonify@1.0.1: {}

  json-stringify-safe@5.0.1: {}

  json5@2.2.3: {}

  jsonfile@6.1.0:
    dependencies:
      universalify: 2.0.1
    optionalDependencies:
      graceful-fs: 4.2.11

  keyv@4.5.4:
    dependencies:
      json-buffer: 3.0.1

  keyvaluestorage-interface@1.0.0: {}

  levn@0.4.1:
    dependencies:
      prelude-ls: 1.2.1
      type-check: 0.4.0

  lie@3.3.0:
    dependencies:
      immediate: 3.0.6

  lilconfig@3.1.3: {}

  lines-and-columns@1.2.4: {}

  lit-element@4.2.0:
    dependencies:
      '@lit-labs/ssr-dom-shim': 1.3.0
      '@lit/reactive-element': 2.1.0
      lit-html: 3.3.0

  lit-html@3.3.0:
    dependencies:
      '@types/trusted-types': 2.0.7

  lit@3.3.0:
    dependencies:
      '@lit/reactive-element': 2.1.0
      lit-element: 4.2.0
      lit-html: 3.3.0

  locate-path@5.0.0:
    dependencies:
      p-locate: 4.1.0

  locate-path@6.0.0:
    dependencies:
      p-locate: 5.0.0

  lodash-es@4.17.21: {}

  lodash.merge@4.6.2: {}

  loose-envify@1.4.0:
    dependencies:
      js-tokens: 4.0.0

  lossless-json@4.0.2: {}

  lru-cache@10.4.3: {}

  lru-cache@5.1.1:
    dependencies:
      yallist: 3.1.1

  lucide-react@0.518.0(react@18.3.1):
    dependencies:
      react: 18.3.1

  maath@0.10.8(@types/three@0.177.0)(three@0.158.0):
    dependencies:
      '@types/three': 0.177.0
      three: 0.158.0

  match-sorter@6.3.4:
    dependencies:
      '@babel/runtime': 7.26.7
      remove-accents: 0.5.0

  math-intrinsics@1.1.0: {}

  mathjs@12.4.3:
    dependencies:
      '@babel/runtime': 7.26.7
      complex.js: 2.4.2
      decimal.js: 10.5.0
      escape-latex: 1.2.0
      fraction.js: 4.3.4
      javascript-natural-sort: 0.7.1
      seedrandom: 3.0.5
      tiny-emitter: 2.1.0
      typed-function: 4.2.1

  merge2@1.4.1: {}

  meshline@3.3.1(three@0.158.0):
    dependencies:
      three: 0.158.0

  meshoptimizer@0.18.1: {}

  micro-ftch@0.3.1: {}

  micro-starknet@0.2.3:
    dependencies:
      '@noble/curves': 1.0.0
      '@noble/hashes': 1.3.3

  micromatch@4.0.8:
    dependencies:
      braces: 3.0.3
      picomatch: 2.3.1

  microseconds@0.2.0: {}

  minimatch@3.1.2:
    dependencies:
      brace-expansion: 1.1.11

  minimatch@9.0.5:
    dependencies:
      brace-expansion: 2.0.1

  minipass@7.1.2: {}

  mipd@0.0.7(typescript@5.8.3):
    optionalDependencies:
      typescript: 5.8.3

  mobx@6.13.6: {}

  ms@2.1.3: {}

  multiformats@9.9.0: {}

  mz@2.7.0:
    dependencies:
      any-promise: 1.3.0
      object-assign: 4.1.1
      thenify-all: 1.6.0

  nano-time@1.0.0:
    dependencies:
      big-integer: 1.6.52

  nanoid@3.3.11: {}

  natural-compare@1.4.0: {}

  neverthrow@8.2.0:
    optionalDependencies:
      '@rollup/rollup-linux-x64-gnu': 4.34.4

  node-fetch-native@1.6.6: {}

  node-fetch@2.7.0(encoding@0.1.13):
    dependencies:
      whatwg-url: 5.0.0
    optionalDependencies:
      encoding: 0.1.13

  node-gyp-build-optional-packages@5.1.1:
    dependencies:
      detect-libc: 2.0.4
    optional: true

  node-gyp-build@4.8.4: {}

  node-mock-http@1.0.0: {}

  node-releases@2.0.19: {}

  normalize-path@3.0.0: {}

  normalize-range@0.1.2: {}

  obj-multiplex@1.0.0:
    dependencies:
      end-of-stream: 1.4.5
      once: 1.4.0
      readable-stream: 2.3.8

  object-assign@4.1.1: {}

  object-hash@3.0.0: {}

  oblivious-set@1.0.0: {}

  ofetch@1.4.1:
    dependencies:
      destr: 2.0.5
      node-fetch-native: 1.6.6
      ufo: 1.6.1

  on-exit-leak-free@0.2.0: {}

  once@1.4.0:
    dependencies:
      wrappy: 1.0.2

  open@10.1.2:
    dependencies:
      default-browser: 5.2.1
      define-lazy-prop: 3.0.0
      is-inside-container: 1.0.0
      is-wsl: 3.1.0

  optionator@0.9.4:
    dependencies:
      deep-is: 0.1.4
      fast-levenshtein: 2.0.6
      levn: 0.4.1
      prelude-ls: 1.2.1
      type-check: 0.4.0
      word-wrap: 1.2.5

  ox@0.6.7(typescript@5.8.3)(zod@3.24.1):
    dependencies:
      '@adraffy/ens-normalize': 1.11.0
      '@noble/curves': 1.8.1
      '@noble/hashes': 1.7.1
      '@scure/bip32': 1.6.2
      '@scure/bip39': 1.5.4
      abitype: 1.0.8(typescript@5.8.3)(zod@3.24.1)
      eventemitter3: 5.0.1
    optionalDependencies:
      typescript: 5.8.3
    transitivePeerDependencies:
      - zod

  ox@0.7.1(typescript@5.8.3)(zod@3.24.1):
    dependencies:
      '@adraffy/ens-normalize': 1.11.0
      '@noble/ciphers': 1.3.0
      '@noble/curves': 1.9.2
      '@noble/hashes': 1.8.0
      '@scure/bip32': 1.7.0
      '@scure/bip39': 1.6.0
      abitype: 1.0.8(typescript@5.8.3)(zod@3.24.1)
      eventemitter3: 5.0.1
    optionalDependencies:
      typescript: 5.8.3
    transitivePeerDependencies:
      - zod

  ox@0.8.1(typescript@5.8.3)(zod@3.22.4):
    dependencies:
      '@adraffy/ens-normalize': 1.11.0
      '@noble/ciphers': 1.3.0
      '@noble/curves': 1.9.2
      '@noble/hashes': 1.8.0
      '@scure/bip32': 1.7.0
      '@scure/bip39': 1.6.0
      abitype: 1.0.8(typescript@5.8.3)(zod@3.22.4)
      eventemitter3: 5.0.1
    optionalDependencies:
      typescript: 5.8.3
    transitivePeerDependencies:
      - zod

  ox@0.8.1(typescript@5.8.3)(zod@3.24.1):
    dependencies:
      '@adraffy/ens-normalize': 1.11.0
      '@noble/ciphers': 1.3.0
      '@noble/curves': 1.9.2
      '@noble/hashes': 1.8.0
      '@scure/bip32': 1.7.0
      '@scure/bip39': 1.6.0
      abitype: 1.0.8(typescript@5.8.3)(zod@3.24.1)
      eventemitter3: 5.0.1
    optionalDependencies:
      typescript: 5.8.3
    transitivePeerDependencies:
      - zod

  p-limit@2.3.0:
    dependencies:
      p-try: 2.2.0

  p-limit@3.1.0:
    dependencies:
      yocto-queue: 0.1.0

  p-locate@4.1.0:
    dependencies:
      p-limit: 2.3.0

  p-locate@5.0.0:
    dependencies:
      p-limit: 3.1.0

  p-try@2.2.0: {}

  package-json-from-dist@1.0.1: {}

  pako@2.1.0: {}

  parent-module@1.0.1:
    dependencies:
      callsites: 3.1.0

  path-exists@4.0.0: {}

  path-is-absolute@1.0.1: {}

  path-key@3.1.1: {}

  path-parse@1.0.7: {}

  path-scurry@1.11.1:
    dependencies:
      lru-cache: 10.4.3
      minipass: 7.1.2

  picocolors@1.1.1: {}

  picomatch@2.3.1: {}

  pify@2.3.0: {}

  pino-abstract-transport@0.5.0:
    dependencies:
      duplexify: 4.1.3
      split2: 4.2.0

  pino-std-serializers@4.0.0: {}

  pino@7.11.0:
    dependencies:
      atomic-sleep: 1.0.0
      fast-redact: 3.5.0
      on-exit-leak-free: 0.2.0
      pino-abstract-transport: 0.5.0
      pino-std-serializers: 4.0.0
      process-warning: 1.0.0
      quick-format-unescaped: 4.0.4
      real-require: 0.1.0
      safe-stable-stringify: 2.5.0
      sonic-boom: 2.8.0
      thread-stream: 0.15.2

  pirates@4.0.6: {}

  pngjs@5.0.0: {}

  pony-cause@2.1.11: {}

  possible-typed-array-names@1.1.0: {}

  postcss-import@15.1.0(postcss@8.5.6):
    dependencies:
      postcss: 8.5.6
      postcss-value-parser: 4.2.0
      read-cache: 1.0.0
      resolve: 1.22.10

  postcss-js@4.0.1(postcss@8.5.6):
    dependencies:
      camelcase-css: 2.0.1
      postcss: 8.5.6

  postcss-load-config@4.0.2(postcss@8.5.6):
    dependencies:
      lilconfig: 3.1.3
      yaml: 2.7.0
    optionalDependencies:
      postcss: 8.5.6

  postcss-nested@6.2.0(postcss@8.5.6):
    dependencies:
      postcss: 8.5.6
      postcss-selector-parser: 6.1.2

  postcss-selector-parser@6.1.2:
    dependencies:
      cssesc: 3.0.0
      util-deprecate: 1.0.2

  postcss-value-parser@4.2.0: {}

  postcss@8.5.6:
    dependencies:
      nanoid: 3.3.11
      picocolors: 1.1.1
      source-map-js: 1.2.1

  posthog-js-lite@3.2.1: {}

  potpack@1.0.2: {}

  prelude-ls@1.2.1: {}

  process-nextick-args@2.0.1: {}

  process-warning@1.0.0: {}

  promise-worker-transferable@1.0.4:
    dependencies:
      is-promise: 2.2.2
      lie: 3.3.0

  prop-types@15.8.1:
    dependencies:
      loose-envify: 1.4.0
      object-assign: 4.1.1
      react-is: 16.13.1

  proxy-compare@2.6.0: {}

  proxy-deep@3.1.1: {}

  psl@1.15.0:
    dependencies:
      punycode: 2.3.1

  pump@3.0.3:
    dependencies:
      end-of-stream: 1.4.5
      once: 1.4.0

  punycode@2.3.1: {}

  qrcode@1.5.3:
    dependencies:
      dijkstrajs: 1.0.3
      encode-utf8: 1.0.3
      pngjs: 5.0.0
      yargs: 15.4.1

  query-string@7.1.3:
    dependencies:
      decode-uri-component: 0.2.2
      filter-obj: 1.1.0
      split-on-first: 1.1.0
      strict-uri-encode: 2.0.0

  querystringify@2.2.0: {}

  queue-microtask@1.2.3: {}

  quick-format-unescaped@4.0.4: {}

  radix3@1.1.2: {}

  react-composer@5.0.3(react@18.3.1):
    dependencies:
      prop-types: 15.8.1
      react: 18.3.1

  react-dom@18.3.1(react@18.3.1):
    dependencies:
      loose-envify: 1.4.0
      react: 18.3.1
      scheduler: 0.23.2

  react-is@16.13.1: {}

  react-query@3.39.3(react-dom@18.3.1(react@18.3.1))(react@18.3.1):
    dependencies:
      '@babel/runtime': 7.26.7
      broadcast-channel: 3.7.0
      match-sorter: 6.3.4
      react: 18.3.1
    optionalDependencies:
      react-dom: 18.3.1(react@18.3.1)

  react-reconciler@0.27.0(react@18.3.1):
    dependencies:
      loose-envify: 1.4.0
      react: 18.3.1
      scheduler: 0.21.0

  react-refresh@0.17.0: {}

  react-use-measure@2.1.7(react-dom@18.3.1(react@18.3.1))(react@18.3.1):
    dependencies:
      react: 18.3.1
    optionalDependencies:
      react-dom: 18.3.1(react@18.3.1)

  react@18.3.1:
    dependencies:
      loose-envify: 1.4.0

  read-cache@1.0.0:
    dependencies:
      pify: 2.3.0

  readable-stream@2.3.8:
    dependencies:
      core-util-is: 1.0.3
      inherits: 2.0.4
      isarray: 1.0.0
      process-nextick-args: 2.0.1
      safe-buffer: 5.1.2
      string_decoder: 1.1.1
      util-deprecate: 1.0.2

  readable-stream@3.6.2:
    dependencies:
      inherits: 2.0.4
      string_decoder: 1.3.0
      util-deprecate: 1.0.2

  readdirp@3.6.0:
    dependencies:
      picomatch: 2.3.1

  readdirp@4.1.2: {}

  real-require@0.1.0: {}

  redeyed@2.1.1:
    dependencies:
      esprima: 4.0.1

  regenerator-runtime@0.14.1: {}

  remove-accents@0.5.0: {}

  require-directory@2.1.1: {}

  require-from-string@2.0.2: {}

  require-main-filename@2.0.0: {}

  requires-port@1.0.0: {}

  resolve-from@4.0.0: {}

  resolve@1.22.10:
    dependencies:
      is-core-module: 2.16.1
      path-parse: 1.0.7
      supports-preserve-symlinks-flag: 1.0.0

  reusify@1.0.4: {}

  rimraf@3.0.2:
    dependencies:
      glob: 7.2.3

  rollup@4.34.4:
    dependencies:
      '@types/estree': 1.0.6
    optionalDependencies:
      '@rollup/rollup-android-arm-eabi': 4.34.4
      '@rollup/rollup-android-arm64': 4.34.4
      '@rollup/rollup-darwin-arm64': 4.34.4
      '@rollup/rollup-darwin-x64': 4.34.4
      '@rollup/rollup-freebsd-arm64': 4.34.4
      '@rollup/rollup-freebsd-x64': 4.34.4
      '@rollup/rollup-linux-arm-gnueabihf': 4.34.4
      '@rollup/rollup-linux-arm-musleabihf': 4.34.4
      '@rollup/rollup-linux-arm64-gnu': 4.34.4
      '@rollup/rollup-linux-arm64-musl': 4.34.4
      '@rollup/rollup-linux-loongarch64-gnu': 4.34.4
      '@rollup/rollup-linux-powerpc64le-gnu': 4.34.4
      '@rollup/rollup-linux-riscv64-gnu': 4.34.4
      '@rollup/rollup-linux-s390x-gnu': 4.34.4
      '@rollup/rollup-linux-x64-gnu': 4.34.4
      '@rollup/rollup-linux-x64-musl': 4.34.4
      '@rollup/rollup-win32-arm64-msvc': 4.34.4
      '@rollup/rollup-win32-ia32-msvc': 4.34.4
      '@rollup/rollup-win32-x64-msvc': 4.34.4
      fsevents: 2.3.3

  rpc-websockets@9.1.1:
    dependencies:
      '@swc/helpers': 0.5.17
      '@types/uuid': 8.3.4
      '@types/ws': 8.18.1
      buffer: 6.0.3
      eventemitter3: 5.0.1
      uuid: 8.3.2
      ws: 8.18.2(bufferutil@4.0.9)(utf-8-validate@5.0.10)
    optionalDependencies:
      bufferutil: 4.0.9
      utf-8-validate: 5.0.10

  run-applescript@7.0.0: {}

  run-parallel@1.2.0:
    dependencies:
      queue-microtask: 1.2.3

  rxjs@7.5.5:
    dependencies:
      tslib: 2.8.1

  safe-buffer@5.1.2: {}

  safe-buffer@5.2.1: {}

  safe-regex-test@1.1.0:
    dependencies:
      call-bound: 1.0.4
      es-errors: 1.3.0
      is-regex: 1.2.1

  safe-stable-stringify@2.5.0: {}

  safer-buffer@2.1.2: {}

  scheduler@0.21.0:
    dependencies:
      loose-envify: 1.4.0

  scheduler@0.23.2:
    dependencies:
      loose-envify: 1.4.0

  seedrandom@3.0.5: {}

  semver@6.3.1: {}

  semver@7.7.1: {}

  set-blocking@2.0.0: {}

  set-cookie-parser@2.7.1: {}

  set-function-length@1.2.2:
    dependencies:
      define-data-property: 1.1.4
      es-errors: 1.3.0
      function-bind: 1.1.2
      get-intrinsic: 1.3.0
      gopd: 1.2.0
      has-property-descriptors: 1.0.2

  sha256-uint8array@0.10.7: {}

  shebang-command@2.0.0:
    dependencies:
      shebang-regex: 3.0.0

  shebang-regex@3.0.0: {}

  signal-exit@4.1.0: {}

  socket.io-client@4.8.1(bufferutil@4.0.9)(utf-8-validate@5.0.10):
    dependencies:
      '@socket.io/component-emitter': 3.1.2
      debug: 4.3.7
      engine.io-client: 6.6.3(bufferutil@4.0.9)(utf-8-validate@5.0.10)
      socket.io-parser: 4.2.4
    transitivePeerDependencies:
      - bufferutil
      - supports-color
      - utf-8-validate

  socket.io-parser@4.2.4:
    dependencies:
      '@socket.io/component-emitter': 3.1.2
      debug: 4.3.7
    transitivePeerDependencies:
      - supports-color

  sonic-boom@2.8.0:
    dependencies:
      atomic-sleep: 1.0.0

  source-map-js@1.2.1: {}

  split-on-first@1.1.0: {}

  split2@4.2.0: {}

  starknet@6.23.1(encoding@0.1.13):
    dependencies:
      '@noble/curves': 1.7.0
      '@noble/hashes': 1.6.0
      '@scure/base': 1.2.1
      '@scure/starknet': 1.1.0
      abi-wan-kanabi: 2.2.4
      fetch-cookie: 3.0.1
      isomorphic-fetch: 3.0.0(encoding@0.1.13)
      lossless-json: 4.0.2
      pako: 2.1.0
      starknet-types-07: '@starknet-io/types-js@0.7.10'
      ts-mixer: 6.0.4
    transitivePeerDependencies:
      - encoding

  starknetkit@2.10.4(bufferutil@4.0.9)(starknet@6.23.1(encoding@0.1.13))(typescript@5.8.3)(utf-8-validate@5.0.10)(zod@3.24.1):
    dependencies:
      '@starknet-io/get-starknet': 4.0.7
      '@starknet-io/get-starknet-core': 4.0.7
      '@starknet-io/types-js': 0.7.10
      '@trpc/client': 10.45.2(@trpc/server@10.45.2)
      '@trpc/server': 10.45.2
      '@walletconnect/sign-client': 2.21.3(bufferutil@4.0.9)(typescript@5.8.3)(utf-8-validate@5.0.10)(zod@3.24.1)
      bowser: 2.11.0
      detect-browser: 5.3.0
      eventemitter3: 5.0.1
      events: 3.3.0
      lodash-es: 4.17.21
      starknet: 6.23.1(encoding@0.1.13)
      svelte-forms: 2.3.1
      trpc-browser: 1.4.4(@trpc/client@10.45.2(@trpc/server@10.45.2))(@trpc/server@10.45.2)
    transitivePeerDependencies:
      - '@azure/app-configuration'
      - '@azure/cosmos'
      - '@azure/data-tables'
      - '@azure/identity'
      - '@azure/keyvault-secrets'
      - '@azure/storage-blob'
      - '@capacitor/preferences'
      - '@deno/kv'
      - '@netlify/blobs'
      - '@planetscale/database'
      - '@react-native-async-storage/async-storage'
      - '@upstash/redis'
      - '@vercel/blob'
      - '@vercel/kv'
      - aws4fetch
      - bufferutil
      - db0
      - ioredis
      - typescript
      - uploadthing
      - utf-8-validate
      - zod

  stats-gl@2.4.2(@types/three@0.177.0)(three@0.158.0):
    dependencies:
      '@types/three': 0.177.0
      three: 0.158.0

  stats.js@0.17.0: {}

  stream-chain@2.2.5: {}

  stream-json@1.9.1:
    dependencies:
      stream-chain: 2.2.5

  stream-shift@1.0.3: {}

  strict-uri-encode@2.0.0: {}

  string-width@4.2.3:
    dependencies:
      emoji-regex: 8.0.0
      is-fullwidth-code-point: 3.0.0
      strip-ansi: 6.0.1

  string-width@5.1.2:
    dependencies:
      eastasianwidth: 0.2.0
      emoji-regex: 9.2.2
      strip-ansi: 7.1.0

  string_decoder@1.1.1:
    dependencies:
      safe-buffer: 5.1.2

  string_decoder@1.3.0:
    dependencies:
      safe-buffer: 5.2.1

  strip-ansi@6.0.1:
    dependencies:
      ansi-regex: 5.0.1

  strip-ansi@7.1.0:
    dependencies:
      ansi-regex: 6.1.0

  strip-json-comments@3.1.1: {}

  sucrase@3.35.0:
    dependencies:
      '@jridgewell/gen-mapping': 0.3.8
      commander: 4.1.1
      glob: 10.4.5
      lines-and-columns: 1.2.4
      mz: 2.7.0
      pirates: 4.0.6
      ts-interface-checker: 0.1.13

  superstruct@2.0.2: {}

  supports-color@7.2.0:
    dependencies:
      has-flag: 4.0.0

  supports-preserve-symlinks-flag@1.0.0: {}

  suspend-react@0.1.3(react@18.3.1):
    dependencies:
      react: 18.3.1

  svelte-forms@2.3.1:
    dependencies:
      is-promise: 4.0.0

  swr@2.3.3(react@18.3.1):
    dependencies:
      dequal: 2.0.3
      react: 18.3.1
      use-sync-external-store: 1.4.0(react@18.3.1)

  tailwind-merge@3.3.1: {}

  tailwindcss@3.4.17:
    dependencies:
      '@alloc/quick-lru': 5.2.0
      arg: 5.0.2
      chokidar: 3.6.0
      didyoumean: 1.2.2
      dlv: 1.1.3
      fast-glob: 3.3.3
      glob-parent: 6.0.2
      is-glob: 4.0.3
      jiti: 1.21.7
      lilconfig: 3.1.3
      micromatch: 4.0.8
      normalize-path: 3.0.0
      object-hash: 3.0.0
      picocolors: 1.1.1
      postcss: 8.5.6
      postcss-import: 15.1.0(postcss@8.5.6)
      postcss-js: 4.0.1(postcss@8.5.6)
      postcss-load-config: 4.0.2(postcss@8.5.6)
      postcss-nested: 6.2.0(postcss@8.5.6)
      postcss-selector-parser: 6.1.2
      resolve: 1.22.10
      sucrase: 3.35.0
    transitivePeerDependencies:
      - ts-node

  text-encoding-utf-8@1.0.2: {}

  thenify-all@1.6.0:
    dependencies:
      thenify: 3.3.1

  thenify@3.3.1:
    dependencies:
      any-promise: 1.3.0

  thread-stream@0.15.2:
    dependencies:
      real-require: 0.1.0

  three-mesh-bvh@0.7.8(three@0.158.0):
    dependencies:
      three: 0.158.0

  three-stdlib@2.36.0(three@0.158.0):
    dependencies:
      '@types/draco3d': 1.4.10
      '@types/offscreencanvas': 2019.7.3
      '@types/webxr': 0.5.22
      draco3d: 1.5.7
      fflate: 0.6.10
      potpack: 1.0.2
      three: 0.158.0

  three@0.158.0: {}

  tiny-emitter@2.1.0: {}

  to-regex-range@5.0.1:
    dependencies:
      is-number: 7.0.0

  tough-cookie@4.1.4:
    dependencies:
      psl: 1.15.0
      punycode: 2.3.1
      universalify: 0.2.0
      url-parse: 1.5.10

  tr46@0.0.3: {}

  troika-three-text@0.52.4(three@0.158.0):
    dependencies:
      bidi-js: 1.0.3
      three: 0.158.0
      troika-three-utils: 0.52.4(three@0.158.0)
      troika-worker-utils: 0.52.0
      webgl-sdf-generator: 1.1.1

  troika-three-utils@0.52.4(three@0.158.0):
    dependencies:
      three: 0.158.0

  troika-worker-utils@0.52.0: {}

  trpc-browser@1.4.4(@trpc/client@10.45.2(@trpc/server@10.45.2))(@trpc/server@10.45.2):
    dependencies:
      '@trpc/client': 10.45.2(@trpc/server@10.45.2)
      '@trpc/server': 10.45.2

  ts-api-utils@2.1.0(typescript@5.8.3):
    dependencies:
      typescript: 5.8.3

  ts-interface-checker@0.1.13: {}

  ts-mixer@6.0.4: {}

  tslib@1.14.1: {}

  tslib@2.7.0: {}

  tslib@2.8.1: {}

  tunnel-rat@0.1.2(@types/react@18.3.23)(immer@10.1.1)(react@18.3.1):
    dependencies:
      zustand: 4.5.7(@types/react@18.3.23)(immer@10.1.1)(react@18.3.1)
    transitivePeerDependencies:
      - '@types/react'
      - immer
      - react

  type-check@0.4.0:
    dependencies:
      prelude-ls: 1.2.1

  typed-function@4.2.1: {}

  typescript-eslint@8.34.1(eslint@9.29.0(jiti@1.21.7))(typescript@5.8.3):
    dependencies:
      '@typescript-eslint/eslint-plugin': 8.34.1(@typescript-eslint/parser@8.34.1(eslint@9.29.0(jiti@1.21.7))(typescript@5.8.3))(eslint@9.29.0(jiti@1.21.7))(typescript@5.8.3)
      '@typescript-eslint/parser': 8.34.1(eslint@9.29.0(jiti@1.21.7))(typescript@5.8.3)
      '@typescript-eslint/utils': 8.34.1(eslint@9.29.0(jiti@1.21.7))(typescript@5.8.3)
      eslint: 9.29.0(jiti@1.21.7)
      typescript: 5.8.3
    transitivePeerDependencies:
      - supports-color

  typescript@5.8.3: {}

  ufo@1.6.1: {}

  uint8arrays@3.1.0:
    dependencies:
      multiformats: 9.9.0

  uint8arrays@3.1.1:
    dependencies:
      multiformats: 9.9.0

  uncrypto@0.1.3: {}

  undici-types@6.19.8: {}

  undici-types@6.21.0: {}

  universalify@0.2.0: {}

  universalify@2.0.1: {}

  unload@2.2.0:
    dependencies:
      '@babel/runtime': 7.26.7
      detect-node: 2.1.0

  unstorage@1.16.0(idb-keyval@6.2.2):
    dependencies:
      anymatch: 3.1.3
      chokidar: 4.0.3
      destr: 2.0.5
      h3: 1.15.3
      lru-cache: 10.4.3
      node-fetch-native: 1.6.6
      ofetch: 1.4.1
      ufo: 1.6.1
    optionalDependencies:
      idb-keyval: 6.2.2

  update-browserslist-db@1.1.2(browserslist@4.24.4):
    dependencies:
      browserslist: 4.24.4
      escalade: 3.2.0
      picocolors: 1.1.1

  uri-js@4.4.1:
    dependencies:
      punycode: 2.3.1

  url-parse@1.5.10:
    dependencies:
      querystringify: 2.2.0
      requires-port: 1.0.0

  use-sync-external-store@1.2.0(react@18.3.1):
    dependencies:
      react: 18.3.1

  use-sync-external-store@1.4.0(react@18.3.1):
    dependencies:
      react: 18.3.1

  utf-8-validate@5.0.10:
    dependencies:
      node-gyp-build: 4.8.4

  util-deprecate@1.0.2: {}

  util@0.12.5:
    dependencies:
      inherits: 2.0.4
      is-arguments: 1.2.0
      is-generator-function: 1.1.0
      is-typed-array: 1.1.15
      which-typed-array: 1.1.19

  utility-types@3.11.0: {}

  uuid@10.0.0: {}

  uuid@8.3.2: {}

  uuid@9.0.1: {}

  valtio@1.13.2(@types/react@18.3.23)(react@18.3.1):
    dependencies:
      derive-valtio: 0.1.0(valtio@1.13.2(@types/react@18.3.23)(react@18.3.1))
      proxy-compare: 2.6.0
      use-sync-external-store: 1.2.0(react@18.3.1)
    optionalDependencies:
      '@types/react': 18.3.23
      react: 18.3.1

  viem@2.22.22(bufferutil@4.0.9)(typescript@5.8.3)(utf-8-validate@5.0.10)(zod@3.24.1):
    dependencies:
      '@noble/curves': 1.8.1
      '@noble/hashes': 1.7.1
      '@scure/bip32': 1.6.2
      '@scure/bip39': 1.5.4
      abitype: 1.0.8(typescript@5.8.3)(zod@3.24.1)
      isows: 1.0.6(ws@8.18.0(bufferutil@4.0.9)(utf-8-validate@5.0.10))
      ox: 0.6.7(typescript@5.8.3)(zod@3.24.1)
      ws: 8.18.0(bufferutil@4.0.9)(utf-8-validate@5.0.10)
    optionalDependencies:
      typescript: 5.8.3
    transitivePeerDependencies:
      - bufferutil
      - utf-8-validate
      - zod

  viem@2.23.2(bufferutil@4.0.9)(typescript@5.8.3)(utf-8-validate@5.0.10)(zod@3.24.1):
    dependencies:
      '@noble/curves': 1.8.1
      '@noble/hashes': 1.7.1
      '@scure/bip32': 1.6.2
      '@scure/bip39': 1.5.4
      abitype: 1.0.8(typescript@5.8.3)(zod@3.24.1)
      isows: 1.0.6(ws@8.18.0(bufferutil@4.0.9)(utf-8-validate@5.0.10))
      ox: 0.6.7(typescript@5.8.3)(zod@3.24.1)
      ws: 8.18.0(bufferutil@4.0.9)(utf-8-validate@5.0.10)
    optionalDependencies:
      typescript: 5.8.3
    transitivePeerDependencies:
      - bufferutil
      - utf-8-validate
      - zod

  viem@2.31.0(bufferutil@4.0.9)(typescript@5.8.3)(utf-8-validate@5.0.10)(zod@3.24.1):
    dependencies:
      '@noble/curves': 1.9.1
      '@noble/hashes': 1.8.0
      '@scure/bip32': 1.7.0
      '@scure/bip39': 1.6.0
      abitype: 1.0.8(typescript@5.8.3)(zod@3.24.1)
      isows: 1.0.7(ws@8.18.2(bufferutil@4.0.9)(utf-8-validate@5.0.10))
      ox: 0.7.1(typescript@5.8.3)(zod@3.24.1)
      ws: 8.18.2(bufferutil@4.0.9)(utf-8-validate@5.0.10)
    optionalDependencies:
      typescript: 5.8.3
    transitivePeerDependencies:
      - bufferutil
      - utf-8-validate
      - zod

  viem@2.31.4(bufferutil@4.0.9)(typescript@5.8.3)(utf-8-validate@5.0.10)(zod@3.22.4):
    dependencies:
      '@noble/curves': 1.9.2
      '@noble/hashes': 1.8.0
      '@scure/bip32': 1.7.0
      '@scure/bip39': 1.6.0
      abitype: 1.0.8(typescript@5.8.3)(zod@3.22.4)
      isows: 1.0.7(ws@8.18.2(bufferutil@4.0.9)(utf-8-validate@5.0.10))
      ox: 0.8.1(typescript@5.8.3)(zod@3.22.4)
      ws: 8.18.2(bufferutil@4.0.9)(utf-8-validate@5.0.10)
    optionalDependencies:
      typescript: 5.8.3
    transitivePeerDependencies:
      - bufferutil
      - utf-8-validate
      - zod

  viem@2.31.4(bufferutil@4.0.9)(typescript@5.8.3)(utf-8-validate@5.0.10)(zod@3.24.1):
    dependencies:
      '@noble/curves': 1.9.2
      '@noble/hashes': 1.8.0
      '@scure/bip32': 1.7.0
      '@scure/bip39': 1.6.0
      abitype: 1.0.8(typescript@5.8.3)(zod@3.24.1)
      isows: 1.0.7(ws@8.18.2(bufferutil@4.0.9)(utf-8-validate@5.0.10))
      ox: 0.8.1(typescript@5.8.3)(zod@3.24.1)
      ws: 8.18.2(bufferutil@4.0.9)(utf-8-validate@5.0.10)
    optionalDependencies:
      typescript: 5.8.3
    transitivePeerDependencies:
      - bufferutil
      - utf-8-validate
      - zod

  viem@2.9.20(bufferutil@4.0.9)(typescript@5.8.3)(utf-8-validate@5.0.10)(zod@3.24.1):
    dependencies:
      '@adraffy/ens-normalize': 1.10.0
      '@noble/curves': 1.2.0
      '@noble/hashes': 1.3.2
      '@scure/bip32': 1.3.2
      '@scure/bip39': 1.2.1
      abitype: 1.0.0(typescript@5.8.3)(zod@3.24.1)
      isows: 1.0.3(ws@8.13.0(bufferutil@4.0.9)(utf-8-validate@5.0.10))
      ws: 8.13.0(bufferutil@4.0.9)(utf-8-validate@5.0.10)
    optionalDependencies:
      typescript: 5.8.3
    transitivePeerDependencies:
      - bufferutil
      - utf-8-validate
      - zod

  vite-plugin-top-level-await@1.5.0(@swc/helpers@0.5.17)(rollup@4.34.4)(vite@5.4.19(@types/node@22.15.32)):
    dependencies:
      '@rollup/plugin-virtual': 3.0.2(rollup@4.34.4)
      '@swc/core': 1.11.29(@swc/helpers@0.5.17)
      uuid: 10.0.0
      vite: 5.4.19(@types/node@22.15.32)
    transitivePeerDependencies:
      - '@swc/helpers'
      - rollup

  vite-plugin-wasm@3.4.1(vite@5.4.19(@types/node@22.15.32)):
    dependencies:
      vite: 5.4.19(@types/node@22.15.32)

  vite@5.4.19(@types/node@22.15.32):
    dependencies:
      esbuild: 0.21.5
      postcss: 8.5.6
      rollup: 4.34.4
    optionalDependencies:
      '@types/node': 22.15.32
      fsevents: 2.3.3

  webextension-polyfill@0.10.0: {}

  webgl-constants@1.1.1: {}

  webgl-sdf-generator@1.1.1: {}

  webidl-conversions@3.0.1: {}

  whatwg-fetch@3.6.20: {}

  whatwg-url@5.0.0:
    dependencies:
      tr46: 0.0.3
      webidl-conversions: 3.0.1

  which-module@2.0.1: {}

  which-typed-array@1.1.19:
    dependencies:
      available-typed-arrays: 1.0.7
      call-bind: 1.0.8
      call-bound: 1.0.4
      for-each: 0.3.5
      get-proto: 1.0.1
      gopd: 1.2.0
      has-tostringtag: 1.0.2

  which@2.0.2:
    dependencies:
      isexe: 2.0.0

  word-wrap@1.2.5: {}

  wrap-ansi@6.2.0:
    dependencies:
      ansi-styles: 4.3.0
      string-width: 4.2.3
      strip-ansi: 6.0.1

  wrap-ansi@7.0.0:
    dependencies:
      ansi-styles: 4.3.0
      string-width: 4.2.3
      strip-ansi: 6.0.1

  wrap-ansi@8.1.0:
    dependencies:
      ansi-styles: 6.2.1
      string-width: 5.1.2
      strip-ansi: 7.1.0

  wrappy@1.0.2: {}

  ws@7.5.10(bufferutil@4.0.9)(utf-8-validate@5.0.10):
    optionalDependencies:
      bufferutil: 4.0.9
      utf-8-validate: 5.0.10

  ws@8.13.0(bufferutil@4.0.9)(utf-8-validate@5.0.10):
    optionalDependencies:
      bufferutil: 4.0.9
      utf-8-validate: 5.0.10

  ws@8.17.1(bufferutil@4.0.9)(utf-8-validate@5.0.10):
    optionalDependencies:
      bufferutil: 4.0.9
      utf-8-validate: 5.0.10

  ws@8.18.0(bufferutil@4.0.9)(utf-8-validate@5.0.10):
    optionalDependencies:
      bufferutil: 4.0.9
      utf-8-validate: 5.0.10

  ws@8.18.2(bufferutil@4.0.9)(utf-8-validate@5.0.10):
    optionalDependencies:
      bufferutil: 4.0.9
      utf-8-validate: 5.0.10

  xmlhttprequest-ssl@2.1.2: {}

  y18n@4.0.3: {}

  y18n@5.0.8: {}

  yallist@3.1.1: {}

  yaml@2.7.0: {}

  yargs-parser@18.1.3:
    dependencies:
      camelcase: 5.3.1
      decamelize: 1.2.0

  yargs-parser@21.1.1: {}

  yargs@15.4.1:
    dependencies:
      cliui: 6.0.0
      decamelize: 1.2.0
      find-up: 4.1.0
      get-caller-file: 2.0.5
      require-directory: 2.1.1
      require-main-filename: 2.0.0
      set-blocking: 2.0.0
      string-width: 4.2.3
      which-module: 2.0.1
      y18n: 4.0.3
      yargs-parser: 18.1.3

  yargs@17.7.2:
    dependencies:
      cliui: 8.0.1
      escalade: 3.2.0
      get-caller-file: 2.0.5
      require-directory: 2.1.1
      string-width: 4.2.3
      y18n: 5.0.8
      yargs-parser: 21.1.1

  yocto-queue@0.1.0: {}

  zod@3.22.4: {}

  zod@3.24.1: {}

  zustand@3.7.2(react@18.3.1):
    optionalDependencies:
      react: 18.3.1

  zustand@4.5.7(@types/react@18.3.23)(immer@10.1.1)(react@18.3.1):
    dependencies:
      use-sync-external-store: 1.4.0(react@18.3.1)
    optionalDependencies:
      '@types/react': 18.3.23
      immer: 10.1.1
      react: 18.3.1

  zustand@5.0.5(@types/react@18.3.23)(immer@10.1.1)(react@18.3.1)(use-sync-external-store@1.4.0(react@18.3.1)):
    optionalDependencies:
      '@types/react': 18.3.23
      immer: 10.1.1
      react: 18.3.1
      use-sync-external-store: 1.4.0(react@18.3.1)

```

`/home/suhas/Desktop/pune/blockroomsv2/client/tsconfig.node.tsbuildinfo`:

```tsbuildinfo
{"root":["./vite.config.ts"],"version":"5.8.3"}
```

`/home/suhas/Desktop/pune/blockroomsv2/client/SETUP.md`:

```md
# 🎮 Game Setup Guide

## Current Status: **PARTIALLY PLAYABLE** ✅

The game has a complete hook system and UI, but needs proper configuration to be fully playable.

## 🚀 Quick Setup

### 1. Environment Configuration

Create a `.env.local` file in the `client` directory:

```bash
# Starknet RPC URL (for Sepolia testnet)
VITE_PUBLIC_NODE_URL=https://starknet-sepolia.public.blastapi.io

# Torii Indexer URL (your Dojo indexer)
VITE_PUBLIC_TORII=http://localhost:8080

# Master Account (for game initialization)
VITE_PUBLIC_MASTER_ADDRESS=0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef

# Master Private Key (for game initialization)
VITE_PUBLIC_MASTER_PRIVATE_KEY=0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef

# Game Configuration
VITE_GAME_NAMESPACE=blockrooms
VITE_GAME_SLOT=blockrooms-game
```

### 2. Start the Game

```bash
cd client
npm install
npm run dev
```

### 3. Connect Wallet

1. Open the game in your browser
2. Click "Start Game" 
3. Connect your Starknet wallet (ArgentX, Braavos, etc.)
4. The game will automatically initialize

## 🎯 What's Working Now

### ✅ **Complete Features:**
- **40+ Dojo Hooks** - All game functions available
- **Real-time UI** - GameInfo and GameActions panels
- **3D Game Engine** - Three.js with React Three Fiber
- **Wallet Integration** - Starknet wallet connection
- **State Management** - Zustand store with all game data
- **Event System** - Real-time blockchain event listening
- **Type Safety** - Full TypeScript integration

### 🎮 **Game Actions Available:**
- **Player Movement** - Move in 4 directions
- **Combat** - Attack entities
- **Collection** - Collect shards
- **Exploration** - Open doors
- **Turn Management** - Execute complex turns
- **Game Management** - Start/end games, respawn

### 📊 **Real-time Data:**
- Player health, position, stats
- Room information and entities
- Game configuration and session data
- Event history and turn tracking

## 🔧 **What You Need to Complete:**

### 1. **Configure Environment Variables**
- Set up your Dojo indexer URL
- Configure Starknet RPC endpoint
- Add master account credentials

### 2. **Deploy Smart Contract**
- Ensure your Dojo world is deployed
- Verify the contract address in `cartridgeConnector.tsx`
- Make sure Torii indexer is running

### 3. **Test Wallet Connection**
- Install a Starknet wallet (ArgentX recommended)
- Connect to Sepolia testnet
- Ensure you have test tokens

## 🎮 **How to Play:**

### **Basic Gameplay:**
1. **Start Game** - Click the "Start Game" button
2. **Connect Wallet** - Connect your Starknet wallet
3. **Move Around** - Use WASD keys to move
4. **Interact** - Click to shoot, collect items, open doors
5. **Monitor** - Watch the GameInfo panel for real-time stats

### **Advanced Features:**
- **Game Actions Panel** - Execute complex game actions
- **Turn System** - Plan and execute multiple actions per turn
- **Event Tracking** - Monitor blockchain events in real-time
- **Debug Mode** - Development mode shows connection status

## 🐛 **Troubleshooting:**

### **Common Issues:**

1. **"Wallet not connected"**
   - Install ArgentX or Braavos wallet
   - Connect to Sepolia testnet
   - Ensure wallet is unlocked

2. **"Player data error"**
   - Check Torii indexer is running
   - Verify environment variables
   - Ensure contract is deployed

3. **"Action failed"**
   - Check wallet has test tokens
   - Verify network connection
   - Check console for detailed errors

### **Debug Information:**
- Development mode shows connection status
- Console logs all game actions
- GameInfo panel shows real-time data
- GameActions panel shows error details

## 🚀 **Next Steps:**

1. **Configure Environment** - Set up your `.env.local`
2. **Deploy Contract** - Ensure Dojo world is live
3. **Test Connection** - Verify wallet and indexer work
4. **Start Playing** - Enjoy the fully integrated game!

## 📈 **Game Features:**

### **Core Gameplay:**
- ✅ First-person 3D movement
- ✅ Real-time combat system
- ✅ Item collection mechanics
- ✅ Door/room exploration
- ✅ Turn-based action system

### **Blockchain Integration:**
- ✅ Wallet connection
- ✅ Smart contract interactions
- ✅ Real-time state updates
- ✅ Event listening
- ✅ Transaction management

### **UI/UX:**
- ✅ Game information display
- ✅ Action controls
- ✅ Debug information
- ✅ Connection status
- ✅ Error handling

The game is **architecturally complete** and ready for full playability once configured! 🎉 
```

`/home/suhas/Desktop/pune/blockroomsv2/client/vite.config.ts`:

```ts
import react from "@vitejs/plugin-react";
import { defineConfig } from "vite";
import topLevelAwait from "vite-plugin-top-level-await";
import wasm from "vite-plugin-wasm";
import fs from "fs";
import path from "path";

export default defineConfig(({ command }) => {
  const isDev = command === 'serve';
  const isLocalHttps = process.env.VITE_LOCAL_HTTPS === 'true';

  const getHttpsConfig = () => {
    if (!isDev || !isLocalHttps) return {};
    
    const keyPath = path.resolve('./dev-key.pem');
    const certPath = path.resolve('./dev.pem');
    
    try {
      if (fs.existsSync(keyPath) && fs.existsSync(certPath)) {
        return {
          https: {
            key: fs.readFileSync(keyPath),
            cert: fs.readFileSync(certPath),
          }
        };
      }
    } catch (error) {
      console.warn('⚠️  Error reading HTTPS certificates. Using HTTP.');
    }
    
    return {};
  };

  return {
    plugins: [react(), wasm(), topLevelAwait()],
    server: {
      port: 3002,
      ...getHttpsConfig(),
      ...(isDev && {
        host: true,
        cors: true,
      }),
    },
    define: {
      global: 'globalThis',
    },
    optimizeDeps: {
      include: ['buffer'],
    },
  };
});

```

`/home/suhas/Desktop/pune/blockroomsv2/client/tsconfig.node.json`:

```json
{
    "compilerOptions": {
        "target": "ES2022",
        "lib": ["ES2023"],
        "module": "ESNext",
        "skipLibCheck": true,

        /* Bundler mode */
        "moduleResolution": "bundler",
        "allowImportingTsExtensions": true,
        "isolatedModules": true,
        "moduleDetection": "force",
        "noEmit": true,

        /* Linting */
        "strict": true,
        "noUnusedLocals": true,
        "noUnusedParameters": true,
        "noFallthroughCasesInSwitch": true
    },
    "include": ["vite.config.ts"]
}

```

`/home/suhas/Desktop/pune/blockroomsv2/client/postcss.config.js`:

```js
export default {
    plugins: {
        tailwindcss: {},
        autoprefixer: {},
    },
};

```

`/home/suhas/Desktop/pune/blockroomsv2/client/tsconfig.app.json`:

```json
{
    "compilerOptions": {
        "target": "ES2020",
        "useDefineForClassFields": true,
        "lib": ["ES2020", "DOM", "DOM.Iterable"],
        "module": "ESNext",
        "skipLibCheck": true,

        /* Bundler mode */
        "moduleResolution": "bundler",
        "allowImportingTsExtensions": true,
        "isolatedModules": true,
        "moduleDetection": "force",
        "noEmit": true,
        "jsx": "react-jsx",

        /* Linting */
        "strict": true,
        "noUnusedLocals": true,
        "noUnusedParameters": true,
        "noFallthroughCasesInSwitch": true
    },
    "include": ["src"]
}

```

`/home/suhas/Desktop/pune/blockroomsv2/client/package-lock.json`:

```json
{
  "name": "dojo-starter-react",
  "version": "0.0.0",
  "lockfileVersion": 3,
  "requires": true,
  "packages": {
    "": {
      "name": "dojo-starter-react",
      "version": "0.0.0",
      "dependencies": {
        "@cartridge/connector": "^0.7.13",
        "@cartridge/controller": "^0.7.13",
        "@dojoengine/core": "^1.5.15",
        "@dojoengine/create-burner": "^1.5.15",
        "@dojoengine/predeployed-connector": "^1.5.15",
        "@dojoengine/sdk": "^1.5.16",
        "@dojoengine/torii-client": "^1.5.14",
        "@dojoengine/torii-wasm": "^1.5.14",
        "@dojoengine/utils": "^1.5.14",
        "@radix-ui/react-progress": "^1.1.7",
        "@radix-ui/react-slot": "^1.2.3",
        "@react-three/drei": "^9.122.0",
        "@react-three/fiber": "^8.18.0",
        "@starknet-react/chains": "^3.1.3",
        "@starknet-react/core": "^3.7.4",
        "@types/uuid": "^10.0.0",
        "buffer": "^6.0.3",
        "class-variance-authority": "^0.7.1",
        "clsx": "^2.1.1",
        "immer": "^10.1.1",
        "lucide-react": "^0.518.0",
        "react": "^18.3.1",
        "react-dom": "^18.3.1",
        "starknet": "^6.23.1",
        "tailwind-merge": "^3.3.1",
        "three": "^0.158.0",
        "uuid": "^10.0.0",
        "vite-plugin-top-level-await": "^1.5.0",
        "vite-plugin-wasm": "^3.4.1",
        "zustand": "^4.5.7"
      },
      "devDependencies": {
        "@eslint/js": "^9.29.0",
        "@types/node": "^22.15.32",
        "@types/react": "^18.3.23",
        "@types/react-dom": "^18.3.7",
        "@types/three": "^0.177.0",
        "@vitejs/plugin-react": "^4.5.2",
        "autoprefixer": "^10.4.21",
        "eslint": "^9.29.0",
        "eslint-plugin-react-hooks": "5.2.0",
        "eslint-plugin-react-refresh": "^0.4.20",
        "globals": "^15.15.0",
        "postcss": "^8.5.6",
        "tailwindcss": "^3.4.17",
        "typescript": "^5.8.3",
        "typescript-eslint": "^8.34.1",
        "vite": "^5.4.19"
      }
    },
    "node_modules/@adraffy/ens-normalize": {
      "version": "1.10.1",
      "resolved": "https://registry.npmjs.org/@adraffy/ens-normalize/-/ens-normalize-1.10.1.tgz",
      "integrity": "sha512-96Z2IP3mYmF1Xg2cDm8f1gWGf/HUVedQ3FMifV4kG/PQ4yEP51xDtRAEfhVNt5f/uzpNkZHwWQuUcu6D6K+Ekw==",
      "license": "MIT"
    },
    "node_modules/@alloc/quick-lru": {
      "version": "5.2.0",
      "resolved": "https://registry.npmjs.org/@alloc/quick-lru/-/quick-lru-5.2.0.tgz",
      "integrity": "sha512-UrcABB+4bUrFABwbluTIBErXwvbsU/V7TZWfmbgJfbkwiBuziS9gxdODUyuiecfdGQ85jglMW6juS3+z5TsKLw==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/@ampproject/remapping": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/@ampproject/remapping/-/remapping-2.3.0.tgz",
      "integrity": "sha512-30iZtAPgz+LTIYoeivqYo853f02jBYSd5uGnGpkFV0M3xOt9aN73erkgYAmZU43x4VfqcnLxW9Kpg3R5LC4YYw==",
      "dev": true,
      "license": "Apache-2.0",
      "dependencies": {
        "@jridgewell/gen-mapping": "^0.3.5",
        "@jridgewell/trace-mapping": "^0.3.24"
      },
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/@babel/code-frame": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/code-frame/-/code-frame-7.27.1.tgz",
      "integrity": "sha512-cjQ7ZlQ0Mv3b47hABuTevyTuYN4i+loJKGeV9flcCgIK37cCXRh+L1bd3iBHlynerhQ7BhCkn2BPbQUL+rGqFg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-validator-identifier": "^7.27.1",
        "js-tokens": "^4.0.0",
        "picocolors": "^1.1.1"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/compat-data": {
      "version": "7.27.5",
      "resolved": "https://registry.npmjs.org/@babel/compat-data/-/compat-data-7.27.5.tgz",
      "integrity": "sha512-KiRAp/VoJaWkkte84TvUd9qjdbZAdiqyvMxrGl1N6vzFogKmaLgoM3L1kgtLicp2HP5fBJS8JrZKLVIZGVJAVg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/core": {
      "version": "7.27.4",
      "resolved": "https://registry.npmjs.org/@babel/core/-/core-7.27.4.tgz",
      "integrity": "sha512-bXYxrXFubeYdvB0NhD/NBB3Qi6aZeV20GOWVI47t2dkecCEoneR4NPVcb7abpXDEvejgrUfFtG6vG/zxAKmg+g==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@ampproject/remapping": "^2.2.0",
        "@babel/code-frame": "^7.27.1",
        "@babel/generator": "^7.27.3",
        "@babel/helper-compilation-targets": "^7.27.2",
        "@babel/helper-module-transforms": "^7.27.3",
        "@babel/helpers": "^7.27.4",
        "@babel/parser": "^7.27.4",
        "@babel/template": "^7.27.2",
        "@babel/traverse": "^7.27.4",
        "@babel/types": "^7.27.3",
        "convert-source-map": "^2.0.0",
        "debug": "^4.1.0",
        "gensync": "^1.0.0-beta.2",
        "json5": "^2.2.3",
        "semver": "^6.3.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/babel"
      }
    },
    "node_modules/@babel/core/node_modules/semver": {
      "version": "6.3.1",
      "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.1.tgz",
      "integrity": "sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==",
      "dev": true,
      "license": "ISC",
      "bin": {
        "semver": "bin/semver.js"
      }
    },
    "node_modules/@babel/generator": {
      "version": "7.27.5",
      "resolved": "https://registry.npmjs.org/@babel/generator/-/generator-7.27.5.tgz",
      "integrity": "sha512-ZGhA37l0e/g2s1Cnzdix0O3aLYm66eF8aufiVteOgnwxgnRP8GoyMj7VWsgWnQbVKXyge7hqrFh2K2TQM6t1Hw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/parser": "^7.27.5",
        "@babel/types": "^7.27.3",
        "@jridgewell/gen-mapping": "^0.3.5",
        "@jridgewell/trace-mapping": "^0.3.25",
        "jsesc": "^3.0.2"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-compilation-targets": {
      "version": "7.27.2",
      "resolved": "https://registry.npmjs.org/@babel/helper-compilation-targets/-/helper-compilation-targets-7.27.2.tgz",
      "integrity": "sha512-2+1thGUUWWjLTYTHZWK1n8Yga0ijBz1XAhUXcKy81rd5g6yh7hGqMp45v7cadSbEHc9G3OTv45SyneRN3ps4DQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/compat-data": "^7.27.2",
        "@babel/helper-validator-option": "^7.27.1",
        "browserslist": "^4.24.0",
        "lru-cache": "^5.1.1",
        "semver": "^6.3.1"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-compilation-targets/node_modules/semver": {
      "version": "6.3.1",
      "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.1.tgz",
      "integrity": "sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==",
      "dev": true,
      "license": "ISC",
      "bin": {
        "semver": "bin/semver.js"
      }
    },
    "node_modules/@babel/helper-module-imports": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/helper-module-imports/-/helper-module-imports-7.27.1.tgz",
      "integrity": "sha512-0gSFWUPNXNopqtIPQvlD5WgXYI5GY2kP2cCvoT8kczjbfcfuIljTbcWrulD1CIPIX2gt1wghbDy08yE1p+/r3w==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/traverse": "^7.27.1",
        "@babel/types": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-module-transforms": {
      "version": "7.27.3",
      "resolved": "https://registry.npmjs.org/@babel/helper-module-transforms/-/helper-module-transforms-7.27.3.tgz",
      "integrity": "sha512-dSOvYwvyLsWBeIRyOeHXp5vPj5l1I011r52FM1+r1jCERv+aFXYk4whgQccYEGYxK2H3ZAIA8nuPkQ0HaUo3qg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-module-imports": "^7.27.1",
        "@babel/helper-validator-identifier": "^7.27.1",
        "@babel/traverse": "^7.27.3"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0"
      }
    },
    "node_modules/@babel/helper-plugin-utils": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/helper-plugin-utils/-/helper-plugin-utils-7.27.1.tgz",
      "integrity": "sha512-1gn1Up5YXka3YYAHGKpbideQ5Yjf1tDa9qYcgysz+cNCXukyLl6DjPXhD3VRwSb8c0J9tA4b2+rHEZtc6R0tlw==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-string-parser": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/helper-string-parser/-/helper-string-parser-7.27.1.tgz",
      "integrity": "sha512-qMlSxKbpRlAridDExk92nSobyDdpPijUq2DW6oDnUqd0iOGxmQjyqhMIihI9+zv4LPyZdRje2cavWPbCbWm3eA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-validator-identifier": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/helper-validator-identifier/-/helper-validator-identifier-7.27.1.tgz",
      "integrity": "sha512-D2hP9eA+Sqx1kBZgzxZh0y1trbuU+JoDkiEwqhQ36nodYqJwyEIhPSdMNd7lOm/4io72luTPWH20Yda0xOuUow==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-validator-option": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/helper-validator-option/-/helper-validator-option-7.27.1.tgz",
      "integrity": "sha512-YvjJow9FxbhFFKDSuFnVCe2WxXk1zWc22fFePVNEaWJEu8IrZVlda6N0uHwzZrUM1il7NC9Mlp4MaJYbYd9JSg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helpers": {
      "version": "7.27.6",
      "resolved": "https://registry.npmjs.org/@babel/helpers/-/helpers-7.27.6.tgz",
      "integrity": "sha512-muE8Tt8M22638HU31A3CgfSUciwz1fhATfoVai05aPXGor//CdWDCbnlY1yvBPo07njuVOCNGCSp/GTt12lIug==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/template": "^7.27.2",
        "@babel/types": "^7.27.6"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/parser": {
      "version": "7.27.5",
      "resolved": "https://registry.npmjs.org/@babel/parser/-/parser-7.27.5.tgz",
      "integrity": "sha512-OsQd175SxWkGlzbny8J3K8TnnDD0N3lrIUtB92xwyRpzaenGZhxDvxN/JgU00U3CDZNj9tPuDJ5H0WS4Nt3vKg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/types": "^7.27.3"
      },
      "bin": {
        "parser": "bin/babel-parser.js"
      },
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/@babel/plugin-transform-react-jsx-self": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-react-jsx-self/-/plugin-transform-react-jsx-self-7.27.1.tgz",
      "integrity": "sha512-6UzkCs+ejGdZ5mFFC/OCUrv028ab2fp1znZmCZjAOBKiBK2jXD1O+BPSfX8X2qjJ75fZBMSnQn3Rq2mrBJK2mw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-react-jsx-source": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-react-jsx-source/-/plugin-transform-react-jsx-source-7.27.1.tgz",
      "integrity": "sha512-zbwoTsBruTeKB9hSq73ha66iFeJHuaFkUbwvqElnygoNbj/jHRsSeokowZFN3CZ64IvEqcmmkVe89OPXc7ldAw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/runtime": {
      "version": "7.27.6",
      "resolved": "https://registry.npmjs.org/@babel/runtime/-/runtime-7.27.6.tgz",
      "integrity": "sha512-vbavdySgbTTrmFE+EsiqUTzlOr5bzlnJtUv9PynGCAKvfQqjIXbvFdumPM/GxMDfyuGMJaJAU6TO4zc1Jf1i8Q==",
      "license": "MIT",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/template": {
      "version": "7.27.2",
      "resolved": "https://registry.npmjs.org/@babel/template/-/template-7.27.2.tgz",
      "integrity": "sha512-LPDZ85aEJyYSd18/DkjNh4/y1ntkE5KwUHWTiqgRxruuZL2F1yuHligVHLvcHY2vMHXttKFpJn6LwfI7cw7ODw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/code-frame": "^7.27.1",
        "@babel/parser": "^7.27.2",
        "@babel/types": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/traverse": {
      "version": "7.27.4",
      "resolved": "https://registry.npmjs.org/@babel/traverse/-/traverse-7.27.4.tgz",
      "integrity": "sha512-oNcu2QbHqts9BtOWJosOVJapWjBDSxGCpFvikNR5TGDYDQf3JwpIoMzIKrvfoti93cLfPJEG4tH9SPVeyCGgdA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/code-frame": "^7.27.1",
        "@babel/generator": "^7.27.3",
        "@babel/parser": "^7.27.4",
        "@babel/template": "^7.27.2",
        "@babel/types": "^7.27.3",
        "debug": "^4.3.1",
        "globals": "^11.1.0"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/traverse/node_modules/globals": {
      "version": "11.12.0",
      "resolved": "https://registry.npmjs.org/globals/-/globals-11.12.0.tgz",
      "integrity": "sha512-WOBp/EEGUiIsJSp7wcv/y6MO+lV9UoncWqxuFfm8eBwzWNgyfBd6Gz+IeKQ9jCmyhoH99g15M3T+QaVHFjizVA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/@babel/types": {
      "version": "7.27.6",
      "resolved": "https://registry.npmjs.org/@babel/types/-/types-7.27.6.tgz",
      "integrity": "sha512-ETyHEk2VHHvl9b9jZP5IHPavHYk57EhanlRRuae9XCpb/j5bDCbPPMOBfCWhnl/7EDJz0jEMCi/RhccCE8r1+Q==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-string-parser": "^7.27.1",
        "@babel/helper-validator-identifier": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@cartridge/account-wasm": {
      "version": "0.7.13",
      "resolved": "https://registry.npmjs.org/@cartridge/account-wasm/-/account-wasm-0.7.13.tgz",
      "integrity": "sha512-2/cFS96jN31N9piK2Hs/Egxz6cstJ9gV8pgBrqo5vSPckFv2yD9u/8euqDD26MJtLnDa59OYefNJBbKgsK9vHg=="
    },
    "node_modules/@cartridge/connector": {
      "version": "0.7.13",
      "resolved": "https://registry.npmjs.org/@cartridge/connector/-/connector-0.7.13.tgz",
      "integrity": "sha512-OSlWo5mXiO0WLvHUddnO7Uvx/PlVJcKfkttJgOM4kQz3iSar8B2QlYPXQQ6uqIBFzJ4Pep5E5E3tpUbGNA9BFQ==",
      "dependencies": {
        "@cartridge/controller": "0.7.13"
      },
      "peerDependencies": {
        "@starknet-react/core": "^3.7.3"
      }
    },
    "node_modules/@cartridge/controller": {
      "version": "0.7.13",
      "resolved": "https://registry.npmjs.org/@cartridge/controller/-/controller-0.7.13.tgz",
      "integrity": "sha512-LBor+FxYtAETgj8+m+23BDVhwXEZ+FqtwaLAVBEen6oz4//o3pU+wP2xBl8YAtcAL6mJ8gYcOhfqdHK/Ux5rwQ==",
      "dependencies": {
        "@cartridge/account-wasm": "0.7.13",
        "@cartridge/penpal": "^6.2.4",
        "@cartridge/utils": "0.7.13",
        "@starknet-io/types-js": "^0.7.7",
        "@telegram-apps/sdk": "^2.4.0",
        "@turnkey/sdk-browser": "^4.0.0",
        "@walletconnect/ethereum-provider": "^2.20.0",
        "cbor-x": "^1.5.0",
        "ethers": "^6.13.5",
        "mipd": "^0.0.7"
      },
      "peerDependencies": {
        "@metamask/sdk": "^0.32.1",
        "@solana/web3.js": "^1.98.0",
        "open": "^10.1.0",
        "starknet": "^6.21.0",
        "starknetkit": "^2.6.1"
      }
    },
    "node_modules/@cartridge/penpal": {
      "version": "6.2.4",
      "resolved": "https://registry.npmjs.org/@cartridge/penpal/-/penpal-6.2.4.tgz",
      "integrity": "sha512-tdpOnSJJBFMlgLZ1+z9Ho5e6cG5EgMAb1Cmmh1lGT2tmplogU/XPMjLE6CwvKAPDoe6a38iMnbH+ySTAWWIOKA==",
      "license": "MIT"
    },
    "node_modules/@cartridge/utils": {
      "version": "0.7.13",
      "resolved": "https://registry.npmjs.org/@cartridge/utils/-/utils-0.7.13.tgz",
      "integrity": "sha512-gNoDw9TCvBaOPh3swGyGY383Am4e/gBFR9mMFq0nkRyfqYOiMlnnxZkGGDYbFSz5LAqbyB80JizmgaTVtKsi4w==",
      "dependencies": {
        "posthog-js-lite": "3.2.1",
        "react": "^18.2.0",
        "react-query": "^3.39.2",
        "starknet": "^6.21.0",
        "swr": "^2.2.5",
        "viem": "^2.21.32"
      }
    },
    "node_modules/@cbor-extract/cbor-extract-darwin-arm64": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/@cbor-extract/cbor-extract-darwin-arm64/-/cbor-extract-darwin-arm64-2.2.0.tgz",
      "integrity": "sha512-P7swiOAdF7aSi0H+tHtHtr6zrpF3aAq/W9FXx5HektRvLTM2O89xCyXF3pk7pLc7QpaY7AoaE8UowVf9QBdh3w==",
      "cpu": [
        "arm64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "darwin"
      ]
    },
    "node_modules/@cbor-extract/cbor-extract-darwin-x64": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/@cbor-extract/cbor-extract-darwin-x64/-/cbor-extract-darwin-x64-2.2.0.tgz",
      "integrity": "sha512-1liF6fgowph0JxBbYnAS7ZlqNYLf000Qnj4KjqPNW4GViKrEql2MgZnAsExhY9LSy8dnvA4C0qHEBgPrll0z0w==",
      "cpu": [
        "x64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "darwin"
      ]
    },
    "node_modules/@cbor-extract/cbor-extract-linux-arm": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/@cbor-extract/cbor-extract-linux-arm/-/cbor-extract-linux-arm-2.2.0.tgz",
      "integrity": "sha512-QeBcBXk964zOytiedMPQNZr7sg0TNavZeuUCD6ON4vEOU/25+pLhNN6EDIKJ9VLTKaZ7K7EaAriyYQ1NQ05s/Q==",
      "cpu": [
        "arm"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@cbor-extract/cbor-extract-linux-arm64": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/@cbor-extract/cbor-extract-linux-arm64/-/cbor-extract-linux-arm64-2.2.0.tgz",
      "integrity": "sha512-rQvhNmDuhjTVXSPFLolmQ47/ydGOFXtbR7+wgkSY0bdOxCFept1hvg59uiLPT2fVDuJFuEy16EImo5tE2x3RsQ==",
      "cpu": [
        "arm64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@cbor-extract/cbor-extract-linux-x64": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/@cbor-extract/cbor-extract-linux-x64/-/cbor-extract-linux-x64-2.2.0.tgz",
      "integrity": "sha512-cWLAWtT3kNLHSvP4RKDzSTX9o0wvQEEAj4SKvhWuOVZxiDAeQazr9A+PSiRILK1VYMLeDml89ohxCnUNQNQNCw==",
      "cpu": [
        "x64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@cbor-extract/cbor-extract-win32-x64": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/@cbor-extract/cbor-extract-win32-x64/-/cbor-extract-win32-x64-2.2.0.tgz",
      "integrity": "sha512-l2M+Z8DO2vbvADOBNLbbh9y5ST1RY5sqkWOg/58GkUPBYou/cuNZ68SGQ644f1CvZ8kcOxyZtw06+dxWHIoN/w==",
      "cpu": [
        "x64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "win32"
      ]
    },
    "node_modules/@dimforge/rapier3d-compat": {
      "version": "0.12.0",
      "resolved": "https://registry.npmjs.org/@dimforge/rapier3d-compat/-/rapier3d-compat-0.12.0.tgz",
      "integrity": "sha512-uekIGetywIgopfD97oDL5PfeezkFpNhwlzlaEYNOA0N6ghdsOvh/HYjSMek5Q2O1PYvRSDFcqFVJl4r4ZBwOow==",
      "license": "Apache-2.0"
    },
    "node_modules/@dojoengine/core": {
      "version": "1.5.15",
      "resolved": "https://registry.npmjs.org/@dojoengine/core/-/core-1.5.15.tgz",
      "integrity": "sha512-yXLhAsjsfysHtCR0Z6+NR/0SiRKfCpLlRXzKfApHRFg4oxadWqgPBynIL+ibrWvt2L6ftpPWgTI9z9mLPcBQeg==",
      "license": "MIT",
      "dependencies": {
        "@dojoengine/recs": "2.0.13",
        "starknet": "6.23.1",
        "zod": "^3.23.8"
      }
    },
    "node_modules/@dojoengine/create-burner": {
      "version": "1.5.15",
      "resolved": "https://registry.npmjs.org/@dojoengine/create-burner/-/create-burner-1.5.15.tgz",
      "integrity": "sha512-2UCSn18E7F+IFQi5MTIzNcF+g/RhjdF5l6raEfzgmCxNj1dwgxCGp95Rn080GYRXDDPnY0162aAPOoiiSCFKLQ==",
      "license": "MIT",
      "dependencies": {
        "@dojoengine/core": "1.5.15",
        "@scure/bip32": "^1.5.0",
        "@starknet-react/core": "^3.6.2",
        "encoding": "^0.1.13",
        "get-starknet-core": "^4.0.0",
        "js-cookie": "^3.0.5"
      },
      "peerDependencies": {
        "react": "^18.2.0",
        "react-dom": "^18.2.0",
        "starknet": "6.23.1"
      }
    },
    "node_modules/@dojoengine/predeployed-connector": {
      "version": "1.5.15",
      "resolved": "https://registry.npmjs.org/@dojoengine/predeployed-connector/-/predeployed-connector-1.5.15.tgz",
      "integrity": "sha512-12ZA+ijbOzElF6SruIqNK2frhUDN8BNk9dHwMkklEJ9Gv0P0i5dww8R/uRE8tvu8bDOsOs7usCcYxqsVlOOCMQ==",
      "license": "MIT",
      "dependencies": {
        "@starknet-io/types-js": "^0.7.10",
        "@starknet-react/core": "^3.6.2",
        "react": "^18.3.1",
        "react-dom": "^18.3.1",
        "starknet": "6.23.1"
      },
      "engines": {
        "node": ">=18.0.0"
      },
      "peerDependencies": {
        "@starknet-react/core": "^3.6.2",
        "react": "^18.3.1",
        "react-dom": "^18.3.1",
        "starknet": "6.23.1"
      }
    },
    "node_modules/@dojoengine/recs": {
      "version": "2.0.13",
      "resolved": "https://registry.npmjs.org/@dojoengine/recs/-/recs-2.0.13.tgz",
      "integrity": "sha512-Cgz4Unlnk2FSDoFTYKrJexX/KiSYPMFMxftxQkC+9LUKS5yNGkgFQM7xu4/L1HvpDAenL7NjUmH6ynRAS7Iifw==",
      "license": "MIT",
      "dependencies": {
        "@latticexyz/schema-type": "2.0.12",
        "@latticexyz/utils": "2.0.12",
        "mobx": "^6.7.0",
        "rxjs": "7.5.5"
      }
    },
    "node_modules/@dojoengine/sdk": {
      "version": "1.5.16",
      "resolved": "https://registry.npmjs.org/@dojoengine/sdk/-/sdk-1.5.16.tgz",
      "integrity": "sha512-ZYgLYuXBoUY2FOH8N8t9SgC7HFKs8JCXLvzfnBehksvRJxd3oT4kqCxJJ1+yR1WO3qv/R1W8X91J17+DX62BOw==",
      "license": "MIT",
      "dependencies": {
        "@dojoengine/core": "1.5.15",
        "@dojoengine/torii-client": "1.5.14",
        "@dojoengine/torii-wasm": "1.5.14",
        "@dojoengine/utils": "1.5.14",
        "@starknet-react/chains": "^3.1.0",
        "@starknet-react/core": "^3.6.2",
        "immer": "^10.1.1",
        "neverthrow": "^8.2.0",
        "zustand": "^4.5.6"
      },
      "engines": {
        "node": ">=18.0.0"
      },
      "peerDependencies": {
        "@tanstack/react-query": "^5.62.16",
        "@types/react": "^18.3.1",
        "@types/react-dom": "^18.3.1",
        "react": "^18.3.1",
        "react-dom": "^18.3.1",
        "starknet": "6.23.1"
      }
    },
    "node_modules/@dojoengine/torii-client": {
      "version": "1.5.14",
      "resolved": "https://registry.npmjs.org/@dojoengine/torii-client/-/torii-client-1.5.14.tgz",
      "integrity": "sha512-557pmBHba9FWQR2UcMSRYIXbpASeHvg+rTw/uj2dhrWx+/kbSmlt0UZOAXspW8BHV3zbY3CulgRBGrA2SO8OAQ==",
      "license": "MIT",
      "dependencies": {
        "@dojoengine/torii-wasm": "1.5.14"
      }
    },
    "node_modules/@dojoengine/torii-wasm": {
      "version": "1.5.14",
      "resolved": "https://registry.npmjs.org/@dojoengine/torii-wasm/-/torii-wasm-1.5.14.tgz",
      "integrity": "sha512-kWtmw7hQgE3Iz1skwb7BKnRQx3fhDVNVq9aSLelT3V3OG97RzMqnhtockBvFu64ZGqV2zoC6P4pKKKxiJNERZg==",
      "license": "MIT"
    },
    "node_modules/@dojoengine/utils": {
      "version": "1.5.14",
      "resolved": "https://registry.npmjs.org/@dojoengine/utils/-/utils-1.5.14.tgz",
      "integrity": "sha512-QpKvBlzEb6rxVxCCNBh5xY8GP1XmoLjCSa90XUwIhdmHKxgVd3o++2o3b0i51MYrDsYjlChLB+6WMoTBdKRoYQ==",
      "license": "MIT",
      "dependencies": {
        "@dojoengine/recs": "2.0.13",
        "@latticexyz/utils": "^2.2.8",
        "mathjs": "^12.4.3",
        "micro-starknet": "^0.2.3"
      },
      "peerDependencies": {
        "starknet": "6.23.1"
      }
    },
    "node_modules/@dojoengine/utils/node_modules/@latticexyz/utils": {
      "version": "2.2.21",
      "resolved": "https://registry.npmjs.org/@latticexyz/utils/-/utils-2.2.21.tgz",
      "integrity": "sha512-wQMBIxwrt3vuUF7xkvwZuLuptTSnl8K1y5J1cdfKJPip4fEtbxVT0m9q5bECprvYptRZu619aaOyXdKFwm4aEA==",
      "license": "MIT",
      "dependencies": {
        "mobx": "^6.7.0",
        "proxy-deep": "^3.1.1",
        "rxjs": "7.5.5"
      }
    },
    "node_modules/@esbuild/aix-ppc64": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/@esbuild/aix-ppc64/-/aix-ppc64-0.21.5.tgz",
      "integrity": "sha512-1SDgH6ZSPTlggy1yI6+Dbkiz8xzpHJEVAlF/AM1tHPLsf5STom9rwtjE4hKAF20FfXXNTFqEYXyJNWh1GiZedQ==",
      "cpu": [
        "ppc64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "aix"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/android-arm": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/@esbuild/android-arm/-/android-arm-0.21.5.tgz",
      "integrity": "sha512-vCPvzSjpPHEi1siZdlvAlsPxXl7WbOVUBBAowWug4rJHb68Ox8KualB+1ocNvT5fjv6wpkX6o/iEpbDrf68zcg==",
      "cpu": [
        "arm"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "android"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/android-arm64": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/@esbuild/android-arm64/-/android-arm64-0.21.5.tgz",
      "integrity": "sha512-c0uX9VAUBQ7dTDCjq+wdyGLowMdtR/GoC2U5IYk/7D1H1JYC0qseD7+11iMP2mRLN9RcCMRcjC4YMclCzGwS/A==",
      "cpu": [
        "arm64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "android"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/android-x64": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/@esbuild/android-x64/-/android-x64-0.21.5.tgz",
      "integrity": "sha512-D7aPRUUNHRBwHxzxRvp856rjUHRFW1SdQATKXH2hqA0kAZb1hKmi02OpYRacl0TxIGz/ZmXWlbZgjwWYaCakTA==",
      "cpu": [
        "x64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "android"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/darwin-arm64": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/@esbuild/darwin-arm64/-/darwin-arm64-0.21.5.tgz",
      "integrity": "sha512-DwqXqZyuk5AiWWf3UfLiRDJ5EDd49zg6O9wclZ7kUMv2WRFr4HKjXp/5t8JZ11QbQfUS6/cRCKGwYhtNAY88kQ==",
      "cpu": [
        "arm64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/darwin-x64": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/@esbuild/darwin-x64/-/darwin-x64-0.21.5.tgz",
      "integrity": "sha512-se/JjF8NlmKVG4kNIuyWMV/22ZaerB+qaSi5MdrXtd6R08kvs2qCN4C09miupktDitvh8jRFflwGFBQcxZRjbw==",
      "cpu": [
        "x64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/freebsd-arm64": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/@esbuild/freebsd-arm64/-/freebsd-arm64-0.21.5.tgz",
      "integrity": "sha512-5JcRxxRDUJLX8JXp/wcBCy3pENnCgBR9bN6JsY4OmhfUtIHe3ZW0mawA7+RDAcMLrMIZaf03NlQiX9DGyB8h4g==",
      "cpu": [
        "arm64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "freebsd"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/freebsd-x64": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/@esbuild/freebsd-x64/-/freebsd-x64-0.21.5.tgz",
      "integrity": "sha512-J95kNBj1zkbMXtHVH29bBriQygMXqoVQOQYA+ISs0/2l3T9/kj42ow2mpqerRBxDJnmkUDCaQT/dfNXWX/ZZCQ==",
      "cpu": [
        "x64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "freebsd"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/linux-arm": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-arm/-/linux-arm-0.21.5.tgz",
      "integrity": "sha512-bPb5AHZtbeNGjCKVZ9UGqGwo8EUu4cLq68E95A53KlxAPRmUyYv2D6F0uUI65XisGOL1hBP5mTronbgo+0bFcA==",
      "cpu": [
        "arm"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/linux-arm64": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-arm64/-/linux-arm64-0.21.5.tgz",
      "integrity": "sha512-ibKvmyYzKsBeX8d8I7MH/TMfWDXBF3db4qM6sy+7re0YXya+K1cem3on9XgdT2EQGMu4hQyZhan7TeQ8XkGp4Q==",
      "cpu": [
        "arm64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/linux-ia32": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-ia32/-/linux-ia32-0.21.5.tgz",
      "integrity": "sha512-YvjXDqLRqPDl2dvRODYmmhz4rPeVKYvppfGYKSNGdyZkA01046pLWyRKKI3ax8fbJoK5QbxblURkwK/MWY18Tg==",
      "cpu": [
        "ia32"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/linux-loong64": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-loong64/-/linux-loong64-0.21.5.tgz",
      "integrity": "sha512-uHf1BmMG8qEvzdrzAqg2SIG/02+4/DHB6a9Kbya0XDvwDEKCoC8ZRWI5JJvNdUjtciBGFQ5PuBlpEOXQj+JQSg==",
      "cpu": [
        "loong64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/linux-mips64el": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-mips64el/-/linux-mips64el-0.21.5.tgz",
      "integrity": "sha512-IajOmO+KJK23bj52dFSNCMsz1QP1DqM6cwLUv3W1QwyxkyIWecfafnI555fvSGqEKwjMXVLokcV5ygHW5b3Jbg==",
      "cpu": [
        "mips64el"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/linux-ppc64": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-ppc64/-/linux-ppc64-0.21.5.tgz",
      "integrity": "sha512-1hHV/Z4OEfMwpLO8rp7CvlhBDnjsC3CttJXIhBi+5Aj5r+MBvy4egg7wCbe//hSsT+RvDAG7s81tAvpL2XAE4w==",
      "cpu": [
        "ppc64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/linux-riscv64": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-riscv64/-/linux-riscv64-0.21.5.tgz",
      "integrity": "sha512-2HdXDMd9GMgTGrPWnJzP2ALSokE/0O5HhTUvWIbD3YdjME8JwvSCnNGBnTThKGEB91OZhzrJ4qIIxk/SBmyDDA==",
      "cpu": [
        "riscv64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/linux-s390x": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-s390x/-/linux-s390x-0.21.5.tgz",
      "integrity": "sha512-zus5sxzqBJD3eXxwvjN1yQkRepANgxE9lgOW2qLnmr8ikMTphkjgXu1HR01K4FJg8h1kEEDAqDcZQtbrRnB41A==",
      "cpu": [
        "s390x"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/linux-x64": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-x64/-/linux-x64-0.21.5.tgz",
      "integrity": "sha512-1rYdTpyv03iycF1+BhzrzQJCdOuAOtaqHTWJZCWvijKD2N5Xu0TtVC8/+1faWqcP9iBCWOmjmhoH94dH82BxPQ==",
      "cpu": [
        "x64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/netbsd-x64": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/@esbuild/netbsd-x64/-/netbsd-x64-0.21.5.tgz",
      "integrity": "sha512-Woi2MXzXjMULccIwMnLciyZH4nCIMpWQAs049KEeMvOcNADVxo0UBIQPfSmxB3CWKedngg7sWZdLvLczpe0tLg==",
      "cpu": [
        "x64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "netbsd"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/openbsd-x64": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/@esbuild/openbsd-x64/-/openbsd-x64-0.21.5.tgz",
      "integrity": "sha512-HLNNw99xsvx12lFBUwoT8EVCsSvRNDVxNpjZ7bPn947b8gJPzeHWyNVhFsaerc0n3TsbOINvRP2byTZ5LKezow==",
      "cpu": [
        "x64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "openbsd"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/sunos-x64": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/@esbuild/sunos-x64/-/sunos-x64-0.21.5.tgz",
      "integrity": "sha512-6+gjmFpfy0BHU5Tpptkuh8+uw3mnrvgs+dSPQXQOv3ekbordwnzTVEb4qnIvQcYXq6gzkyTnoZ9dZG+D4garKg==",
      "cpu": [
        "x64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "sunos"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/win32-arm64": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/@esbuild/win32-arm64/-/win32-arm64-0.21.5.tgz",
      "integrity": "sha512-Z0gOTd75VvXqyq7nsl93zwahcTROgqvuAcYDUr+vOv8uHhNSKROyU961kgtCD1e95IqPKSQKH7tBTslnS3tA8A==",
      "cpu": [
        "arm64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/win32-ia32": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/@esbuild/win32-ia32/-/win32-ia32-0.21.5.tgz",
      "integrity": "sha512-SWXFF1CL2RVNMaVs+BBClwtfZSvDgtL//G/smwAc5oVK/UPu2Gu9tIaRgFmYFFKrmg3SyAjSrElf0TiJ1v8fYA==",
      "cpu": [
        "ia32"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/win32-x64": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/@esbuild/win32-x64/-/win32-x64-0.21.5.tgz",
      "integrity": "sha512-tQd/1efJuzPC6rCFwEvLtci/xNFcTZknmXs98FYDfGE4wP9ClFV98nyKrzJKVPMhdDnjzLhdUyMX4PsQAPjwIw==",
      "cpu": [
        "x64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@eslint-community/eslint-utils": {
      "version": "4.7.0",
      "resolved": "https://registry.npmjs.org/@eslint-community/eslint-utils/-/eslint-utils-4.7.0.tgz",
      "integrity": "sha512-dyybb3AcajC7uha6CvhdVRJqaKyn7w2YKqKyAN37NKYgZT36w+iRb0Dymmc5qEJ549c/S31cMMSFd75bteCpCw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "eslint-visitor-keys": "^3.4.3"
      },
      "engines": {
        "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
      },
      "funding": {
        "url": "https://opencollective.com/eslint"
      },
      "peerDependencies": {
        "eslint": "^6.0.0 || ^7.0.0 || >=8.0.0"
      }
    },
    "node_modules/@eslint-community/eslint-utils/node_modules/eslint-visitor-keys": {
      "version": "3.4.3",
      "resolved": "https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-3.4.3.tgz",
      "integrity": "sha512-wpc+LXeiyiisxPlEkUzU6svyS1frIO3Mgxj1fdy7Pm8Ygzguax2N3Fa/D/ag1WqbOprdI+uY6wMUl8/a2G+iag==",
      "dev": true,
      "license": "Apache-2.0",
      "engines": {
        "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
      },
      "funding": {
        "url": "https://opencollective.com/eslint"
      }
    },
    "node_modules/@eslint-community/regexpp": {
      "version": "4.12.1",
      "resolved": "https://registry.npmjs.org/@eslint-community/regexpp/-/regexpp-4.12.1.tgz",
      "integrity": "sha512-CCZCDJuduB9OUkFkY2IgppNZMi2lBQgD2qzwXkEia16cge2pijY/aXi96CJMquDMn3nJdlPV1A5KrJEXwfLNzQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": "^12.0.0 || ^14.0.0 || >=16.0.0"
      }
    },
    "node_modules/@eslint/config-array": {
      "version": "0.20.1",
      "resolved": "https://registry.npmjs.org/@eslint/config-array/-/config-array-0.20.1.tgz",
      "integrity": "sha512-OL0RJzC/CBzli0DrrR31qzj6d6i6Mm3HByuhflhl4LOBiWxN+3i6/t/ZQQNii4tjksXi8r2CRW1wMpWA2ULUEw==",
      "dev": true,
      "license": "Apache-2.0",
      "dependencies": {
        "@eslint/object-schema": "^2.1.6",
        "debug": "^4.3.1",
        "minimatch": "^3.1.2"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      }
    },
    "node_modules/@eslint/config-helpers": {
      "version": "0.2.3",
      "resolved": "https://registry.npmjs.org/@eslint/config-helpers/-/config-helpers-0.2.3.tgz",
      "integrity": "sha512-u180qk2Um1le4yf0ruXH3PYFeEZeYC3p/4wCTKrr2U1CmGdzGi3KtY0nuPDH48UJxlKCC5RDzbcbh4X0XlqgHg==",
      "dev": true,
      "license": "Apache-2.0",
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      }
    },
    "node_modules/@eslint/core": {
      "version": "0.14.0",
      "resolved": "https://registry.npmjs.org/@eslint/core/-/core-0.14.0.tgz",
      "integrity": "sha512-qIbV0/JZr7iSDjqAc60IqbLdsj9GDt16xQtWD+B78d/HAlvysGdZZ6rpJHGAc2T0FQx1X6thsSPdnoiGKdNtdg==",
      "dev": true,
      "license": "Apache-2.0",
      "dependencies": {
        "@types/json-schema": "^7.0.15"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      }
    },
    "node_modules/@eslint/eslintrc": {
      "version": "3.3.1",
      "resolved": "https://registry.npmjs.org/@eslint/eslintrc/-/eslintrc-3.3.1.tgz",
      "integrity": "sha512-gtF186CXhIl1p4pJNGZw8Yc6RlshoePRvE0X91oPGb3vZ8pM3qOS9W9NGPat9LziaBV7XrJWGylNQXkGcnM3IQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "ajv": "^6.12.4",
        "debug": "^4.3.2",
        "espree": "^10.0.1",
        "globals": "^14.0.0",
        "ignore": "^5.2.0",
        "import-fresh": "^3.2.1",
        "js-yaml": "^4.1.0",
        "minimatch": "^3.1.2",
        "strip-json-comments": "^3.1.1"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "url": "https://opencollective.com/eslint"
      }
    },
    "node_modules/@eslint/eslintrc/node_modules/globals": {
      "version": "14.0.0",
      "resolved": "https://registry.npmjs.org/globals/-/globals-14.0.0.tgz",
      "integrity": "sha512-oahGvuMGQlPw/ivIYBjVSrWAfWLBeku5tpPE2fOPLi+WHffIWbuh2tCjhyQhTBPMf5E9jDEH4FOmTYgYwbKwtQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=18"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/@eslint/js": {
      "version": "9.29.0",
      "resolved": "https://registry.npmjs.org/@eslint/js/-/js-9.29.0.tgz",
      "integrity": "sha512-3PIF4cBw/y+1u2EazflInpV+lYsSG0aByVIQzAgb1m1MhHFSbqTyNqtBKHgWf/9Ykud+DhILS9EGkmekVhbKoQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "url": "https://eslint.org/donate"
      }
    },
    "node_modules/@eslint/object-schema": {
      "version": "2.1.6",
      "resolved": "https://registry.npmjs.org/@eslint/object-schema/-/object-schema-2.1.6.tgz",
      "integrity": "sha512-RBMg5FRL0I0gs51M/guSAj5/e14VQ4tpZnQNWwuDT66P14I43ItmPfIZRhO9fUVIPOAQXU47atlywZ/czoqFPA==",
      "dev": true,
      "license": "Apache-2.0",
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      }
    },
    "node_modules/@eslint/plugin-kit": {
      "version": "0.3.2",
      "resolved": "https://registry.npmjs.org/@eslint/plugin-kit/-/plugin-kit-0.3.2.tgz",
      "integrity": "sha512-4SaFZCNfJqvk/kenHpI8xvN42DMaoycy4PzKc5otHxRswww1kAt82OlBuwRVLofCACCTZEcla2Ydxv8scMXaTg==",
      "dev": true,
      "license": "Apache-2.0",
      "dependencies": {
        "@eslint/core": "^0.15.0",
        "levn": "^0.4.1"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      }
    },
    "node_modules/@eslint/plugin-kit/node_modules/@eslint/core": {
      "version": "0.15.0",
      "resolved": "https://registry.npmjs.org/@eslint/core/-/core-0.15.0.tgz",
      "integrity": "sha512-b7ePw78tEWWkpgZCDYkbqDOP8dmM6qe+AOC6iuJqlq1R/0ahMAeH3qynpnqKFGkMltrp44ohV4ubGyvLX28tzw==",
      "dev": true,
      "license": "Apache-2.0",
      "dependencies": {
        "@types/json-schema": "^7.0.15"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      }
    },
    "node_modules/@ethereumjs/common": {
      "version": "3.2.0",
      "resolved": "https://registry.npmjs.org/@ethereumjs/common/-/common-3.2.0.tgz",
      "integrity": "sha512-pksvzI0VyLgmuEF2FA/JR/4/y6hcPq8OUail3/AvycBaW1d5VSauOZzqGvJ3RTmR4MU35lWE8KseKOsEhrFRBA==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "@ethereumjs/util": "^8.1.0",
        "crc-32": "^1.2.0"
      }
    },
    "node_modules/@ethereumjs/rlp": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/@ethereumjs/rlp/-/rlp-4.0.1.tgz",
      "integrity": "sha512-tqsQiBQDQdmPWE1xkkBq4rlSW5QZpLOUJ5RJh2/9fug+q9tnUhuZoVLk7s0scUIKTOzEtR72DFBXI4WiZcMpvw==",
      "license": "MPL-2.0",
      "peer": true,
      "bin": {
        "rlp": "bin/rlp"
      },
      "engines": {
        "node": ">=14"
      }
    },
    "node_modules/@ethereumjs/tx": {
      "version": "4.2.0",
      "resolved": "https://registry.npmjs.org/@ethereumjs/tx/-/tx-4.2.0.tgz",
      "integrity": "sha512-1nc6VO4jtFd172BbSnTnDQVr9IYBFl1y4xPzZdtkrkKIncBCkdbgfdRV+MiTkJYAtTxvV12GRZLqBFT1PNK6Yw==",
      "license": "MPL-2.0",
      "peer": true,
      "dependencies": {
        "@ethereumjs/common": "^3.2.0",
        "@ethereumjs/rlp": "^4.0.1",
        "@ethereumjs/util": "^8.1.0",
        "ethereum-cryptography": "^2.0.0"
      },
      "engines": {
        "node": ">=14"
      }
    },
    "node_modules/@ethereumjs/util": {
      "version": "8.1.0",
      "resolved": "https://registry.npmjs.org/@ethereumjs/util/-/util-8.1.0.tgz",
      "integrity": "sha512-zQ0IqbdX8FZ9aw11vP+dZkKDkS+kgIvQPHnSAXzP9pLu+Rfu3D3XEeLbicvoXJTYnhZiPmsZUxgdzXwNKxRPbA==",
      "license": "MPL-2.0",
      "peer": true,
      "dependencies": {
        "@ethereumjs/rlp": "^4.0.1",
        "ethereum-cryptography": "^2.0.0",
        "micro-ftch": "^0.3.1"
      },
      "engines": {
        "node": ">=14"
      }
    },
    "node_modules/@hpke/chacha20poly1305": {
      "version": "1.6.2",
      "resolved": "https://registry.npmjs.org/@hpke/chacha20poly1305/-/chacha20poly1305-1.6.2.tgz",
      "integrity": "sha512-LAzcHlX+GfrVqwjx+EqqHmEdkzE5YYIlzZz4Q1uN2Keq81iOB9IveJpufhsbyB1zw7W5/Y4gJ6dfAZq4gFO/sA==",
      "license": "MIT",
      "dependencies": {
        "@hpke/common": "^1.7.2",
        "@noble/ciphers": "^1.2.1"
      },
      "engines": {
        "node": ">=16.0.0"
      }
    },
    "node_modules/@hpke/chacha20poly1305/node_modules/@noble/ciphers": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/@noble/ciphers/-/ciphers-1.3.0.tgz",
      "integrity": "sha512-2I0gnIVPtfnMw9ee9h1dJG7tp81+8Ob3OJb3Mv37rx5L40/b0i7djjCVvGOVqc9AEIQyvyu1i6ypKdFw8R8gQw==",
      "license": "MIT",
      "engines": {
        "node": "^14.21.3 || >=16"
      },
      "funding": {
        "url": "https://paulmillr.com/funding/"
      }
    },
    "node_modules/@hpke/common": {
      "version": "1.7.3",
      "resolved": "https://registry.npmjs.org/@hpke/common/-/common-1.7.3.tgz",
      "integrity": "sha512-6wbbjlOPWZb2MnBETFNJRMcnEcB8jXMnjepGUs8412xEQX2Prds1n1yibvaxwUmQiKsHvjkGX+vTlWjqiiSiKw==",
      "license": "MIT",
      "engines": {
        "node": ">=16.0.0"
      }
    },
    "node_modules/@hpke/core": {
      "version": "1.7.2",
      "resolved": "https://registry.npmjs.org/@hpke/core/-/core-1.7.2.tgz",
      "integrity": "sha512-WPsy/Wp1oF+47EVfQdXG55TGS+rOKAAZJ4W/4BFnTENGGq/EAJeX1h0ooCarkqWrJsREsrpa4EiIZkz1m8hMOA==",
      "license": "MIT",
      "dependencies": {
        "@hpke/common": "^1.7.2"
      },
      "engines": {
        "node": ">=16.0.0"
      }
    },
    "node_modules/@hpke/dhkem-x25519": {
      "version": "1.6.2",
      "resolved": "https://registry.npmjs.org/@hpke/dhkem-x25519/-/dhkem-x25519-1.6.2.tgz",
      "integrity": "sha512-xL//FDIY0ai3/JZyr3UI/jaw8eLEcs+SU7Z9K5uxO8R4xzvwOfGajI4VE9GH+QXGMrHncQDLIDPX9pcdqkGSvQ==",
      "license": "MIT",
      "dependencies": {
        "@hpke/common": "^1.7.2",
        "@noble/curves": "^1.8.1",
        "@noble/hashes": "^1.7.1"
      },
      "engines": {
        "node": ">=16.0.0"
      }
    },
    "node_modules/@hpke/dhkem-x448": {
      "version": "1.6.2",
      "resolved": "https://registry.npmjs.org/@hpke/dhkem-x448/-/dhkem-x448-1.6.2.tgz",
      "integrity": "sha512-uA5DJczlkjpvfjHUvLTk9Ux7ET5ERnkFR0KxvdRHtArN72Bzf4MKVSB/9hqKB/rD+zx8oWIy9KHrlYxj+0DS7g==",
      "license": "MIT",
      "dependencies": {
        "@hpke/common": "^1.7.2",
        "@noble/curves": "^1.8.1",
        "@noble/hashes": "^1.7.1"
      },
      "engines": {
        "node": ">=16.0.0"
      }
    },
    "node_modules/@humanfs/core": {
      "version": "0.19.1",
      "resolved": "https://registry.npmjs.org/@humanfs/core/-/core-0.19.1.tgz",
      "integrity": "sha512-5DyQ4+1JEUzejeK1JGICcideyfUbGixgS9jNgex5nqkW+cY7WZhxBigmieN5Qnw9ZosSNVC9KQKyb+GUaGyKUA==",
      "dev": true,
      "license": "Apache-2.0",
      "engines": {
        "node": ">=18.18.0"
      }
    },
    "node_modules/@humanfs/node": {
      "version": "0.16.6",
      "resolved": "https://registry.npmjs.org/@humanfs/node/-/node-0.16.6.tgz",
      "integrity": "sha512-YuI2ZHQL78Q5HbhDiBA1X4LmYdXCKCMQIfw0pw7piHJwyREFebJUvrQN4cMssyES6x+vfUbx1CIpaQUKYdQZOw==",
      "dev": true,
      "license": "Apache-2.0",
      "dependencies": {
        "@humanfs/core": "^0.19.1",
        "@humanwhocodes/retry": "^0.3.0"
      },
      "engines": {
        "node": ">=18.18.0"
      }
    },
    "node_modules/@humanfs/node/node_modules/@humanwhocodes/retry": {
      "version": "0.3.1",
      "resolved": "https://registry.npmjs.org/@humanwhocodes/retry/-/retry-0.3.1.tgz",
      "integrity": "sha512-JBxkERygn7Bv/GbN5Rv8Ul6LVknS+5Bp6RgDC/O8gEBU/yeH5Ui5C/OlWrTb6qct7LjjfT6Re2NxB0ln0yYybA==",
      "dev": true,
      "license": "Apache-2.0",
      "engines": {
        "node": ">=18.18"
      },
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/nzakas"
      }
    },
    "node_modules/@humanwhocodes/module-importer": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/@humanwhocodes/module-importer/-/module-importer-1.0.1.tgz",
      "integrity": "sha512-bxveV4V8v5Yb4ncFTT3rPSgZBOpCkjfK0y4oVVVJwIuDVBRMDXrPyXRL988i5ap9m9bnyEEjWfm5WkBmtffLfA==",
      "dev": true,
      "license": "Apache-2.0",
      "engines": {
        "node": ">=12.22"
      },
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/nzakas"
      }
    },
    "node_modules/@humanwhocodes/retry": {
      "version": "0.4.3",
      "resolved": "https://registry.npmjs.org/@humanwhocodes/retry/-/retry-0.4.3.tgz",
      "integrity": "sha512-bV0Tgo9K4hfPCek+aMAn81RppFKv2ySDQeMoSZuvTASywNTnVJCArCZE2FWqpvIatKu7VMRLWlR1EazvVhDyhQ==",
      "dev": true,
      "license": "Apache-2.0",
      "engines": {
        "node": ">=18.18"
      },
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/nzakas"
      }
    },
    "node_modules/@isaacs/cliui": {
      "version": "8.0.2",
      "resolved": "https://registry.npmjs.org/@isaacs/cliui/-/cliui-8.0.2.tgz",
      "integrity": "sha512-O8jcjabXaleOG9DQ0+ARXWZBTfnP4WNAqzuiJK7ll44AmxGKv/J2M4TPjxjY3znBCfvBXFzucm1twdyFybFqEA==",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "string-width": "^5.1.2",
        "string-width-cjs": "npm:string-width@^4.2.0",
        "strip-ansi": "^7.0.1",
        "strip-ansi-cjs": "npm:strip-ansi@^6.0.1",
        "wrap-ansi": "^8.1.0",
        "wrap-ansi-cjs": "npm:wrap-ansi@^7.0.0"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@isaacs/cliui/node_modules/ansi-regex": {
      "version": "6.1.0",
      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-6.1.0.tgz",
      "integrity": "sha512-7HSX4QQb4CspciLpVFwyRe79O3xsIZDDLER21kERQ71oaPodF8jL725AgJMFAYbooIqolJoRLuM81SpeUkpkvA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/chalk/ansi-regex?sponsor=1"
      }
    },
    "node_modules/@isaacs/cliui/node_modules/ansi-styles": {
      "version": "6.2.1",
      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-6.2.1.tgz",
      "integrity": "sha512-bN798gFfQX+viw3R7yrGWRqnrN2oRkEkUjjl4JNn4E8GxxbjtG3FbrEIIY3l8/hrwUwIeCZvi4QuOTP4MErVug==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/chalk/ansi-styles?sponsor=1"
      }
    },
    "node_modules/@isaacs/cliui/node_modules/emoji-regex": {
      "version": "9.2.2",
      "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-9.2.2.tgz",
      "integrity": "sha512-L18DaJsXSUk2+42pv8mLs5jJT2hqFkFE4j21wOmgbUqsZ2hL72NsUU785g9RXgo3s0ZNgVl42TiHp3ZtOv/Vyg==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/@isaacs/cliui/node_modules/string-width": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/string-width/-/string-width-5.1.2.tgz",
      "integrity": "sha512-HnLOCR3vjcY8beoNLtcjZ5/nxn2afmME6lhrDrebokqMap+XbeW8n9TXpPDOqdGK5qcI3oT0GKTW6wC7EMiVqA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "eastasianwidth": "^0.2.0",
        "emoji-regex": "^9.2.2",
        "strip-ansi": "^7.0.1"
      },
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/@isaacs/cliui/node_modules/strip-ansi": {
      "version": "7.1.0",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-7.1.0.tgz",
      "integrity": "sha512-iq6eVVI64nQQTRYq2KtEg2d2uU7LElhTJwsH4YzIHZshxlgZms/wIc4VoDQTlG/IvVIrBKG06CrZnp0qv7hkcQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "ansi-regex": "^6.0.1"
      },
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/chalk/strip-ansi?sponsor=1"
      }
    },
    "node_modules/@isaacs/cliui/node_modules/wrap-ansi": {
      "version": "8.1.0",
      "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-8.1.0.tgz",
      "integrity": "sha512-si7QWI6zUMq56bESFvagtmzMdGOtoxfR+Sez11Mobfc7tm+VkUckk9bW2UeffTGVUbOksxmSw0AA2gs8g71NCQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "ansi-styles": "^6.1.0",
        "string-width": "^5.0.1",
        "strip-ansi": "^7.0.1"
      },
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/chalk/wrap-ansi?sponsor=1"
      }
    },
    "node_modules/@jridgewell/gen-mapping": {
      "version": "0.3.8",
      "resolved": "https://registry.npmjs.org/@jridgewell/gen-mapping/-/gen-mapping-0.3.8.tgz",
      "integrity": "sha512-imAbBGkb+ebQyxKgzv5Hu2nmROxoDOXHh80evxdoXNOrvAnVx7zimzc1Oo5h9RlfV4vPXaE2iM5pOFbvOCClWA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@jridgewell/set-array": "^1.2.1",
        "@jridgewell/sourcemap-codec": "^1.4.10",
        "@jridgewell/trace-mapping": "^0.3.24"
      },
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/@jridgewell/resolve-uri": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/@jridgewell/resolve-uri/-/resolve-uri-3.1.2.tgz",
      "integrity": "sha512-bRISgCIjP20/tbWSPWMEi54QVPRZExkuD9lJL+UIxUKtwVJA8wW1Trb1jMs1RFXo1CBTNZ/5hpC9QvmKWdopKw==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/@jridgewell/set-array": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/@jridgewell/set-array/-/set-array-1.2.1.tgz",
      "integrity": "sha512-R8gLRTZeyp03ymzP/6Lil/28tGeGEzhx1q2k703KGWRAI1VdvPIXdG70VJc2pAMw3NA6JKL5hhFu1sJX0Mnn/A==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/@jridgewell/sourcemap-codec": {
      "version": "1.5.0",
      "resolved": "https://registry.npmjs.org/@jridgewell/sourcemap-codec/-/sourcemap-codec-1.5.0.tgz",
      "integrity": "sha512-gv3ZRaISU3fjPAgNsriBRqGWQL6quFx04YMPW/zD8XMLsU32mhCCbfbO6KZFLjvYpCZ8zyDEgqsgf+PwPaM7GQ==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/@jridgewell/trace-mapping": {
      "version": "0.3.25",
      "resolved": "https://registry.npmjs.org/@jridgewell/trace-mapping/-/trace-mapping-0.3.25.tgz",
      "integrity": "sha512-vNk6aEwybGtawWmy/PzwnGDOjCkLWSD2wqvjGGAgOAwCGWySYXfYoxt00IJkTF+8Lb57DwOb3Aa0o9CApepiYQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@jridgewell/resolve-uri": "^3.1.0",
        "@jridgewell/sourcemap-codec": "^1.4.14"
      }
    },
    "node_modules/@latticexyz/schema-type": {
      "version": "2.0.12",
      "resolved": "https://registry.npmjs.org/@latticexyz/schema-type/-/schema-type-2.0.12.tgz",
      "integrity": "sha512-QDnHU3iCQmY8e24CGR3hKUEprHrrNUfFTiUaSuj3J0d/x9iaIafYT2+dWydxgcpCmK4Xl7PgurvJiAVCmcLokg==",
      "license": "MIT",
      "dependencies": {
        "abitype": "1.0.0",
        "viem": "2.9.20"
      }
    },
    "node_modules/@latticexyz/schema-type/node_modules/@adraffy/ens-normalize": {
      "version": "1.10.0",
      "resolved": "https://registry.npmjs.org/@adraffy/ens-normalize/-/ens-normalize-1.10.0.tgz",
      "integrity": "sha512-nA9XHtlAkYfJxY7bce8DcN7eKxWWCWkU+1GR9d+U6MbNpfwQp8TI7vqOsBsMcHoT4mBu2kypKoSKnghEzOOq5Q==",
      "license": "MIT"
    },
    "node_modules/@latticexyz/schema-type/node_modules/@noble/curves": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/@noble/curves/-/curves-1.2.0.tgz",
      "integrity": "sha512-oYclrNgRaM9SsBUBVbb8M6DTV7ZHRTKugureoYEncY5c65HOmRzvSiTE3y5CYaPYJA/GVkrhXEoF0M3Ya9PMnw==",
      "license": "MIT",
      "dependencies": {
        "@noble/hashes": "1.3.2"
      },
      "funding": {
        "url": "https://paulmillr.com/funding/"
      }
    },
    "node_modules/@latticexyz/schema-type/node_modules/@noble/hashes": {
      "version": "1.3.2",
      "resolved": "https://registry.npmjs.org/@noble/hashes/-/hashes-1.3.2.tgz",
      "integrity": "sha512-MVC8EAQp7MvEcm30KWENFjgR+Mkmf+D189XJTkFIlwohU5hcBbn1ZkKq7KVTi2Hme3PMGF390DaL52beVrIihQ==",
      "license": "MIT",
      "engines": {
        "node": ">= 16"
      },
      "funding": {
        "url": "https://paulmillr.com/funding/"
      }
    },
    "node_modules/@latticexyz/schema-type/node_modules/@scure/base": {
      "version": "1.1.9",
      "resolved": "https://registry.npmjs.org/@scure/base/-/base-1.1.9.tgz",
      "integrity": "sha512-8YKhl8GHiNI/pU2VMaofa2Tor7PJRAjwQLBBuilkJ9L5+13yVbC7JO/wS7piioAvPSwR3JKM1IJ/u4xQzbcXKg==",
      "license": "MIT",
      "funding": {
        "url": "https://paulmillr.com/funding/"
      }
    },
    "node_modules/@latticexyz/schema-type/node_modules/@scure/bip32": {
      "version": "1.3.2",
      "resolved": "https://registry.npmjs.org/@scure/bip32/-/bip32-1.3.2.tgz",
      "integrity": "sha512-N1ZhksgwD3OBlwTv3R6KFEcPojl/W4ElJOeCZdi+vuI5QmTFwLq3OFf2zd2ROpKvxFdgZ6hUpb0dx9bVNEwYCA==",
      "license": "MIT",
      "dependencies": {
        "@noble/curves": "~1.2.0",
        "@noble/hashes": "~1.3.2",
        "@scure/base": "~1.1.2"
      },
      "funding": {
        "url": "https://paulmillr.com/funding/"
      }
    },
    "node_modules/@latticexyz/schema-type/node_modules/@scure/bip39": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/@scure/bip39/-/bip39-1.2.1.tgz",
      "integrity": "sha512-Z3/Fsz1yr904dduJD0NpiyRHhRYHdcnyh73FZWiV+/qhWi83wNJ3NWolYqCEN+ZWsUz2TWwajJggcRE9r1zUYg==",
      "license": "MIT",
      "dependencies": {
        "@noble/hashes": "~1.3.0",
        "@scure/base": "~1.1.0"
      },
      "funding": {
        "url": "https://paulmillr.com/funding/"
      }
    },
    "node_modules/@latticexyz/schema-type/node_modules/isows": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/isows/-/isows-1.0.3.tgz",
      "integrity": "sha512-2cKei4vlmg2cxEjm3wVSqn8pcoRF/LX/wpifuuNquFO4SQmPwarClT+SUCA2lt+l581tTeZIPIZuIDo2jWN1fg==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/wagmi-dev"
        }
      ],
      "license": "MIT",
      "peerDependencies": {
        "ws": "*"
      }
    },
    "node_modules/@latticexyz/schema-type/node_modules/viem": {
      "version": "2.9.20",
      "resolved": "https://registry.npmjs.org/viem/-/viem-2.9.20.tgz",
      "integrity": "sha512-PHb1MrBHMrSZ8Ayuk3Y/6wUTcMbzlACQaM6AJBSv9kRKX3xYSZ/kehi+gvS0swQJeAlTQ4eZM7jsHQJNAOarmg==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/wevm"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "@adraffy/ens-normalize": "1.10.0",
        "@noble/curves": "1.2.0",
        "@noble/hashes": "1.3.2",
        "@scure/bip32": "1.3.2",
        "@scure/bip39": "1.2.1",
        "abitype": "1.0.0",
        "isows": "1.0.3",
        "ws": "8.13.0"
      },
      "peerDependencies": {
        "typescript": ">=5.0.4"
      },
      "peerDependenciesMeta": {
        "typescript": {
          "optional": true
        }
      }
    },
    "node_modules/@latticexyz/schema-type/node_modules/ws": {
      "version": "8.13.0",
      "resolved": "https://registry.npmjs.org/ws/-/ws-8.13.0.tgz",
      "integrity": "sha512-x9vcZYTrFPC7aSIbj7sRCYo7L/Xb8Iy+pW0ng0wt2vCJv7M9HOMy0UoN3rr+IFC7hb7vXoqS+P9ktyLLLhO+LA==",
      "license": "MIT",
      "engines": {
        "node": ">=10.0.0"
      },
      "peerDependencies": {
        "bufferutil": "^4.0.1",
        "utf-8-validate": ">=5.0.2"
      },
      "peerDependenciesMeta": {
        "bufferutil": {
          "optional": true
        },
        "utf-8-validate": {
          "optional": true
        }
      }
    },
    "node_modules/@latticexyz/utils": {
      "version": "2.0.12",
      "resolved": "https://registry.npmjs.org/@latticexyz/utils/-/utils-2.0.12.tgz",
      "integrity": "sha512-AwniovUlWY7YL92Mjz/3R0V9g8c5wYg5t3agRmMZ9wgktUB6BYZC65n+sKp88wUuN3DrMLb51UFZOycGh0JD2w==",
      "license": "MIT",
      "dependencies": {
        "mobx": "^6.7.0",
        "proxy-deep": "^3.1.1",
        "rxjs": "7.5.5"
      }
    },
    "node_modules/@lit-labs/ssr-dom-shim": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/@lit-labs/ssr-dom-shim/-/ssr-dom-shim-1.3.0.tgz",
      "integrity": "sha512-nQIWonJ6eFAvUUrSlwyHDm/aE8PBDu5kRpL0vHMg6K8fK3Diq1xdPjTnsJSwxABhaZ+5eBi1btQB5ShUTKo4nQ==",
      "license": "BSD-3-Clause"
    },
    "node_modules/@lit/reactive-element": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/@lit/reactive-element/-/reactive-element-2.1.0.tgz",
      "integrity": "sha512-L2qyoZSQClcBmq0qajBVbhYEcG6iK0XfLn66ifLe/RfC0/ihpc+pl0Wdn8bJ8o+hj38cG0fGXRgSS20MuXn7qA==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "@lit-labs/ssr-dom-shim": "^1.2.0"
      }
    },
    "node_modules/@mediapipe/tasks-vision": {
      "version": "0.10.17",
      "resolved": "https://registry.npmjs.org/@mediapipe/tasks-vision/-/tasks-vision-0.10.17.tgz",
      "integrity": "sha512-CZWV/q6TTe8ta61cZXjfnnHsfWIdFhms03M9T7Cnd5y2mdpylJM0rF1qRq+wsQVRMLz1OYPVEBU9ph2Bx8cxrg==",
      "license": "Apache-2.0"
    },
    "node_modules/@metamask/json-rpc-engine": {
      "version": "8.0.2",
      "resolved": "https://registry.npmjs.org/@metamask/json-rpc-engine/-/json-rpc-engine-8.0.2.tgz",
      "integrity": "sha512-IoQPmql8q7ABLruW7i4EYVHWUbF74yrp63bRuXV5Zf9BQwcn5H9Ww1eLtROYvI1bUXwOiHZ6qT5CWTrDc/t/AA==",
      "license": "ISC",
      "peer": true,
      "dependencies": {
        "@metamask/rpc-errors": "^6.2.1",
        "@metamask/safe-event-emitter": "^3.0.0",
        "@metamask/utils": "^8.3.0"
      },
      "engines": {
        "node": ">=16.0.0"
      }
    },
    "node_modules/@metamask/json-rpc-middleware-stream": {
      "version": "7.0.2",
      "resolved": "https://registry.npmjs.org/@metamask/json-rpc-middleware-stream/-/json-rpc-middleware-stream-7.0.2.tgz",
      "integrity": "sha512-yUdzsJK04Ev98Ck4D7lmRNQ8FPioXYhEUZOMS01LXW8qTvPGiRVXmVltj2p4wrLkh0vW7u6nv0mNl5xzC5Qmfg==",
      "license": "ISC",
      "peer": true,
      "dependencies": {
        "@metamask/json-rpc-engine": "^8.0.2",
        "@metamask/safe-event-emitter": "^3.0.0",
        "@metamask/utils": "^8.3.0",
        "readable-stream": "^3.6.2"
      },
      "engines": {
        "node": ">=16.0.0"
      }
    },
    "node_modules/@metamask/object-multiplex": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/@metamask/object-multiplex/-/object-multiplex-2.1.0.tgz",
      "integrity": "sha512-4vKIiv0DQxljcXwfpnbsXcfa5glMj5Zg9mqn4xpIWqkv6uJ2ma5/GtUfLFSxhlxnR8asRMv8dDmWya1Tc1sDFA==",
      "license": "ISC",
      "peer": true,
      "dependencies": {
        "once": "^1.4.0",
        "readable-stream": "^3.6.2"
      },
      "engines": {
        "node": "^16.20 || ^18.16 || >=20"
      }
    },
    "node_modules/@metamask/onboarding": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/@metamask/onboarding/-/onboarding-1.0.1.tgz",
      "integrity": "sha512-FqHhAsCI+Vacx2qa5mAFcWNSrTcVGMNjzxVgaX8ECSny/BJ9/vgXP9V7WF/8vb9DltPeQkxr+Fnfmm6GHfmdTQ==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "bowser": "^2.9.0"
      }
    },
    "node_modules/@metamask/providers": {
      "version": "16.1.0",
      "resolved": "https://registry.npmjs.org/@metamask/providers/-/providers-16.1.0.tgz",
      "integrity": "sha512-znVCvux30+3SaUwcUGaSf+pUckzT5ukPRpcBmy+muBLC0yaWnBcvDqGfcsw6CBIenUdFrVoAFa8B6jsuCY/a+g==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "@metamask/json-rpc-engine": "^8.0.1",
        "@metamask/json-rpc-middleware-stream": "^7.0.1",
        "@metamask/object-multiplex": "^2.0.0",
        "@metamask/rpc-errors": "^6.2.1",
        "@metamask/safe-event-emitter": "^3.1.1",
        "@metamask/utils": "^8.3.0",
        "detect-browser": "^5.2.0",
        "extension-port-stream": "^3.0.0",
        "fast-deep-equal": "^3.1.3",
        "is-stream": "^2.0.0",
        "readable-stream": "^3.6.2",
        "webextension-polyfill": "^0.10.0"
      },
      "engines": {
        "node": "^18.18 || >=20"
      }
    },
    "node_modules/@metamask/rpc-errors": {
      "version": "6.4.0",
      "resolved": "https://registry.npmjs.org/@metamask/rpc-errors/-/rpc-errors-6.4.0.tgz",
      "integrity": "sha512-1ugFO1UoirU2esS3juZanS/Fo8C8XYocCuBpfZI5N7ECtoG+zu0wF+uWZASik6CkO6w9n/Iebt4iI4pT0vptpg==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "@metamask/utils": "^9.0.0",
        "fast-safe-stringify": "^2.0.6"
      },
      "engines": {
        "node": ">=16.0.0"
      }
    },
    "node_modules/@metamask/rpc-errors/node_modules/@metamask/utils": {
      "version": "9.3.0",
      "resolved": "https://registry.npmjs.org/@metamask/utils/-/utils-9.3.0.tgz",
      "integrity": "sha512-w8CVbdkDrVXFJbfBSlDfafDR6BAkpDmv1bC1UJVCoVny5tW2RKAdn9i68Xf7asYT4TnUhl/hN4zfUiKQq9II4g==",
      "license": "ISC",
      "peer": true,
      "dependencies": {
        "@ethereumjs/tx": "^4.2.0",
        "@metamask/superstruct": "^3.1.0",
        "@noble/hashes": "^1.3.1",
        "@scure/base": "^1.1.3",
        "@types/debug": "^4.1.7",
        "debug": "^4.3.4",
        "pony-cause": "^2.1.10",
        "semver": "^7.5.4",
        "uuid": "^9.0.1"
      },
      "engines": {
        "node": ">=16.0.0"
      }
    },
    "node_modules/@metamask/rpc-errors/node_modules/uuid": {
      "version": "9.0.1",
      "resolved": "https://registry.npmjs.org/uuid/-/uuid-9.0.1.tgz",
      "integrity": "sha512-b+1eJOlsR9K8HJpow9Ok3fiWOWSIcIzXodvv0rQjVoOVNpWMpxf1wZNpt4y9h10odCNrqnYp1OBzRktckBe3sA==",
      "funding": [
        "https://github.com/sponsors/broofa",
        "https://github.com/sponsors/ctavan"
      ],
      "license": "MIT",
      "peer": true,
      "bin": {
        "uuid": "dist/bin/uuid"
      }
    },
    "node_modules/@metamask/safe-event-emitter": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/@metamask/safe-event-emitter/-/safe-event-emitter-3.1.2.tgz",
      "integrity": "sha512-5yb2gMI1BDm0JybZezeoX/3XhPDOtTbcFvpTXM9kxsoZjPZFh4XciqRbpD6N86HYZqWDhEaKUDuOyR0sQHEjMA==",
      "license": "ISC",
      "peer": true,
      "engines": {
        "node": ">=12.0.0"
      }
    },
    "node_modules/@metamask/sdk": {
      "version": "0.32.1",
      "resolved": "https://registry.npmjs.org/@metamask/sdk/-/sdk-0.32.1.tgz",
      "integrity": "sha512-ulvScxyuX+A8VYgQ9FGugtpH5l2U8AF0lOjaw6XyqwnL7I/U0Lk9yyz9pns4Zyq356Z4+nIBzxmb6czWLzp8UQ==",
      "peer": true,
      "dependencies": {
        "@babel/runtime": "^7.26.0",
        "@metamask/onboarding": "^1.0.1",
        "@metamask/providers": "16.1.0",
        "@metamask/sdk-communication-layer": "0.32.0",
        "@metamask/sdk-install-modal-web": "0.32.1",
        "@paulmillr/qr": "^0.2.1",
        "bowser": "^2.9.0",
        "cross-fetch": "^4.0.0",
        "debug": "^4.3.4",
        "eciesjs": "^0.4.11",
        "eth-rpc-errors": "^4.0.3",
        "eventemitter2": "^6.4.9",
        "obj-multiplex": "^1.0.0",
        "pump": "^3.0.0",
        "readable-stream": "^3.6.2",
        "socket.io-client": "^4.5.1",
        "tslib": "^2.6.0",
        "util": "^0.12.4",
        "uuid": "^8.3.2"
      }
    },
    "node_modules/@metamask/sdk-communication-layer": {
      "version": "0.32.0",
      "resolved": "https://registry.npmjs.org/@metamask/sdk-communication-layer/-/sdk-communication-layer-0.32.0.tgz",
      "integrity": "sha512-dmj/KFjMi1fsdZGIOtbhxdg3amxhKL/A5BqSU4uh/SyDKPub/OT+x5pX8bGjpTL1WPWY/Q0OIlvFyX3VWnT06Q==",
      "peer": true,
      "dependencies": {
        "bufferutil": "^4.0.8",
        "date-fns": "^2.29.3",
        "debug": "^4.3.4",
        "utf-8-validate": "^5.0.2",
        "uuid": "^8.3.2"
      },
      "peerDependencies": {
        "cross-fetch": "^4.0.0",
        "eciesjs": "*",
        "eventemitter2": "^6.4.9",
        "readable-stream": "^3.6.2",
        "socket.io-client": "^4.5.1"
      }
    },
    "node_modules/@metamask/sdk-communication-layer/node_modules/uuid": {
      "version": "8.3.2",
      "resolved": "https://registry.npmjs.org/uuid/-/uuid-8.3.2.tgz",
      "integrity": "sha512-+NYs2QeMWy+GWFOEm9xnn6HCDp0l7QBD7ml8zLUmJ+93Q5NF0NocErnwkTkXVFNiX3/fpC6afS8Dhb/gz7R7eg==",
      "license": "MIT",
      "peer": true,
      "bin": {
        "uuid": "dist/bin/uuid"
      }
    },
    "node_modules/@metamask/sdk-install-modal-web": {
      "version": "0.32.1",
      "resolved": "https://registry.npmjs.org/@metamask/sdk-install-modal-web/-/sdk-install-modal-web-0.32.1.tgz",
      "integrity": "sha512-MGmAo6qSjf1tuYXhCu2EZLftq+DSt5Z7fsIKr2P+lDgdTPWgLfZB1tJKzNcwKKOdf6q9Qmmxn7lJuI/gq5LrKw==",
      "peer": true,
      "dependencies": {
        "@paulmillr/qr": "^0.2.1"
      }
    },
    "node_modules/@metamask/sdk/node_modules/uuid": {
      "version": "8.3.2",
      "resolved": "https://registry.npmjs.org/uuid/-/uuid-8.3.2.tgz",
      "integrity": "sha512-+NYs2QeMWy+GWFOEm9xnn6HCDp0l7QBD7ml8zLUmJ+93Q5NF0NocErnwkTkXVFNiX3/fpC6afS8Dhb/gz7R7eg==",
      "license": "MIT",
      "peer": true,
      "bin": {
        "uuid": "dist/bin/uuid"
      }
    },
    "node_modules/@metamask/superstruct": {
      "version": "3.2.1",
      "resolved": "https://registry.npmjs.org/@metamask/superstruct/-/superstruct-3.2.1.tgz",
      "integrity": "sha512-fLgJnDOXFmuVlB38rUN5SmU7hAFQcCjrg3Vrxz67KTY7YHFnSNEKvX4avmEBdOI0yTCxZjwMCFEqsC8k2+Wd3g==",
      "license": "MIT",
      "peer": true,
      "engines": {
        "node": ">=16.0.0"
      }
    },
    "node_modules/@metamask/utils": {
      "version": "8.5.0",
      "resolved": "https://registry.npmjs.org/@metamask/utils/-/utils-8.5.0.tgz",
      "integrity": "sha512-I6bkduevXb72TIM9q2LRO63JSsF9EXduh3sBr9oybNX2hNNpr/j1tEjXrsG0Uabm4MJ1xkGAQEMwifvKZIkyxQ==",
      "license": "ISC",
      "peer": true,
      "dependencies": {
        "@ethereumjs/tx": "^4.2.0",
        "@metamask/superstruct": "^3.0.0",
        "@noble/hashes": "^1.3.1",
        "@scure/base": "^1.1.3",
        "@types/debug": "^4.1.7",
        "debug": "^4.3.4",
        "pony-cause": "^2.1.10",
        "semver": "^7.5.4",
        "uuid": "^9.0.1"
      },
      "engines": {
        "node": ">=16.0.0"
      }
    },
    "node_modules/@metamask/utils/node_modules/uuid": {
      "version": "9.0.1",
      "resolved": "https://registry.npmjs.org/uuid/-/uuid-9.0.1.tgz",
      "integrity": "sha512-b+1eJOlsR9K8HJpow9Ok3fiWOWSIcIzXodvv0rQjVoOVNpWMpxf1wZNpt4y9h10odCNrqnYp1OBzRktckBe3sA==",
      "funding": [
        "https://github.com/sponsors/broofa",
        "https://github.com/sponsors/ctavan"
      ],
      "license": "MIT",
      "peer": true,
      "bin": {
        "uuid": "dist/bin/uuid"
      }
    },
    "node_modules/@module-federation/runtime": {
      "version": "0.1.21",
      "resolved": "https://registry.npmjs.org/@module-federation/runtime/-/runtime-0.1.21.tgz",
      "integrity": "sha512-/p4BhZ0SnjJuiL0wwu+FebFgIUJ9vM+oCY7CyprUHImyi/Y23ulI61WNWMVrKQGgdMoXQDQCL8RH4EnrVP2ZFw==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "@module-federation/sdk": "0.1.21"
      }
    },
    "node_modules/@module-federation/sdk": {
      "version": "0.1.21",
      "resolved": "https://registry.npmjs.org/@module-federation/sdk/-/sdk-0.1.21.tgz",
      "integrity": "sha512-r7xPiAm+O4e+8Zvw+8b4ToeD0D0VJD004nHmt+Y8r/l98J2eA6di72Vn1FeyjtQbCrFtiMw3ts/dlqtcmIBipw==",
      "license": "MIT",
      "peer": true
    },
    "node_modules/@msgpack/msgpack": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/@msgpack/msgpack/-/msgpack-3.1.2.tgz",
      "integrity": "sha512-JEW4DEtBzfe8HvUYecLU9e6+XJnKDlUAIve8FvPzF3Kzs6Xo/KuZkZJsDH0wJXl/qEZbeeE7edxDNY3kMs39hQ==",
      "license": "ISC",
      "engines": {
        "node": ">= 18"
      }
    },
    "node_modules/@noble/ciphers": {
      "version": "0.5.3",
      "resolved": "https://registry.npmjs.org/@noble/ciphers/-/ciphers-0.5.3.tgz",
      "integrity": "sha512-B0+6IIHiqEs3BPMT0hcRmHvEj2QHOLu+uwt+tqDDeVd0oyVzh7BPrDcPjRnV1PV/5LaknXJJQvOuRGR0zQJz+w==",
      "license": "MIT",
      "funding": {
        "url": "https://paulmillr.com/funding/"
      }
    },
    "node_modules/@noble/curves": {
      "version": "1.9.2",
      "resolved": "https://registry.npmjs.org/@noble/curves/-/curves-1.9.2.tgz",
      "integrity": "sha512-HxngEd2XUcg9xi20JkwlLCtYwfoFw4JGkuZpT+WlsPD4gB/cxkvTD8fSsoAnphGZhFdZYKeQIPCuFlWPm1uE0g==",
      "license": "MIT",
      "dependencies": {
        "@noble/hashes": "1.8.0"
      },
      "engines": {
        "node": "^14.21.3 || >=16"
      },
      "funding": {
        "url": "https://paulmillr.com/funding/"
      }
    },
    "node_modules/@noble/hashes": {
      "version": "1.8.0",
      "resolved": "https://registry.npmjs.org/@noble/hashes/-/hashes-1.8.0.tgz",
      "integrity": "sha512-jCs9ldd7NwzpgXDIf6P3+NrHh9/sD6CQdxHyjQI+h/6rDNo88ypBxxz45UDuZHz9r3tNz7N/VInSVoVdtXEI4A==",
      "license": "MIT",
      "engines": {
        "node": "^14.21.3 || >=16"
      },
      "funding": {
        "url": "https://paulmillr.com/funding/"
      }
    },
    "node_modules/@nodelib/fs.scandir": {
      "version": "2.1.5",
      "resolved": "https://registry.npmjs.org/@nodelib/fs.scandir/-/fs.scandir-2.1.5.tgz",
      "integrity": "sha512-vq24Bq3ym5HEQm2NKCr3yXDwjc7vTsEThRDnkp2DK9p1uqLR+DHurm/NOTo0KG7HYHU7eppKZj3MyqYuMBf62g==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@nodelib/fs.stat": "2.0.5",
        "run-parallel": "^1.1.9"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/@nodelib/fs.stat": {
      "version": "2.0.5",
      "resolved": "https://registry.npmjs.org/@nodelib/fs.stat/-/fs.stat-2.0.5.tgz",
      "integrity": "sha512-RkhPPp2zrqDAQA/2jNhnztcPAlv64XdhIp7a7454A5ovI7Bukxgt7MX7udwAu3zg1DcpPU0rz3VV1SeaqvY4+A==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/@nodelib/fs.walk": {
      "version": "1.2.8",
      "resolved": "https://registry.npmjs.org/@nodelib/fs.walk/-/fs.walk-1.2.8.tgz",
      "integrity": "sha512-oGB+UxlgWcgQkgwo8GcEGwemoTFt3FIO9ababBmaGwXIoBKZ+GTy0pP185beGg7Llih/NSHSV2XAs1lnznocSg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@nodelib/fs.scandir": "2.1.5",
        "fastq": "^1.6.0"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/@paulmillr/qr": {
      "version": "0.2.1",
      "resolved": "https://registry.npmjs.org/@paulmillr/qr/-/qr-0.2.1.tgz",
      "integrity": "sha512-IHnV6A+zxU7XwmKFinmYjUcwlyK9+xkG3/s9KcQhI9BjQKycrJ1JRO+FbNYPwZiPKW3je/DR0k7w8/gLa5eaxQ==",
      "deprecated": "The package is now available as \"qr\": npm install qr",
      "license": "(MIT OR Apache-2.0)",
      "peer": true,
      "funding": {
        "url": "https://paulmillr.com/funding/"
      }
    },
    "node_modules/@pkgjs/parseargs": {
      "version": "0.11.0",
      "resolved": "https://registry.npmjs.org/@pkgjs/parseargs/-/parseargs-0.11.0.tgz",
      "integrity": "sha512-+1VkjdD0QBLPodGrJUeqarH8VAIvQODIbwh9XpP5Syisf7YoQgsJKPNFoqqLQlu+VQ/tVSshMR6loPMn8U+dPg==",
      "dev": true,
      "license": "MIT",
      "optional": true,
      "engines": {
        "node": ">=14"
      }
    },
    "node_modules/@radix-ui/react-compose-refs": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-compose-refs/-/react-compose-refs-1.1.2.tgz",
      "integrity": "sha512-z4eqJvfiNnFMHIIvXP3CY57y2WJs5g2v3X0zm9mEJkrkNv4rDxu+sg9Jh8EkXyeqBkB7SOcboo9dMVqhyrACIg==",
      "license": "MIT",
      "peerDependencies": {
        "@types/react": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-context": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-context/-/react-context-1.1.2.tgz",
      "integrity": "sha512-jCi/QKUM2r1Ju5a3J64TH2A5SpKAgh0LpknyqdQ4m6DCV0xJ2HG1xARRwNGPQfi1SLdLWZ1OJz6F4OMBBNiGJA==",
      "license": "MIT",
      "peerDependencies": {
        "@types/react": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-primitive": {
      "version": "2.1.3",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-primitive/-/react-primitive-2.1.3.tgz",
      "integrity": "sha512-m9gTwRkhy2lvCPe6QJp4d3G1TYEUHn/FzJUtq9MjH46an1wJU+GdoGC5VLof8RX8Ft/DlpshApkhswDLZzHIcQ==",
      "license": "MIT",
      "dependencies": {
        "@radix-ui/react-slot": "1.2.3"
      },
      "peerDependencies": {
        "@types/react": "*",
        "@types/react-dom": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
        "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        },
        "@types/react-dom": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-progress": {
      "version": "1.1.7",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-progress/-/react-progress-1.1.7.tgz",
      "integrity": "sha512-vPdg/tF6YC/ynuBIJlk1mm7Le0VgW6ub6J2UWnTQ7/D23KXcPI1qy+0vBkgKgd38RCMJavBXpB83HPNFMTb0Fg==",
      "license": "MIT",
      "dependencies": {
        "@radix-ui/react-context": "1.1.2",
        "@radix-ui/react-primitive": "2.1.3"
      },
      "peerDependencies": {
        "@types/react": "*",
        "@types/react-dom": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
        "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        },
        "@types/react-dom": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-slot": {
      "version": "1.2.3",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-slot/-/react-slot-1.2.3.tgz",
      "integrity": "sha512-aeNmHnBxbi2St0au6VBVC7JXFlhLlOnvIIlePNniyUNAClzmtAUEY8/pBiK3iHjufOlwA+c20/8jngo7xcrg8A==",
      "license": "MIT",
      "dependencies": {
        "@radix-ui/react-compose-refs": "1.1.2"
      },
      "peerDependencies": {
        "@types/react": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        }
      }
    },
    "node_modules/@react-spring/animated": {
      "version": "9.7.5",
      "resolved": "https://registry.npmjs.org/@react-spring/animated/-/animated-9.7.5.tgz",
      "integrity": "sha512-Tqrwz7pIlsSDITzxoLS3n/v/YCUHQdOIKtOJf4yL6kYVSDTSmVK1LI1Q3M/uu2Sx4X3pIWF3xLUhlsA6SPNTNg==",
      "license": "MIT",
      "dependencies": {
        "@react-spring/shared": "~9.7.5",
        "@react-spring/types": "~9.7.5"
      },
      "peerDependencies": {
        "react": "^16.8.0 || ^17.0.0 || ^18.0.0"
      }
    },
    "node_modules/@react-spring/core": {
      "version": "9.7.5",
      "resolved": "https://registry.npmjs.org/@react-spring/core/-/core-9.7.5.tgz",
      "integrity": "sha512-rmEqcxRcu7dWh7MnCcMXLvrf6/SDlSokLaLTxiPlAYi11nN3B5oiCUAblO72o+9z/87j2uzxa2Inm8UbLjXA+w==",
      "license": "MIT",
      "dependencies": {
        "@react-spring/animated": "~9.7.5",
        "@react-spring/shared": "~9.7.5",
        "@react-spring/types": "~9.7.5"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/react-spring/donate"
      },
      "peerDependencies": {
        "react": "^16.8.0 || ^17.0.0 || ^18.0.0"
      }
    },
    "node_modules/@react-spring/rafz": {
      "version": "9.7.5",
      "resolved": "https://registry.npmjs.org/@react-spring/rafz/-/rafz-9.7.5.tgz",
      "integrity": "sha512-5ZenDQMC48wjUzPAm1EtwQ5Ot3bLIAwwqP2w2owG5KoNdNHpEJV263nGhCeKKmuA3vG2zLLOdu3or6kuDjA6Aw==",
      "license": "MIT"
    },
    "node_modules/@react-spring/shared": {
      "version": "9.7.5",
      "resolved": "https://registry.npmjs.org/@react-spring/shared/-/shared-9.7.5.tgz",
      "integrity": "sha512-wdtoJrhUeeyD/PP/zo+np2s1Z820Ohr/BbuVYv+3dVLW7WctoiN7std8rISoYoHpUXtbkpesSKuPIw/6U1w1Pw==",
      "license": "MIT",
      "dependencies": {
        "@react-spring/rafz": "~9.7.5",
        "@react-spring/types": "~9.7.5"
      },
      "peerDependencies": {
        "react": "^16.8.0 || ^17.0.0 || ^18.0.0"
      }
    },
    "node_modules/@react-spring/three": {
      "version": "9.7.5",
      "resolved": "https://registry.npmjs.org/@react-spring/three/-/three-9.7.5.tgz",
      "integrity": "sha512-RxIsCoQfUqOS3POmhVHa1wdWS0wyHAUway73uRLp3GAL5U2iYVNdnzQsep6M2NZ994BlW8TcKuMtQHUqOsy6WA==",
      "license": "MIT",
      "dependencies": {
        "@react-spring/animated": "~9.7.5",
        "@react-spring/core": "~9.7.5",
        "@react-spring/shared": "~9.7.5",
        "@react-spring/types": "~9.7.5"
      },
      "peerDependencies": {
        "@react-three/fiber": ">=6.0",
        "react": "^16.8.0 || ^17.0.0 || ^18.0.0",
        "three": ">=0.126"
      }
    },
    "node_modules/@react-spring/types": {
      "version": "9.7.5",
      "resolved": "https://registry.npmjs.org/@react-spring/types/-/types-9.7.5.tgz",
      "integrity": "sha512-HVj7LrZ4ReHWBimBvu2SKND3cDVUPWKLqRTmWe/fNY6o1owGOX0cAHbdPDTMelgBlVbrTKrre6lFkhqGZErK/g==",
      "license": "MIT"
    },
    "node_modules/@react-three/drei": {
      "version": "9.122.0",
      "resolved": "https://registry.npmjs.org/@react-three/drei/-/drei-9.122.0.tgz",
      "integrity": "sha512-SEO/F/rBCTjlLez7WAlpys+iGe9hty4rNgjZvgkQeXFSiwqD4Hbk/wNHMAbdd8vprO2Aj81mihv4dF5bC7D0CA==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.26.0",
        "@mediapipe/tasks-vision": "0.10.17",
        "@monogrid/gainmap-js": "^3.0.6",
        "@react-spring/three": "~9.7.5",
        "@use-gesture/react": "^10.3.1",
        "camera-controls": "^2.9.0",
        "cross-env": "^7.0.3",
        "detect-gpu": "^5.0.56",
        "glsl-noise": "^0.0.0",
        "hls.js": "^1.5.17",
        "maath": "^0.10.8",
        "meshline": "^3.3.1",
        "react-composer": "^5.0.3",
        "stats-gl": "^2.2.8",
        "stats.js": "^0.17.0",
        "suspend-react": "^0.1.3",
        "three-mesh-bvh": "^0.7.8",
        "three-stdlib": "^2.35.6",
        "troika-three-text": "^0.52.0",
        "tunnel-rat": "^0.1.2",
        "utility-types": "^3.11.0",
        "zustand": "^5.0.1"
      },
      "peerDependencies": {
        "@react-three/fiber": "^8",
        "react": "^18",
        "react-dom": "^18",
        "three": ">=0.137"
      },
      "peerDependenciesMeta": {
        "react-dom": {
          "optional": true
        }
      }
    },
    "node_modules/@react-three/drei/node_modules/@monogrid/gainmap-js": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/@monogrid/gainmap-js/-/gainmap-js-3.1.0.tgz",
      "integrity": "sha512-Obb0/gEd/HReTlg8ttaYk+0m62gQJmCblMOjHSMHRrBP2zdfKMHLCRbh/6ex9fSUJMKdjjIEiohwkbGD3wj2Nw==",
      "license": "MIT",
      "dependencies": {
        "promise-worker-transferable": "^1.0.4"
      },
      "peerDependencies": {
        "three": ">= 0.159.0"
      }
    },
    "node_modules/@react-three/drei/node_modules/zustand": {
      "version": "5.0.7",
      "resolved": "https://registry.npmjs.org/zustand/-/zustand-5.0.7.tgz",
      "integrity": "sha512-Ot6uqHDW/O2VdYsKLLU8GQu8sCOM1LcoE8RwvLv9uuRT9s6SOHCKs0ZEOhxg+I1Ld+A1Q5lwx+UlKXXUoCZITg==",
      "license": "MIT",
      "engines": {
        "node": ">=12.20.0"
      },
      "peerDependencies": {
        "@types/react": ">=18.0.0",
        "immer": ">=9.0.6",
        "react": ">=18.0.0",
        "use-sync-external-store": ">=1.2.0"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        },
        "immer": {
          "optional": true
        },
        "react": {
          "optional": true
        },
        "use-sync-external-store": {
          "optional": true
        }
      }
    },
    "node_modules/@react-three/fiber": {
      "version": "8.18.0",
      "resolved": "https://registry.npmjs.org/@react-three/fiber/-/fiber-8.18.0.tgz",
      "integrity": "sha512-FYZZqD0UUHUswKz3LQl2Z7H24AhD14XGTsIRw3SJaXUxyfVMi+1yiZGmqTcPt/CkPpdU7rrxqcyQ1zJE5DjvIQ==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.17.8",
        "@types/react-reconciler": "^0.26.7",
        "@types/webxr": "*",
        "base64-js": "^1.5.1",
        "buffer": "^6.0.3",
        "its-fine": "^1.0.6",
        "react-reconciler": "^0.27.0",
        "react-use-measure": "^2.1.7",
        "scheduler": "^0.21.0",
        "suspend-react": "^0.1.3",
        "zustand": "^3.7.1"
      },
      "peerDependencies": {
        "expo": ">=43.0",
        "expo-asset": ">=8.4",
        "expo-file-system": ">=11.0",
        "expo-gl": ">=11.0",
        "react": ">=18 <19",
        "react-dom": ">=18 <19",
        "react-native": ">=0.64",
        "three": ">=0.133"
      },
      "peerDependenciesMeta": {
        "expo": {
          "optional": true
        },
        "expo-asset": {
          "optional": true
        },
        "expo-file-system": {
          "optional": true
        },
        "expo-gl": {
          "optional": true
        },
        "react-dom": {
          "optional": true
        },
        "react-native": {
          "optional": true
        }
      }
    },
    "node_modules/@react-three/fiber/node_modules/scheduler": {
      "version": "0.21.0",
      "resolved": "https://registry.npmjs.org/scheduler/-/scheduler-0.21.0.tgz",
      "integrity": "sha512-1r87x5fz9MXqswA2ERLo0EbOAU74DpIUO090gIasYTqlVoJeMcl+Z1Rg7WHz+qtPujhS/hGIt9kxZOYBV3faRQ==",
      "license": "MIT",
      "dependencies": {
        "loose-envify": "^1.1.0"
      }
    },
    "node_modules/@react-three/fiber/node_modules/zustand": {
      "version": "3.7.2",
      "resolved": "https://registry.npmjs.org/zustand/-/zustand-3.7.2.tgz",
      "integrity": "sha512-PIJDIZKtokhof+9+60cpockVOq05sJzHCriyvaLBmEJixseQ1a5Kdov6fWZfWOu5SK9c+FhH1jU0tntLxRJYMA==",
      "license": "MIT",
      "engines": {
        "node": ">=12.7.0"
      },
      "peerDependencies": {
        "react": ">=16.8"
      },
      "peerDependenciesMeta": {
        "react": {
          "optional": true
        }
      }
    },
    "node_modules/@reown/appkit": {
      "version": "1.7.8",
      "resolved": "https://registry.npmjs.org/@reown/appkit/-/appkit-1.7.8.tgz",
      "integrity": "sha512-51kTleozhA618T1UvMghkhKfaPcc9JlKwLJ5uV+riHyvSoWPKPRIa5A6M1Wano5puNyW0s3fwywhyqTHSilkaA==",
      "license": "Apache-2.0",
      "dependencies": {
        "@reown/appkit-common": "1.7.8",
        "@reown/appkit-controllers": "1.7.8",
        "@reown/appkit-pay": "1.7.8",
        "@reown/appkit-polyfills": "1.7.8",
        "@reown/appkit-scaffold-ui": "1.7.8",
        "@reown/appkit-ui": "1.7.8",
        "@reown/appkit-utils": "1.7.8",
        "@reown/appkit-wallet": "1.7.8",
        "@walletconnect/types": "2.21.0",
        "@walletconnect/universal-provider": "2.21.0",
        "bs58": "6.0.0",
        "valtio": "1.13.2",
        "viem": ">=2.29.0"
      }
    },
    "node_modules/@reown/appkit-common": {
      "version": "1.7.8",
      "resolved": "https://registry.npmjs.org/@reown/appkit-common/-/appkit-common-1.7.8.tgz",
      "integrity": "sha512-ridIhc/x6JOp7KbDdwGKY4zwf8/iK8EYBl+HtWrruutSLwZyVi5P8WaZa+8iajL6LcDcDF7LoyLwMTym7SRuwQ==",
      "license": "Apache-2.0",
      "dependencies": {
        "big.js": "6.2.2",
        "dayjs": "1.11.13",
        "viem": ">=2.29.0"
      }
    },
    "node_modules/@reown/appkit-controllers": {
      "version": "1.7.8",
      "resolved": "https://registry.npmjs.org/@reown/appkit-controllers/-/appkit-controllers-1.7.8.tgz",
      "integrity": "sha512-IdXlJlivrlj6m63VsGLsjtPHHsTWvKGVzWIP1fXZHVqmK+rZCBDjCi9j267Rb9/nYRGHWBtlFQhO8dK35WfeDA==",
      "license": "Apache-2.0",
      "dependencies": {
        "@reown/appkit-common": "1.7.8",
        "@reown/appkit-wallet": "1.7.8",
        "@walletconnect/universal-provider": "2.21.0",
        "valtio": "1.13.2",
        "viem": ">=2.29.0"
      }
    },
    "node_modules/@reown/appkit-controllers/node_modules/@noble/ciphers": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/@noble/ciphers/-/ciphers-1.2.1.tgz",
      "integrity": "sha512-rONPWMC7PeExE077uLE4oqWrZ1IvAfz3oH9LibVAcVCopJiA9R62uavnbEzdkVmJYI6M6Zgkbeb07+tWjlq2XA==",
      "license": "MIT",
      "engines": {
        "node": "^14.21.3 || >=16"
      },
      "funding": {
        "url": "https://paulmillr.com/funding/"
      }
    },
    "node_modules/@reown/appkit-controllers/node_modules/@noble/curves": {
      "version": "1.8.1",
      "resolved": "https://registry.npmjs.org/@noble/curves/-/curves-1.8.1.tgz",
      "integrity": "sha512-warwspo+UYUPep0Q+vtdVB4Ugn8GGQj8iyB3gnRWsztmUHTI3S1nhdiWNsPUGL0vud7JlRRk1XEu7Lq1KGTnMQ==",
      "license": "MIT",
      "dependencies": {
        "@noble/hashes": "1.7.1"
      },
      "engines": {
        "node": "^14.21.3 || >=16"
      },
      "funding": {
        "url": "https://paulmillr.com/funding/"
      }
    },
    "node_modules/@reown/appkit-controllers/node_modules/@noble/hashes": {
      "version": "1.7.1",
      "resolved": "https://registry.npmjs.org/@noble/hashes/-/hashes-1.7.1.tgz",
      "integrity": "sha512-B8XBPsn4vT/KJAGqDzbwztd+6Yte3P4V7iafm24bxgDe/mlRuK6xmWPuCNrKt2vDafZ8MfJLlchDG/vYafQEjQ==",
      "license": "MIT",
      "engines": {
        "node": "^14.21.3 || >=16"
      },
      "funding": {
        "url": "https://paulmillr.com/funding/"
      }
    },
    "node_modules/@reown/appkit-controllers/node_modules/@scure/bip32": {
      "version": "1.6.2",
      "resolved": "https://registry.npmjs.org/@scure/bip32/-/bip32-1.6.2.tgz",
      "integrity": "sha512-t96EPDMbtGgtb7onKKqxRLfE5g05k7uHnHRM2xdE6BP/ZmxaLtPek4J4KfVn/90IQNrU1IOAqMgiDtUdtbe3nw==",
      "license": "MIT",
      "dependencies": {
        "@noble/curves": "~1.8.1",
        "@noble/hashes": "~1.7.1",
        "@scure/base": "~1.2.2"
      },
      "funding": {
        "url": "https://paulmillr.com/funding/"
      }
    },
    "node_modules/@reown/appkit-controllers/node_modules/@scure/bip39": {
      "version": "1.5.4",
      "resolved": "https://registry.npmjs.org/@scure/bip39/-/bip39-1.5.4.tgz",
      "integrity": "sha512-TFM4ni0vKvCfBpohoh+/lY05i9gRbSwXWngAsF4CABQxoaOHijxuaZ2R6cStDQ5CHtHO9aGJTr4ksVJASRRyMA==",
      "license": "MIT",
      "dependencies": {
        "@noble/hashes": "~1.7.1",
        "@scure/base": "~1.2.4"
      },
      "funding": {
        "url": "https://paulmillr.com/funding/"
      }
    },
    "node_modules/@reown/appkit-controllers/node_modules/@walletconnect/core": {
      "version": "2.21.0",
      "resolved": "https://registry.npmjs.org/@walletconnect/core/-/core-2.21.0.tgz",
      "integrity": "sha512-o6R7Ua4myxR8aRUAJ1z3gT9nM+jd2B2mfamu6arzy1Cc6vi10fIwFWb6vg3bC8xJ6o9H3n/cN5TOW3aA9Y1XVw==",
      "license": "Apache-2.0",
      "dependencies": {
        "@walletconnect/heartbeat": "1.2.2",
        "@walletconnect/jsonrpc-provider": "1.0.14",
        "@walletconnect/jsonrpc-types": "1.0.4",
        "@walletconnect/jsonrpc-utils": "1.0.8",
        "@walletconnect/jsonrpc-ws-connection": "1.0.16",
        "@walletconnect/keyvaluestorage": "1.1.1",
        "@walletconnect/logger": "2.1.2",
        "@walletconnect/relay-api": "1.0.11",
        "@walletconnect/relay-auth": "1.1.0",
        "@walletconnect/safe-json": "1.0.2",
        "@walletconnect/time": "1.0.2",
        "@walletconnect/types": "2.21.0",
        "@walletconnect/utils": "2.21.0",
        "@walletconnect/window-getters": "1.0.1",
        "es-toolkit": "1.33.0",
        "events": "3.3.0",
        "uint8arrays": "3.1.0"
      },
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@reown/appkit-controllers/node_modules/@walletconnect/keyvaluestorage": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/@walletconnect/keyvaluestorage/-/keyvaluestorage-1.1.1.tgz",
      "integrity": "sha512-V7ZQq2+mSxAq7MrRqDxanTzu2RcElfK1PfNYiaVnJgJ7Q7G7hTVwF8voIBx92qsRyGHZihrwNPHuZd1aKkd0rA==",
      "license": "MIT",
      "dependencies": {
        "@walletconnect/safe-json": "^1.0.1",
        "idb-keyval": "^6.2.1",
        "unstorage": "^1.9.0"
      },
      "peerDependencies": {
        "@react-native-async-storage/async-storage": "1.x"
      },
      "peerDependenciesMeta": {
        "@react-native-async-storage/async-storage": {
          "optional": true
        }
      }
    },
    "node_modules/@reown/appkit-controllers/node_modules/@walletconnect/sign-client": {
      "version": "2.21.0",
      "resolved": "https://registry.npmjs.org/@walletconnect/sign-client/-/sign-client-2.21.0.tgz",
      "integrity": "sha512-z7h+PeLa5Au2R591d/8ZlziE0stJvdzP9jNFzFolf2RG/OiXulgFKum8PrIyXy+Rg2q95U9nRVUF9fWcn78yBA==",
      "license": "Apache-2.0",
      "dependencies": {
        "@walletconnect/core": "2.21.0",
        "@walletconnect/events": "1.0.1",
        "@walletconnect/heartbeat": "1.2.2",
        "@walletconnect/jsonrpc-utils": "1.0.8",
        "@walletconnect/logger": "2.1.2",
        "@walletconnect/time": "1.0.2",
        "@walletconnect/types": "2.21.0",
        "@walletconnect/utils": "2.21.0",
        "events": "3.3.0"
      }
    },
    "node_modules/@reown/appkit-controllers/node_modules/@walletconnect/types": {
      "version": "2.21.0",
      "resolved": "https://registry.npmjs.org/@walletconnect/types/-/types-2.21.0.tgz",
      "integrity": "sha512-ll+9upzqt95ZBWcfkOszXZkfnpbJJ2CmxMfGgE5GmhdxxxCcO5bGhXkI+x8OpiS555RJ/v/sXJYMSOLkmu4fFw==",
      "license": "Apache-2.0",
      "dependencies": {
        "@walletconnect/events": "1.0.1",
        "@walletconnect/heartbeat": "1.2.2",
        "@walletconnect/jsonrpc-types": "1.0.4",
        "@walletconnect/keyvaluestorage": "1.1.1",
        "@walletconnect/logger": "2.1.2",
        "events": "3.3.0"
      }
    },
    "node_modules/@reown/appkit-controllers/node_modules/@walletconnect/universal-provider": {
      "version": "2.21.0",
      "resolved": "https://registry.npmjs.org/@walletconnect/universal-provider/-/universal-provider-2.21.0.tgz",
      "integrity": "sha512-mtUQvewt+X0VBQay/xOJBvxsB3Xsm1lTwFjZ6WUwSOTR1X+FNb71hSApnV5kbsdDIpYPXeQUbGt2se1n5E5UBg==",
      "license": "Apache-2.0",
      "dependencies": {
        "@walletconnect/events": "1.0.1",
        "@walletconnect/jsonrpc-http-connection": "1.0.8",
        "@walletconnect/jsonrpc-provider": "1.0.14",
        "@walletconnect/jsonrpc-types": "1.0.4",
        "@walletconnect/jsonrpc-utils": "1.0.8",
        "@walletconnect/keyvaluestorage": "1.1.1",
        "@walletconnect/logger": "2.1.2",
        "@walletconnect/sign-client": "2.21.0",
        "@walletconnect/types": "2.21.0",
        "@walletconnect/utils": "2.21.0",
        "es-toolkit": "1.33.0",
        "events": "3.3.0"
      }
    },
    "node_modules/@reown/appkit-controllers/node_modules/@walletconnect/utils": {
      "version": "2.21.0",
      "resolved": "https://registry.npmjs.org/@walletconnect/utils/-/utils-2.21.0.tgz",
      "integrity": "sha512-zfHLiUoBrQ8rP57HTPXW7rQMnYxYI4gT9yTACxVW6LhIFROTF6/ytm5SKNoIvi4a5nX5dfXG4D9XwQUCu8Ilig==",
      "license": "Apache-2.0",
      "dependencies": {
        "@noble/ciphers": "1.2.1",
        "@noble/curves": "1.8.1",
        "@noble/hashes": "1.7.1",
        "@walletconnect/jsonrpc-utils": "1.0.8",
        "@walletconnect/keyvaluestorage": "1.1.1",
        "@walletconnect/relay-api": "1.0.11",
        "@walletconnect/relay-auth": "1.1.0",
        "@walletconnect/safe-json": "1.0.2",
        "@walletconnect/time": "1.0.2",
        "@walletconnect/types": "2.21.0",
        "@walletconnect/window-getters": "1.0.1",
        "@walletconnect/window-metadata": "1.0.1",
        "bs58": "6.0.0",
        "detect-browser": "5.3.0",
        "query-string": "7.1.3",
        "uint8arrays": "3.1.0",
        "viem": "2.23.2"
      }
    },
    "node_modules/@reown/appkit-controllers/node_modules/@walletconnect/utils/node_modules/viem": {
      "version": "2.23.2",
      "resolved": "https://registry.npmjs.org/viem/-/viem-2.23.2.tgz",
      "integrity": "sha512-NVmW/E0c5crMOtbEAqMF0e3NmvQykFXhLOc/CkLIXOlzHSA6KXVz3CYVmaKqBF8/xtjsjHAGjdJN3Ru1kFJLaA==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/wevm"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "@noble/curves": "1.8.1",
        "@noble/hashes": "1.7.1",
        "@scure/bip32": "1.6.2",
        "@scure/bip39": "1.5.4",
        "abitype": "1.0.8",
        "isows": "1.0.6",
        "ox": "0.6.7",
        "ws": "8.18.0"
      },
      "peerDependencies": {
        "typescript": ">=5.0.4"
      },
      "peerDependenciesMeta": {
        "typescript": {
          "optional": true
        }
      }
    },
    "node_modules/@reown/appkit-controllers/node_modules/abitype": {
      "version": "1.0.8",
      "resolved": "https://registry.npmjs.org/abitype/-/abitype-1.0.8.tgz",
      "integrity": "sha512-ZeiI6h3GnW06uYDLx0etQtX/p8E24UaHHBj57RSjK7YBFe7iuVn07EDpOeP451D06sF27VOz9JJPlIKJmXgkEg==",
      "license": "MIT",
      "funding": {
        "url": "https://github.com/sponsors/wevm"
      },
      "peerDependencies": {
        "typescript": ">=5.0.4",
        "zod": "^3 >=3.22.0"
      },
      "peerDependenciesMeta": {
        "typescript": {
          "optional": true
        },
        "zod": {
          "optional": true
        }
      }
    },
    "node_modules/@reown/appkit-controllers/node_modules/base-x": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/base-x/-/base-x-5.0.1.tgz",
      "integrity": "sha512-M7uio8Zt++eg3jPj+rHMfCC+IuygQHHCOU+IYsVtik6FWjuYpVt/+MRKcgsAMHh8mMFAwnB+Bs+mTrFiXjMzKg==",
      "license": "MIT"
    },
    "node_modules/@reown/appkit-controllers/node_modules/bs58": {
      "version": "6.0.0",
      "resolved": "https://registry.npmjs.org/bs58/-/bs58-6.0.0.tgz",
      "integrity": "sha512-PD0wEnEYg6ijszw/u8s+iI3H17cTymlrwkKhDhPZq+Sokl3AU4htyBFTjAeNAlCCmg0f53g6ih3jATyCKftTfw==",
      "license": "MIT",
      "dependencies": {
        "base-x": "^5.0.0"
      }
    },
    "node_modules/@reown/appkit-controllers/node_modules/chokidar": {
      "version": "4.0.3",
      "resolved": "https://registry.npmjs.org/chokidar/-/chokidar-4.0.3.tgz",
      "integrity": "sha512-Qgzu8kfBvo+cA4962jnP1KkS6Dop5NS6g7R5LFYJr4b8Ub94PPQXUksCw9PvXoeXPRRddRNC5C1JQUR2SMGtnA==",
      "license": "MIT",
      "dependencies": {
        "readdirp": "^4.0.1"
      },
      "engines": {
        "node": ">= 14.16.0"
      },
      "funding": {
        "url": "https://paulmillr.com/funding/"
      }
    },
    "node_modules/@reown/appkit-controllers/node_modules/es-toolkit": {
      "version": "1.33.0",
      "resolved": "https://registry.npmjs.org/es-toolkit/-/es-toolkit-1.33.0.tgz",
      "integrity": "sha512-X13Q/ZSc+vsO1q600bvNK4bxgXMkHcf//RxCmYDaRY5DAcT+eoXjY5hoAPGMdRnWQjvyLEcyauG3b6hz76LNqg==",
      "license": "MIT",
      "workspaces": [
        "docs",
        "benchmarks"
      ]
    },
    "node_modules/@reown/appkit-controllers/node_modules/isows": {
      "version": "1.0.6",
      "resolved": "https://registry.npmjs.org/isows/-/isows-1.0.6.tgz",
      "integrity": "sha512-lPHCayd40oW98/I0uvgaHKWCSvkzY27LjWLbtzOm64yQ+G3Q5npjjbdppU65iZXkK1Zt+kH9pfegli0AYfwYYw==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/wevm"
        }
      ],
      "license": "MIT",
      "peerDependencies": {
        "ws": "*"
      }
    },
    "node_modules/@reown/appkit-controllers/node_modules/lru-cache": {
      "version": "10.4.3",
      "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-10.4.3.tgz",
      "integrity": "sha512-JNAzZcXrCt42VGLuYz0zfAzDfAvJWW6AfYlDBQyDV5DClI2m5sAmK+OIO7s59XfsRsWHp02jAJrRadPRGTt6SQ==",
      "license": "ISC"
    },
    "node_modules/@reown/appkit-controllers/node_modules/ox": {
      "version": "0.6.7",
      "resolved": "https://registry.npmjs.org/ox/-/ox-0.6.7.tgz",
      "integrity": "sha512-17Gk/eFsFRAZ80p5eKqv89a57uXjd3NgIf1CaXojATPBuujVc/fQSVhBeAU9JCRB+k7J50WQAyWTxK19T9GgbA==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/wevm"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "@adraffy/ens-normalize": "^1.10.1",
        "@noble/curves": "^1.6.0",
        "@noble/hashes": "^1.5.0",
        "@scure/bip32": "^1.5.0",
        "@scure/bip39": "^1.4.0",
        "abitype": "^1.0.6",
        "eventemitter3": "5.0.1"
      },
      "peerDependencies": {
        "typescript": ">=5.4.0"
      },
      "peerDependenciesMeta": {
        "typescript": {
          "optional": true
        }
      }
    },
    "node_modules/@reown/appkit-controllers/node_modules/readdirp": {
      "version": "4.1.2",
      "resolved": "https://registry.npmjs.org/readdirp/-/readdirp-4.1.2.tgz",
      "integrity": "sha512-GDhwkLfywWL2s6vEjyhri+eXmfH6j1L7JE27WhqLeYzoh/A3DBaYGEj2H/HFZCn/kMfim73FXxEJTw06WtxQwg==",
      "license": "MIT",
      "engines": {
        "node": ">= 14.18.0"
      },
      "funding": {
        "type": "individual",
        "url": "https://paulmillr.com/funding/"
      }
    },
    "node_modules/@reown/appkit-controllers/node_modules/uint8arrays": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/uint8arrays/-/uint8arrays-3.1.0.tgz",
      "integrity": "sha512-ei5rfKtoRO8OyOIor2Rz5fhzjThwIHJZ3uyDPnDHTXbP0aMQ1RN/6AI5B5d9dBxJOU+BvOAk7ZQ1xphsX8Lrog==",
      "license": "MIT",
      "dependencies": {
        "multiformats": "^9.4.2"
      }
    },
    "node_modules/@reown/appkit-controllers/node_modules/unstorage": {
      "version": "1.16.0",
      "resolved": "https://registry.npmjs.org/unstorage/-/unstorage-1.16.0.tgz",
      "integrity": "sha512-WQ37/H5A7LcRPWfYOrDa1Ys02xAbpPJq6q5GkO88FBXVSQzHd7+BjEwfRqyaSWCv9MbsJy058GWjjPjcJ16GGA==",
      "license": "MIT",
      "dependencies": {
        "anymatch": "^3.1.3",
        "chokidar": "^4.0.3",
        "destr": "^2.0.5",
        "h3": "^1.15.2",
        "lru-cache": "^10.4.3",
        "node-fetch-native": "^1.6.6",
        "ofetch": "^1.4.1",
        "ufo": "^1.6.1"
      },
      "peerDependencies": {
        "@azure/app-configuration": "^1.8.0",
        "@azure/cosmos": "^4.2.0",
        "@azure/data-tables": "^13.3.0",
        "@azure/identity": "^4.6.0",
        "@azure/keyvault-secrets": "^4.9.0",
        "@azure/storage-blob": "^12.26.0",
        "@capacitor/preferences": "^6.0.3 || ^7.0.0",
        "@deno/kv": ">=0.9.0",
        "@netlify/blobs": "^6.5.0 || ^7.0.0 || ^8.1.0",
        "@planetscale/database": "^1.19.0",
        "@upstash/redis": "^1.34.3",
        "@vercel/blob": ">=0.27.1",
        "@vercel/kv": "^1.0.1",
        "aws4fetch": "^1.0.20",
        "db0": ">=0.2.1",
        "idb-keyval": "^6.2.1",
        "ioredis": "^5.4.2",
        "uploadthing": "^7.4.4"
      },
      "peerDependenciesMeta": {
        "@azure/app-configuration": {
          "optional": true
        },
        "@azure/cosmos": {
          "optional": true
        },
        "@azure/data-tables": {
          "optional": true
        },
        "@azure/identity": {
          "optional": true
        },
        "@azure/keyvault-secrets": {
          "optional": true
        },
        "@azure/storage-blob": {
          "optional": true
        },
        "@capacitor/preferences": {
          "optional": true
        },
        "@deno/kv": {
          "optional": true
        },
        "@netlify/blobs": {
          "optional": true
        },
        "@planetscale/database": {
          "optional": true
        },
        "@upstash/redis": {
          "optional": true
        },
        "@vercel/blob": {
          "optional": true
        },
        "@vercel/kv": {
          "optional": true
        },
        "aws4fetch": {
          "optional": true
        },
        "db0": {
          "optional": true
        },
        "idb-keyval": {
          "optional": true
        },
        "ioredis": {
          "optional": true
        },
        "uploadthing": {
          "optional": true
        }
      }
    },
    "node_modules/@reown/appkit-controllers/node_modules/ws": {
      "version": "8.18.0",
      "resolved": "https://registry.npmjs.org/ws/-/ws-8.18.0.tgz",
      "integrity": "sha512-8VbfWfHLbbwu3+N6OKsOMpBdT4kXPDDB9cJk2bJ6mh9ucxdlnNvH1e+roYkKmN9Nxw2yjz7VzeO9oOz2zJ04Pw==",
      "license": "MIT",
      "engines": {
        "node": ">=10.0.0"
      },
      "peerDependencies": {
        "bufferutil": "^4.0.1",
        "utf-8-validate": ">=5.0.2"
      },
      "peerDependenciesMeta": {
        "bufferutil": {
          "optional": true
        },
        "utf-8-validate": {
          "optional": true
        }
      }
    },
    "node_modules/@reown/appkit-pay": {
      "version": "1.7.8",
      "resolved": "https://registry.npmjs.org/@reown/appkit-pay/-/appkit-pay-1.7.8.tgz",
      "integrity": "sha512-OSGQ+QJkXx0FEEjlpQqIhT8zGJKOoHzVnyy/0QFrl3WrQTjCzg0L6+i91Ad5Iy1zb6V5JjqtfIFpRVRWN4M3pw==",
      "license": "Apache-2.0",
      "dependencies": {
        "@reown/appkit-common": "1.7.8",
        "@reown/appkit-controllers": "1.7.8",
        "@reown/appkit-ui": "1.7.8",
        "@reown/appkit-utils": "1.7.8",
        "lit": "3.3.0",
        "valtio": "1.13.2"
      }
    },
    "node_modules/@reown/appkit-polyfills": {
      "version": "1.7.8",
      "resolved": "https://registry.npmjs.org/@reown/appkit-polyfills/-/appkit-polyfills-1.7.8.tgz",
      "integrity": "sha512-W/kq786dcHHAuJ3IV2prRLEgD/2iOey4ueMHf1sIFjhhCGMynMkhsOhQMUH0tzodPqUgAC494z4bpIDYjwWXaA==",
      "license": "Apache-2.0",
      "dependencies": {
        "buffer": "6.0.3"
      }
    },
    "node_modules/@reown/appkit-scaffold-ui": {
      "version": "1.7.8",
      "resolved": "https://registry.npmjs.org/@reown/appkit-scaffold-ui/-/appkit-scaffold-ui-1.7.8.tgz",
      "integrity": "sha512-RCeHhAwOrIgcvHwYlNWMcIDibdI91waaoEYBGw71inE0kDB8uZbE7tE6DAXJmDkvl0qPh+DqlC4QbJLF1FVYdQ==",
      "license": "Apache-2.0",
      "dependencies": {
        "@reown/appkit-common": "1.7.8",
        "@reown/appkit-controllers": "1.7.8",
        "@reown/appkit-ui": "1.7.8",
        "@reown/appkit-utils": "1.7.8",
        "@reown/appkit-wallet": "1.7.8",
        "lit": "3.3.0"
      }
    },
    "node_modules/@reown/appkit-ui": {
      "version": "1.7.8",
      "resolved": "https://registry.npmjs.org/@reown/appkit-ui/-/appkit-ui-1.7.8.tgz",
      "integrity": "sha512-1hjCKjf6FLMFzrulhl0Y9Vb9Fu4royE+SXCPSWh4VhZhWqlzUFc7kutnZKx8XZFVQH4pbBvY62SpRC93gqoHow==",
      "license": "Apache-2.0",
      "dependencies": {
        "@reown/appkit-common": "1.7.8",
        "@reown/appkit-controllers": "1.7.8",
        "@reown/appkit-wallet": "1.7.8",
        "lit": "3.3.0",
        "qrcode": "1.5.3"
      }
    },
    "node_modules/@reown/appkit-utils": {
      "version": "1.7.8",
      "resolved": "https://registry.npmjs.org/@reown/appkit-utils/-/appkit-utils-1.7.8.tgz",
      "integrity": "sha512-8X7UvmE8GiaoitCwNoB86pttHgQtzy4ryHZM9kQpvjQ0ULpiER44t1qpVLXNM4X35O0v18W0Dk60DnYRMH2WRw==",
      "license": "Apache-2.0",
      "dependencies": {
        "@reown/appkit-common": "1.7.8",
        "@reown/appkit-controllers": "1.7.8",
        "@reown/appkit-polyfills": "1.7.8",
        "@reown/appkit-wallet": "1.7.8",
        "@walletconnect/logger": "2.1.2",
        "@walletconnect/universal-provider": "2.21.0",
        "valtio": "1.13.2",
        "viem": ">=2.29.0"
      },
      "peerDependencies": {
        "valtio": "1.13.2"
      }
    },
    "node_modules/@reown/appkit-utils/node_modules/@noble/ciphers": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/@noble/ciphers/-/ciphers-1.2.1.tgz",
      "integrity": "sha512-rONPWMC7PeExE077uLE4oqWrZ1IvAfz3oH9LibVAcVCopJiA9R62uavnbEzdkVmJYI6M6Zgkbeb07+tWjlq2XA==",
      "license": "MIT",
      "engines": {
        "node": "^14.21.3 || >=16"
      },
      "funding": {
        "url": "https://paulmillr.com/funding/"
      }
    },
    "node_modules/@reown/appkit-utils/node_modules/@noble/curves": {
      "version": "1.8.1",
      "resolved": "https://registry.npmjs.org/@noble/curves/-/curves-1.8.1.tgz",
      "integrity": "sha512-warwspo+UYUPep0Q+vtdVB4Ugn8GGQj8iyB3gnRWsztmUHTI3S1nhdiWNsPUGL0vud7JlRRk1XEu7Lq1KGTnMQ==",
      "license": "MIT",
      "dependencies": {
        "@noble/hashes": "1.7.1"
      },
      "engines": {
        "node": "^14.21.3 || >=16"
      },
      "funding": {
        "url": "https://paulmillr.com/funding/"
      }
    },
    "node_modules/@reown/appkit-utils/node_modules/@noble/hashes": {
      "version": "1.7.1",
      "resolved": "https://registry.npmjs.org/@noble/hashes/-/hashes-1.7.1.tgz",
      "integrity": "sha512-B8XBPsn4vT/KJAGqDzbwztd+6Yte3P4V7iafm24bxgDe/mlRuK6xmWPuCNrKt2vDafZ8MfJLlchDG/vYafQEjQ==",
      "license": "MIT",
      "engines": {
        "node": "^14.21.3 || >=16"
      },
      "funding": {
        "url": "https://paulmillr.com/funding/"
      }
    },
    "node_modules/@reown/appkit-utils/node_modules/@scure/bip32": {
      "version": "1.6.2",
      "resolved": "https://registry.npmjs.org/@scure/bip32/-/bip32-1.6.2.tgz",
      "integrity": "sha512-t96EPDMbtGgtb7onKKqxRLfE5g05k7uHnHRM2xdE6BP/ZmxaLtPek4J4KfVn/90IQNrU1IOAqMgiDtUdtbe3nw==",
      "license": "MIT",
      "dependencies": {
        "@noble/curves": "~1.8.1",
        "@noble/hashes": "~1.7.1",
        "@scure/base": "~1.2.2"
      },
      "funding": {
        "url": "https://paulmillr.com/funding/"
      }
    },
    "node_modules/@reown/appkit-utils/node_modules/@scure/bip39": {
      "version": "1.5.4",
      "resolved": "https://registry.npmjs.org/@scure/bip39/-/bip39-1.5.4.tgz",
      "integrity": "sha512-TFM4ni0vKvCfBpohoh+/lY05i9gRbSwXWngAsF4CABQxoaOHijxuaZ2R6cStDQ5CHtHO9aGJTr4ksVJASRRyMA==",
      "license": "MIT",
      "dependencies": {
        "@noble/hashes": "~1.7.1",
        "@scure/base": "~1.2.4"
      },
      "funding": {
        "url": "https://paulmillr.com/funding/"
      }
    },
    "node_modules/@reown/appkit-utils/node_modules/@walletconnect/core": {
      "version": "2.21.0",
      "resolved": "https://registry.npmjs.org/@walletconnect/core/-/core-2.21.0.tgz",
      "integrity": "sha512-o6R7Ua4myxR8aRUAJ1z3gT9nM+jd2B2mfamu6arzy1Cc6vi10fIwFWb6vg3bC8xJ6o9H3n/cN5TOW3aA9Y1XVw==",
      "license": "Apache-2.0",
      "dependencies": {
        "@walletconnect/heartbeat": "1.2.2",
        "@walletconnect/jsonrpc-provider": "1.0.14",
        "@walletconnect/jsonrpc-types": "1.0.4",
        "@walletconnect/jsonrpc-utils": "1.0.8",
        "@walletconnect/jsonrpc-ws-connection": "1.0.16",
        "@walletconnect/keyvaluestorage": "1.1.1",
        "@walletconnect/logger": "2.1.2",
        "@walletconnect/relay-api": "1.0.11",
        "@walletconnect/relay-auth": "1.1.0",
        "@walletconnect/safe-json": "1.0.2",
        "@walletconnect/time": "1.0.2",
        "@walletconnect/types": "2.21.0",
        "@walletconnect/utils": "2.21.0",
        "@walletconnect/window-getters": "1.0.1",
        "es-toolkit": "1.33.0",
        "events": "3.3.0",
        "uint8arrays": "3.1.0"
      },
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@reown/appkit-utils/node_modules/@walletconnect/keyvaluestorage": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/@walletconnect/keyvaluestorage/-/keyvaluestorage-1.1.1.tgz",
      "integrity": "sha512-V7ZQq2+mSxAq7MrRqDxanTzu2RcElfK1PfNYiaVnJgJ7Q7G7hTVwF8voIBx92qsRyGHZihrwNPHuZd1aKkd0rA==",
      "license": "MIT",
      "dependencies": {
        "@walletconnect/safe-json": "^1.0.1",
        "idb-keyval": "^6.2.1",
        "unstorage": "^1.9.0"
      },
      "peerDependencies": {
        "@react-native-async-storage/async-storage": "1.x"
      },
      "peerDependenciesMeta": {
        "@react-native-async-storage/async-storage": {
          "optional": true
        }
      }
    },
    "node_modules/@reown/appkit-utils/node_modules/@walletconnect/sign-client": {
      "version": "2.21.0",
      "resolved": "https://registry.npmjs.org/@walletconnect/sign-client/-/sign-client-2.21.0.tgz",
      "integrity": "sha512-z7h+PeLa5Au2R591d/8ZlziE0stJvdzP9jNFzFolf2RG/OiXulgFKum8PrIyXy+Rg2q95U9nRVUF9fWcn78yBA==",
      "license": "Apache-2.0",
      "dependencies": {
        "@walletconnect/core": "2.21.0",
        "@walletconnect/events": "1.0.1",
        "@walletconnect/heartbeat": "1.2.2",
        "@walletconnect/jsonrpc-utils": "1.0.8",
        "@walletconnect/logger": "2.1.2",
        "@walletconnect/time": "1.0.2",
        "@walletconnect/types": "2.21.0",
        "@walletconnect/utils": "2.21.0",
        "events": "3.3.0"
      }
    },
    "node_modules/@reown/appkit-utils/node_modules/@walletconnect/types": {
      "version": "2.21.0",
      "resolved": "https://registry.npmjs.org/@walletconnect/types/-/types-2.21.0.tgz",
      "integrity": "sha512-ll+9upzqt95ZBWcfkOszXZkfnpbJJ2CmxMfGgE5GmhdxxxCcO5bGhXkI+x8OpiS555RJ/v/sXJYMSOLkmu4fFw==",
      "license": "Apache-2.0",
      "dependencies": {
        "@walletconnect/events": "1.0.1",
        "@walletconnect/heartbeat": "1.2.2",
        "@walletconnect/jsonrpc-types": "1.0.4",
        "@walletconnect/keyvaluestorage": "1.1.1",
        "@walletconnect/logger": "2.1.2",
        "events": "3.3.0"
      }
    },
    "node_modules/@reown/appkit-utils/node_modules/@walletconnect/universal-provider": {
      "version": "2.21.0",
      "resolved": "https://registry.npmjs.org/@walletconnect/universal-provider/-/universal-provider-2.21.0.tgz",
      "integrity": "sha512-mtUQvewt+X0VBQay/xOJBvxsB3Xsm1lTwFjZ6WUwSOTR1X+FNb71hSApnV5kbsdDIpYPXeQUbGt2se1n5E5UBg==",
      "license": "Apache-2.0",
      "dependencies": {
        "@walletconnect/events": "1.0.1",
        "@walletconnect/jsonrpc-http-connection": "1.0.8",
        "@walletconnect/jsonrpc-provider": "1.0.14",
        "@walletconnect/jsonrpc-types": "1.0.4",
        "@walletconnect/jsonrpc-utils": "1.0.8",
        "@walletconnect/keyvaluestorage": "1.1.1",
        "@walletconnect/logger": "2.1.2",
        "@walletconnect/sign-client": "2.21.0",
        "@walletconnect/types": "2.21.0",
        "@walletconnect/utils": "2.21.0",
        "es-toolkit": "1.33.0",
        "events": "3.3.0"
      }
    },
    "node_modules/@reown/appkit-utils/node_modules/@walletconnect/utils": {
      "version": "2.21.0",
      "resolved": "https://registry.npmjs.org/@walletconnect/utils/-/utils-2.21.0.tgz",
      "integrity": "sha512-zfHLiUoBrQ8rP57HTPXW7rQMnYxYI4gT9yTACxVW6LhIFROTF6/ytm5SKNoIvi4a5nX5dfXG4D9XwQUCu8Ilig==",
      "license": "Apache-2.0",
      "dependencies": {
        "@noble/ciphers": "1.2.1",
        "@noble/curves": "1.8.1",
        "@noble/hashes": "1.7.1",
        "@walletconnect/jsonrpc-utils": "1.0.8",
        "@walletconnect/keyvaluestorage": "1.1.1",
        "@walletconnect/relay-api": "1.0.11",
        "@walletconnect/relay-auth": "1.1.0",
        "@walletconnect/safe-json": "1.0.2",
        "@walletconnect/time": "1.0.2",
        "@walletconnect/types": "2.21.0",
        "@walletconnect/window-getters": "1.0.1",
        "@walletconnect/window-metadata": "1.0.1",
        "bs58": "6.0.0",
        "detect-browser": "5.3.0",
        "query-string": "7.1.3",
        "uint8arrays": "3.1.0",
        "viem": "2.23.2"
      }
    },
    "node_modules/@reown/appkit-utils/node_modules/@walletconnect/utils/node_modules/viem": {
      "version": "2.23.2",
      "resolved": "https://registry.npmjs.org/viem/-/viem-2.23.2.tgz",
      "integrity": "sha512-NVmW/E0c5crMOtbEAqMF0e3NmvQykFXhLOc/CkLIXOlzHSA6KXVz3CYVmaKqBF8/xtjsjHAGjdJN3Ru1kFJLaA==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/wevm"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "@noble/curves": "1.8.1",
        "@noble/hashes": "1.7.1",
        "@scure/bip32": "1.6.2",
        "@scure/bip39": "1.5.4",
        "abitype": "1.0.8",
        "isows": "1.0.6",
        "ox": "0.6.7",
        "ws": "8.18.0"
      },
      "peerDependencies": {
        "typescript": ">=5.0.4"
      },
      "peerDependenciesMeta": {
        "typescript": {
          "optional": true
        }
      }
    },
    "node_modules/@reown/appkit-utils/node_modules/abitype": {
      "version": "1.0.8",
      "resolved": "https://registry.npmjs.org/abitype/-/abitype-1.0.8.tgz",
      "integrity": "sha512-ZeiI6h3GnW06uYDLx0etQtX/p8E24UaHHBj57RSjK7YBFe7iuVn07EDpOeP451D06sF27VOz9JJPlIKJmXgkEg==",
      "license": "MIT",
      "funding": {
        "url": "https://github.com/sponsors/wevm"
      },
      "peerDependencies": {
        "typescript": ">=5.0.4",
        "zod": "^3 >=3.22.0"
      },
      "peerDependenciesMeta": {
        "typescript": {
          "optional": true
        },
        "zod": {
          "optional": true
        }
      }
    },
    "node_modules/@reown/appkit-utils/node_modules/base-x": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/base-x/-/base-x-5.0.1.tgz",
      "integrity": "sha512-M7uio8Zt++eg3jPj+rHMfCC+IuygQHHCOU+IYsVtik6FWjuYpVt/+MRKcgsAMHh8mMFAwnB+Bs+mTrFiXjMzKg==",
      "license": "MIT"
    },
    "node_modules/@reown/appkit-utils/node_modules/bs58": {
      "version": "6.0.0",
      "resolved": "https://registry.npmjs.org/bs58/-/bs58-6.0.0.tgz",
      "integrity": "sha512-PD0wEnEYg6ijszw/u8s+iI3H17cTymlrwkKhDhPZq+Sokl3AU4htyBFTjAeNAlCCmg0f53g6ih3jATyCKftTfw==",
      "license": "MIT",
      "dependencies": {
        "base-x": "^5.0.0"
      }
    },
    "node_modules/@reown/appkit-utils/node_modules/chokidar": {
      "version": "4.0.3",
      "resolved": "https://registry.npmjs.org/chokidar/-/chokidar-4.0.3.tgz",
      "integrity": "sha512-Qgzu8kfBvo+cA4962jnP1KkS6Dop5NS6g7R5LFYJr4b8Ub94PPQXUksCw9PvXoeXPRRddRNC5C1JQUR2SMGtnA==",
      "license": "MIT",
      "dependencies": {
        "readdirp": "^4.0.1"
      },
      "engines": {
        "node": ">= 14.16.0"
      },
      "funding": {
        "url": "https://paulmillr.com/funding/"
      }
    },
    "node_modules/@reown/appkit-utils/node_modules/es-toolkit": {
      "version": "1.33.0",
      "resolved": "https://registry.npmjs.org/es-toolkit/-/es-toolkit-1.33.0.tgz",
      "integrity": "sha512-X13Q/ZSc+vsO1q600bvNK4bxgXMkHcf//RxCmYDaRY5DAcT+eoXjY5hoAPGMdRnWQjvyLEcyauG3b6hz76LNqg==",
      "license": "MIT",
      "workspaces": [
        "docs",
        "benchmarks"
      ]
    },
    "node_modules/@reown/appkit-utils/node_modules/isows": {
      "version": "1.0.6",
      "resolved": "https://registry.npmjs.org/isows/-/isows-1.0.6.tgz",
      "integrity": "sha512-lPHCayd40oW98/I0uvgaHKWCSvkzY27LjWLbtzOm64yQ+G3Q5npjjbdppU65iZXkK1Zt+kH9pfegli0AYfwYYw==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/wevm"
        }
      ],
      "license": "MIT",
      "peerDependencies": {
        "ws": "*"
      }
    },
    "node_modules/@reown/appkit-utils/node_modules/lru-cache": {
      "version": "10.4.3",
      "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-10.4.3.tgz",
      "integrity": "sha512-JNAzZcXrCt42VGLuYz0zfAzDfAvJWW6AfYlDBQyDV5DClI2m5sAmK+OIO7s59XfsRsWHp02jAJrRadPRGTt6SQ==",
      "license": "ISC"
    },
    "node_modules/@reown/appkit-utils/node_modules/ox": {
      "version": "0.6.7",
      "resolved": "https://registry.npmjs.org/ox/-/ox-0.6.7.tgz",
      "integrity": "sha512-17Gk/eFsFRAZ80p5eKqv89a57uXjd3NgIf1CaXojATPBuujVc/fQSVhBeAU9JCRB+k7J50WQAyWTxK19T9GgbA==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/wevm"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "@adraffy/ens-normalize": "^1.10.1",
        "@noble/curves": "^1.6.0",
        "@noble/hashes": "^1.5.0",
        "@scure/bip32": "^1.5.0",
        "@scure/bip39": "^1.4.0",
        "abitype": "^1.0.6",
        "eventemitter3": "5.0.1"
      },
      "peerDependencies": {
        "typescript": ">=5.4.0"
      },
      "peerDependenciesMeta": {
        "typescript": {
          "optional": true
        }
      }
    },
    "node_modules/@reown/appkit-utils/node_modules/readdirp": {
      "version": "4.1.2",
      "resolved": "https://registry.npmjs.org/readdirp/-/readdirp-4.1.2.tgz",
      "integrity": "sha512-GDhwkLfywWL2s6vEjyhri+eXmfH6j1L7JE27WhqLeYzoh/A3DBaYGEj2H/HFZCn/kMfim73FXxEJTw06WtxQwg==",
      "license": "MIT",
      "engines": {
        "node": ">= 14.18.0"
      },
      "funding": {
        "type": "individual",
        "url": "https://paulmillr.com/funding/"
      }
    },
    "node_modules/@reown/appkit-utils/node_modules/uint8arrays": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/uint8arrays/-/uint8arrays-3.1.0.tgz",
      "integrity": "sha512-ei5rfKtoRO8OyOIor2Rz5fhzjThwIHJZ3uyDPnDHTXbP0aMQ1RN/6AI5B5d9dBxJOU+BvOAk7ZQ1xphsX8Lrog==",
      "license": "MIT",
      "dependencies": {
        "multiformats": "^9.4.2"
      }
    },
    "node_modules/@reown/appkit-utils/node_modules/unstorage": {
      "version": "1.16.0",
      "resolved": "https://registry.npmjs.org/unstorage/-/unstorage-1.16.0.tgz",
      "integrity": "sha512-WQ37/H5A7LcRPWfYOrDa1Ys02xAbpPJq6q5GkO88FBXVSQzHd7+BjEwfRqyaSWCv9MbsJy058GWjjPjcJ16GGA==",
      "license": "MIT",
      "dependencies": {
        "anymatch": "^3.1.3",
        "chokidar": "^4.0.3",
        "destr": "^2.0.5",
        "h3": "^1.15.2",
        "lru-cache": "^10.4.3",
        "node-fetch-native": "^1.6.6",
        "ofetch": "^1.4.1",
        "ufo": "^1.6.1"
      },
      "peerDependencies": {
        "@azure/app-configuration": "^1.8.0",
        "@azure/cosmos": "^4.2.0",
        "@azure/data-tables": "^13.3.0",
        "@azure/identity": "^4.6.0",
        "@azure/keyvault-secrets": "^4.9.0",
        "@azure/storage-blob": "^12.26.0",
        "@capacitor/preferences": "^6.0.3 || ^7.0.0",
        "@deno/kv": ">=0.9.0",
        "@netlify/blobs": "^6.5.0 || ^7.0.0 || ^8.1.0",
        "@planetscale/database": "^1.19.0",
        "@upstash/redis": "^1.34.3",
        "@vercel/blob": ">=0.27.1",
        "@vercel/kv": "^1.0.1",
        "aws4fetch": "^1.0.20",
        "db0": ">=0.2.1",
        "idb-keyval": "^6.2.1",
        "ioredis": "^5.4.2",
        "uploadthing": "^7.4.4"
      },
      "peerDependenciesMeta": {
        "@azure/app-configuration": {
          "optional": true
        },
        "@azure/cosmos": {
          "optional": true
        },
        "@azure/data-tables": {
          "optional": true
        },
        "@azure/identity": {
          "optional": true
        },
        "@azure/keyvault-secrets": {
          "optional": true
        },
        "@azure/storage-blob": {
          "optional": true
        },
        "@capacitor/preferences": {
          "optional": true
        },
        "@deno/kv": {
          "optional": true
        },
        "@netlify/blobs": {
          "optional": true
        },
        "@planetscale/database": {
          "optional": true
        },
        "@upstash/redis": {
          "optional": true
        },
        "@vercel/blob": {
          "optional": true
        },
        "@vercel/kv": {
          "optional": true
        },
        "aws4fetch": {
          "optional": true
        },
        "db0": {
          "optional": true
        },
        "idb-keyval": {
          "optional": true
        },
        "ioredis": {
          "optional": true
        },
        "uploadthing": {
          "optional": true
        }
      }
    },
    "node_modules/@reown/appkit-utils/node_modules/ws": {
      "version": "8.18.0",
      "resolved": "https://registry.npmjs.org/ws/-/ws-8.18.0.tgz",
      "integrity": "sha512-8VbfWfHLbbwu3+N6OKsOMpBdT4kXPDDB9cJk2bJ6mh9ucxdlnNvH1e+roYkKmN9Nxw2yjz7VzeO9oOz2zJ04Pw==",
      "license": "MIT",
      "engines": {
        "node": ">=10.0.0"
      },
      "peerDependencies": {
        "bufferutil": "^4.0.1",
        "utf-8-validate": ">=5.0.2"
      },
      "peerDependenciesMeta": {
        "bufferutil": {
          "optional": true
        },
        "utf-8-validate": {
          "optional": true
        }
      }
    },
    "node_modules/@reown/appkit-wallet": {
      "version": "1.7.8",
      "resolved": "https://registry.npmjs.org/@reown/appkit-wallet/-/appkit-wallet-1.7.8.tgz",
      "integrity": "sha512-kspz32EwHIOT/eg/ZQbFPxgXq0B/olDOj3YMu7gvLEFz4xyOFd/wgzxxAXkp5LbG4Cp++s/elh79rVNmVFdB9A==",
      "license": "Apache-2.0",
      "dependencies": {
        "@reown/appkit-common": "1.7.8",
        "@reown/appkit-polyfills": "1.7.8",
        "@walletconnect/logger": "2.1.2",
        "zod": "3.22.4"
      }
    },
    "node_modules/@reown/appkit-wallet/node_modules/zod": {
      "version": "3.22.4",
      "resolved": "https://registry.npmjs.org/zod/-/zod-3.22.4.tgz",
      "integrity": "sha512-iC+8Io04lddc+mVqQ9AZ7OQ2MrUKGN+oIQyq1vemgt46jwCwLfhq7/pwnBnNXXXZb8VTVLKwp9EDkx+ryxIWmg==",
      "license": "MIT",
      "funding": {
        "url": "https://github.com/sponsors/colinhacks"
      }
    },
    "node_modules/@reown/appkit/node_modules/@noble/ciphers": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/@noble/ciphers/-/ciphers-1.2.1.tgz",
      "integrity": "sha512-rONPWMC7PeExE077uLE4oqWrZ1IvAfz3oH9LibVAcVCopJiA9R62uavnbEzdkVmJYI6M6Zgkbeb07+tWjlq2XA==",
      "license": "MIT",
      "engines": {
        "node": "^14.21.3 || >=16"
      },
      "funding": {
        "url": "https://paulmillr.com/funding/"
      }
    },
    "node_modules/@reown/appkit/node_modules/@noble/curves": {
      "version": "1.8.1",
      "resolved": "https://registry.npmjs.org/@noble/curves/-/curves-1.8.1.tgz",
      "integrity": "sha512-warwspo+UYUPep0Q+vtdVB4Ugn8GGQj8iyB3gnRWsztmUHTI3S1nhdiWNsPUGL0vud7JlRRk1XEu7Lq1KGTnMQ==",
      "license": "MIT",
      "dependencies": {
        "@noble/hashes": "1.7.1"
      },
      "engines": {
        "node": "^14.21.3 || >=16"
      },
      "funding": {
        "url": "https://paulmillr.com/funding/"
      }
    },
    "node_modules/@reown/appkit/node_modules/@noble/hashes": {
      "version": "1.7.1",
      "resolved": "https://registry.npmjs.org/@noble/hashes/-/hashes-1.7.1.tgz",
      "integrity": "sha512-B8XBPsn4vT/KJAGqDzbwztd+6Yte3P4V7iafm24bxgDe/mlRuK6xmWPuCNrKt2vDafZ8MfJLlchDG/vYafQEjQ==",
      "license": "MIT",
      "engines": {
        "node": "^14.21.3 || >=16"
      },
      "funding": {
        "url": "https://paulmillr.com/funding/"
      }
    },
    "node_modules/@reown/appkit/node_modules/@scure/bip32": {
      "version": "1.6.2",
      "resolved": "https://registry.npmjs.org/@scure/bip32/-/bip32-1.6.2.tgz",
      "integrity": "sha512-t96EPDMbtGgtb7onKKqxRLfE5g05k7uHnHRM2xdE6BP/ZmxaLtPek4J4KfVn/90IQNrU1IOAqMgiDtUdtbe3nw==",
      "license": "MIT",
      "dependencies": {
        "@noble/curves": "~1.8.1",
        "@noble/hashes": "~1.7.1",
        "@scure/base": "~1.2.2"
      },
      "funding": {
        "url": "https://paulmillr.com/funding/"
      }
    },
    "node_modules/@reown/appkit/node_modules/@scure/bip39": {
      "version": "1.5.4",
      "resolved": "https://registry.npmjs.org/@scure/bip39/-/bip39-1.5.4.tgz",
      "integrity": "sha512-TFM4ni0vKvCfBpohoh+/lY05i9gRbSwXWngAsF4CABQxoaOHijxuaZ2R6cStDQ5CHtHO9aGJTr4ksVJASRRyMA==",
      "license": "MIT",
      "dependencies": {
        "@noble/hashes": "~1.7.1",
        "@scure/base": "~1.2.4"
      },
      "funding": {
        "url": "https://paulmillr.com/funding/"
      }
    },
    "node_modules/@reown/appkit/node_modules/@walletconnect/core": {
      "version": "2.21.0",
      "resolved": "https://registry.npmjs.org/@walletconnect/core/-/core-2.21.0.tgz",
      "integrity": "sha512-o6R7Ua4myxR8aRUAJ1z3gT9nM+jd2B2mfamu6arzy1Cc6vi10fIwFWb6vg3bC8xJ6o9H3n/cN5TOW3aA9Y1XVw==",
      "license": "Apache-2.0",
      "dependencies": {
        "@walletconnect/heartbeat": "1.2.2",
        "@walletconnect/jsonrpc-provider": "1.0.14",
        "@walletconnect/jsonrpc-types": "1.0.4",
        "@walletconnect/jsonrpc-utils": "1.0.8",
        "@walletconnect/jsonrpc-ws-connection": "1.0.16",
        "@walletconnect/keyvaluestorage": "1.1.1",
        "@walletconnect/logger": "2.1.2",
        "@walletconnect/relay-api": "1.0.11",
        "@walletconnect/relay-auth": "1.1.0",
        "@walletconnect/safe-json": "1.0.2",
        "@walletconnect/time": "1.0.2",
        "@walletconnect/types": "2.21.0",
        "@walletconnect/utils": "2.21.0",
        "@walletconnect/window-getters": "1.0.1",
        "es-toolkit": "1.33.0",
        "events": "3.3.0",
        "uint8arrays": "3.1.0"
      },
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@reown/appkit/node_modules/@walletconnect/keyvaluestorage": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/@walletconnect/keyvaluestorage/-/keyvaluestorage-1.1.1.tgz",
      "integrity": "sha512-V7ZQq2+mSxAq7MrRqDxanTzu2RcElfK1PfNYiaVnJgJ7Q7G7hTVwF8voIBx92qsRyGHZihrwNPHuZd1aKkd0rA==",
      "license": "MIT",
      "dependencies": {
        "@walletconnect/safe-json": "^1.0.1",
        "idb-keyval": "^6.2.1",
        "unstorage": "^1.9.0"
      },
      "peerDependencies": {
        "@react-native-async-storage/async-storage": "1.x"
      },
      "peerDependenciesMeta": {
        "@react-native-async-storage/async-storage": {
          "optional": true
        }
      }
    },
    "node_modules/@reown/appkit/node_modules/@walletconnect/sign-client": {
      "version": "2.21.0",
      "resolved": "https://registry.npmjs.org/@walletconnect/sign-client/-/sign-client-2.21.0.tgz",
      "integrity": "sha512-z7h+PeLa5Au2R591d/8ZlziE0stJvdzP9jNFzFolf2RG/OiXulgFKum8PrIyXy+Rg2q95U9nRVUF9fWcn78yBA==",
      "license": "Apache-2.0",
      "dependencies": {
        "@walletconnect/core": "2.21.0",
        "@walletconnect/events": "1.0.1",
        "@walletconnect/heartbeat": "1.2.2",
        "@walletconnect/jsonrpc-utils": "1.0.8",
        "@walletconnect/logger": "2.1.2",
        "@walletconnect/time": "1.0.2",
        "@walletconnect/types": "2.21.0",
        "@walletconnect/utils": "2.21.0",
        "events": "3.3.0"
      }
    },
    "node_modules/@reown/appkit/node_modules/@walletconnect/types": {
      "version": "2.21.0",
      "resolved": "https://registry.npmjs.org/@walletconnect/types/-/types-2.21.0.tgz",
      "integrity": "sha512-ll+9upzqt95ZBWcfkOszXZkfnpbJJ2CmxMfGgE5GmhdxxxCcO5bGhXkI+x8OpiS555RJ/v/sXJYMSOLkmu4fFw==",
      "license": "Apache-2.0",
      "dependencies": {
        "@walletconnect/events": "1.0.1",
        "@walletconnect/heartbeat": "1.2.2",
        "@walletconnect/jsonrpc-types": "1.0.4",
        "@walletconnect/keyvaluestorage": "1.1.1",
        "@walletconnect/logger": "2.1.2",
        "events": "3.3.0"
      }
    },
    "node_modules/@reown/appkit/node_modules/@walletconnect/universal-provider": {
      "version": "2.21.0",
      "resolved": "https://registry.npmjs.org/@walletconnect/universal-provider/-/universal-provider-2.21.0.tgz",
      "integrity": "sha512-mtUQvewt+X0VBQay/xOJBvxsB3Xsm1lTwFjZ6WUwSOTR1X+FNb71hSApnV5kbsdDIpYPXeQUbGt2se1n5E5UBg==",
      "license": "Apache-2.0",
      "dependencies": {
        "@walletconnect/events": "1.0.1",
        "@walletconnect/jsonrpc-http-connection": "1.0.8",
        "@walletconnect/jsonrpc-provider": "1.0.14",
        "@walletconnect/jsonrpc-types": "1.0.4",
        "@walletconnect/jsonrpc-utils": "1.0.8",
        "@walletconnect/keyvaluestorage": "1.1.1",
        "@walletconnect/logger": "2.1.2",
        "@walletconnect/sign-client": "2.21.0",
        "@walletconnect/types": "2.21.0",
        "@walletconnect/utils": "2.21.0",
        "es-toolkit": "1.33.0",
        "events": "3.3.0"
      }
    },
    "node_modules/@reown/appkit/node_modules/@walletconnect/utils": {
      "version": "2.21.0",
      "resolved": "https://registry.npmjs.org/@walletconnect/utils/-/utils-2.21.0.tgz",
      "integrity": "sha512-zfHLiUoBrQ8rP57HTPXW7rQMnYxYI4gT9yTACxVW6LhIFROTF6/ytm5SKNoIvi4a5nX5dfXG4D9XwQUCu8Ilig==",
      "license": "Apache-2.0",
      "dependencies": {
        "@noble/ciphers": "1.2.1",
        "@noble/curves": "1.8.1",
        "@noble/hashes": "1.7.1",
        "@walletconnect/jsonrpc-utils": "1.0.8",
        "@walletconnect/keyvaluestorage": "1.1.1",
        "@walletconnect/relay-api": "1.0.11",
        "@walletconnect/relay-auth": "1.1.0",
        "@walletconnect/safe-json": "1.0.2",
        "@walletconnect/time": "1.0.2",
        "@walletconnect/types": "2.21.0",
        "@walletconnect/window-getters": "1.0.1",
        "@walletconnect/window-metadata": "1.0.1",
        "bs58": "6.0.0",
        "detect-browser": "5.3.0",
        "query-string": "7.1.3",
        "uint8arrays": "3.1.0",
        "viem": "2.23.2"
      }
    },
    "node_modules/@reown/appkit/node_modules/@walletconnect/utils/node_modules/viem": {
      "version": "2.23.2",
      "resolved": "https://registry.npmjs.org/viem/-/viem-2.23.2.tgz",
      "integrity": "sha512-NVmW/E0c5crMOtbEAqMF0e3NmvQykFXhLOc/CkLIXOlzHSA6KXVz3CYVmaKqBF8/xtjsjHAGjdJN3Ru1kFJLaA==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/wevm"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "@noble/curves": "1.8.1",
        "@noble/hashes": "1.7.1",
        "@scure/bip32": "1.6.2",
        "@scure/bip39": "1.5.4",
        "abitype": "1.0.8",
        "isows": "1.0.6",
        "ox": "0.6.7",
        "ws": "8.18.0"
      },
      "peerDependencies": {
        "typescript": ">=5.0.4"
      },
      "peerDependenciesMeta": {
        "typescript": {
          "optional": true
        }
      }
    },
    "node_modules/@reown/appkit/node_modules/abitype": {
      "version": "1.0.8",
      "resolved": "https://registry.npmjs.org/abitype/-/abitype-1.0.8.tgz",
      "integrity": "sha512-ZeiI6h3GnW06uYDLx0etQtX/p8E24UaHHBj57RSjK7YBFe7iuVn07EDpOeP451D06sF27VOz9JJPlIKJmXgkEg==",
      "license": "MIT",
      "funding": {
        "url": "https://github.com/sponsors/wevm"
      },
      "peerDependencies": {
        "typescript": ">=5.0.4",
        "zod": "^3 >=3.22.0"
      },
      "peerDependenciesMeta": {
        "typescript": {
          "optional": true
        },
        "zod": {
          "optional": true
        }
      }
    },
    "node_modules/@reown/appkit/node_modules/base-x": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/base-x/-/base-x-5.0.1.tgz",
      "integrity": "sha512-M7uio8Zt++eg3jPj+rHMfCC+IuygQHHCOU+IYsVtik6FWjuYpVt/+MRKcgsAMHh8mMFAwnB+Bs+mTrFiXjMzKg==",
      "license": "MIT"
    },
    "node_modules/@reown/appkit/node_modules/bs58": {
      "version": "6.0.0",
      "resolved": "https://registry.npmjs.org/bs58/-/bs58-6.0.0.tgz",
      "integrity": "sha512-PD0wEnEYg6ijszw/u8s+iI3H17cTymlrwkKhDhPZq+Sokl3AU4htyBFTjAeNAlCCmg0f53g6ih3jATyCKftTfw==",
      "license": "MIT",
      "dependencies": {
        "base-x": "^5.0.0"
      }
    },
    "node_modules/@reown/appkit/node_modules/chokidar": {
      "version": "4.0.3",
      "resolved": "https://registry.npmjs.org/chokidar/-/chokidar-4.0.3.tgz",
      "integrity": "sha512-Qgzu8kfBvo+cA4962jnP1KkS6Dop5NS6g7R5LFYJr4b8Ub94PPQXUksCw9PvXoeXPRRddRNC5C1JQUR2SMGtnA==",
      "license": "MIT",
      "dependencies": {
        "readdirp": "^4.0.1"
      },
      "engines": {
        "node": ">= 14.16.0"
      },
      "funding": {
        "url": "https://paulmillr.com/funding/"
      }
    },
    "node_modules/@reown/appkit/node_modules/es-toolkit": {
      "version": "1.33.0",
      "resolved": "https://registry.npmjs.org/es-toolkit/-/es-toolkit-1.33.0.tgz",
      "integrity": "sha512-X13Q/ZSc+vsO1q600bvNK4bxgXMkHcf//RxCmYDaRY5DAcT+eoXjY5hoAPGMdRnWQjvyLEcyauG3b6hz76LNqg==",
      "license": "MIT",
      "workspaces": [
        "docs",
        "benchmarks"
      ]
    },
    "node_modules/@reown/appkit/node_modules/isows": {
      "version": "1.0.6",
      "resolved": "https://registry.npmjs.org/isows/-/isows-1.0.6.tgz",
      "integrity": "sha512-lPHCayd40oW98/I0uvgaHKWCSvkzY27LjWLbtzOm64yQ+G3Q5npjjbdppU65iZXkK1Zt+kH9pfegli0AYfwYYw==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/wevm"
        }
      ],
      "license": "MIT",
      "peerDependencies": {
        "ws": "*"
      }
    },
    "node_modules/@reown/appkit/node_modules/lru-cache": {
      "version": "10.4.3",
      "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-10.4.3.tgz",
      "integrity": "sha512-JNAzZcXrCt42VGLuYz0zfAzDfAvJWW6AfYlDBQyDV5DClI2m5sAmK+OIO7s59XfsRsWHp02jAJrRadPRGTt6SQ==",
      "license": "ISC"
    },
    "node_modules/@reown/appkit/node_modules/ox": {
      "version": "0.6.7",
      "resolved": "https://registry.npmjs.org/ox/-/ox-0.6.7.tgz",
      "integrity": "sha512-17Gk/eFsFRAZ80p5eKqv89a57uXjd3NgIf1CaXojATPBuujVc/fQSVhBeAU9JCRB+k7J50WQAyWTxK19T9GgbA==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/wevm"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "@adraffy/ens-normalize": "^1.10.1",
        "@noble/curves": "^1.6.0",
        "@noble/hashes": "^1.5.0",
        "@scure/bip32": "^1.5.0",
        "@scure/bip39": "^1.4.0",
        "abitype": "^1.0.6",
        "eventemitter3": "5.0.1"
      },
      "peerDependencies": {
        "typescript": ">=5.4.0"
      },
      "peerDependenciesMeta": {
        "typescript": {
          "optional": true
        }
      }
    },
    "node_modules/@reown/appkit/node_modules/readdirp": {
      "version": "4.1.2",
      "resolved": "https://registry.npmjs.org/readdirp/-/readdirp-4.1.2.tgz",
      "integrity": "sha512-GDhwkLfywWL2s6vEjyhri+eXmfH6j1L7JE27WhqLeYzoh/A3DBaYGEj2H/HFZCn/kMfim73FXxEJTw06WtxQwg==",
      "license": "MIT",
      "engines": {
        "node": ">= 14.18.0"
      },
      "funding": {
        "type": "individual",
        "url": "https://paulmillr.com/funding/"
      }
    },
    "node_modules/@reown/appkit/node_modules/uint8arrays": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/uint8arrays/-/uint8arrays-3.1.0.tgz",
      "integrity": "sha512-ei5rfKtoRO8OyOIor2Rz5fhzjThwIHJZ3uyDPnDHTXbP0aMQ1RN/6AI5B5d9dBxJOU+BvOAk7ZQ1xphsX8Lrog==",
      "license": "MIT",
      "dependencies": {
        "multiformats": "^9.4.2"
      }
    },
    "node_modules/@reown/appkit/node_modules/unstorage": {
      "version": "1.16.0",
      "resolved": "https://registry.npmjs.org/unstorage/-/unstorage-1.16.0.tgz",
      "integrity": "sha512-WQ37/H5A7LcRPWfYOrDa1Ys02xAbpPJq6q5GkO88FBXVSQzHd7+BjEwfRqyaSWCv9MbsJy058GWjjPjcJ16GGA==",
      "license": "MIT",
      "dependencies": {
        "anymatch": "^3.1.3",
        "chokidar": "^4.0.3",
        "destr": "^2.0.5",
        "h3": "^1.15.2",
        "lru-cache": "^10.4.3",
        "node-fetch-native": "^1.6.6",
        "ofetch": "^1.4.1",
        "ufo": "^1.6.1"
      },
      "peerDependencies": {
        "@azure/app-configuration": "^1.8.0",
        "@azure/cosmos": "^4.2.0",
        "@azure/data-tables": "^13.3.0",
        "@azure/identity": "^4.6.0",
        "@azure/keyvault-secrets": "^4.9.0",
        "@azure/storage-blob": "^12.26.0",
        "@capacitor/preferences": "^6.0.3 || ^7.0.0",
        "@deno/kv": ">=0.9.0",
        "@netlify/blobs": "^6.5.0 || ^7.0.0 || ^8.1.0",
        "@planetscale/database": "^1.19.0",
        "@upstash/redis": "^1.34.3",
        "@vercel/blob": ">=0.27.1",
        "@vercel/kv": "^1.0.1",
        "aws4fetch": "^1.0.20",
        "db0": ">=0.2.1",
        "idb-keyval": "^6.2.1",
        "ioredis": "^5.4.2",
        "uploadthing": "^7.4.4"
      },
      "peerDependenciesMeta": {
        "@azure/app-configuration": {
          "optional": true
        },
        "@azure/cosmos": {
          "optional": true
        },
        "@azure/data-tables": {
          "optional": true
        },
        "@azure/identity": {
          "optional": true
        },
        "@azure/keyvault-secrets": {
          "optional": true
        },
        "@azure/storage-blob": {
          "optional": true
        },
        "@capacitor/preferences": {
          "optional": true
        },
        "@deno/kv": {
          "optional": true
        },
        "@netlify/blobs": {
          "optional": true
        },
        "@planetscale/database": {
          "optional": true
        },
        "@upstash/redis": {
          "optional": true
        },
        "@vercel/blob": {
          "optional": true
        },
        "@vercel/kv": {
          "optional": true
        },
        "aws4fetch": {
          "optional": true
        },
        "db0": {
          "optional": true
        },
        "idb-keyval": {
          "optional": true
        },
        "ioredis": {
          "optional": true
        },
        "uploadthing": {
          "optional": true
        }
      }
    },
    "node_modules/@reown/appkit/node_modules/ws": {
      "version": "8.18.0",
      "resolved": "https://registry.npmjs.org/ws/-/ws-8.18.0.tgz",
      "integrity": "sha512-8VbfWfHLbbwu3+N6OKsOMpBdT4kXPDDB9cJk2bJ6mh9ucxdlnNvH1e+roYkKmN9Nxw2yjz7VzeO9oOz2zJ04Pw==",
      "license": "MIT",
      "engines": {
        "node": ">=10.0.0"
      },
      "peerDependencies": {
        "bufferutil": "^4.0.1",
        "utf-8-validate": ">=5.0.2"
      },
      "peerDependenciesMeta": {
        "bufferutil": {
          "optional": true
        },
        "utf-8-validate": {
          "optional": true
        }
      }
    },
    "node_modules/@rolldown/pluginutils": {
      "version": "1.0.0-beta.11",
      "resolved": "https://registry.npmjs.org/@rolldown/pluginutils/-/pluginutils-1.0.0-beta.11.tgz",
      "integrity": "sha512-L/gAA/hyCSuzTF1ftlzUSI/IKr2POHsv1Dd78GfqkR83KMNuswWD61JxGV2L7nRwBBBSDr6R1gCkdTmoN7W4ag==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/@rollup/plugin-virtual": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/@rollup/plugin-virtual/-/plugin-virtual-3.0.2.tgz",
      "integrity": "sha512-10monEYsBp3scM4/ND4LNH5Rxvh3e/cVeL3jWTgZ2SrQ+BmUoQcopVQvnaMcOnykb1VkxUFuDAN+0FnpTFRy2A==",
      "license": "MIT",
      "engines": {
        "node": ">=14.0.0"
      },
      "peerDependencies": {
        "rollup": "^1.20.0||^2.0.0||^3.0.0||^4.0.0"
      },
      "peerDependenciesMeta": {
        "rollup": {
          "optional": true
        }
      }
    },
    "node_modules/@rollup/rollup-android-arm-eabi": {
      "version": "4.44.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-android-arm-eabi/-/rollup-android-arm-eabi-4.44.0.tgz",
      "integrity": "sha512-xEiEE5oDW6tK4jXCAyliuntGR+amEMO7HLtdSshVuhFnKTYoeYMyXQK7pLouAJJj5KHdwdn87bfHAR2nSdNAUA==",
      "cpu": [
        "arm"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "android"
      ]
    },
    "node_modules/@rollup/rollup-android-arm64": {
      "version": "4.44.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-android-arm64/-/rollup-android-arm64-4.44.0.tgz",
      "integrity": "sha512-uNSk/TgvMbskcHxXYHzqwiyBlJ/lGcv8DaUfcnNwict8ba9GTTNxfn3/FAoFZYgkaXXAdrAA+SLyKplyi349Jw==",
      "cpu": [
        "arm64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "android"
      ]
    },
    "node_modules/@rollup/rollup-darwin-arm64": {
      "version": "4.44.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-darwin-arm64/-/rollup-darwin-arm64-4.44.0.tgz",
      "integrity": "sha512-VGF3wy0Eq1gcEIkSCr8Ke03CWT+Pm2yveKLaDvq51pPpZza3JX/ClxXOCmTYYq3us5MvEuNRTaeyFThCKRQhOA==",
      "cpu": [
        "arm64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "darwin"
      ]
    },
    "node_modules/@rollup/rollup-darwin-x64": {
      "version": "4.44.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-darwin-x64/-/rollup-darwin-x64-4.44.0.tgz",
      "integrity": "sha512-fBkyrDhwquRvrTxSGH/qqt3/T0w5Rg0L7ZIDypvBPc1/gzjJle6acCpZ36blwuwcKD/u6oCE/sRWlUAcxLWQbQ==",
      "cpu": [
        "x64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "darwin"
      ]
    },
    "node_modules/@rollup/rollup-freebsd-arm64": {
      "version": "4.44.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-freebsd-arm64/-/rollup-freebsd-arm64-4.44.0.tgz",
      "integrity": "sha512-u5AZzdQJYJXByB8giQ+r4VyfZP+walV+xHWdaFx/1VxsOn6eWJhK2Vl2eElvDJFKQBo/hcYIBg/jaKS8ZmKeNQ==",
      "cpu": [
        "arm64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "freebsd"
      ]
    },
    "node_modules/@rollup/rollup-freebsd-x64": {
      "version": "4.44.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-freebsd-x64/-/rollup-freebsd-x64-4.44.0.tgz",
      "integrity": "sha512-qC0kS48c/s3EtdArkimctY7h3nHicQeEUdjJzYVJYR3ct3kWSafmn6jkNCA8InbUdge6PVx6keqjk5lVGJf99g==",
      "cpu": [
        "x64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "freebsd"
      ]
    },
    "node_modules/@rollup/rollup-linux-arm-gnueabihf": {
      "version": "4.44.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-arm-gnueabihf/-/rollup-linux-arm-gnueabihf-4.44.0.tgz",
      "integrity": "sha512-x+e/Z9H0RAWckn4V2OZZl6EmV0L2diuX3QB0uM1r6BvhUIv6xBPL5mrAX2E3e8N8rEHVPwFfz/ETUbV4oW9+lQ==",
      "cpu": [
        "arm"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-arm-musleabihf": {
      "version": "4.44.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-arm-musleabihf/-/rollup-linux-arm-musleabihf-4.44.0.tgz",
      "integrity": "sha512-1exwiBFf4PU/8HvI8s80icyCcnAIB86MCBdst51fwFmH5dyeoWVPVgmQPcKrMtBQ0W5pAs7jBCWuRXgEpRzSCg==",
      "cpu": [
        "arm"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-arm64-gnu": {
      "version": "4.44.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-arm64-gnu/-/rollup-linux-arm64-gnu-4.44.0.tgz",
      "integrity": "sha512-ZTR2mxBHb4tK4wGf9b8SYg0Y6KQPjGpR4UWwTFdnmjB4qRtoATZ5dWn3KsDwGa5Z2ZBOE7K52L36J9LueKBdOQ==",
      "cpu": [
        "arm64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-arm64-musl": {
      "version": "4.44.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-arm64-musl/-/rollup-linux-arm64-musl-4.44.0.tgz",
      "integrity": "sha512-GFWfAhVhWGd4r6UxmnKRTBwP1qmModHtd5gkraeW2G490BpFOZkFtem8yuX2NyafIP/mGpRJgTJ2PwohQkUY/Q==",
      "cpu": [
        "arm64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-loongarch64-gnu": {
      "version": "4.44.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-loongarch64-gnu/-/rollup-linux-loongarch64-gnu-4.44.0.tgz",
      "integrity": "sha512-xw+FTGcov/ejdusVOqKgMGW3c4+AgqrfvzWEVXcNP6zq2ue+lsYUgJ+5Rtn/OTJf7e2CbgTFvzLW2j0YAtj0Gg==",
      "cpu": [
        "loong64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-powerpc64le-gnu": {
      "version": "4.44.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-powerpc64le-gnu/-/rollup-linux-powerpc64le-gnu-4.44.0.tgz",
      "integrity": "sha512-bKGibTr9IdF0zr21kMvkZT4K6NV+jjRnBoVMt2uNMG0BYWm3qOVmYnXKzx7UhwrviKnmK46IKMByMgvpdQlyJQ==",
      "cpu": [
        "ppc64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-riscv64-gnu": {
      "version": "4.44.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-riscv64-gnu/-/rollup-linux-riscv64-gnu-4.44.0.tgz",
      "integrity": "sha512-vV3cL48U5kDaKZtXrti12YRa7TyxgKAIDoYdqSIOMOFBXqFj2XbChHAtXquEn2+n78ciFgr4KIqEbydEGPxXgA==",
      "cpu": [
        "riscv64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-riscv64-musl": {
      "version": "4.44.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-riscv64-musl/-/rollup-linux-riscv64-musl-4.44.0.tgz",
      "integrity": "sha512-TDKO8KlHJuvTEdfw5YYFBjhFts2TR0VpZsnLLSYmB7AaohJhM8ctDSdDnUGq77hUh4m/djRafw+9zQpkOanE2Q==",
      "cpu": [
        "riscv64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-s390x-gnu": {
      "version": "4.44.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-s390x-gnu/-/rollup-linux-s390x-gnu-4.44.0.tgz",
      "integrity": "sha512-8541GEyktXaw4lvnGp9m84KENcxInhAt6vPWJ9RodsB/iGjHoMB2Pp5MVBCiKIRxrxzJhGCxmNzdu+oDQ7kwRA==",
      "cpu": [
        "s390x"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-x64-gnu": {
      "version": "4.44.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-x64-gnu/-/rollup-linux-x64-gnu-4.44.0.tgz",
      "integrity": "sha512-iUVJc3c0o8l9Sa/qlDL2Z9UP92UZZW1+EmQ4xfjTc1akr0iUFZNfxrXJ/R1T90h/ILm9iXEY6+iPrmYB3pXKjw==",
      "cpu": [
        "x64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-x64-musl": {
      "version": "4.44.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-x64-musl/-/rollup-linux-x64-musl-4.44.0.tgz",
      "integrity": "sha512-PQUobbhLTQT5yz/SPg116VJBgz+XOtXt8D1ck+sfJJhuEsMj2jSej5yTdp8CvWBSceu+WW+ibVL6dm0ptG5fcA==",
      "cpu": [
        "x64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-win32-arm64-msvc": {
      "version": "4.44.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-win32-arm64-msvc/-/rollup-win32-arm64-msvc-4.44.0.tgz",
      "integrity": "sha512-M0CpcHf8TWn+4oTxJfh7LQuTuaYeXGbk0eageVjQCKzYLsajWS/lFC94qlRqOlyC2KvRT90ZrfXULYmukeIy7w==",
      "cpu": [
        "arm64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "win32"
      ]
    },
    "node_modules/@rollup/rollup-win32-ia32-msvc": {
      "version": "4.44.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-win32-ia32-msvc/-/rollup-win32-ia32-msvc-4.44.0.tgz",
      "integrity": "sha512-3XJ0NQtMAXTWFW8FqZKcw3gOQwBtVWP/u8TpHP3CRPXD7Pd6s8lLdH3sHWh8vqKCyyiI8xW5ltJScQmBU9j7WA==",
      "cpu": [
        "ia32"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "win32"
      ]
    },
    "node_modules/@rollup/rollup-win32-x64-msvc": {
      "version": "4.44.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-win32-x64-msvc/-/rollup-win32-x64-msvc-4.44.0.tgz",
      "integrity": "sha512-Q2Mgwt+D8hd5FIPUuPDsvPR7Bguza6yTkJxspDGkZj7tBRn2y4KSWYuIXpftFSjBra76TbKerCV7rgFPQrn+wQ==",
      "cpu": [
        "x64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "win32"
      ]
    },
    "node_modules/@scure/base": {
      "version": "1.2.6",
      "resolved": "https://registry.npmjs.org/@scure/base/-/base-1.2.6.tgz",
      "integrity": "sha512-g/nm5FgUa//MCj1gV09zTJTaM6KBAHqLN907YVQqf7zC49+DcO4B1so4ZX07Ef10Twr6nuqYEH9GEggFXA4Fmg==",
      "license": "MIT",
      "funding": {
        "url": "https://paulmillr.com/funding/"
      }
    },
    "node_modules/@scure/bip32": {
      "version": "1.7.0",
      "resolved": "https://registry.npmjs.org/@scure/bip32/-/bip32-1.7.0.tgz",
      "integrity": "sha512-E4FFX/N3f4B80AKWp5dP6ow+flD1LQZo/w8UnLGYZO674jS6YnYeepycOOksv+vLPSpgN35wgKgy+ybfTb2SMw==",
      "license": "MIT",
      "dependencies": {
        "@noble/curves": "~1.9.0",
        "@noble/hashes": "~1.8.0",
        "@scure/base": "~1.2.5"
      },
      "funding": {
        "url": "https://paulmillr.com/funding/"
      }
    },
    "node_modules/@scure/bip39": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/@scure/bip39/-/bip39-1.3.0.tgz",
      "integrity": "sha512-disdg7gHuTDZtY+ZdkmLpPCk7fxZSu3gBiEGuoC1XYxv9cGx3Z6cpTggCgW6odSOOIXCiDjuGejW+aJKCY/pIQ==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "@noble/hashes": "~1.4.0",
        "@scure/base": "~1.1.6"
      },
      "funding": {
        "url": "https://paulmillr.com/funding/"
      }
    },
    "node_modules/@scure/bip39/node_modules/@noble/hashes": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/@noble/hashes/-/hashes-1.4.0.tgz",
      "integrity": "sha512-V1JJ1WTRUqHHrOSh597hURcMqVKVGL/ea3kv0gSnEdsEZ0/+VyPghM1lMNGc00z7CIQorSvbKpuJkxvuHbvdbg==",
      "license": "MIT",
      "peer": true,
      "engines": {
        "node": ">= 16"
      },
      "funding": {
        "url": "https://paulmillr.com/funding/"
      }
    },
    "node_modules/@scure/bip39/node_modules/@scure/base": {
      "version": "1.1.9",
      "resolved": "https://registry.npmjs.org/@scure/base/-/base-1.1.9.tgz",
      "integrity": "sha512-8YKhl8GHiNI/pU2VMaofa2Tor7PJRAjwQLBBuilkJ9L5+13yVbC7JO/wS7piioAvPSwR3JKM1IJ/u4xQzbcXKg==",
      "license": "MIT",
      "peer": true,
      "funding": {
        "url": "https://paulmillr.com/funding/"
      }
    },
    "node_modules/@scure/starknet": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/@scure/starknet/-/starknet-1.1.0.tgz",
      "integrity": "sha512-83g3M6Ix2qRsPN4wqLDqiRZ2GBNbjVWfboJE/9UjfG+MHr6oDSu/CWgy8hsBSJejr09DkkL+l0Ze4KVrlCIdtQ==",
      "license": "MIT",
      "dependencies": {
        "@noble/curves": "~1.7.0",
        "@noble/hashes": "~1.6.0"
      },
      "funding": {
        "url": "https://paulmillr.com/funding/"
      }
    },
    "node_modules/@scure/starknet/node_modules/@noble/curves": {
      "version": "1.7.0",
      "resolved": "https://registry.npmjs.org/@noble/curves/-/curves-1.7.0.tgz",
      "integrity": "sha512-UTMhXK9SeDhFJVrHeUJ5uZlI6ajXg10O6Ddocf9S6GjbSBVZsJo88HzKwXznNfGpMTRDyJkqMjNDPYgf0qFWnw==",
      "license": "MIT",
      "dependencies": {
        "@noble/hashes": "1.6.0"
      },
      "engines": {
        "node": "^14.21.3 || >=16"
      },
      "funding": {
        "url": "https://paulmillr.com/funding/"
      }
    },
    "node_modules/@scure/starknet/node_modules/@noble/curves/node_modules/@noble/hashes": {
      "version": "1.6.0",
      "resolved": "https://registry.npmjs.org/@noble/hashes/-/hashes-1.6.0.tgz",
      "integrity": "sha512-YUULf0Uk4/mAA89w+k3+yUYh6NrEvxZa5T6SY3wlMvE2chHkxFUUIDI8/XW1QSC357iA5pSnqt7XEhvFOqmDyQ==",
      "license": "MIT",
      "engines": {
        "node": "^14.21.3 || >=16"
      },
      "funding": {
        "url": "https://paulmillr.com/funding/"
      }
    },
    "node_modules/@scure/starknet/node_modules/@noble/hashes": {
      "version": "1.6.1",
      "resolved": "https://registry.npmjs.org/@noble/hashes/-/hashes-1.6.1.tgz",
      "integrity": "sha512-pq5D8h10hHBjyqX+cfBm0i8JUXJ0UhczFc4r74zbuT9XgewFo2E3J1cOaGtdZynILNmQ685YWGzGE1Zv6io50w==",
      "license": "MIT",
      "engines": {
        "node": "^14.21.3 || >=16"
      },
      "funding": {
        "url": "https://paulmillr.com/funding/"
      }
    },
    "node_modules/@socket.io/component-emitter": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/@socket.io/component-emitter/-/component-emitter-3.1.2.tgz",
      "integrity": "sha512-9BCxFwvbGg/RsZK9tjXd8s4UcwR0MWeFQ1XEKIQVVvAGJyINdrqKMcTRyLoK8Rse1GjzLV9cwjWV1olXRWEXVA==",
      "license": "MIT",
      "peer": true
    },
    "node_modules/@solana/buffer-layout": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/@solana/buffer-layout/-/buffer-layout-4.0.1.tgz",
      "integrity": "sha512-E1ImOIAD1tBZFRdjeM4/pzTiTApC0AOBGwyAMS4fwIodCWArzJ3DWdoh8cKxeFM2fElkxBh2Aqts1BPC373rHA==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "buffer": "~6.0.3"
      },
      "engines": {
        "node": ">=5.10"
      }
    },
    "node_modules/@solana/codecs-core": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/@solana/codecs-core/-/codecs-core-2.1.1.tgz",
      "integrity": "sha512-iPQW3UZ2Vi7QFBo2r9tw0NubtH8EdrhhmZulx6lC8V5a+qjaxovtM/q/UW2BTNpqqHLfO0tIcLyBLrNH4HTWPg==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "@solana/errors": "2.1.1"
      },
      "engines": {
        "node": ">=20.18.0"
      },
      "peerDependencies": {
        "typescript": ">=5.3.3"
      }
    },
    "node_modules/@solana/codecs-numbers": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/@solana/codecs-numbers/-/codecs-numbers-2.1.1.tgz",
      "integrity": "sha512-m20IUPJhPUmPkHSlZ2iMAjJ7PaYUvlMtFhCQYzm9BEBSI6OCvXTG3GAPpAnSGRBfg5y+QNqqmKn4QHU3B6zzCQ==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "@solana/codecs-core": "2.1.1",
        "@solana/errors": "2.1.1"
      },
      "engines": {
        "node": ">=20.18.0"
      },
      "peerDependencies": {
        "typescript": ">=5.3.3"
      }
    },
    "node_modules/@solana/errors": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/@solana/errors/-/errors-2.1.1.tgz",
      "integrity": "sha512-sj6DaWNbSJFvLzT8UZoabMefQUfSW/8tXK7NTiagsDmh+Q87eyQDDC9L3z+mNmx9b6dEf6z660MOIplDD2nfEw==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "chalk": "^5.4.1",
        "commander": "^13.1.0"
      },
      "bin": {
        "errors": "bin/cli.mjs"
      },
      "engines": {
        "node": ">=20.18.0"
      },
      "peerDependencies": {
        "typescript": ">=5.3.3"
      }
    },
    "node_modules/@solana/web3.js": {
      "version": "1.98.2",
      "resolved": "https://registry.npmjs.org/@solana/web3.js/-/web3.js-1.98.2.tgz",
      "integrity": "sha512-BqVwEG+TaG2yCkBMbD3C4hdpustR4FpuUFRPUmqRZYYlPI9Hg4XMWxHWOWRzHE9Lkc9NDjzXFX7lDXSgzC7R1A==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "@babel/runtime": "^7.25.0",
        "@noble/curves": "^1.4.2",
        "@noble/hashes": "^1.4.0",
        "@solana/buffer-layout": "^4.0.1",
        "@solana/codecs-numbers": "^2.1.0",
        "agentkeepalive": "^4.5.0",
        "bn.js": "^5.2.1",
        "borsh": "^0.7.0",
        "bs58": "^4.0.1",
        "buffer": "6.0.3",
        "fast-stable-stringify": "^1.0.0",
        "jayson": "^4.1.1",
        "node-fetch": "^2.7.0",
        "rpc-websockets": "^9.0.2",
        "superstruct": "^2.0.2"
      }
    },
    "node_modules/@starknet-io/get-starknet": {
      "version": "4.0.7",
      "resolved": "https://registry.npmjs.org/@starknet-io/get-starknet/-/get-starknet-4.0.7.tgz",
      "integrity": "sha512-env/ZN5EmDJ6vDtIgjOjsEvvzdKBDaWZ0aLe79IVJ7lq2icqKbX86yR1/CUf4AU31AFYZHWZ3daOaGFT4nHSUQ==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "@starknet-io/get-starknet-core": "4.0.7",
        "bowser": "^2.11.0"
      }
    },
    "node_modules/@starknet-io/get-starknet-core": {
      "version": "4.0.7",
      "resolved": "https://registry.npmjs.org/@starknet-io/get-starknet-core/-/get-starknet-core-4.0.7.tgz",
      "integrity": "sha512-ocwQTdDvGa+0CvjGygyaTuFkda2R82dofydts8uXr9p0Diy/bmYW1fkuqJfi1nC5M+YcvvuEpl6wFvwXM1og5w==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "@module-federation/runtime": "^0.1.2",
        "@starknet-io/types-js": "^0.7.7",
        "async-mutex": "^0.5.0"
      }
    },
    "node_modules/@starknet-io/types-js": {
      "version": "0.7.10",
      "resolved": "https://registry.npmjs.org/@starknet-io/types-js/-/types-js-0.7.10.tgz",
      "integrity": "sha512-1VtCqX4AHWJlRRSYGSn+4X1mqolI1Tdq62IwzoU2vUuEE72S1OlEeGhpvd6XsdqXcfHmVzYfj8k1XtKBQqwo9w==",
      "license": "MIT"
    },
    "node_modules/@starknet-react/chains": {
      "version": "3.1.3",
      "resolved": "https://registry.npmjs.org/@starknet-react/chains/-/chains-3.1.3.tgz",
      "integrity": "sha512-b16VQyxqZXfiVmlKEkjfg+Oj8fdSnGWh1KU87O/unn6NpmaD9h511az1Cs6aW/j3qCIF1o5CrqfEnU1NWV7MVA==",
      "license": "MIT"
    },
    "node_modules/@starknet-react/core": {
      "version": "3.7.4",
      "resolved": "https://registry.npmjs.org/@starknet-react/core/-/core-3.7.4.tgz",
      "integrity": "sha512-fHzme/TLyhSJRIo3BarehiM23IZuLeT0gM0jvTpz8w1/Y05tK+UywpyzBCkueU+iHEwhopsICDpOFhFtqaJJZA==",
      "license": "MIT",
      "dependencies": {
        "@starknet-io/types-js": "^0.7.7",
        "@starknet-react/chains": "^3.1.3",
        "@tanstack/react-query": "^5.25.0",
        "abi-wan-kanabi": "^2.2.4",
        "eventemitter3": "^5.0.1",
        "viem": "^2.21.1",
        "zod": "^3.22.4"
      },
      "peerDependencies": {
        "get-starknet-core": "^4.0.0",
        "react": "^18.0",
        "starknet": "^6.11.0"
      }
    },
    "node_modules/@swc/core": {
      "version": "1.12.4",
      "resolved": "https://registry.npmjs.org/@swc/core/-/core-1.12.4.tgz",
      "integrity": "sha512-hn30ebV4njAn0NAUM+3a0qCF+MJgqTNSrfA/hUAbC6TVjOQy2OYGQwkUvCu/V7S2+rZxrUsTpKOnZ7qqECZV9Q==",
      "hasInstallScript": true,
      "license": "Apache-2.0",
      "dependencies": {
        "@swc/counter": "^0.1.3",
        "@swc/types": "^0.1.23"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/swc"
      },
      "optionalDependencies": {
        "@swc/core-darwin-arm64": "1.12.4",
        "@swc/core-darwin-x64": "1.12.4",
        "@swc/core-linux-arm-gnueabihf": "1.12.4",
        "@swc/core-linux-arm64-gnu": "1.12.4",
        "@swc/core-linux-arm64-musl": "1.12.4",
        "@swc/core-linux-x64-gnu": "1.12.4",
        "@swc/core-linux-x64-musl": "1.12.4",
        "@swc/core-win32-arm64-msvc": "1.12.4",
        "@swc/core-win32-ia32-msvc": "1.12.4",
        "@swc/core-win32-x64-msvc": "1.12.4"
      },
      "peerDependencies": {
        "@swc/helpers": ">=0.5.17"
      },
      "peerDependenciesMeta": {
        "@swc/helpers": {
          "optional": true
        }
      }
    },
    "node_modules/@swc/core-darwin-arm64": {
      "version": "1.12.4",
      "resolved": "https://registry.npmjs.org/@swc/core-darwin-arm64/-/core-darwin-arm64-1.12.4.tgz",
      "integrity": "sha512-HihKfeitjZU2ab94Zf893sxzFryLKX0TweGsNXXOLNtkSMLw50auuYfpRM0BOL9/uXXtuCWgRIF6P030SAX5xQ==",
      "cpu": [
        "arm64"
      ],
      "license": "Apache-2.0 AND MIT",
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/@swc/core-darwin-x64": {
      "version": "1.12.4",
      "resolved": "https://registry.npmjs.org/@swc/core-darwin-x64/-/core-darwin-x64-1.12.4.tgz",
      "integrity": "sha512-meYCXHyYb6RDdu2N5PNAf0EelyxPBFhRcVo4kBFLuvuNb0m6EUg///VWy8MUMXq9/s9uzGS9kJVXXdRdr/d6FA==",
      "cpu": [
        "x64"
      ],
      "license": "Apache-2.0 AND MIT",
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/@swc/core-linux-arm-gnueabihf": {
      "version": "1.12.4",
      "resolved": "https://registry.npmjs.org/@swc/core-linux-arm-gnueabihf/-/core-linux-arm-gnueabihf-1.12.4.tgz",
      "integrity": "sha512-szfDbf7mE8V64of0q/LSqbk+em+T+TD3uqnH40Z7Qu/aL8vi5CHgyLjWG2SLkLLpyjgkAUF6AKrupgnBYcC2NA==",
      "cpu": [
        "arm"
      ],
      "license": "Apache-2.0",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/@swc/core-linux-arm64-gnu": {
      "version": "1.12.4",
      "resolved": "https://registry.npmjs.org/@swc/core-linux-arm64-gnu/-/core-linux-arm64-gnu-1.12.4.tgz",
      "integrity": "sha512-n0IY76w+Scx8m3HIVRvLkoResuwsQgjDfAk9bxn99dq4leQO+mE0fkPl0Yw/1BIsPh+kxGfopIJH9zsZ1Z2YrA==",
      "cpu": [
        "arm64"
      ],
      "license": "Apache-2.0 AND MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/@swc/core-linux-arm64-musl": {
      "version": "1.12.4",
      "resolved": "https://registry.npmjs.org/@swc/core-linux-arm64-musl/-/core-linux-arm64-musl-1.12.4.tgz",
      "integrity": "sha512-wE5jmFi5cEQyLy8WmCWmNwfKETrnzy2D8YNi/xpYWpLPWqPhcelpa6tswkfYlbsMmmOh7hQNoTba1QdGu0jvHQ==",
      "cpu": [
        "arm64"
      ],
      "license": "Apache-2.0 AND MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/@swc/core-linux-x64-gnu": {
      "version": "1.12.4",
      "resolved": "https://registry.npmjs.org/@swc/core-linux-x64-gnu/-/core-linux-x64-gnu-1.12.4.tgz",
      "integrity": "sha512-6S50Xd/7ePjEwrXyHMxpKTZ+KBrgUwMA8hQPbArUOwH4S5vHBr51heL0iXbUkppn1bkSr0J0IbOove5hzn+iqQ==",
      "cpu": [
        "x64"
      ],
      "license": "Apache-2.0 AND MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/@swc/core-linux-x64-musl": {
      "version": "1.12.4",
      "resolved": "https://registry.npmjs.org/@swc/core-linux-x64-musl/-/core-linux-x64-musl-1.12.4.tgz",
      "integrity": "sha512-hbYRyaHhC13vYKuGG5BrAG5fjjWEQFfQetuFp/4QKEoXDzdnabJoixxWTQACDL3m0JW32nJ+gUzsYIPtFYkwXg==",
      "cpu": [
        "x64"
      ],
      "license": "Apache-2.0 AND MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/@swc/core-win32-arm64-msvc": {
      "version": "1.12.4",
      "resolved": "https://registry.npmjs.org/@swc/core-win32-arm64-msvc/-/core-win32-arm64-msvc-1.12.4.tgz",
      "integrity": "sha512-e6EbfjPL8GA/bb1lc9Omtxjlz+1ThTsAuBsy4Q3Kpbuh6B3jclg8KzxU/6t91v23wG593mieTyR5f3Pr7X3AWw==",
      "cpu": [
        "arm64"
      ],
      "license": "Apache-2.0 AND MIT",
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/@swc/core-win32-ia32-msvc": {
      "version": "1.12.4",
      "resolved": "https://registry.npmjs.org/@swc/core-win32-ia32-msvc/-/core-win32-ia32-msvc-1.12.4.tgz",
      "integrity": "sha512-RG2FzmllBTUf4EksANlIvLckcBrLZEA0t13LIa6L213UZKQfEuDNHezqESgoVhJMg2S/tWauitATOCFgZNSmjg==",
      "cpu": [
        "ia32"
      ],
      "license": "Apache-2.0 AND MIT",
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/@swc/core-win32-x64-msvc": {
      "version": "1.12.4",
      "resolved": "https://registry.npmjs.org/@swc/core-win32-x64-msvc/-/core-win32-x64-msvc-1.12.4.tgz",
      "integrity": "sha512-oRHKnZlR83zaMeVUCmHENa4j5uNRAWbmEpjYbzRcfC45LPFNWKGWGAGERLx0u87XMUtTGqnVYxnBTHN/rzDHOw==",
      "cpu": [
        "x64"
      ],
      "license": "Apache-2.0 AND MIT",
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/@swc/counter": {
      "version": "0.1.3",
      "resolved": "https://registry.npmjs.org/@swc/counter/-/counter-0.1.3.tgz",
      "integrity": "sha512-e2BR4lsJkkRlKZ/qCHPw9ZaSxc0MVUd7gtbtaB7aMvHeJVYe8sOB8DBZkP2DtISHGSku9sCK6T6cnY0CtXrOCQ==",
      "license": "Apache-2.0"
    },
    "node_modules/@swc/helpers": {
      "version": "0.5.17",
      "resolved": "https://registry.npmjs.org/@swc/helpers/-/helpers-0.5.17.tgz",
      "integrity": "sha512-5IKx/Y13RsYd+sauPb2x+U/xZikHjolzfuDgTAl/Tdf3Q8rslRvC19NKDLgAJQ6wsqADk10ntlv08nPFw/gO/A==",
      "license": "Apache-2.0",
      "peer": true,
      "dependencies": {
        "tslib": "^2.8.0"
      }
    },
    "node_modules/@swc/types": {
      "version": "0.1.23",
      "resolved": "https://registry.npmjs.org/@swc/types/-/types-0.1.23.tgz",
      "integrity": "sha512-u1iIVZV9Q0jxY+yM2vw/hZGDNudsN85bBpTqzAQ9rzkxW9D+e3aEM4Han+ow518gSewkXgjmEK0BD79ZcNVgPw==",
      "license": "Apache-2.0",
      "dependencies": {
        "@swc/counter": "^0.1.3"
      }
    },
    "node_modules/@tanstack/query-core": {
      "version": "5.80.10",
      "resolved": "https://registry.npmjs.org/@tanstack/query-core/-/query-core-5.80.10.tgz",
      "integrity": "sha512-mUNQOtzxkjL6jLbyChZoSBP6A5gQDVRUiPvW+/zw/9ftOAz+H754zCj3D8PwnzPKyHzGkQ9JbH48ukhym9LK1Q==",
      "license": "MIT",
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/tannerlinsley"
      }
    },
    "node_modules/@tanstack/react-query": {
      "version": "5.80.10",
      "resolved": "https://registry.npmjs.org/@tanstack/react-query/-/react-query-5.80.10.tgz",
      "integrity": "sha512-6zM098J8sLy9oU60XAdzUlAH4wVzoMVsWUWiiE/Iz4fd67PplxeyL4sw/MPcVJJVhbwGGXCsHn9GrQt2mlAzig==",
      "license": "MIT",
      "dependencies": {
        "@tanstack/query-core": "5.80.10"
      },
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/tannerlinsley"
      },
      "peerDependencies": {
        "react": "^18 || ^19"
      }
    },
    "node_modules/@telegram-apps/bridge": {
      "version": "1.9.2",
      "resolved": "https://registry.npmjs.org/@telegram-apps/bridge/-/bridge-1.9.2.tgz",
      "integrity": "sha512-SJLcNWLXhbbZr9MiqFH/g2ceuitSJKMxUIZysK4zUNyTUNuonrQG80Q/yrO+XiNbKUj8WdDNM86NBARhuyyinQ==",
      "license": "MIT",
      "dependencies": {
        "@telegram-apps/signals": "^1.1.1",
        "@telegram-apps/toolkit": "^1.1.1",
        "@telegram-apps/transformers": "^1.2.2",
        "@telegram-apps/types": "^1.2.1"
      }
    },
    "node_modules/@telegram-apps/navigation": {
      "version": "1.0.14",
      "resolved": "https://registry.npmjs.org/@telegram-apps/navigation/-/navigation-1.0.14.tgz",
      "integrity": "sha512-bqNgF/J8Po7ZtsELm3E1a6aPr7awwxO3sIqD8J6u12urOlGoW5+1KxKKbkPa58mgXuQdsltd8apI+OVy0IYiUA==",
      "license": "MIT"
    },
    "node_modules/@telegram-apps/sdk": {
      "version": "2.11.3",
      "resolved": "https://registry.npmjs.org/@telegram-apps/sdk/-/sdk-2.11.3.tgz",
      "integrity": "sha512-KdULzgRe1gcR8B3Z/t3hQrEaDmLGrfsL2IePtPP6ehtMn5tT0uPfnjtDLjDNQMyI7D4Tv2ZOzvDx45wOhhreXg==",
      "license": "MIT",
      "dependencies": {
        "@telegram-apps/bridge": "^1.9.2",
        "@telegram-apps/navigation": "^1.0.13",
        "@telegram-apps/signals": "^1.1.1",
        "@telegram-apps/toolkit": "^1.1.1",
        "@telegram-apps/transformers": "^1.2.2"
      }
    },
    "node_modules/@telegram-apps/signals": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/@telegram-apps/signals/-/signals-1.1.2.tgz",
      "integrity": "sha512-1P1kdCLX7MfETGPxH7f3UZKIsdE7Tz5S7QmN4Km1sbYQMakD5Bi1NecSMR7/wnHp50gWMI1JzENcMtCEmouhSg==",
      "license": "MIT"
    },
    "node_modules/@telegram-apps/toolkit": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/@telegram-apps/toolkit/-/toolkit-1.1.1.tgz",
      "integrity": "sha512-+vhKx6ngfvjyTE6Xagl3z1TPVbfx5s7xAkcYzCdHYUo6T60jLIqLgyZMcI1UPoIAMuMu1pHoO+p8QNCj/+tFmw==",
      "license": "MIT"
    },
    "node_modules/@telegram-apps/transformers": {
      "version": "1.2.2",
      "resolved": "https://registry.npmjs.org/@telegram-apps/transformers/-/transformers-1.2.2.tgz",
      "integrity": "sha512-vvMwXckd1D7Ozc0h66PSUwF5QLrRV9HlGJFFeBuUex8QEk5mSPtsJkLiqB8aBbwuFDa91+TUSM/CxqPZO/e9YQ==",
      "license": "MIT",
      "dependencies": {
        "@telegram-apps/toolkit": "^1.1.1",
        "@telegram-apps/types": "^1.2.1"
      }
    },
    "node_modules/@telegram-apps/types": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/@telegram-apps/types/-/types-1.2.1.tgz",
      "integrity": "sha512-so4HLh7clur0YyMthi9KVIgWoGpZdXlFOuQjk3+Q5NAvJZ11nAheBSwPlGw/Ko92+zwvrSBE/lQyN2+p17RP+w==",
      "license": "MIT"
    },
    "node_modules/@trpc/client": {
      "version": "10.45.2",
      "resolved": "https://registry.npmjs.org/@trpc/client/-/client-10.45.2.tgz",
      "integrity": "sha512-ykALM5kYWTLn1zYuUOZ2cPWlVfrXhc18HzBDyRhoPYN0jey4iQHEFSEowfnhg1RvYnrAVjNBgHNeSAXjrDbGwg==",
      "funding": [
        "https://trpc.io/sponsor"
      ],
      "license": "MIT",
      "peer": true,
      "peerDependencies": {
        "@trpc/server": "10.45.2"
      }
    },
    "node_modules/@trpc/server": {
      "version": "10.45.2",
      "resolved": "https://registry.npmjs.org/@trpc/server/-/server-10.45.2.tgz",
      "integrity": "sha512-wOrSThNNE4HUnuhJG6PfDRp4L2009KDVxsd+2VYH8ro6o/7/jwYZ8Uu5j+VaW+mOmc8EHerHzGcdbGNQSAUPgg==",
      "funding": [
        "https://trpc.io/sponsor"
      ],
      "license": "MIT",
      "peer": true
    },
    "node_modules/@turnkey/api-key-stamper": {
      "version": "0.4.5",
      "resolved": "https://registry.npmjs.org/@turnkey/api-key-stamper/-/api-key-stamper-0.4.5.tgz",
      "integrity": "sha512-8UeYt/2WtMrK2uSFzjiRXdCVc9SmKlMVuA4f1Z+SlxcsW0wlEpNM/7bd8N4VVVAjoE8Yy50Vhk3ylfQFtlaKsQ==",
      "license": "Apache-2.0",
      "dependencies": {
        "@noble/curves": "^1.3.0",
        "@turnkey/encoding": "0.4.0",
        "sha256-uint8array": "^0.10.7"
      },
      "engines": {
        "node": ">=18.0.0"
      }
    },
    "node_modules/@turnkey/crypto": {
      "version": "2.3.1",
      "resolved": "https://registry.npmjs.org/@turnkey/crypto/-/crypto-2.3.1.tgz",
      "integrity": "sha512-fHKCw0inuThEKIpZnC8pvz16egZHf08wES0LdSkM9XrGDcI7p0eqF7nAHgfAMW/0qNVZD8AKW+g/5O97HBwZ4w==",
      "license": "Apache-2.0",
      "dependencies": {
        "@noble/ciphers": "0.5.3",
        "@noble/curves": "1.4.0",
        "@noble/hashes": "1.4.0",
        "@turnkey/encoding": "0.4.0",
        "bs58": "^5.0.0",
        "bs58check": "3.0.1"
      },
      "engines": {
        "node": ">=18.0.0"
      }
    },
    "node_modules/@turnkey/crypto/node_modules/@noble/curves": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/@noble/curves/-/curves-1.4.0.tgz",
      "integrity": "sha512-p+4cb332SFCrReJkCYe8Xzm0OWi4Jji5jVdIZRL/PmacmDkFNw6MrrV+gGpiPxLHbV+zKFRywUWbaseT+tZRXg==",
      "license": "MIT",
      "dependencies": {
        "@noble/hashes": "1.4.0"
      },
      "funding": {
        "url": "https://paulmillr.com/funding/"
      }
    },
    "node_modules/@turnkey/crypto/node_modules/@noble/hashes": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/@noble/hashes/-/hashes-1.4.0.tgz",
      "integrity": "sha512-V1JJ1WTRUqHHrOSh597hURcMqVKVGL/ea3kv0gSnEdsEZ0/+VyPghM1lMNGc00z7CIQorSvbKpuJkxvuHbvdbg==",
      "license": "MIT",
      "engines": {
        "node": ">= 16"
      },
      "funding": {
        "url": "https://paulmillr.com/funding/"
      }
    },
    "node_modules/@turnkey/crypto/node_modules/base-x": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/base-x/-/base-x-4.0.1.tgz",
      "integrity": "sha512-uAZ8x6r6S3aUM9rbHGVOIsR15U/ZSc82b3ymnCPsT45Gk1DDvhDPdIgB5MrhirZWt+5K0EEPQH985kNqZgNPFw==",
      "license": "MIT"
    },
    "node_modules/@turnkey/crypto/node_modules/bs58": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/bs58/-/bs58-5.0.0.tgz",
      "integrity": "sha512-r+ihvQJvahgYT50JD05dyJNKlmmSlMoOGwn1lCcEzanPglg7TxYjioQUYehQ9mAR/+hOSd2jRc/Z2y5UxBymvQ==",
      "license": "MIT",
      "dependencies": {
        "base-x": "^4.0.0"
      }
    },
    "node_modules/@turnkey/encoding": {
      "version": "0.4.0",
      "resolved": "https://registry.npmjs.org/@turnkey/encoding/-/encoding-0.4.0.tgz",
      "integrity": "sha512-ptLgcpWVt34KTPx0omF2QLJrosW6I//clCJ4G2+yngYFCzrdR0yBchV/BOcfME67mK1v3MmauyXl9AAnQTmB4Q==",
      "license": "Apache-2.0",
      "engines": {
        "node": ">=18.0.0"
      }
    },
    "node_modules/@turnkey/http": {
      "version": "3.3.0",
      "resolved": "https://registry.npmjs.org/@turnkey/http/-/http-3.3.0.tgz",
      "integrity": "sha512-m1fP8aqQcI0U4j7Gw89UbavavWP7AWGmEwoJl5nBhQz88mtep6AaZTsUoDDU4HXg0ch+aQ2/lfl0KFPp8s2u5Q==",
      "license": "Apache-2.0",
      "dependencies": {
        "@turnkey/api-key-stamper": "0.4.5",
        "@turnkey/encoding": "0.4.0",
        "@turnkey/webauthn-stamper": "0.5.0",
        "cross-fetch": "^3.1.5"
      },
      "engines": {
        "node": ">=16.0.0"
      }
    },
    "node_modules/@turnkey/http/node_modules/cross-fetch": {
      "version": "3.2.0",
      "resolved": "https://registry.npmjs.org/cross-fetch/-/cross-fetch-3.2.0.tgz",
      "integrity": "sha512-Q+xVJLoGOeIMXZmbUK4HYk+69cQH6LudR0Vu/pRm2YlU/hDV9CiS0gKUMaWY5f2NeUH9C1nV3bsTlCo0FsTV1Q==",
      "license": "MIT",
      "dependencies": {
        "node-fetch": "^2.7.0"
      }
    },
    "node_modules/@turnkey/iframe-stamper": {
      "version": "2.5.0",
      "resolved": "https://registry.npmjs.org/@turnkey/iframe-stamper/-/iframe-stamper-2.5.0.tgz",
      "integrity": "sha512-XjntbA5CNjxGRH+loceAlVLL9PG9Q4Y7p5zjBm4DeKclhD6lpUl9h8INArMEXIFbfLwLjjS6Q+SmQG4BHvNY6A==",
      "license": "Apache-2.0",
      "engines": {
        "node": ">=18.0.0"
      }
    },
    "node_modules/@turnkey/sdk-browser": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/@turnkey/sdk-browser/-/sdk-browser-4.3.0.tgz",
      "integrity": "sha512-TBAWpA28PnqFOeD45Ljzq5RfAabj4Qlnvo1toekt+yf6Hk13Nsm6R5FEiivHUMSNcvKBAwf5uQg+MPbBndymlQ==",
      "license": "Apache-2.0",
      "dependencies": {
        "@turnkey/api-key-stamper": "0.4.5",
        "@turnkey/crypto": "2.3.1",
        "@turnkey/encoding": "0.4.0",
        "@turnkey/http": "3.3.0",
        "@turnkey/iframe-stamper": "2.5.0",
        "@turnkey/wallet-stamper": "1.0.3",
        "@turnkey/webauthn-stamper": "0.5.0",
        "bs58check": "^3.0.1",
        "buffer": "^6.0.3",
        "cross-fetch": "^3.1.5",
        "hpke-js": "^1.2.7"
      },
      "engines": {
        "node": ">=18.0.0"
      }
    },
    "node_modules/@turnkey/sdk-browser/node_modules/cross-fetch": {
      "version": "3.2.0",
      "resolved": "https://registry.npmjs.org/cross-fetch/-/cross-fetch-3.2.0.tgz",
      "integrity": "sha512-Q+xVJLoGOeIMXZmbUK4HYk+69cQH6LudR0Vu/pRm2YlU/hDV9CiS0gKUMaWY5f2NeUH9C1nV3bsTlCo0FsTV1Q==",
      "license": "MIT",
      "dependencies": {
        "node-fetch": "^2.7.0"
      }
    },
    "node_modules/@turnkey/wallet-stamper": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/@turnkey/wallet-stamper/-/wallet-stamper-1.0.3.tgz",
      "integrity": "sha512-8DMuVPo/u8oIzQ9Snsa24ZQO3nXVMfpd8VnlPLfZiW2jjZHPFyBGCJOYSArfp+W2xoudpYVu//JElBAVxk/u/g==",
      "license": "Apache-2.0",
      "dependencies": {
        "@turnkey/crypto": "2.3.1",
        "@turnkey/encoding": "0.4.0"
      },
      "optionalDependencies": {
        "viem": "^2.21.35"
      }
    },
    "node_modules/@turnkey/webauthn-stamper": {
      "version": "0.5.0",
      "resolved": "https://registry.npmjs.org/@turnkey/webauthn-stamper/-/webauthn-stamper-0.5.0.tgz",
      "integrity": "sha512-iUbTUwD4f4ibdLy5PWWb7ITEz4S4VAP9/mNjFhoRY3cKVVTDfmykrVTKjPOIHWzDgAmLtgrLvySIIC9ZBVENBw==",
      "license": "Apache-2.0",
      "dependencies": {
        "sha256-uint8array": "^0.10.7"
      },
      "engines": {
        "node": ">=18.0.0"
      }
    },
    "node_modules/@tweenjs/tween.js": {
      "version": "23.1.3",
      "resolved": "https://registry.npmjs.org/@tweenjs/tween.js/-/tween.js-23.1.3.tgz",
      "integrity": "sha512-vJmvvwFxYuGnF2axRtPYocag6Clbb5YS7kLL+SO/TeVFzHqDIWrNKYtcsPMibjDx9O+bu+psAy9NKfWklassUA==",
      "license": "MIT"
    },
    "node_modules/@types/babel__core": {
      "version": "7.20.5",
      "resolved": "https://registry.npmjs.org/@types/babel__core/-/babel__core-7.20.5.tgz",
      "integrity": "sha512-qoQprZvz5wQFJwMDqeseRXWv3rqMvhgpbXFfVyWhbx9X47POIA6i/+dXefEmZKoAgOaTdaIgNSMqMIU61yRyzA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/parser": "^7.20.7",
        "@babel/types": "^7.20.7",
        "@types/babel__generator": "*",
        "@types/babel__template": "*",
        "@types/babel__traverse": "*"
      }
    },
    "node_modules/@types/babel__generator": {
      "version": "7.27.0",
      "resolved": "https://registry.npmjs.org/@types/babel__generator/-/babel__generator-7.27.0.tgz",
      "integrity": "sha512-ufFd2Xi92OAVPYsy+P4n7/U7e68fex0+Ee8gSG9KX7eo084CWiQ4sdxktvdl0bOPupXtVJPY19zk6EwWqUQ8lg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/types": "^7.0.0"
      }
    },
    "node_modules/@types/babel__template": {
      "version": "7.4.4",
      "resolved": "https://registry.npmjs.org/@types/babel__template/-/babel__template-7.4.4.tgz",
      "integrity": "sha512-h/NUaSyG5EyxBIp8YRxo4RMe2/qQgvyowRwVMzhYhBCONbW8PUsg4lkFMrhgZhUe5z3L3MiLDuvyJ/CaPa2A8A==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/parser": "^7.1.0",
        "@babel/types": "^7.0.0"
      }
    },
    "node_modules/@types/babel__traverse": {
      "version": "7.20.7",
      "resolved": "https://registry.npmjs.org/@types/babel__traverse/-/babel__traverse-7.20.7.tgz",
      "integrity": "sha512-dkO5fhS7+/oos4ciWxyEyjWe48zmG6wbCheo/G2ZnHx4fs3EU6YC6UM8rk56gAjNJ9P3MTH2jo5jb92/K6wbng==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/types": "^7.20.7"
      }
    },
    "node_modules/@types/connect": {
      "version": "3.4.38",
      "resolved": "https://registry.npmjs.org/@types/connect/-/connect-3.4.38.tgz",
      "integrity": "sha512-K6uROf1LD88uDQqJCktA4yzL1YYAK6NgfsI0v/mTgyPKWsX1CnJ0XPSDhViejru1GcRkLWb8RlzFYJRqGUbaug==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "@types/node": "*"
      }
    },
    "node_modules/@types/debug": {
      "version": "4.1.12",
      "resolved": "https://registry.npmjs.org/@types/debug/-/debug-4.1.12.tgz",
      "integrity": "sha512-vIChWdVG3LG1SMxEvI/AK+FWJthlrqlTu7fbrlywTkkaONwk/UAGaULXRlf8vkzFBLVm0zkMdCquhL5aOjhXPQ==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "@types/ms": "*"
      }
    },
    "node_modules/@types/draco3d": {
      "version": "1.4.10",
      "resolved": "https://registry.npmjs.org/@types/draco3d/-/draco3d-1.4.10.tgz",
      "integrity": "sha512-AX22jp8Y7wwaBgAixaSvkoG4M/+PlAcm3Qs4OW8yT9DM4xUpWKeFhLueTAyZF39pviAdcDdeJoACapiAceqNcw==",
      "license": "MIT"
    },
    "node_modules/@types/estree": {
      "version": "1.0.8",
      "resolved": "https://registry.npmjs.org/@types/estree/-/estree-1.0.8.tgz",
      "integrity": "sha512-dWHzHa2WqEXI/O1E9OjrocMTKJl2mSrEolh1Iomrv6U+JuNwaHXsXx9bLu5gG7BUWFIN0skIQJQ/L1rIex4X6w==",
      "license": "MIT"
    },
    "node_modules/@types/json-schema": {
      "version": "7.0.15",
      "resolved": "https://registry.npmjs.org/@types/json-schema/-/json-schema-7.0.15.tgz",
      "integrity": "sha512-5+fP8P8MFNC+AyZCDxrB2pkZFPGzqQWUzpSeuuVLvm8VMcorNYavBqoFcxK8bQz4Qsbn4oUEEem4wDLfcysGHA==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/@types/ms": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/@types/ms/-/ms-2.1.0.tgz",
      "integrity": "sha512-GsCCIZDE/p3i96vtEqx+7dBUGXrc7zeSK3wwPHIaRThS+9OhWIXRqzs4d6k1SVU8g91DrNRWxWUGhp5KXQb2VA==",
      "license": "MIT",
      "peer": true
    },
    "node_modules/@types/node": {
      "version": "22.15.32",
      "resolved": "https://registry.npmjs.org/@types/node/-/node-22.15.32.tgz",
      "integrity": "sha512-3jigKqgSjsH6gYZv2nEsqdXfZqIFGAV36XYYjf9KGZ3PSG+IhLecqPnI310RvjutyMwifE2hhhNEklOUrvx/wA==",
      "license": "MIT",
      "dependencies": {
        "undici-types": "~6.21.0"
      }
    },
    "node_modules/@types/offscreencanvas": {
      "version": "2019.7.3",
      "resolved": "https://registry.npmjs.org/@types/offscreencanvas/-/offscreencanvas-2019.7.3.tgz",
      "integrity": "sha512-ieXiYmgSRXUDeOntE1InxjWyvEelZGP63M+cGuquuRLuIKKT1osnkXjxev9B7d1nXSug5vpunx+gNlbVxMlC9A==",
      "license": "MIT"
    },
    "node_modules/@types/prop-types": {
      "version": "15.7.15",
      "resolved": "https://registry.npmjs.org/@types/prop-types/-/prop-types-15.7.15.tgz",
      "integrity": "sha512-F6bEyamV9jKGAFBEmlQnesRPGOQqS2+Uwi0Em15xenOxHaf2hv6L8YCVn3rPdPJOiJfPiCnLIRyvwVaqMY3MIw==",
      "license": "MIT"
    },
    "node_modules/@types/react": {
      "version": "18.3.23",
      "resolved": "https://registry.npmjs.org/@types/react/-/react-18.3.23.tgz",
      "integrity": "sha512-/LDXMQh55EzZQ0uVAZmKKhfENivEvWz6E+EYzh+/MCjMhNsotd+ZHhBGIjFDTi6+fz0OhQQQLbTgdQIxxCsC0w==",
      "license": "MIT",
      "dependencies": {
        "@types/prop-types": "*",
        "csstype": "^3.0.2"
      }
    },
    "node_modules/@types/react-dom": {
      "version": "18.3.7",
      "resolved": "https://registry.npmjs.org/@types/react-dom/-/react-dom-18.3.7.tgz",
      "integrity": "sha512-MEe3UeoENYVFXzoXEWsvcpg6ZvlrFNlOQ7EOsvhI3CfAXwzPfO8Qwuxd40nepsYKqyyVQnTdEfv68q91yLcKrQ==",
      "license": "MIT",
      "peerDependencies": {
        "@types/react": "^18.0.0"
      }
    },
    "node_modules/@types/react-reconciler": {
      "version": "0.26.7",
      "resolved": "https://registry.npmjs.org/@types/react-reconciler/-/react-reconciler-0.26.7.tgz",
      "integrity": "sha512-mBDYl8x+oyPX/VBb3E638N0B7xG+SPk/EAMcVPeexqus/5aTpTphQi0curhhshOqRrc9t6OPoJfEUkbymse/lQ==",
      "license": "MIT",
      "dependencies": {
        "@types/react": "*"
      }
    },
    "node_modules/@types/stats.js": {
      "version": "0.17.4",
      "resolved": "https://registry.npmjs.org/@types/stats.js/-/stats.js-0.17.4.tgz",
      "integrity": "sha512-jIBvWWShCvlBqBNIZt0KAshWpvSjhkwkEu4ZUcASoAvhmrgAUI2t1dXrjSL4xXVLB4FznPrIsX3nKXFl/Dt4vA==",
      "license": "MIT"
    },
    "node_modules/@types/three": {
      "version": "0.177.0",
      "resolved": "https://registry.npmjs.org/@types/three/-/three-0.177.0.tgz",
      "integrity": "sha512-/ZAkn4OLUijKQySNci47lFO+4JLE1TihEjsGWPUT+4jWqxtwOPPEwJV1C3k5MEx0mcBPCdkFjzRzDOnHEI1R+A==",
      "license": "MIT",
      "dependencies": {
        "@dimforge/rapier3d-compat": "~0.12.0",
        "@tweenjs/tween.js": "~23.1.3",
        "@types/stats.js": "*",
        "@types/webxr": "*",
        "@webgpu/types": "*",
        "fflate": "~0.8.2",
        "meshoptimizer": "~0.18.1"
      }
    },
    "node_modules/@types/trusted-types": {
      "version": "2.0.7",
      "resolved": "https://registry.npmjs.org/@types/trusted-types/-/trusted-types-2.0.7.tgz",
      "integrity": "sha512-ScaPdn1dQczgbl0QFTeTOmVHFULt394XJgOQNoyVhZ6r2vLnMLJfBPd53SB52T/3G36VI1/g2MZaX0cwDuXsfw==",
      "license": "MIT"
    },
    "node_modules/@types/uuid": {
      "version": "10.0.0",
      "resolved": "https://registry.npmjs.org/@types/uuid/-/uuid-10.0.0.tgz",
      "integrity": "sha512-7gqG38EyHgyP1S+7+xomFtL+ZNHcKv6DwNaCZmJmo1vgMugyF3TCnXVg4t1uk89mLNwnLtnY3TpOpCOyp1/xHQ==",
      "license": "MIT"
    },
    "node_modules/@types/webxr": {
      "version": "0.5.22",
      "resolved": "https://registry.npmjs.org/@types/webxr/-/webxr-0.5.22.tgz",
      "integrity": "sha512-Vr6Stjv5jPRqH690f5I5GLjVk8GSsoQSYJ2FVd/3jJF7KaqfwPi3ehfBS96mlQ2kPCwZaX6U0rG2+NGHBKkA/A==",
      "license": "MIT"
    },
    "node_modules/@types/ws": {
      "version": "7.4.7",
      "resolved": "https://registry.npmjs.org/@types/ws/-/ws-7.4.7.tgz",
      "integrity": "sha512-JQbbmxZTZehdc2iszGKs5oC3NFnjeay7mtAWrdt7qNtAVK0g19muApzAy4bm9byz79xa2ZnO/BOBC2R8RC5Lww==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "@types/node": "*"
      }
    },
    "node_modules/@typescript-eslint/eslint-plugin": {
      "version": "8.34.1",
      "resolved": "https://registry.npmjs.org/@typescript-eslint/eslint-plugin/-/eslint-plugin-8.34.1.tgz",
      "integrity": "sha512-STXcN6ebF6li4PxwNeFnqF8/2BNDvBupf2OPx2yWNzr6mKNGF7q49VM00Pz5FaomJyqvbXpY6PhO+T9w139YEQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@eslint-community/regexpp": "^4.10.0",
        "@typescript-eslint/scope-manager": "8.34.1",
        "@typescript-eslint/type-utils": "8.34.1",
        "@typescript-eslint/utils": "8.34.1",
        "@typescript-eslint/visitor-keys": "8.34.1",
        "graphemer": "^1.4.0",
        "ignore": "^7.0.0",
        "natural-compare": "^1.4.0",
        "ts-api-utils": "^2.1.0"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/typescript-eslint"
      },
      "peerDependencies": {
        "@typescript-eslint/parser": "^8.34.1",
        "eslint": "^8.57.0 || ^9.0.0",
        "typescript": ">=4.8.4 <5.9.0"
      }
    },
    "node_modules/@typescript-eslint/eslint-plugin/node_modules/ignore": {
      "version": "7.0.5",
      "resolved": "https://registry.npmjs.org/ignore/-/ignore-7.0.5.tgz",
      "integrity": "sha512-Hs59xBNfUIunMFgWAbGX5cq6893IbWg4KnrjbYwX3tx0ztorVgTDA6B2sxf8ejHJ4wz8BqGUMYlnzNBer5NvGg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 4"
      }
    },
    "node_modules/@typescript-eslint/parser": {
      "version": "8.34.1",
      "resolved": "https://registry.npmjs.org/@typescript-eslint/parser/-/parser-8.34.1.tgz",
      "integrity": "sha512-4O3idHxhyzjClSMJ0a29AcoK0+YwnEqzI6oz3vlRf3xw0zbzt15MzXwItOlnr5nIth6zlY2RENLsOPvhyrKAQA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@typescript-eslint/scope-manager": "8.34.1",
        "@typescript-eslint/types": "8.34.1",
        "@typescript-eslint/typescript-estree": "8.34.1",
        "@typescript-eslint/visitor-keys": "8.34.1",
        "debug": "^4.3.4"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/typescript-eslint"
      },
      "peerDependencies": {
        "eslint": "^8.57.0 || ^9.0.0",
        "typescript": ">=4.8.4 <5.9.0"
      }
    },
    "node_modules/@typescript-eslint/project-service": {
      "version": "8.34.1",
      "resolved": "https://registry.npmjs.org/@typescript-eslint/project-service/-/project-service-8.34.1.tgz",
      "integrity": "sha512-nuHlOmFZfuRwLJKDGQOVc0xnQrAmuq1Mj/ISou5044y1ajGNp2BNliIqp7F2LPQ5sForz8lempMFCovfeS1XoA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@typescript-eslint/tsconfig-utils": "^8.34.1",
        "@typescript-eslint/types": "^8.34.1",
        "debug": "^4.3.4"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/typescript-eslint"
      },
      "peerDependencies": {
        "typescript": ">=4.8.4 <5.9.0"
      }
    },
    "node_modules/@typescript-eslint/scope-manager": {
      "version": "8.34.1",
      "resolved": "https://registry.npmjs.org/@typescript-eslint/scope-manager/-/scope-manager-8.34.1.tgz",
      "integrity": "sha512-beu6o6QY4hJAgL1E8RaXNC071G4Kso2MGmJskCFQhRhg8VOH/FDbC8soP8NHN7e/Hdphwp8G8cE6OBzC8o41ZA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@typescript-eslint/types": "8.34.1",
        "@typescript-eslint/visitor-keys": "8.34.1"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/typescript-eslint"
      }
    },
    "node_modules/@typescript-eslint/tsconfig-utils": {
      "version": "8.34.1",
      "resolved": "https://registry.npmjs.org/@typescript-eslint/tsconfig-utils/-/tsconfig-utils-8.34.1.tgz",
      "integrity": "sha512-K4Sjdo4/xF9NEeA2khOb7Y5nY6NSXBnod87uniVYW9kHP+hNlDV8trUSFeynA2uxWam4gIWgWoygPrv9VMWrYg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/typescript-eslint"
      },
      "peerDependencies": {
        "typescript": ">=4.8.4 <5.9.0"
      }
    },
    "node_modules/@typescript-eslint/type-utils": {
      "version": "8.34.1",
      "resolved": "https://registry.npmjs.org/@typescript-eslint/type-utils/-/type-utils-8.34.1.tgz",
      "integrity": "sha512-Tv7tCCr6e5m8hP4+xFugcrwTOucB8lshffJ6zf1mF1TbU67R+ntCc6DzLNKM+s/uzDyv8gLq7tufaAhIBYeV8g==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@typescript-eslint/typescript-estree": "8.34.1",
        "@typescript-eslint/utils": "8.34.1",
        "debug": "^4.3.4",
        "ts-api-utils": "^2.1.0"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/typescript-eslint"
      },
      "peerDependencies": {
        "eslint": "^8.57.0 || ^9.0.0",
        "typescript": ">=4.8.4 <5.9.0"
      }
    },
    "node_modules/@typescript-eslint/types": {
      "version": "8.34.1",
      "resolved": "https://registry.npmjs.org/@typescript-eslint/types/-/types-8.34.1.tgz",
      "integrity": "sha512-rjLVbmE7HR18kDsjNIZQHxmv9RZwlgzavryL5Lnj2ujIRTeXlKtILHgRNmQ3j4daw7zd+mQgy+uyt6Zo6I0IGA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/typescript-eslint"
      }
    },
    "node_modules/@typescript-eslint/typescript-estree": {
      "version": "8.34.1",
      "resolved": "https://registry.npmjs.org/@typescript-eslint/typescript-estree/-/typescript-estree-8.34.1.tgz",
      "integrity": "sha512-rjCNqqYPuMUF5ODD+hWBNmOitjBWghkGKJg6hiCHzUvXRy6rK22Jd3rwbP2Xi+R7oYVvIKhokHVhH41BxPV5mA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@typescript-eslint/project-service": "8.34.1",
        "@typescript-eslint/tsconfig-utils": "8.34.1",
        "@typescript-eslint/types": "8.34.1",
        "@typescript-eslint/visitor-keys": "8.34.1",
        "debug": "^4.3.4",
        "fast-glob": "^3.3.2",
        "is-glob": "^4.0.3",
        "minimatch": "^9.0.4",
        "semver": "^7.6.0",
        "ts-api-utils": "^2.1.0"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/typescript-eslint"
      },
      "peerDependencies": {
        "typescript": ">=4.8.4 <5.9.0"
      }
    },
    "node_modules/@typescript-eslint/typescript-estree/node_modules/brace-expansion": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-2.0.2.tgz",
      "integrity": "sha512-Jt0vHyM+jmUBqojB7E1NIYadt0vI0Qxjxd2TErW94wDz+E2LAm5vKMXXwg6ZZBTHPuUlDgQHKXvjGBdfcF1ZDQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "balanced-match": "^1.0.0"
      }
    },
    "node_modules/@typescript-eslint/typescript-estree/node_modules/minimatch": {
      "version": "9.0.5",
      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-9.0.5.tgz",
      "integrity": "sha512-G6T0ZX48xgozx7587koeX9Ys2NYy6Gmv//P89sEte9V9whIapMNF4idKxnW2QtCcLiTWlb/wfCabAtAFWhhBow==",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "brace-expansion": "^2.0.1"
      },
      "engines": {
        "node": ">=16 || 14 >=14.17"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/@typescript-eslint/utils": {
      "version": "8.34.1",
      "resolved": "https://registry.npmjs.org/@typescript-eslint/utils/-/utils-8.34.1.tgz",
      "integrity": "sha512-mqOwUdZ3KjtGk7xJJnLbHxTuWVn3GO2WZZuM+Slhkun4+qthLdXx32C8xIXbO1kfCECb3jIs3eoxK3eryk7aoQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@eslint-community/eslint-utils": "^4.7.0",
        "@typescript-eslint/scope-manager": "8.34.1",
        "@typescript-eslint/types": "8.34.1",
        "@typescript-eslint/typescript-estree": "8.34.1"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/typescript-eslint"
      },
      "peerDependencies": {
        "eslint": "^8.57.0 || ^9.0.0",
        "typescript": ">=4.8.4 <5.9.0"
      }
    },
    "node_modules/@typescript-eslint/visitor-keys": {
      "version": "8.34.1",
      "resolved": "https://registry.npmjs.org/@typescript-eslint/visitor-keys/-/visitor-keys-8.34.1.tgz",
      "integrity": "sha512-xoh5rJ+tgsRKoXnkBPFRLZ7rjKM0AfVbC68UZ/ECXoDbfggb9RbEySN359acY1vS3qZ0jVTVWzbtfapwm5ztxw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@typescript-eslint/types": "8.34.1",
        "eslint-visitor-keys": "^4.2.1"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/typescript-eslint"
      }
    },
    "node_modules/@use-gesture/core": {
      "version": "10.3.1",
      "resolved": "https://registry.npmjs.org/@use-gesture/core/-/core-10.3.1.tgz",
      "integrity": "sha512-WcINiDt8WjqBdUXye25anHiNxPc0VOrlT8F6LLkU6cycrOGUDyY/yyFmsg3k8i5OLvv25llc0QC45GhR/C8llw==",
      "license": "MIT"
    },
    "node_modules/@use-gesture/react": {
      "version": "10.3.1",
      "resolved": "https://registry.npmjs.org/@use-gesture/react/-/react-10.3.1.tgz",
      "integrity": "sha512-Yy19y6O2GJq8f7CHf7L0nxL8bf4PZCPaVOCgJrusOeFHY1LvHgYXnmnXg6N5iwAnbgbZCDjo60SiM6IPJi9C5g==",
      "license": "MIT",
      "dependencies": {
        "@use-gesture/core": "10.3.1"
      },
      "peerDependencies": {
        "react": ">= 16.8.0"
      }
    },
    "node_modules/@vitejs/plugin-react": {
      "version": "4.5.2",
      "resolved": "https://registry.npmjs.org/@vitejs/plugin-react/-/plugin-react-4.5.2.tgz",
      "integrity": "sha512-QNVT3/Lxx99nMQWJWF7K4N6apUEuT0KlZA3mx/mVaoGj3smm/8rc8ezz15J1pcbcjDK0V15rpHetVfya08r76Q==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/core": "^7.27.4",
        "@babel/plugin-transform-react-jsx-self": "^7.27.1",
        "@babel/plugin-transform-react-jsx-source": "^7.27.1",
        "@rolldown/pluginutils": "1.0.0-beta.11",
        "@types/babel__core": "^7.20.5",
        "react-refresh": "^0.17.0"
      },
      "engines": {
        "node": "^14.18.0 || >=16.0.0"
      },
      "peerDependencies": {
        "vite": "^4.2.0 || ^5.0.0 || ^6.0.0 || ^7.0.0-beta.0"
      }
    },
    "node_modules/@walletconnect/core": {
      "version": "2.21.3",
      "resolved": "https://registry.npmjs.org/@walletconnect/core/-/core-2.21.3.tgz",
      "integrity": "sha512-kMjo5bI6VOsFe/DmxgeTMxCdAIfSzUzG8kCDrpxUXrTnMgaU4H2JBW+tGn7KP/YY1x49+lErZsN5JiQsE5n6Rw==",
      "license": "Apache-2.0",
      "dependencies": {
        "@walletconnect/heartbeat": "1.2.2",
        "@walletconnect/jsonrpc-provider": "1.0.14",
        "@walletconnect/jsonrpc-types": "1.0.4",
        "@walletconnect/jsonrpc-utils": "1.0.8",
        "@walletconnect/jsonrpc-ws-connection": "1.0.16",
        "@walletconnect/keyvaluestorage": "1.1.1",
        "@walletconnect/logger": "2.1.2",
        "@walletconnect/relay-api": "1.0.11",
        "@walletconnect/relay-auth": "1.1.0",
        "@walletconnect/safe-json": "1.0.2",
        "@walletconnect/time": "1.0.2",
        "@walletconnect/types": "2.21.3",
        "@walletconnect/utils": "2.21.3",
        "@walletconnect/window-getters": "1.0.1",
        "es-toolkit": "1.39.3",
        "events": "3.3.0",
        "uint8arrays": "3.1.1"
      },
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@walletconnect/core/node_modules/@walletconnect/keyvaluestorage": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/@walletconnect/keyvaluestorage/-/keyvaluestorage-1.1.1.tgz",
      "integrity": "sha512-V7ZQq2+mSxAq7MrRqDxanTzu2RcElfK1PfNYiaVnJgJ7Q7G7hTVwF8voIBx92qsRyGHZihrwNPHuZd1aKkd0rA==",
      "license": "MIT",
      "dependencies": {
        "@walletconnect/safe-json": "^1.0.1",
        "idb-keyval": "^6.2.1",
        "unstorage": "^1.9.0"
      },
      "peerDependencies": {
        "@react-native-async-storage/async-storage": "1.x"
      },
      "peerDependenciesMeta": {
        "@react-native-async-storage/async-storage": {
          "optional": true
        }
      }
    },
    "node_modules/@walletconnect/core/node_modules/chokidar": {
      "version": "4.0.3",
      "resolved": "https://registry.npmjs.org/chokidar/-/chokidar-4.0.3.tgz",
      "integrity": "sha512-Qgzu8kfBvo+cA4962jnP1KkS6Dop5NS6g7R5LFYJr4b8Ub94PPQXUksCw9PvXoeXPRRddRNC5C1JQUR2SMGtnA==",
      "license": "MIT",
      "dependencies": {
        "readdirp": "^4.0.1"
      },
      "engines": {
        "node": ">= 14.16.0"
      },
      "funding": {
        "url": "https://paulmillr.com/funding/"
      }
    },
    "node_modules/@walletconnect/core/node_modules/lru-cache": {
      "version": "10.4.3",
      "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-10.4.3.tgz",
      "integrity": "sha512-JNAzZcXrCt42VGLuYz0zfAzDfAvJWW6AfYlDBQyDV5DClI2m5sAmK+OIO7s59XfsRsWHp02jAJrRadPRGTt6SQ==",
      "license": "ISC"
    },
    "node_modules/@walletconnect/core/node_modules/readdirp": {
      "version": "4.1.2",
      "resolved": "https://registry.npmjs.org/readdirp/-/readdirp-4.1.2.tgz",
      "integrity": "sha512-GDhwkLfywWL2s6vEjyhri+eXmfH6j1L7JE27WhqLeYzoh/A3DBaYGEj2H/HFZCn/kMfim73FXxEJTw06WtxQwg==",
      "license": "MIT",
      "engines": {
        "node": ">= 14.18.0"
      },
      "funding": {
        "type": "individual",
        "url": "https://paulmillr.com/funding/"
      }
    },
    "node_modules/@walletconnect/core/node_modules/unstorage": {
      "version": "1.16.0",
      "resolved": "https://registry.npmjs.org/unstorage/-/unstorage-1.16.0.tgz",
      "integrity": "sha512-WQ37/H5A7LcRPWfYOrDa1Ys02xAbpPJq6q5GkO88FBXVSQzHd7+BjEwfRqyaSWCv9MbsJy058GWjjPjcJ16GGA==",
      "license": "MIT",
      "dependencies": {
        "anymatch": "^3.1.3",
        "chokidar": "^4.0.3",
        "destr": "^2.0.5",
        "h3": "^1.15.2",
        "lru-cache": "^10.4.3",
        "node-fetch-native": "^1.6.6",
        "ofetch": "^1.4.1",
        "ufo": "^1.6.1"
      },
      "peerDependencies": {
        "@azure/app-configuration": "^1.8.0",
        "@azure/cosmos": "^4.2.0",
        "@azure/data-tables": "^13.3.0",
        "@azure/identity": "^4.6.0",
        "@azure/keyvault-secrets": "^4.9.0",
        "@azure/storage-blob": "^12.26.0",
        "@capacitor/preferences": "^6.0.3 || ^7.0.0",
        "@deno/kv": ">=0.9.0",
        "@netlify/blobs": "^6.5.0 || ^7.0.0 || ^8.1.0",
        "@planetscale/database": "^1.19.0",
        "@upstash/redis": "^1.34.3",
        "@vercel/blob": ">=0.27.1",
        "@vercel/kv": "^1.0.1",
        "aws4fetch": "^1.0.20",
        "db0": ">=0.2.1",
        "idb-keyval": "^6.2.1",
        "ioredis": "^5.4.2",
        "uploadthing": "^7.4.4"
      },
      "peerDependenciesMeta": {
        "@azure/app-configuration": {
          "optional": true
        },
        "@azure/cosmos": {
          "optional": true
        },
        "@azure/data-tables": {
          "optional": true
        },
        "@azure/identity": {
          "optional": true
        },
        "@azure/keyvault-secrets": {
          "optional": true
        },
        "@azure/storage-blob": {
          "optional": true
        },
        "@capacitor/preferences": {
          "optional": true
        },
        "@deno/kv": {
          "optional": true
        },
        "@netlify/blobs": {
          "optional": true
        },
        "@planetscale/database": {
          "optional": true
        },
        "@upstash/redis": {
          "optional": true
        },
        "@vercel/blob": {
          "optional": true
        },
        "@vercel/kv": {
          "optional": true
        },
        "aws4fetch": {
          "optional": true
        },
        "db0": {
          "optional": true
        },
        "idb-keyval": {
          "optional": true
        },
        "ioredis": {
          "optional": true
        },
        "uploadthing": {
          "optional": true
        }
      }
    },
    "node_modules/@walletconnect/environment": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/@walletconnect/environment/-/environment-1.0.1.tgz",
      "integrity": "sha512-T426LLZtHj8e8rYnKfzsw1aG6+M0BT1ZxayMdv/p8yM0MU+eJDISqNY3/bccxRr4LrF9csq02Rhqt08Ibl0VRg==",
      "license": "MIT",
      "dependencies": {
        "tslib": "1.14.1"
      }
    },
    "node_modules/@walletconnect/environment/node_modules/tslib": {
      "version": "1.14.1",
      "resolved": "https://registry.npmjs.org/tslib/-/tslib-1.14.1.tgz",
      "integrity": "sha512-Xni35NKzjgMrwevysHTCArtLDpPvye8zV/0E4EyYn43P7/7qvQwPh9BGkHewbMulVntbigmcT7rdX3BNo9wRJg==",
      "license": "0BSD"
    },
    "node_modules/@walletconnect/ethereum-provider": {
      "version": "2.21.3",
      "resolved": "https://registry.npmjs.org/@walletconnect/ethereum-provider/-/ethereum-provider-2.21.3.tgz",
      "integrity": "sha512-8LY7dpp994ZZc86/iIzOrNPhzuO1TdvNPDGnmCqY17XhR9aqhsrope/WupjpygeBCidBd8mlqx/hG8Rim6vsnQ==",
      "license": "Apache-2.0",
      "dependencies": {
        "@reown/appkit": "1.7.8",
        "@walletconnect/jsonrpc-http-connection": "1.0.8",
        "@walletconnect/jsonrpc-provider": "1.0.14",
        "@walletconnect/jsonrpc-types": "1.0.4",
        "@walletconnect/jsonrpc-utils": "1.0.8",
        "@walletconnect/keyvaluestorage": "1.1.1",
        "@walletconnect/sign-client": "2.21.3",
        "@walletconnect/types": "2.21.3",
        "@walletconnect/universal-provider": "2.21.3",
        "@walletconnect/utils": "2.21.3",
        "events": "3.3.0"
      }
    },
    "node_modules/@walletconnect/ethereum-provider/node_modules/@walletconnect/keyvaluestorage": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/@walletconnect/keyvaluestorage/-/keyvaluestorage-1.1.1.tgz",
      "integrity": "sha512-V7ZQq2+mSxAq7MrRqDxanTzu2RcElfK1PfNYiaVnJgJ7Q7G7hTVwF8voIBx92qsRyGHZihrwNPHuZd1aKkd0rA==",
      "license": "MIT",
      "dependencies": {
        "@walletconnect/safe-json": "^1.0.1",
        "idb-keyval": "^6.2.1",
        "unstorage": "^1.9.0"
      },
      "peerDependencies": {
        "@react-native-async-storage/async-storage": "1.x"
      },
      "peerDependenciesMeta": {
        "@react-native-async-storage/async-storage": {
          "optional": true
        }
      }
    },
    "node_modules/@walletconnect/ethereum-provider/node_modules/chokidar": {
      "version": "4.0.3",
      "resolved": "https://registry.npmjs.org/chokidar/-/chokidar-4.0.3.tgz",
      "integrity": "sha512-Qgzu8kfBvo+cA4962jnP1KkS6Dop5NS6g7R5LFYJr4b8Ub94PPQXUksCw9PvXoeXPRRddRNC5C1JQUR2SMGtnA==",
      "license": "MIT",
      "dependencies": {
        "readdirp": "^4.0.1"
      },
      "engines": {
        "node": ">= 14.16.0"
      },
      "funding": {
        "url": "https://paulmillr.com/funding/"
      }
    },
    "node_modules/@walletconnect/ethereum-provider/node_modules/lru-cache": {
      "version": "10.4.3",
      "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-10.4.3.tgz",
      "integrity": "sha512-JNAzZcXrCt42VGLuYz0zfAzDfAvJWW6AfYlDBQyDV5DClI2m5sAmK+OIO7s59XfsRsWHp02jAJrRadPRGTt6SQ==",
      "license": "ISC"
    },
    "node_modules/@walletconnect/ethereum-provider/node_modules/readdirp": {
      "version": "4.1.2",
      "resolved": "https://registry.npmjs.org/readdirp/-/readdirp-4.1.2.tgz",
      "integrity": "sha512-GDhwkLfywWL2s6vEjyhri+eXmfH6j1L7JE27WhqLeYzoh/A3DBaYGEj2H/HFZCn/kMfim73FXxEJTw06WtxQwg==",
      "license": "MIT",
      "engines": {
        "node": ">= 14.18.0"
      },
      "funding": {
        "type": "individual",
        "url": "https://paulmillr.com/funding/"
      }
    },
    "node_modules/@walletconnect/ethereum-provider/node_modules/unstorage": {
      "version": "1.16.0",
      "resolved": "https://registry.npmjs.org/unstorage/-/unstorage-1.16.0.tgz",
      "integrity": "sha512-WQ37/H5A7LcRPWfYOrDa1Ys02xAbpPJq6q5GkO88FBXVSQzHd7+BjEwfRqyaSWCv9MbsJy058GWjjPjcJ16GGA==",
      "license": "MIT",
      "dependencies": {
        "anymatch": "^3.1.3",
        "chokidar": "^4.0.3",
        "destr": "^2.0.5",
        "h3": "^1.15.2",
        "lru-cache": "^10.4.3",
        "node-fetch-native": "^1.6.6",
        "ofetch": "^1.4.1",
        "ufo": "^1.6.1"
      },
      "peerDependencies": {
        "@azure/app-configuration": "^1.8.0",
        "@azure/cosmos": "^4.2.0",
        "@azure/data-tables": "^13.3.0",
        "@azure/identity": "^4.6.0",
        "@azure/keyvault-secrets": "^4.9.0",
        "@azure/storage-blob": "^12.26.0",
        "@capacitor/preferences": "^6.0.3 || ^7.0.0",
        "@deno/kv": ">=0.9.0",
        "@netlify/blobs": "^6.5.0 || ^7.0.0 || ^8.1.0",
        "@planetscale/database": "^1.19.0",
        "@upstash/redis": "^1.34.3",
        "@vercel/blob": ">=0.27.1",
        "@vercel/kv": "^1.0.1",
        "aws4fetch": "^1.0.20",
        "db0": ">=0.2.1",
        "idb-keyval": "^6.2.1",
        "ioredis": "^5.4.2",
        "uploadthing": "^7.4.4"
      },
      "peerDependenciesMeta": {
        "@azure/app-configuration": {
          "optional": true
        },
        "@azure/cosmos": {
          "optional": true
        },
        "@azure/data-tables": {
          "optional": true
        },
        "@azure/identity": {
          "optional": true
        },
        "@azure/keyvault-secrets": {
          "optional": true
        },
        "@azure/storage-blob": {
          "optional": true
        },
        "@capacitor/preferences": {
          "optional": true
        },
        "@deno/kv": {
          "optional": true
        },
        "@netlify/blobs": {
          "optional": true
        },
        "@planetscale/database": {
          "optional": true
        },
        "@upstash/redis": {
          "optional": true
        },
        "@vercel/blob": {
          "optional": true
        },
        "@vercel/kv": {
          "optional": true
        },
        "aws4fetch": {
          "optional": true
        },
        "db0": {
          "optional": true
        },
        "idb-keyval": {
          "optional": true
        },
        "ioredis": {
          "optional": true
        },
        "uploadthing": {
          "optional": true
        }
      }
    },
    "node_modules/@walletconnect/events": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/@walletconnect/events/-/events-1.0.1.tgz",
      "integrity": "sha512-NPTqaoi0oPBVNuLv7qPaJazmGHs5JGyO8eEAk5VGKmJzDR7AHzD4k6ilox5kxk1iwiOnFopBOOMLs86Oa76HpQ==",
      "license": "MIT",
      "dependencies": {
        "keyvaluestorage-interface": "^1.0.0",
        "tslib": "1.14.1"
      }
    },
    "node_modules/@walletconnect/events/node_modules/tslib": {
      "version": "1.14.1",
      "resolved": "https://registry.npmjs.org/tslib/-/tslib-1.14.1.tgz",
      "integrity": "sha512-Xni35NKzjgMrwevysHTCArtLDpPvye8zV/0E4EyYn43P7/7qvQwPh9BGkHewbMulVntbigmcT7rdX3BNo9wRJg==",
      "license": "0BSD"
    },
    "node_modules/@walletconnect/heartbeat": {
      "version": "1.2.2",
      "resolved": "https://registry.npmjs.org/@walletconnect/heartbeat/-/heartbeat-1.2.2.tgz",
      "integrity": "sha512-uASiRmC5MwhuRuf05vq4AT48Pq8RMi876zV8rr8cV969uTOzWdB/k+Lj5yI2PBtB1bGQisGen7MM1GcZlQTBXw==",
      "license": "MIT",
      "dependencies": {
        "@walletconnect/events": "^1.0.1",
        "@walletconnect/time": "^1.0.2",
        "events": "^3.3.0"
      }
    },
    "node_modules/@walletconnect/jsonrpc-http-connection": {
      "version": "1.0.8",
      "resolved": "https://registry.npmjs.org/@walletconnect/jsonrpc-http-connection/-/jsonrpc-http-connection-1.0.8.tgz",
      "integrity": "sha512-+B7cRuaxijLeFDJUq5hAzNyef3e3tBDIxyaCNmFtjwnod5AGis3RToNqzFU33vpVcxFhofkpE7Cx+5MYejbMGw==",
      "license": "MIT",
      "dependencies": {
        "@walletconnect/jsonrpc-utils": "^1.0.6",
        "@walletconnect/safe-json": "^1.0.1",
        "cross-fetch": "^3.1.4",
        "events": "^3.3.0"
      }
    },
    "node_modules/@walletconnect/jsonrpc-http-connection/node_modules/cross-fetch": {
      "version": "3.2.0",
      "resolved": "https://registry.npmjs.org/cross-fetch/-/cross-fetch-3.2.0.tgz",
      "integrity": "sha512-Q+xVJLoGOeIMXZmbUK4HYk+69cQH6LudR0Vu/pRm2YlU/hDV9CiS0gKUMaWY5f2NeUH9C1nV3bsTlCo0FsTV1Q==",
      "license": "MIT",
      "dependencies": {
        "node-fetch": "^2.7.0"
      }
    },
    "node_modules/@walletconnect/jsonrpc-provider": {
      "version": "1.0.14",
      "resolved": "https://registry.npmjs.org/@walletconnect/jsonrpc-provider/-/jsonrpc-provider-1.0.14.tgz",
      "integrity": "sha512-rtsNY1XqHvWj0EtITNeuf8PHMvlCLiS3EjQL+WOkxEOA4KPxsohFnBDeyPYiNm4ZvkQdLnece36opYidmtbmow==",
      "license": "MIT",
      "dependencies": {
        "@walletconnect/jsonrpc-utils": "^1.0.8",
        "@walletconnect/safe-json": "^1.0.2",
        "events": "^3.3.0"
      }
    },
    "node_modules/@walletconnect/jsonrpc-types": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/@walletconnect/jsonrpc-types/-/jsonrpc-types-1.0.4.tgz",
      "integrity": "sha512-P6679fG/M+wuWg9TY8mh6xFSdYnFyFjwFelxyISxMDrlbXokorEVXYOxiqEbrU3x1BmBoCAJJ+vtEaEoMlpCBQ==",
      "license": "MIT",
      "dependencies": {
        "events": "^3.3.0",
        "keyvaluestorage-interface": "^1.0.0"
      }
    },
    "node_modules/@walletconnect/jsonrpc-utils": {
      "version": "1.0.8",
      "resolved": "https://registry.npmjs.org/@walletconnect/jsonrpc-utils/-/jsonrpc-utils-1.0.8.tgz",
      "integrity": "sha512-vdeb03bD8VzJUL6ZtzRYsFMq1eZQcM3EAzT0a3st59dyLfJ0wq+tKMpmGH7HlB7waD858UWgfIcudbPFsbzVdw==",
      "license": "MIT",
      "dependencies": {
        "@walletconnect/environment": "^1.0.1",
        "@walletconnect/jsonrpc-types": "^1.0.3",
        "tslib": "1.14.1"
      }
    },
    "node_modules/@walletconnect/jsonrpc-utils/node_modules/tslib": {
      "version": "1.14.1",
      "resolved": "https://registry.npmjs.org/tslib/-/tslib-1.14.1.tgz",
      "integrity": "sha512-Xni35NKzjgMrwevysHTCArtLDpPvye8zV/0E4EyYn43P7/7qvQwPh9BGkHewbMulVntbigmcT7rdX3BNo9wRJg==",
      "license": "0BSD"
    },
    "node_modules/@walletconnect/jsonrpc-ws-connection": {
      "version": "1.0.16",
      "resolved": "https://registry.npmjs.org/@walletconnect/jsonrpc-ws-connection/-/jsonrpc-ws-connection-1.0.16.tgz",
      "integrity": "sha512-G81JmsMqh5nJheE1mPst1W0WfVv0SG3N7JggwLLGnI7iuDZJq8cRJvQwLGKHn5H1WTW7DEPCo00zz5w62AbL3Q==",
      "license": "MIT",
      "dependencies": {
        "@walletconnect/jsonrpc-utils": "^1.0.6",
        "@walletconnect/safe-json": "^1.0.2",
        "events": "^3.3.0",
        "ws": "^7.5.1"
      }
    },
    "node_modules/@walletconnect/logger": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/@walletconnect/logger/-/logger-2.1.2.tgz",
      "integrity": "sha512-aAb28I3S6pYXZHQm5ESB+V6rDqIYfsnHaQyzFbwUUBFY4H0OXx/YtTl8lvhUNhMMfb9UxbwEBS253TlXUYJWSw==",
      "license": "MIT",
      "dependencies": {
        "@walletconnect/safe-json": "^1.0.2",
        "pino": "7.11.0"
      }
    },
    "node_modules/@walletconnect/relay-api": {
      "version": "1.0.11",
      "resolved": "https://registry.npmjs.org/@walletconnect/relay-api/-/relay-api-1.0.11.tgz",
      "integrity": "sha512-tLPErkze/HmC9aCmdZOhtVmYZq1wKfWTJtygQHoWtgg722Jd4homo54Cs4ak2RUFUZIGO2RsOpIcWipaua5D5Q==",
      "license": "MIT",
      "dependencies": {
        "@walletconnect/jsonrpc-types": "^1.0.2"
      }
    },
    "node_modules/@walletconnect/relay-auth": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/@walletconnect/relay-auth/-/relay-auth-1.1.0.tgz",
      "integrity": "sha512-qFw+a9uRz26jRCDgL7Q5TA9qYIgcNY8jpJzI1zAWNZ8i7mQjaijRnWFKsCHAU9CyGjvt6RKrRXyFtFOpWTVmCQ==",
      "license": "MIT",
      "dependencies": {
        "@noble/curves": "1.8.0",
        "@noble/hashes": "1.7.0",
        "@walletconnect/safe-json": "^1.0.1",
        "@walletconnect/time": "^1.0.2",
        "uint8arrays": "^3.0.0"
      }
    },
    "node_modules/@walletconnect/relay-auth/node_modules/@noble/curves": {
      "version": "1.8.0",
      "resolved": "https://registry.npmjs.org/@noble/curves/-/curves-1.8.0.tgz",
      "integrity": "sha512-j84kjAbzEnQHaSIhRPUmB3/eVXu2k3dKPl2LOrR8fSOIL+89U+7lV117EWHtq/GHM3ReGHM46iRBdZfpc4HRUQ==",
      "license": "MIT",
      "dependencies": {
        "@noble/hashes": "1.7.0"
      },
      "engines": {
        "node": "^14.21.3 || >=16"
      },
      "funding": {
        "url": "https://paulmillr.com/funding/"
      }
    },
    "node_modules/@walletconnect/relay-auth/node_modules/@noble/hashes": {
      "version": "1.7.0",
      "resolved": "https://registry.npmjs.org/@noble/hashes/-/hashes-1.7.0.tgz",
      "integrity": "sha512-HXydb0DgzTpDPwbVeDGCG1gIu7X6+AuU6Zl6av/E/KG8LMsvPntvq+w17CHRpKBmN6Ybdrt1eP3k4cj8DJa78w==",
      "license": "MIT",
      "engines": {
        "node": "^14.21.3 || >=16"
      },
      "funding": {
        "url": "https://paulmillr.com/funding/"
      }
    },
    "node_modules/@walletconnect/safe-json": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/@walletconnect/safe-json/-/safe-json-1.0.2.tgz",
      "integrity": "sha512-Ogb7I27kZ3LPC3ibn8ldyUr5544t3/STow9+lzz7Sfo808YD7SBWk7SAsdBFlYgP2zDRy2hS3sKRcuSRM0OTmA==",
      "license": "MIT",
      "dependencies": {
        "tslib": "1.14.1"
      }
    },
    "node_modules/@walletconnect/safe-json/node_modules/tslib": {
      "version": "1.14.1",
      "resolved": "https://registry.npmjs.org/tslib/-/tslib-1.14.1.tgz",
      "integrity": "sha512-Xni35NKzjgMrwevysHTCArtLDpPvye8zV/0E4EyYn43P7/7qvQwPh9BGkHewbMulVntbigmcT7rdX3BNo9wRJg==",
      "license": "0BSD"
    },
    "node_modules/@walletconnect/sign-client": {
      "version": "2.21.3",
      "resolved": "https://registry.npmjs.org/@walletconnect/sign-client/-/sign-client-2.21.3.tgz",
      "integrity": "sha512-Z6sTCBrset7u5CNjPWlqQuWxmLL2WlGLZYKoB7g/Nvg8wLWo0VaaNeTtNsuopLfJeqdV9/4nV/qHE4xXs2nMIQ==",
      "license": "Apache-2.0",
      "dependencies": {
        "@walletconnect/core": "2.21.3",
        "@walletconnect/events": "1.0.1",
        "@walletconnect/heartbeat": "1.2.2",
        "@walletconnect/jsonrpc-utils": "1.0.8",
        "@walletconnect/logger": "2.1.2",
        "@walletconnect/time": "1.0.2",
        "@walletconnect/types": "2.21.3",
        "@walletconnect/utils": "2.21.3",
        "events": "3.3.0"
      }
    },
    "node_modules/@walletconnect/time": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/@walletconnect/time/-/time-1.0.2.tgz",
      "integrity": "sha512-uzdd9woDcJ1AaBZRhqy5rNC9laqWGErfc4dxA9a87mPdKOgWMD85mcFo9dIYIts/Jwocfwn07EC6EzclKubk/g==",
      "license": "MIT",
      "dependencies": {
        "tslib": "1.14.1"
      }
    },
    "node_modules/@walletconnect/time/node_modules/tslib": {
      "version": "1.14.1",
      "resolved": "https://registry.npmjs.org/tslib/-/tslib-1.14.1.tgz",
      "integrity": "sha512-Xni35NKzjgMrwevysHTCArtLDpPvye8zV/0E4EyYn43P7/7qvQwPh9BGkHewbMulVntbigmcT7rdX3BNo9wRJg==",
      "license": "0BSD"
    },
    "node_modules/@walletconnect/types": {
      "version": "2.21.3",
      "resolved": "https://registry.npmjs.org/@walletconnect/types/-/types-2.21.3.tgz",
      "integrity": "sha512-4fDchSb6q/YIuUokaIvp+/tpWtmiL+dOWuKUCq0+w81R0unsQzn4Zc57Xh+TkNAlBGSJmZ44ZQPevN4vaTnjwg==",
      "license": "Apache-2.0",
      "dependencies": {
        "@walletconnect/events": "1.0.1",
        "@walletconnect/heartbeat": "1.2.2",
        "@walletconnect/jsonrpc-types": "1.0.4",
        "@walletconnect/keyvaluestorage": "1.1.1",
        "@walletconnect/logger": "2.1.2",
        "events": "3.3.0"
      }
    },
    "node_modules/@walletconnect/types/node_modules/@walletconnect/keyvaluestorage": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/@walletconnect/keyvaluestorage/-/keyvaluestorage-1.1.1.tgz",
      "integrity": "sha512-V7ZQq2+mSxAq7MrRqDxanTzu2RcElfK1PfNYiaVnJgJ7Q7G7hTVwF8voIBx92qsRyGHZihrwNPHuZd1aKkd0rA==",
      "license": "MIT",
      "dependencies": {
        "@walletconnect/safe-json": "^1.0.1",
        "idb-keyval": "^6.2.1",
        "unstorage": "^1.9.0"
      },
      "peerDependencies": {
        "@react-native-async-storage/async-storage": "1.x"
      },
      "peerDependenciesMeta": {
        "@react-native-async-storage/async-storage": {
          "optional": true
        }
      }
    },
    "node_modules/@walletconnect/types/node_modules/chokidar": {
      "version": "4.0.3",
      "resolved": "https://registry.npmjs.org/chokidar/-/chokidar-4.0.3.tgz",
      "integrity": "sha512-Qgzu8kfBvo+cA4962jnP1KkS6Dop5NS6g7R5LFYJr4b8Ub94PPQXUksCw9PvXoeXPRRddRNC5C1JQUR2SMGtnA==",
      "license": "MIT",
      "dependencies": {
        "readdirp": "^4.0.1"
      },
      "engines": {
        "node": ">= 14.16.0"
      },
      "funding": {
        "url": "https://paulmillr.com/funding/"
      }
    },
    "node_modules/@walletconnect/types/node_modules/lru-cache": {
      "version": "10.4.3",
      "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-10.4.3.tgz",
      "integrity": "sha512-JNAzZcXrCt42VGLuYz0zfAzDfAvJWW6AfYlDBQyDV5DClI2m5sAmK+OIO7s59XfsRsWHp02jAJrRadPRGTt6SQ==",
      "license": "ISC"
    },
    "node_modules/@walletconnect/types/node_modules/readdirp": {
      "version": "4.1.2",
      "resolved": "https://registry.npmjs.org/readdirp/-/readdirp-4.1.2.tgz",
      "integrity": "sha512-GDhwkLfywWL2s6vEjyhri+eXmfH6j1L7JE27WhqLeYzoh/A3DBaYGEj2H/HFZCn/kMfim73FXxEJTw06WtxQwg==",
      "license": "MIT",
      "engines": {
        "node": ">= 14.18.0"
      },
      "funding": {
        "type": "individual",
        "url": "https://paulmillr.com/funding/"
      }
    },
    "node_modules/@walletconnect/types/node_modules/unstorage": {
      "version": "1.16.0",
      "resolved": "https://registry.npmjs.org/unstorage/-/unstorage-1.16.0.tgz",
      "integrity": "sha512-WQ37/H5A7LcRPWfYOrDa1Ys02xAbpPJq6q5GkO88FBXVSQzHd7+BjEwfRqyaSWCv9MbsJy058GWjjPjcJ16GGA==",
      "license": "MIT",
      "dependencies": {
        "anymatch": "^3.1.3",
        "chokidar": "^4.0.3",
        "destr": "^2.0.5",
        "h3": "^1.15.2",
        "lru-cache": "^10.4.3",
        "node-fetch-native": "^1.6.6",
        "ofetch": "^1.4.1",
        "ufo": "^1.6.1"
      },
      "peerDependencies": {
        "@azure/app-configuration": "^1.8.0",
        "@azure/cosmos": "^4.2.0",
        "@azure/data-tables": "^13.3.0",
        "@azure/identity": "^4.6.0",
        "@azure/keyvault-secrets": "^4.9.0",
        "@azure/storage-blob": "^12.26.0",
        "@capacitor/preferences": "^6.0.3 || ^7.0.0",
        "@deno/kv": ">=0.9.0",
        "@netlify/blobs": "^6.5.0 || ^7.0.0 || ^8.1.0",
        "@planetscale/database": "^1.19.0",
        "@upstash/redis": "^1.34.3",
        "@vercel/blob": ">=0.27.1",
        "@vercel/kv": "^1.0.1",
        "aws4fetch": "^1.0.20",
        "db0": ">=0.2.1",
        "idb-keyval": "^6.2.1",
        "ioredis": "^5.4.2",
        "uploadthing": "^7.4.4"
      },
      "peerDependenciesMeta": {
        "@azure/app-configuration": {
          "optional": true
        },
        "@azure/cosmos": {
          "optional": true
        },
        "@azure/data-tables": {
          "optional": true
        },
        "@azure/identity": {
          "optional": true
        },
        "@azure/keyvault-secrets": {
          "optional": true
        },
        "@azure/storage-blob": {
          "optional": true
        },
        "@capacitor/preferences": {
          "optional": true
        },
        "@deno/kv": {
          "optional": true
        },
        "@netlify/blobs": {
          "optional": true
        },
        "@planetscale/database": {
          "optional": true
        },
        "@upstash/redis": {
          "optional": true
        },
        "@vercel/blob": {
          "optional": true
        },
        "@vercel/kv": {
          "optional": true
        },
        "aws4fetch": {
          "optional": true
        },
        "db0": {
          "optional": true
        },
        "idb-keyval": {
          "optional": true
        },
        "ioredis": {
          "optional": true
        },
        "uploadthing": {
          "optional": true
        }
      }
    },
    "node_modules/@walletconnect/universal-provider": {
      "version": "2.21.3",
      "resolved": "https://registry.npmjs.org/@walletconnect/universal-provider/-/universal-provider-2.21.3.tgz",
      "integrity": "sha512-Tlkfbtp5oNvSb9yEUl3Fxs0A1y8kLbGJOq7F3zyjVu2EvG96cMqqmlYlPRsi55VDn3scmw8zr2zN+BMsMAuDPw==",
      "license": "Apache-2.0",
      "dependencies": {
        "@walletconnect/events": "1.0.1",
        "@walletconnect/jsonrpc-http-connection": "1.0.8",
        "@walletconnect/jsonrpc-provider": "1.0.14",
        "@walletconnect/jsonrpc-types": "1.0.4",
        "@walletconnect/jsonrpc-utils": "1.0.8",
        "@walletconnect/keyvaluestorage": "1.1.1",
        "@walletconnect/logger": "2.1.2",
        "@walletconnect/sign-client": "2.21.3",
        "@walletconnect/types": "2.21.3",
        "@walletconnect/utils": "2.21.3",
        "es-toolkit": "1.39.3",
        "events": "3.3.0"
      }
    },
    "node_modules/@walletconnect/universal-provider/node_modules/@walletconnect/keyvaluestorage": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/@walletconnect/keyvaluestorage/-/keyvaluestorage-1.1.1.tgz",
      "integrity": "sha512-V7ZQq2+mSxAq7MrRqDxanTzu2RcElfK1PfNYiaVnJgJ7Q7G7hTVwF8voIBx92qsRyGHZihrwNPHuZd1aKkd0rA==",
      "license": "MIT",
      "dependencies": {
        "@walletconnect/safe-json": "^1.0.1",
        "idb-keyval": "^6.2.1",
        "unstorage": "^1.9.0"
      },
      "peerDependencies": {
        "@react-native-async-storage/async-storage": "1.x"
      },
      "peerDependenciesMeta": {
        "@react-native-async-storage/async-storage": {
          "optional": true
        }
      }
    },
    "node_modules/@walletconnect/universal-provider/node_modules/chokidar": {
      "version": "4.0.3",
      "resolved": "https://registry.npmjs.org/chokidar/-/chokidar-4.0.3.tgz",
      "integrity": "sha512-Qgzu8kfBvo+cA4962jnP1KkS6Dop5NS6g7R5LFYJr4b8Ub94PPQXUksCw9PvXoeXPRRddRNC5C1JQUR2SMGtnA==",
      "license": "MIT",
      "dependencies": {
        "readdirp": "^4.0.1"
      },
      "engines": {
        "node": ">= 14.16.0"
      },
      "funding": {
        "url": "https://paulmillr.com/funding/"
      }
    },
    "node_modules/@walletconnect/universal-provider/node_modules/lru-cache": {
      "version": "10.4.3",
      "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-10.4.3.tgz",
      "integrity": "sha512-JNAzZcXrCt42VGLuYz0zfAzDfAvJWW6AfYlDBQyDV5DClI2m5sAmK+OIO7s59XfsRsWHp02jAJrRadPRGTt6SQ==",
      "license": "ISC"
    },
    "node_modules/@walletconnect/universal-provider/node_modules/readdirp": {
      "version": "4.1.2",
      "resolved": "https://registry.npmjs.org/readdirp/-/readdirp-4.1.2.tgz",
      "integrity": "sha512-GDhwkLfywWL2s6vEjyhri+eXmfH6j1L7JE27WhqLeYzoh/A3DBaYGEj2H/HFZCn/kMfim73FXxEJTw06WtxQwg==",
      "license": "MIT",
      "engines": {
        "node": ">= 14.18.0"
      },
      "funding": {
        "type": "individual",
        "url": "https://paulmillr.com/funding/"
      }
    },
    "node_modules/@walletconnect/universal-provider/node_modules/unstorage": {
      "version": "1.16.0",
      "resolved": "https://registry.npmjs.org/unstorage/-/unstorage-1.16.0.tgz",
      "integrity": "sha512-WQ37/H5A7LcRPWfYOrDa1Ys02xAbpPJq6q5GkO88FBXVSQzHd7+BjEwfRqyaSWCv9MbsJy058GWjjPjcJ16GGA==",
      "license": "MIT",
      "dependencies": {
        "anymatch": "^3.1.3",
        "chokidar": "^4.0.3",
        "destr": "^2.0.5",
        "h3": "^1.15.2",
        "lru-cache": "^10.4.3",
        "node-fetch-native": "^1.6.6",
        "ofetch": "^1.4.1",
        "ufo": "^1.6.1"
      },
      "peerDependencies": {
        "@azure/app-configuration": "^1.8.0",
        "@azure/cosmos": "^4.2.0",
        "@azure/data-tables": "^13.3.0",
        "@azure/identity": "^4.6.0",
        "@azure/keyvault-secrets": "^4.9.0",
        "@azure/storage-blob": "^12.26.0",
        "@capacitor/preferences": "^6.0.3 || ^7.0.0",
        "@deno/kv": ">=0.9.0",
        "@netlify/blobs": "^6.5.0 || ^7.0.0 || ^8.1.0",
        "@planetscale/database": "^1.19.0",
        "@upstash/redis": "^1.34.3",
        "@vercel/blob": ">=0.27.1",
        "@vercel/kv": "^1.0.1",
        "aws4fetch": "^1.0.20",
        "db0": ">=0.2.1",
        "idb-keyval": "^6.2.1",
        "ioredis": "^5.4.2",
        "uploadthing": "^7.4.4"
      },
      "peerDependenciesMeta": {
        "@azure/app-configuration": {
          "optional": true
        },
        "@azure/cosmos": {
          "optional": true
        },
        "@azure/data-tables": {
          "optional": true
        },
        "@azure/identity": {
          "optional": true
        },
        "@azure/keyvault-secrets": {
          "optional": true
        },
        "@azure/storage-blob": {
          "optional": true
        },
        "@capacitor/preferences": {
          "optional": true
        },
        "@deno/kv": {
          "optional": true
        },
        "@netlify/blobs": {
          "optional": true
        },
        "@planetscale/database": {
          "optional": true
        },
        "@upstash/redis": {
          "optional": true
        },
        "@vercel/blob": {
          "optional": true
        },
        "@vercel/kv": {
          "optional": true
        },
        "aws4fetch": {
          "optional": true
        },
        "db0": {
          "optional": true
        },
        "idb-keyval": {
          "optional": true
        },
        "ioredis": {
          "optional": true
        },
        "uploadthing": {
          "optional": true
        }
      }
    },
    "node_modules/@walletconnect/utils": {
      "version": "2.21.3",
      "resolved": "https://registry.npmjs.org/@walletconnect/utils/-/utils-2.21.3.tgz",
      "integrity": "sha512-LHxYX69vG7aPCQB9YT1F8ibwAfRNYwqCEBMplrmquAX+l4lMHTpXvsFF/a5NWFT23DKzbWZ4VTfQTDZ//XJKpg==",
      "license": "Apache-2.0",
      "dependencies": {
        "@msgpack/msgpack": "3.1.2",
        "@noble/ciphers": "1.3.0",
        "@noble/curves": "1.9.2",
        "@noble/hashes": "1.8.0",
        "@scure/base": "1.2.6",
        "@walletconnect/jsonrpc-utils": "1.0.8",
        "@walletconnect/keyvaluestorage": "1.1.1",
        "@walletconnect/relay-api": "1.0.11",
        "@walletconnect/relay-auth": "1.1.0",
        "@walletconnect/safe-json": "1.0.2",
        "@walletconnect/time": "1.0.2",
        "@walletconnect/types": "2.21.3",
        "@walletconnect/window-getters": "1.0.1",
        "@walletconnect/window-metadata": "1.0.1",
        "blakejs": "1.2.1",
        "bs58": "6.0.0",
        "detect-browser": "5.3.0",
        "query-string": "7.1.3",
        "uint8arrays": "3.1.1",
        "viem": "2.31.0"
      }
    },
    "node_modules/@walletconnect/utils/node_modules/@noble/ciphers": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/@noble/ciphers/-/ciphers-1.3.0.tgz",
      "integrity": "sha512-2I0gnIVPtfnMw9ee9h1dJG7tp81+8Ob3OJb3Mv37rx5L40/b0i7djjCVvGOVqc9AEIQyvyu1i6ypKdFw8R8gQw==",
      "license": "MIT",
      "engines": {
        "node": "^14.21.3 || >=16"
      },
      "funding": {
        "url": "https://paulmillr.com/funding/"
      }
    },
    "node_modules/@walletconnect/utils/node_modules/@scure/bip39": {
      "version": "1.6.0",
      "resolved": "https://registry.npmjs.org/@scure/bip39/-/bip39-1.6.0.tgz",
      "integrity": "sha512-+lF0BbLiJNwVlev4eKelw1WWLaiKXw7sSl8T6FvBlWkdX+94aGJ4o8XjUdlyhTCjd8c+B3KT3JfS8P0bLRNU6A==",
      "license": "MIT",
      "dependencies": {
        "@noble/hashes": "~1.8.0",
        "@scure/base": "~1.2.5"
      },
      "funding": {
        "url": "https://paulmillr.com/funding/"
      }
    },
    "node_modules/@walletconnect/utils/node_modules/@walletconnect/keyvaluestorage": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/@walletconnect/keyvaluestorage/-/keyvaluestorage-1.1.1.tgz",
      "integrity": "sha512-V7ZQq2+mSxAq7MrRqDxanTzu2RcElfK1PfNYiaVnJgJ7Q7G7hTVwF8voIBx92qsRyGHZihrwNPHuZd1aKkd0rA==",
      "license": "MIT",
      "dependencies": {
        "@walletconnect/safe-json": "^1.0.1",
        "idb-keyval": "^6.2.1",
        "unstorage": "^1.9.0"
      },
      "peerDependencies": {
        "@react-native-async-storage/async-storage": "1.x"
      },
      "peerDependenciesMeta": {
        "@react-native-async-storage/async-storage": {
          "optional": true
        }
      }
    },
    "node_modules/@walletconnect/utils/node_modules/abitype": {
      "version": "1.0.8",
      "resolved": "https://registry.npmjs.org/abitype/-/abitype-1.0.8.tgz",
      "integrity": "sha512-ZeiI6h3GnW06uYDLx0etQtX/p8E24UaHHBj57RSjK7YBFe7iuVn07EDpOeP451D06sF27VOz9JJPlIKJmXgkEg==",
      "license": "MIT",
      "funding": {
        "url": "https://github.com/sponsors/wevm"
      },
      "peerDependencies": {
        "typescript": ">=5.0.4",
        "zod": "^3 >=3.22.0"
      },
      "peerDependenciesMeta": {
        "typescript": {
          "optional": true
        },
        "zod": {
          "optional": true
        }
      }
    },
    "node_modules/@walletconnect/utils/node_modules/base-x": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/base-x/-/base-x-5.0.1.tgz",
      "integrity": "sha512-M7uio8Zt++eg3jPj+rHMfCC+IuygQHHCOU+IYsVtik6FWjuYpVt/+MRKcgsAMHh8mMFAwnB+Bs+mTrFiXjMzKg==",
      "license": "MIT"
    },
    "node_modules/@walletconnect/utils/node_modules/bs58": {
      "version": "6.0.0",
      "resolved": "https://registry.npmjs.org/bs58/-/bs58-6.0.0.tgz",
      "integrity": "sha512-PD0wEnEYg6ijszw/u8s+iI3H17cTymlrwkKhDhPZq+Sokl3AU4htyBFTjAeNAlCCmg0f53g6ih3jATyCKftTfw==",
      "license": "MIT",
      "dependencies": {
        "base-x": "^5.0.0"
      }
    },
    "node_modules/@walletconnect/utils/node_modules/chokidar": {
      "version": "4.0.3",
      "resolved": "https://registry.npmjs.org/chokidar/-/chokidar-4.0.3.tgz",
      "integrity": "sha512-Qgzu8kfBvo+cA4962jnP1KkS6Dop5NS6g7R5LFYJr4b8Ub94PPQXUksCw9PvXoeXPRRddRNC5C1JQUR2SMGtnA==",
      "license": "MIT",
      "dependencies": {
        "readdirp": "^4.0.1"
      },
      "engines": {
        "node": ">= 14.16.0"
      },
      "funding": {
        "url": "https://paulmillr.com/funding/"
      }
    },
    "node_modules/@walletconnect/utils/node_modules/lru-cache": {
      "version": "10.4.3",
      "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-10.4.3.tgz",
      "integrity": "sha512-JNAzZcXrCt42VGLuYz0zfAzDfAvJWW6AfYlDBQyDV5DClI2m5sAmK+OIO7s59XfsRsWHp02jAJrRadPRGTt6SQ==",
      "license": "ISC"
    },
    "node_modules/@walletconnect/utils/node_modules/ox": {
      "version": "0.7.1",
      "resolved": "https://registry.npmjs.org/ox/-/ox-0.7.1.tgz",
      "integrity": "sha512-+k9fY9PRNuAMHRFIUbiK9Nt5seYHHzSQs9Bj+iMETcGtlpS7SmBzcGSVUQO3+nqGLEiNK4598pHNFlVRaZbRsg==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/wevm"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "@adraffy/ens-normalize": "^1.10.1",
        "@noble/ciphers": "^1.3.0",
        "@noble/curves": "^1.6.0",
        "@noble/hashes": "^1.5.0",
        "@scure/bip32": "^1.5.0",
        "@scure/bip39": "^1.4.0",
        "abitype": "^1.0.6",
        "eventemitter3": "5.0.1"
      },
      "peerDependencies": {
        "typescript": ">=5.4.0"
      },
      "peerDependenciesMeta": {
        "typescript": {
          "optional": true
        }
      }
    },
    "node_modules/@walletconnect/utils/node_modules/readdirp": {
      "version": "4.1.2",
      "resolved": "https://registry.npmjs.org/readdirp/-/readdirp-4.1.2.tgz",
      "integrity": "sha512-GDhwkLfywWL2s6vEjyhri+eXmfH6j1L7JE27WhqLeYzoh/A3DBaYGEj2H/HFZCn/kMfim73FXxEJTw06WtxQwg==",
      "license": "MIT",
      "engines": {
        "node": ">= 14.18.0"
      },
      "funding": {
        "type": "individual",
        "url": "https://paulmillr.com/funding/"
      }
    },
    "node_modules/@walletconnect/utils/node_modules/unstorage": {
      "version": "1.16.0",
      "resolved": "https://registry.npmjs.org/unstorage/-/unstorage-1.16.0.tgz",
      "integrity": "sha512-WQ37/H5A7LcRPWfYOrDa1Ys02xAbpPJq6q5GkO88FBXVSQzHd7+BjEwfRqyaSWCv9MbsJy058GWjjPjcJ16GGA==",
      "license": "MIT",
      "dependencies": {
        "anymatch": "^3.1.3",
        "chokidar": "^4.0.3",
        "destr": "^2.0.5",
        "h3": "^1.15.2",
        "lru-cache": "^10.4.3",
        "node-fetch-native": "^1.6.6",
        "ofetch": "^1.4.1",
        "ufo": "^1.6.1"
      },
      "peerDependencies": {
        "@azure/app-configuration": "^1.8.0",
        "@azure/cosmos": "^4.2.0",
        "@azure/data-tables": "^13.3.0",
        "@azure/identity": "^4.6.0",
        "@azure/keyvault-secrets": "^4.9.0",
        "@azure/storage-blob": "^12.26.0",
        "@capacitor/preferences": "^6.0.3 || ^7.0.0",
        "@deno/kv": ">=0.9.0",
        "@netlify/blobs": "^6.5.0 || ^7.0.0 || ^8.1.0",
        "@planetscale/database": "^1.19.0",
        "@upstash/redis": "^1.34.3",
        "@vercel/blob": ">=0.27.1",
        "@vercel/kv": "^1.0.1",
        "aws4fetch": "^1.0.20",
        "db0": ">=0.2.1",
        "idb-keyval": "^6.2.1",
        "ioredis": "^5.4.2",
        "uploadthing": "^7.4.4"
      },
      "peerDependenciesMeta": {
        "@azure/app-configuration": {
          "optional": true
        },
        "@azure/cosmos": {
          "optional": true
        },
        "@azure/data-tables": {
          "optional": true
        },
        "@azure/identity": {
          "optional": true
        },
        "@azure/keyvault-secrets": {
          "optional": true
        },
        "@azure/storage-blob": {
          "optional": true
        },
        "@capacitor/preferences": {
          "optional": true
        },
        "@deno/kv": {
          "optional": true
        },
        "@netlify/blobs": {
          "optional": true
        },
        "@planetscale/database": {
          "optional": true
        },
        "@upstash/redis": {
          "optional": true
        },
        "@vercel/blob": {
          "optional": true
        },
        "@vercel/kv": {
          "optional": true
        },
        "aws4fetch": {
          "optional": true
        },
        "db0": {
          "optional": true
        },
        "idb-keyval": {
          "optional": true
        },
        "ioredis": {
          "optional": true
        },
        "uploadthing": {
          "optional": true
        }
      }
    },
    "node_modules/@walletconnect/utils/node_modules/viem": {
      "version": "2.31.0",
      "resolved": "https://registry.npmjs.org/viem/-/viem-2.31.0.tgz",
      "integrity": "sha512-U7OMQ6yqK+bRbEIarf2vqxL7unSEQvNxvML/1zG7suAmKuJmipqdVTVJGKBCJiYsm/EremyO2FS4dHIPpGv+eA==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/wevm"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "@noble/curves": "1.9.1",
        "@noble/hashes": "1.8.0",
        "@scure/bip32": "1.7.0",
        "@scure/bip39": "1.6.0",
        "abitype": "1.0.8",
        "isows": "1.0.7",
        "ox": "0.7.1",
        "ws": "8.18.2"
      },
      "peerDependencies": {
        "typescript": ">=5.0.4"
      },
      "peerDependenciesMeta": {
        "typescript": {
          "optional": true
        }
      }
    },
    "node_modules/@walletconnect/utils/node_modules/viem/node_modules/@noble/curves": {
      "version": "1.9.1",
      "resolved": "https://registry.npmjs.org/@noble/curves/-/curves-1.9.1.tgz",
      "integrity": "sha512-k11yZxZg+t+gWvBbIswW0yoJlu8cHOC7dhunwOzoWH/mXGBiYyR4YY6hAEK/3EUs4UpB8la1RfdRpeGsFHkWsA==",
      "license": "MIT",
      "dependencies": {
        "@noble/hashes": "1.8.0"
      },
      "engines": {
        "node": "^14.21.3 || >=16"
      },
      "funding": {
        "url": "https://paulmillr.com/funding/"
      }
    },
    "node_modules/@walletconnect/utils/node_modules/ws": {
      "version": "8.18.2",
      "resolved": "https://registry.npmjs.org/ws/-/ws-8.18.2.tgz",
      "integrity": "sha512-DMricUmwGZUVr++AEAe2uiVM7UoO9MAVZMDu05UQOaUII0lp+zOzLLU4Xqh/JvTqklB1T4uELaaPBKyjE1r4fQ==",
      "license": "MIT",
      "engines": {
        "node": ">=10.0.0"
      },
      "peerDependencies": {
        "bufferutil": "^4.0.1",
        "utf-8-validate": ">=5.0.2"
      },
      "peerDependenciesMeta": {
        "bufferutil": {
          "optional": true
        },
        "utf-8-validate": {
          "optional": true
        }
      }
    },
    "node_modules/@walletconnect/window-getters": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/@walletconnect/window-getters/-/window-getters-1.0.1.tgz",
      "integrity": "sha512-vHp+HqzGxORPAN8gY03qnbTMnhqIwjeRJNOMOAzePRg4xVEEE2WvYsI9G2NMjOknA8hnuYbU3/hwLcKbjhc8+Q==",
      "license": "MIT",
      "dependencies": {
        "tslib": "1.14.1"
      }
    },
    "node_modules/@walletconnect/window-getters/node_modules/tslib": {
      "version": "1.14.1",
      "resolved": "https://registry.npmjs.org/tslib/-/tslib-1.14.1.tgz",
      "integrity": "sha512-Xni35NKzjgMrwevysHTCArtLDpPvye8zV/0E4EyYn43P7/7qvQwPh9BGkHewbMulVntbigmcT7rdX3BNo9wRJg==",
      "license": "0BSD"
    },
    "node_modules/@walletconnect/window-metadata": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/@walletconnect/window-metadata/-/window-metadata-1.0.1.tgz",
      "integrity": "sha512-9koTqyGrM2cqFRW517BPY/iEtUDx2r1+Pwwu5m7sJ7ka79wi3EyqhqcICk/yDmv6jAS1rjKgTKXlEhanYjijcA==",
      "license": "MIT",
      "dependencies": {
        "@walletconnect/window-getters": "^1.0.1",
        "tslib": "1.14.1"
      }
    },
    "node_modules/@walletconnect/window-metadata/node_modules/tslib": {
      "version": "1.14.1",
      "resolved": "https://registry.npmjs.org/tslib/-/tslib-1.14.1.tgz",
      "integrity": "sha512-Xni35NKzjgMrwevysHTCArtLDpPvye8zV/0E4EyYn43P7/7qvQwPh9BGkHewbMulVntbigmcT7rdX3BNo9wRJg==",
      "license": "0BSD"
    },
    "node_modules/@webgpu/types": {
      "version": "0.1.64",
      "resolved": "https://registry.npmjs.org/@webgpu/types/-/types-0.1.64.tgz",
      "integrity": "sha512-84kRIAGV46LJTlJZWxShiOrNL30A+9KokD7RB3dRCIqODFjodS5tCD5yyiZ8kIReGVZSDfA3XkkwyyOIF6K62A==",
      "license": "BSD-3-Clause"
    },
    "node_modules/abi-wan-kanabi": {
      "version": "2.2.4",
      "resolved": "https://registry.npmjs.org/abi-wan-kanabi/-/abi-wan-kanabi-2.2.4.tgz",
      "integrity": "sha512-0aA81FScmJCPX+8UvkXLki3X1+yPQuWxEkqXBVKltgPAK79J+NB+Lp5DouMXa7L6f+zcRlIA/6XO7BN/q9fnvg==",
      "license": "ISC",
      "dependencies": {
        "ansicolors": "^0.3.2",
        "cardinal": "^2.1.1",
        "fs-extra": "^10.0.0",
        "yargs": "^17.7.2"
      },
      "bin": {
        "generate": "dist/generate.js"
      }
    },
    "node_modules/abitype": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/abitype/-/abitype-1.0.0.tgz",
      "integrity": "sha512-NMeMah//6bJ56H5XRj8QCV4AwuW6hB6zqz2LnhhLdcWVQOsXki6/Pn3APeqxCma62nXIcmZWdu1DlHWS74umVQ==",
      "license": "MIT",
      "funding": {
        "url": "https://github.com/sponsors/wevm"
      },
      "peerDependencies": {
        "typescript": ">=5.0.4",
        "zod": "^3 >=3.22.0"
      },
      "peerDependenciesMeta": {
        "typescript": {
          "optional": true
        },
        "zod": {
          "optional": true
        }
      }
    },
    "node_modules/acorn": {
      "version": "8.15.0",
      "resolved": "https://registry.npmjs.org/acorn/-/acorn-8.15.0.tgz",
      "integrity": "sha512-NZyJarBfL7nWwIq+FDL6Zp/yHEhePMNnnJ0y3qfieCrmNvYct8uvtiV41UvlSe6apAfk0fY1FbWx+NwfmpvtTg==",
      "dev": true,
      "license": "MIT",
      "bin": {
        "acorn": "bin/acorn"
      },
      "engines": {
        "node": ">=0.4.0"
      }
    },
    "node_modules/acorn-jsx": {
      "version": "5.3.2",
      "resolved": "https://registry.npmjs.org/acorn-jsx/-/acorn-jsx-5.3.2.tgz",
      "integrity": "sha512-rq9s+JNhf0IChjtDXxllJ7g41oZk5SlXtp0LHwyA5cejwn7vKmKp4pPri6YEePv2PU65sAsegbXtIinmDFDXgQ==",
      "dev": true,
      "license": "MIT",
      "peerDependencies": {
        "acorn": "^6.0.0 || ^7.0.0 || ^8.0.0"
      }
    },
    "node_modules/aes-js": {
      "version": "4.0.0-beta.5",
      "resolved": "https://registry.npmjs.org/aes-js/-/aes-js-4.0.0-beta.5.tgz",
      "integrity": "sha512-G965FqalsNyrPqgEGON7nIx1e/OVENSgiEIzyC63haUMuvNnwIgIjMs52hlTCKhkBny7A2ORNlfY9Zu+jmGk1Q==",
      "license": "MIT"
    },
    "node_modules/agentkeepalive": {
      "version": "4.6.0",
      "resolved": "https://registry.npmjs.org/agentkeepalive/-/agentkeepalive-4.6.0.tgz",
      "integrity": "sha512-kja8j7PjmncONqaTsB8fQ+wE2mSU2DJ9D4XKoJ5PFWIdRMa6SLSN1ff4mOr4jCbfRSsxR4keIiySJU0N9T5hIQ==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "humanize-ms": "^1.2.1"
      },
      "engines": {
        "node": ">= 8.0.0"
      }
    },
    "node_modules/ajv": {
      "version": "6.12.6",
      "resolved": "https://registry.npmjs.org/ajv/-/ajv-6.12.6.tgz",
      "integrity": "sha512-j3fVLgvTo527anyYyJOGTYJbG+vnnQYvE0m5mmkc1TK+nxAppkCLMIL0aZ4dblVCNoGShhm+kzE4ZUykBoMg4g==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "fast-deep-equal": "^3.1.1",
        "fast-json-stable-stringify": "^2.0.0",
        "json-schema-traverse": "^0.4.1",
        "uri-js": "^4.2.2"
      },
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/epoberezkin"
      }
    },
    "node_modules/ansi-regex": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz",
      "integrity": "sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/ansi-styles": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
      "integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
      "license": "MIT",
      "dependencies": {
        "color-convert": "^2.0.1"
      },
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/chalk/ansi-styles?sponsor=1"
      }
    },
    "node_modules/ansicolors": {
      "version": "0.3.2",
      "resolved": "https://registry.npmjs.org/ansicolors/-/ansicolors-0.3.2.tgz",
      "integrity": "sha512-QXu7BPrP29VllRxH8GwB7x5iX5qWKAAMLqKQGWTeLWVlNHNOpVMJ91dsxQAIWXpjuW5wqvxu3Jd/nRjrJ+0pqg==",
      "license": "MIT"
    },
    "node_modules/any-promise": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/any-promise/-/any-promise-1.3.0.tgz",
      "integrity": "sha512-7UvmKalWRt1wgjL1RrGxoSJW/0QZFIegpeGvZG9kjp8vrRu55XTHbwnqq2GpXm9uLbcuhxm3IqX9OB4MZR1b2A==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/anymatch": {
      "version": "3.1.3",
      "resolved": "https://registry.npmjs.org/anymatch/-/anymatch-3.1.3.tgz",
      "integrity": "sha512-KMReFUr0B4t+D+OBkjR3KYqvocp2XaSzO55UcB6mgQMd3KbcE+mWTyvVV7D/zsdEbNnV6acZUutkiHQXvTr1Rw==",
      "license": "ISC",
      "dependencies": {
        "normalize-path": "^3.0.0",
        "picomatch": "^2.0.4"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/arg": {
      "version": "5.0.2",
      "resolved": "https://registry.npmjs.org/arg/-/arg-5.0.2.tgz",
      "integrity": "sha512-PYjyFOLKQ9y57JvQ6QLo8dAgNqswh8M1RMJYdQduT6xbWSgK36P/Z/v+p888pM69jMMfS8Xd8F6I1kQ/I9HUGg==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/argparse": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/argparse/-/argparse-2.0.1.tgz",
      "integrity": "sha512-8+9WqebbFzpX9OR+Wa6O29asIogeRMzcGtAINdpMHHyAg10f05aSFVBbcEqGf/PXw1EjAZ+q2/bEBg3DvurK3Q==",
      "dev": true,
      "license": "Python-2.0"
    },
    "node_modules/async-mutex": {
      "version": "0.5.0",
      "resolved": "https://registry.npmjs.org/async-mutex/-/async-mutex-0.5.0.tgz",
      "integrity": "sha512-1A94B18jkJ3DYq284ohPxoXbfTA5HsQ7/Mf4DEhcyLx3Bz27Rh59iScbB6EPiP+B+joue6YCxcMXSbFC1tZKwA==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "tslib": "^2.4.0"
      }
    },
    "node_modules/atomic-sleep": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/atomic-sleep/-/atomic-sleep-1.0.0.tgz",
      "integrity": "sha512-kNOjDqAh7px0XWNI+4QbzoiR/nTkHAWNud2uvnJquD1/x5a7EQZMJT0AczqK0Qn67oY/TTQ1LbUKajZpp3I9tQ==",
      "license": "MIT",
      "engines": {
        "node": ">=8.0.0"
      }
    },
    "node_modules/autoprefixer": {
      "version": "10.4.21",
      "resolved": "https://registry.npmjs.org/autoprefixer/-/autoprefixer-10.4.21.tgz",
      "integrity": "sha512-O+A6LWV5LDHSJD3LjHYoNi4VLsj/Whi7k6zG12xTYaU4cQ8oxQGckXNX8cRHK5yOZ/ppVHe0ZBXGzSV9jXdVbQ==",
      "dev": true,
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/postcss/"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/autoprefixer"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "browserslist": "^4.24.4",
        "caniuse-lite": "^1.0.30001702",
        "fraction.js": "^4.3.7",
        "normalize-range": "^0.1.2",
        "picocolors": "^1.1.1",
        "postcss-value-parser": "^4.2.0"
      },
      "bin": {
        "autoprefixer": "bin/autoprefixer"
      },
      "engines": {
        "node": "^10 || ^12 || >=14"
      },
      "peerDependencies": {
        "postcss": "^8.1.0"
      }
    },
    "node_modules/available-typed-arrays": {
      "version": "1.0.7",
      "resolved": "https://registry.npmjs.org/available-typed-arrays/-/available-typed-arrays-1.0.7.tgz",
      "integrity": "sha512-wvUjBtSGN7+7SjNpq/9M2Tg350UZD3q62IFZLbRAR1bSMlCo1ZaeW+BJ+D090e4hIIZLBcTDWe4Mh4jvUDajzQ==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "possible-typed-array-names": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/balanced-match": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz",
      "integrity": "sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==",
      "license": "MIT"
    },
    "node_modules/base-x": {
      "version": "3.0.11",
      "resolved": "https://registry.npmjs.org/base-x/-/base-x-3.0.11.tgz",
      "integrity": "sha512-xz7wQ8xDhdyP7tQxwdteLYeFfS68tSMNCZ/Y37WJ4bhGfKPpqEIlmIyueQHqOyoPhE6xNUqjzRr8ra0eF9VRvA==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "safe-buffer": "^5.0.1"
      }
    },
    "node_modules/base64-js": {
      "version": "1.5.1",
      "resolved": "https://registry.npmjs.org/base64-js/-/base64-js-1.5.1.tgz",
      "integrity": "sha512-AKpaYlHn8t4SVbOHCy+b5+KKgvR4vrsD8vbvrbiQJps7fKDTkjkDry6ji0rUJjC0kzbNePLwzxq8iypo41qeWA==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ],
      "license": "MIT"
    },
    "node_modules/bidi-js": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/bidi-js/-/bidi-js-1.0.3.tgz",
      "integrity": "sha512-RKshQI1R3YQ+n9YJz2QQ147P66ELpa1FQEg20Dk8oW9t2KgLbpDLLp9aGZ7y8WHSshDknG0bknqGw5/tyCs5tw==",
      "license": "MIT",
      "dependencies": {
        "require-from-string": "^2.0.2"
      }
    },
    "node_modules/big-integer": {
      "version": "1.6.52",
      "resolved": "https://registry.npmjs.org/big-integer/-/big-integer-1.6.52.tgz",
      "integrity": "sha512-QxD8cf2eVqJOOz63z6JIN9BzvVs/dlySa5HGSBH5xtR8dPteIRQnBxxKqkNTiT6jbDTF6jAfrd4oMcND9RGbQg==",
      "license": "Unlicense",
      "engines": {
        "node": ">=0.6"
      }
    },
    "node_modules/big.js": {
      "version": "6.2.2",
      "resolved": "https://registry.npmjs.org/big.js/-/big.js-6.2.2.tgz",
      "integrity": "sha512-y/ie+Faknx7sZA5MfGA2xKlu0GDv8RWrXGsmlteyJQ2lvoKv9GBK/fpRMc2qlSoBAgNxrixICFCBefIq8WCQpQ==",
      "license": "MIT",
      "engines": {
        "node": "*"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/bigjs"
      }
    },
    "node_modules/binary-extensions": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/binary-extensions/-/binary-extensions-2.3.0.tgz",
      "integrity": "sha512-Ceh+7ox5qe7LJuLHoY0feh3pHuUDHAcRUeyL2VYghZwfpkNIy/+8Ocg0a3UuSoYzavmylwuLWQOf3hl0jjMMIw==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/blakejs": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/blakejs/-/blakejs-1.2.1.tgz",
      "integrity": "sha512-QXUSXI3QVc/gJME0dBpXrag1kbzOqCjCX8/b54ntNyW6sjtoqxqRk3LTmXzaJoh71zMsDCjM+47jS7XiwN/+fQ==",
      "license": "MIT"
    },
    "node_modules/bn.js": {
      "version": "5.2.2",
      "resolved": "https://registry.npmjs.org/bn.js/-/bn.js-5.2.2.tgz",
      "integrity": "sha512-v2YAxEmKaBLahNwE1mjp4WON6huMNeuDvagFZW+ASCuA/ku0bXR9hSMw0XpiqMoA3+rmnyck/tPRSFQkoC9Cuw==",
      "license": "MIT",
      "peer": true
    },
    "node_modules/borsh": {
      "version": "0.7.0",
      "resolved": "https://registry.npmjs.org/borsh/-/borsh-0.7.0.tgz",
      "integrity": "sha512-CLCsZGIBCFnPtkNnieW/a8wmreDmfUtjU2m9yHrzPXIlNbqVs0AQrSatSG6vdNYUqdc83tkQi2eHfF98ubzQLA==",
      "license": "Apache-2.0",
      "peer": true,
      "dependencies": {
        "bn.js": "^5.2.0",
        "bs58": "^4.0.0",
        "text-encoding-utf-8": "^1.0.2"
      }
    },
    "node_modules/bowser": {
      "version": "2.11.0",
      "resolved": "https://registry.npmjs.org/bowser/-/bowser-2.11.0.tgz",
      "integrity": "sha512-AlcaJBi/pqqJBIQ8U9Mcpc9i8Aqxn88Skv5d+xBX006BY5u8N3mGLHa5Lgppa7L/HfwgwLgZ6NYs+Ag6uUmJRA==",
      "license": "MIT",
      "peer": true
    },
    "node_modules/brace-expansion": {
      "version": "1.1.12",
      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.12.tgz",
      "integrity": "sha512-9T9UjW3r0UW5c1Q7GTwllptXwhvYmEzFhzMfZ9H7FQWt+uZePjZPjBP/W1ZEyZ1twGWom5/56TF4lPcqjnDHcg==",
      "license": "MIT",
      "dependencies": {
        "balanced-match": "^1.0.0",
        "concat-map": "0.0.1"
      }
    },
    "node_modules/braces": {
      "version": "3.0.3",
      "resolved": "https://registry.npmjs.org/braces/-/braces-3.0.3.tgz",
      "integrity": "sha512-yQbXgO/OSZVD2IsiLlro+7Hf6Q18EJrKSEsdoMzKePKXct3gvD8oLcOQdIzGupr5Fj+EDe8gO/lxc1BzfMpxvA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "fill-range": "^7.1.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/broadcast-channel": {
      "version": "3.7.0",
      "resolved": "https://registry.npmjs.org/broadcast-channel/-/broadcast-channel-3.7.0.tgz",
      "integrity": "sha512-cIAKJXAxGJceNZGTZSBzMxzyOn72cVgPnKx4dc6LRjQgbaJUQqhy5rzL3zbMxkMWsGKkv2hSFkPRMEXfoMZ2Mg==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "detect-node": "^2.1.0",
        "js-sha3": "0.8.0",
        "microseconds": "0.2.0",
        "nano-time": "1.0.0",
        "oblivious-set": "1.0.0",
        "rimraf": "3.0.2",
        "unload": "2.2.0"
      }
    },
    "node_modules/browserslist": {
      "version": "4.25.0",
      "resolved": "https://registry.npmjs.org/browserslist/-/browserslist-4.25.0.tgz",
      "integrity": "sha512-PJ8gYKeS5e/whHBh8xrwYK+dAvEj7JXtz6uTucnMRB8OiGTsKccFekoRrjajPBHV8oOY+2tI4uxeceSimKwMFA==",
      "dev": true,
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/browserslist"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/browserslist"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "caniuse-lite": "^1.0.30001718",
        "electron-to-chromium": "^1.5.160",
        "node-releases": "^2.0.19",
        "update-browserslist-db": "^1.1.3"
      },
      "bin": {
        "browserslist": "cli.js"
      },
      "engines": {
        "node": "^6 || ^7 || ^8 || ^9 || ^10 || ^11 || ^12 || >=13.7"
      }
    },
    "node_modules/bs58": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/bs58/-/bs58-4.0.1.tgz",
      "integrity": "sha512-Ok3Wdf5vOIlBrgCvTq96gBkJw+JUEzdBgyaza5HLtPm7yTHkjRy8+JzNyHF7BHa0bNWOQIp3m5YF0nnFcOIKLw==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "base-x": "^3.0.2"
      }
    },
    "node_modules/bs58check": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/bs58check/-/bs58check-3.0.1.tgz",
      "integrity": "sha512-hjuuJvoWEybo7Hn/0xOrczQKKEKD63WguEjlhLExYs2wUBcebDC1jDNK17eEAD2lYfw82d5ASC1d7K3SWszjaQ==",
      "license": "MIT",
      "dependencies": {
        "@noble/hashes": "^1.2.0",
        "bs58": "^5.0.0"
      }
    },
    "node_modules/bs58check/node_modules/base-x": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/base-x/-/base-x-4.0.1.tgz",
      "integrity": "sha512-uAZ8x6r6S3aUM9rbHGVOIsR15U/ZSc82b3ymnCPsT45Gk1DDvhDPdIgB5MrhirZWt+5K0EEPQH985kNqZgNPFw==",
      "license": "MIT"
    },
    "node_modules/bs58check/node_modules/bs58": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/bs58/-/bs58-5.0.0.tgz",
      "integrity": "sha512-r+ihvQJvahgYT50JD05dyJNKlmmSlMoOGwn1lCcEzanPglg7TxYjioQUYehQ9mAR/+hOSd2jRc/Z2y5UxBymvQ==",
      "license": "MIT",
      "dependencies": {
        "base-x": "^4.0.0"
      }
    },
    "node_modules/buffer": {
      "version": "6.0.3",
      "resolved": "https://registry.npmjs.org/buffer/-/buffer-6.0.3.tgz",
      "integrity": "sha512-FTiCpNxtwiZZHEZbcbTIcZjERVICn9yq/pDFkTl95/AxzD1naBctN7YO68riM/gLSDY7sdrMby8hofADYuuqOA==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "base64-js": "^1.3.1",
        "ieee754": "^1.2.1"
      }
    },
    "node_modules/bufferutil": {
      "version": "4.0.9",
      "resolved": "https://registry.npmjs.org/bufferutil/-/bufferutil-4.0.9.tgz",
      "integrity": "sha512-WDtdLmJvAuNNPzByAYpRo2rF1Mmradw6gvWsQKf63476DDXmomT9zUiGypLcG4ibIM67vhAj8jJRdbmEws2Aqw==",
      "hasInstallScript": true,
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "node-gyp-build": "^4.3.0"
      },
      "engines": {
        "node": ">=6.14.2"
      }
    },
    "node_modules/bundle-name": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/bundle-name/-/bundle-name-4.1.0.tgz",
      "integrity": "sha512-tjwM5exMg6BGRI+kNmTntNsvdZS1X8BFYS6tnJ2hdH0kVxM6/eVZ2xy+FqStSWvYmtfFMDLIxurorHwDKfDz5Q==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "run-applescript": "^7.0.0"
      },
      "engines": {
        "node": ">=18"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/call-bind": {
      "version": "1.0.8",
      "resolved": "https://registry.npmjs.org/call-bind/-/call-bind-1.0.8.tgz",
      "integrity": "sha512-oKlSFMcMwpUg2ednkhQ454wfWiU/ul3CkJe/PEHcTKuiX6RpbehUiFMXu13HalGZxfUwCQzZG747YXBn1im9ww==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "call-bind-apply-helpers": "^1.0.0",
        "es-define-property": "^1.0.0",
        "get-intrinsic": "^1.2.4",
        "set-function-length": "^1.2.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/call-bind-apply-helpers": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/call-bind-apply-helpers/-/call-bind-apply-helpers-1.0.2.tgz",
      "integrity": "sha512-Sp1ablJ0ivDkSzjcaJdxEunN5/XvksFJ2sMBFfq6x0ryhQV/2b/KwFe21cMpmHtPOSij8K99/wSfoEuTObmuMQ==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "es-errors": "^1.3.0",
        "function-bind": "^1.1.2"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/call-bound": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/call-bound/-/call-bound-1.0.4.tgz",
      "integrity": "sha512-+ys997U96po4Kx/ABpBCqhA9EuxJaQWDQg7295H4hBphv3IZg0boBKuwYpt4YXp6MZ5AmZQnU/tyMTlRpaSejg==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "call-bind-apply-helpers": "^1.0.2",
        "get-intrinsic": "^1.3.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/callsites": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/callsites/-/callsites-3.1.0.tgz",
      "integrity": "sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/camelcase": {
      "version": "5.3.1",
      "resolved": "https://registry.npmjs.org/camelcase/-/camelcase-5.3.1.tgz",
      "integrity": "sha512-L28STB170nwWS63UjtlEOE3dldQApaJXZkOI1uMFfzf3rRuPegHaHesyee+YxQ+W6SvRDQV6UrdOdRiR153wJg==",
      "license": "MIT",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/camelcase-css": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/camelcase-css/-/camelcase-css-2.0.1.tgz",
      "integrity": "sha512-QOSvevhslijgYwRx6Rv7zKdMF8lbRmx+uQGx2+vDc+KI/eBnsy9kit5aj23AgGu3pa4t9AgwbnXWqS+iOY+2aA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/camera-controls": {
      "version": "2.10.1",
      "resolved": "https://registry.npmjs.org/camera-controls/-/camera-controls-2.10.1.tgz",
      "integrity": "sha512-KnaKdcvkBJ1Irbrzl8XD6WtZltkRjp869Jx8c0ujs9K+9WD+1D7ryBsCiVqJYUqt6i/HR5FxT7RLASieUD+Q5w==",
      "license": "MIT",
      "peerDependencies": {
        "three": ">=0.126.1"
      }
    },
    "node_modules/caniuse-lite": {
      "version": "1.0.30001724",
      "resolved": "https://registry.npmjs.org/caniuse-lite/-/caniuse-lite-1.0.30001724.tgz",
      "integrity": "sha512-WqJo7p0TbHDOythNTqYujmaJTvtYRZrjpP8TCvH6Vb9CYJerJNKamKzIWOM4BkQatWj9H2lYulpdAQNBe7QhNA==",
      "dev": true,
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/browserslist"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/caniuse-lite"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "license": "CC-BY-4.0"
    },
    "node_modules/cardinal": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/cardinal/-/cardinal-2.1.1.tgz",
      "integrity": "sha512-JSr5eOgoEymtYHBjNWyjrMqet9Am2miJhlfKNdqLp6zoeAh0KN5dRAcxlecj5mAJrmQomgiOBj35xHLrFjqBpw==",
      "license": "MIT",
      "dependencies": {
        "ansicolors": "~0.3.2",
        "redeyed": "~2.1.0"
      },
      "bin": {
        "cdl": "bin/cdl.js"
      }
    },
    "node_modules/cbor-extract": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/cbor-extract/-/cbor-extract-2.2.0.tgz",
      "integrity": "sha512-Ig1zM66BjLfTXpNgKpvBePq271BPOvu8MR0Jl080yG7Jsl+wAZunfrwiwA+9ruzm/WEdIV5QF/bjDZTqyAIVHA==",
      "hasInstallScript": true,
      "license": "MIT",
      "optional": true,
      "dependencies": {
        "node-gyp-build-optional-packages": "5.1.1"
      },
      "bin": {
        "download-cbor-prebuilds": "bin/download-prebuilds.js"
      },
      "optionalDependencies": {
        "@cbor-extract/cbor-extract-darwin-arm64": "2.2.0",
        "@cbor-extract/cbor-extract-darwin-x64": "2.2.0",
        "@cbor-extract/cbor-extract-linux-arm": "2.2.0",
        "@cbor-extract/cbor-extract-linux-arm64": "2.2.0",
        "@cbor-extract/cbor-extract-linux-x64": "2.2.0",
        "@cbor-extract/cbor-extract-win32-x64": "2.2.0"
      }
    },
    "node_modules/cbor-x": {
      "version": "1.6.0",
      "resolved": "https://registry.npmjs.org/cbor-x/-/cbor-x-1.6.0.tgz",
      "integrity": "sha512-0kareyRwHSkL6ws5VXHEf8uY1liitysCVJjlmhaLG+IXLqhSaOO+t63coaso7yjwEzWZzLy8fJo06gZDVQM9Qg==",
      "license": "MIT",
      "optionalDependencies": {
        "cbor-extract": "^2.2.0"
      }
    },
    "node_modules/chalk": {
      "version": "5.4.1",
      "resolved": "https://registry.npmjs.org/chalk/-/chalk-5.4.1.tgz",
      "integrity": "sha512-zgVZuo2WcZgfUEmsn6eO3kINexW8RAE4maiQ8QNs8CtpPCSyMiYsULR3HQYkm3w8FIA3SberyMJMSldGsW+U3w==",
      "license": "MIT",
      "peer": true,
      "engines": {
        "node": "^12.17.0 || ^14.13 || >=16.0.0"
      },
      "funding": {
        "url": "https://github.com/chalk/chalk?sponsor=1"
      }
    },
    "node_modules/chokidar": {
      "version": "3.6.0",
      "resolved": "https://registry.npmjs.org/chokidar/-/chokidar-3.6.0.tgz",
      "integrity": "sha512-7VT13fmjotKpGipCW9JEQAusEPE+Ei8nl6/g4FBAmIm0GOOLMua9NDDo/DWp0ZAxCr3cPq5ZpBqmPAQgDda2Pw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "anymatch": "~3.1.2",
        "braces": "~3.0.2",
        "glob-parent": "~5.1.2",
        "is-binary-path": "~2.1.0",
        "is-glob": "~4.0.1",
        "normalize-path": "~3.0.0",
        "readdirp": "~3.6.0"
      },
      "engines": {
        "node": ">= 8.10.0"
      },
      "funding": {
        "url": "https://paulmillr.com/funding/"
      },
      "optionalDependencies": {
        "fsevents": "~2.3.2"
      }
    },
    "node_modules/chokidar/node_modules/glob-parent": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz",
      "integrity": "sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "is-glob": "^4.0.1"
      },
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/class-variance-authority": {
      "version": "0.7.1",
      "resolved": "https://registry.npmjs.org/class-variance-authority/-/class-variance-authority-0.7.1.tgz",
      "integrity": "sha512-Ka+9Trutv7G8M6WT6SeiRWz792K5qEqIGEGzXKhAE6xOWAY6pPH8U+9IY3oCMv6kqTmLsv7Xh/2w2RigkePMsg==",
      "license": "Apache-2.0",
      "dependencies": {
        "clsx": "^2.1.1"
      },
      "funding": {
        "url": "https://polar.sh/cva"
      }
    },
    "node_modules/cliui": {
      "version": "8.0.1",
      "resolved": "https://registry.npmjs.org/cliui/-/cliui-8.0.1.tgz",
      "integrity": "sha512-BSeNnyus75C4//NQ9gQt1/csTXyo/8Sb+afLAkzAptFuMsod9HFokGNudZpi/oQV73hnVK+sR+5PVRMd+Dr7YQ==",
      "license": "ISC",
      "dependencies": {
        "string-width": "^4.2.0",
        "strip-ansi": "^6.0.1",
        "wrap-ansi": "^7.0.0"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/clsx": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/clsx/-/clsx-2.1.1.tgz",
      "integrity": "sha512-eYm0QWBtUrBWZWG0d386OGAw16Z995PiOVo2B7bjWSbHedGl5e0ZWaq65kOGgUSNesEIDkB9ISbTg/JK9dhCZA==",
      "license": "MIT",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/color-convert": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
      "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
      "license": "MIT",
      "dependencies": {
        "color-name": "~1.1.4"
      },
      "engines": {
        "node": ">=7.0.0"
      }
    },
    "node_modules/color-name": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
      "integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
      "license": "MIT"
    },
    "node_modules/commander": {
      "version": "13.1.0",
      "resolved": "https://registry.npmjs.org/commander/-/commander-13.1.0.tgz",
      "integrity": "sha512-/rFeCpNJQbhSZjGVwO9RFV3xPqbnERS8MmIQzCtD/zl6gpJuV/bMLuN92oG3F7d8oDEHHRrujSXNUr8fpjntKw==",
      "license": "MIT",
      "peer": true,
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/complex.js": {
      "version": "2.4.2",
      "resolved": "https://registry.npmjs.org/complex.js/-/complex.js-2.4.2.tgz",
      "integrity": "sha512-qtx7HRhPGSCBtGiST4/WGHuW+zeaND/6Ld+db6PbrulIB1i2Ev/2UPiqcmpQNPSyfBKraC0EOvOKCB5dGZKt3g==",
      "license": "MIT",
      "engines": {
        "node": "*"
      },
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/rawify"
      }
    },
    "node_modules/concat-map": {
      "version": "0.0.1",
      "resolved": "https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz",
      "integrity": "sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg==",
      "license": "MIT"
    },
    "node_modules/convert-source-map": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/convert-source-map/-/convert-source-map-2.0.0.tgz",
      "integrity": "sha512-Kvp459HrV2FEJ1CAsi1Ku+MY3kasH19TFykTz2xWmMeq6bk2NU3XXvfJ+Q61m0xktWwt+1HSYf3JZsTms3aRJg==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/cookie-es": {
      "version": "1.2.2",
      "resolved": "https://registry.npmjs.org/cookie-es/-/cookie-es-1.2.2.tgz",
      "integrity": "sha512-+W7VmiVINB+ywl1HGXJXmrqkOhpKrIiVZV6tQuV54ZyQC7MMuBt81Vc336GMLoHBq5hV/F9eXgt5Mnx0Rha5Fg==",
      "license": "MIT"
    },
    "node_modules/core-util-is": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/core-util-is/-/core-util-is-1.0.3.tgz",
      "integrity": "sha512-ZQBvi1DcpJ4GDqanjucZ2Hj3wEO5pZDS89BWbkcrvdxksJorwUDDZamX9ldFkp9aw2lmBDLgkObEA4DWNJ9FYQ==",
      "license": "MIT",
      "peer": true
    },
    "node_modules/crc-32": {
      "version": "1.2.2",
      "resolved": "https://registry.npmjs.org/crc-32/-/crc-32-1.2.2.tgz",
      "integrity": "sha512-ROmzCKrTnOwybPcJApAA6WBWij23HVfGVNKqqrZpuyZOHqK2CwHSvpGuyt/UNNvaIjEd8X5IFGp4Mh+Ie1IHJQ==",
      "license": "Apache-2.0",
      "peer": true,
      "bin": {
        "crc32": "bin/crc32.njs"
      },
      "engines": {
        "node": ">=0.8"
      }
    },
    "node_modules/cross-env": {
      "version": "7.0.3",
      "resolved": "https://registry.npmjs.org/cross-env/-/cross-env-7.0.3.tgz",
      "integrity": "sha512-+/HKd6EgcQCJGh2PSjZuUitQBQynKor4wrFbRg4DtAgS1aWO+gU52xpH7M9ScGgXSYmAVS9bIJ8EzuaGw0oNAw==",
      "license": "MIT",
      "dependencies": {
        "cross-spawn": "^7.0.1"
      },
      "bin": {
        "cross-env": "src/bin/cross-env.js",
        "cross-env-shell": "src/bin/cross-env-shell.js"
      },
      "engines": {
        "node": ">=10.14",
        "npm": ">=6",
        "yarn": ">=1"
      }
    },
    "node_modules/cross-fetch": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/cross-fetch/-/cross-fetch-4.1.0.tgz",
      "integrity": "sha512-uKm5PU+MHTootlWEY+mZ4vvXoCn4fLQxT9dSc1sXVMSFkINTJVN8cAQROpwcKm8bJ/c7rgZVIBWzH5T78sNZZw==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "node-fetch": "^2.7.0"
      }
    },
    "node_modules/cross-spawn": {
      "version": "7.0.6",
      "resolved": "https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.6.tgz",
      "integrity": "sha512-uV2QOWP2nWzsy2aMp8aRibhi9dlzF5Hgh5SHaB9OiTGEyDTiJJyx0uy51QXdyWbtAHNua4XJzUKca3OzKUd3vA==",
      "license": "MIT",
      "dependencies": {
        "path-key": "^3.1.0",
        "shebang-command": "^2.0.0",
        "which": "^2.0.1"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/crossws": {
      "version": "0.3.5",
      "resolved": "https://registry.npmjs.org/crossws/-/crossws-0.3.5.tgz",
      "integrity": "sha512-ojKiDvcmByhwa8YYqbQI/hg7MEU0NC03+pSdEq4ZUnZR9xXpwk7E43SMNGkn+JxJGPFtNvQ48+vV2p+P1ml5PA==",
      "license": "MIT",
      "dependencies": {
        "uncrypto": "^0.1.3"
      }
    },
    "node_modules/cssesc": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/cssesc/-/cssesc-3.0.0.tgz",
      "integrity": "sha512-/Tb/JcjK111nNScGob5MNtsntNM1aCNUDipB/TkwZFhyDrrE47SOx/18wF2bbjgc3ZzCSKW1T5nt5EbFoAz/Vg==",
      "dev": true,
      "license": "MIT",
      "bin": {
        "cssesc": "bin/cssesc"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/csstype": {
      "version": "3.1.3",
      "resolved": "https://registry.npmjs.org/csstype/-/csstype-3.1.3.tgz",
      "integrity": "sha512-M1uQkMl8rQK/szD0LNhtqxIPLpimGm8sOBwU7lLnCpSbTyY3yeU1Vc7l4KT5zT4s/yOxHH5O7tIuuLOCnLADRw==",
      "license": "MIT"
    },
    "node_modules/date-fns": {
      "version": "2.30.0",
      "resolved": "https://registry.npmjs.org/date-fns/-/date-fns-2.30.0.tgz",
      "integrity": "sha512-fnULvOpxnC5/Vg3NCiWelDsLiUc9bRwAPs/+LfTLNvetFCtCTN+yQz15C/fs4AwX1R9K5GLtLfn8QW+dWisaAw==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "@babel/runtime": "^7.21.0"
      },
      "engines": {
        "node": ">=0.11"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/date-fns"
      }
    },
    "node_modules/dayjs": {
      "version": "1.11.13",
      "resolved": "https://registry.npmjs.org/dayjs/-/dayjs-1.11.13.tgz",
      "integrity": "sha512-oaMBel6gjolK862uaPQOVTA7q3TZhuSvuMQAAglQDOWYO9A91IrAOUJEyKVlqJlHE0vq5p5UXxzdPfMH/x6xNg==",
      "license": "MIT"
    },
    "node_modules/debug": {
      "version": "4.4.1",
      "resolved": "https://registry.npmjs.org/debug/-/debug-4.4.1.tgz",
      "integrity": "sha512-KcKCqiftBJcZr++7ykoDIEwSa3XWowTfNPo92BYxjXiyYEVrUQh2aLyhxBCwww+heortUFxEJYcRzosstTEBYQ==",
      "license": "MIT",
      "dependencies": {
        "ms": "^2.1.3"
      },
      "engines": {
        "node": ">=6.0"
      },
      "peerDependenciesMeta": {
        "supports-color": {
          "optional": true
        }
      }
    },
    "node_modules/decamelize": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/decamelize/-/decamelize-1.2.0.tgz",
      "integrity": "sha512-z2S+W9X73hAUUki+N+9Za2lBlun89zigOyGrsax+KUQ6wKW4ZoWpEYBkGhQjwAjjDCkWxhY0VKEhk8wzY7F5cA==",
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/decimal.js": {
      "version": "10.5.0",
      "resolved": "https://registry.npmjs.org/decimal.js/-/decimal.js-10.5.0.tgz",
      "integrity": "sha512-8vDa8Qxvr/+d94hSh5P3IJwI5t8/c0KsMp+g8bNw9cY2icONa5aPfvKeieW1WlG0WQYwwhJ7mjui2xtiePQSXw==",
      "license": "MIT"
    },
    "node_modules/decode-uri-component": {
      "version": "0.2.2",
      "resolved": "https://registry.npmjs.org/decode-uri-component/-/decode-uri-component-0.2.2.tgz",
      "integrity": "sha512-FqUYQ+8o158GyGTrMFJms9qh3CqTKvAqgqsTnkLI8sKu0028orqBhxNMFkFen0zGyg6epACD32pjVk58ngIErQ==",
      "license": "MIT",
      "engines": {
        "node": ">=0.10"
      }
    },
    "node_modules/deep-is": {
      "version": "0.1.4",
      "resolved": "https://registry.npmjs.org/deep-is/-/deep-is-0.1.4.tgz",
      "integrity": "sha512-oIPzksmTg4/MriiaYGO+okXDT7ztn/w3Eptv/+gSIdMdKsJo0u4CfYNFJPy+4SKMuCqGw2wxnA+URMg3t8a/bQ==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/default-browser": {
      "version": "5.2.1",
      "resolved": "https://registry.npmjs.org/default-browser/-/default-browser-5.2.1.tgz",
      "integrity": "sha512-WY/3TUME0x3KPYdRRxEJJvXRHV4PyPoUsxtZa78lwItwRQRHhd2U9xOscaT/YTf8uCXIAjeJOFBVEh/7FtD8Xg==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "bundle-name": "^4.1.0",
        "default-browser-id": "^5.0.0"
      },
      "engines": {
        "node": ">=18"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/default-browser-id": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/default-browser-id/-/default-browser-id-5.0.0.tgz",
      "integrity": "sha512-A6p/pu/6fyBcA1TRz/GqWYPViplrftcW2gZC9q79ngNCKAeR/X3gcEdXQHl4KNXV+3wgIJ1CPkJQ3IHM6lcsyA==",
      "license": "MIT",
      "peer": true,
      "engines": {
        "node": ">=18"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/define-data-property": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/define-data-property/-/define-data-property-1.1.4.tgz",
      "integrity": "sha512-rBMvIzlpA8v6E+SJZoo++HAYqsLrkg7MSfIinMPFhmkorw7X+dOXVJQs+QT69zGkzMyfDnIMN2Wid1+NbL3T+A==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "es-define-property": "^1.0.0",
        "es-errors": "^1.3.0",
        "gopd": "^1.0.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/define-lazy-prop": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/define-lazy-prop/-/define-lazy-prop-3.0.0.tgz",
      "integrity": "sha512-N+MeXYoqr3pOgn8xfyRPREN7gHakLYjhsHhWGT3fWAiL4IkAt0iDw14QiiEm2bE30c5XX5q0FtAA3CK5f9/BUg==",
      "license": "MIT",
      "peer": true,
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/defu": {
      "version": "6.1.4",
      "resolved": "https://registry.npmjs.org/defu/-/defu-6.1.4.tgz",
      "integrity": "sha512-mEQCMmwJu317oSz8CwdIOdwf3xMif1ttiM8LTufzc3g6kR+9Pe236twL8j3IYT1F7GfRgGcW6MWxzZjLIkuHIg==",
      "license": "MIT"
    },
    "node_modules/delay": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/delay/-/delay-5.0.0.tgz",
      "integrity": "sha512-ReEBKkIfe4ya47wlPYf/gu5ib6yUG0/Aez0JQZQz94kiWtRQvZIQbTiehsnwHvLSWJnQdhVeqYue7Id1dKr0qw==",
      "license": "MIT",
      "peer": true,
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/dequal": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/dequal/-/dequal-2.0.3.tgz",
      "integrity": "sha512-0je+qPKHEMohvfRTCEo3CrPG6cAzAYgmzKyxRiYSSDkS6eGJdyVJm7WaYA5ECaAD9wLB2T4EEeymA5aFVcYXCA==",
      "license": "MIT",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/derive-valtio": {
      "version": "0.1.0",
      "resolved": "https://registry.npmjs.org/derive-valtio/-/derive-valtio-0.1.0.tgz",
      "integrity": "sha512-OCg2UsLbXK7GmmpzMXhYkdO64vhJ1ROUUGaTFyHjVwEdMEcTTRj7W1TxLbSBxdY8QLBPCcp66MTyaSy0RpO17A==",
      "license": "MIT",
      "peerDependencies": {
        "valtio": "*"
      }
    },
    "node_modules/destr": {
      "version": "2.0.5",
      "resolved": "https://registry.npmjs.org/destr/-/destr-2.0.5.tgz",
      "integrity": "sha512-ugFTXCtDZunbzasqBxrK93Ik/DRYsO6S/fedkWEMKqt04xZ4csmnmwGDBAb07QWNaGMAmnTIemsYZCksjATwsA==",
      "license": "MIT"
    },
    "node_modules/detect-browser": {
      "version": "5.3.0",
      "resolved": "https://registry.npmjs.org/detect-browser/-/detect-browser-5.3.0.tgz",
      "integrity": "sha512-53rsFbGdwMwlF7qvCt0ypLM5V5/Mbl0szB7GPN8y9NCcbknYOeVVXdrXEq+90IwAfrrzt6Hd+u2E2ntakICU8w==",
      "license": "MIT"
    },
    "node_modules/detect-gpu": {
      "version": "5.0.70",
      "resolved": "https://registry.npmjs.org/detect-gpu/-/detect-gpu-5.0.70.tgz",
      "integrity": "sha512-bqerEP1Ese6nt3rFkwPnGbsUF9a4q+gMmpTVVOEzoCyeCc+y7/RvJnQZJx1JwhgQI5Ntg0Kgat8Uu7XpBqnz1w==",
      "license": "MIT",
      "dependencies": {
        "webgl-constants": "^1.1.1"
      }
    },
    "node_modules/detect-libc": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/detect-libc/-/detect-libc-2.0.4.tgz",
      "integrity": "sha512-3UDv+G9CsCKO1WKMGw9fwq/SWJYbI0c5Y7LU1AXYoDdbhE2AHQ6N6Nb34sG8Fj7T5APy8qXDCKuuIHd1BR0tVA==",
      "license": "Apache-2.0",
      "optional": true,
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/detect-node": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/detect-node/-/detect-node-2.1.0.tgz",
      "integrity": "sha512-T0NIuQpnTvFDATNuHN5roPwSBG83rFsuO+MXXH9/3N1eFbn4wcPjttvjMLEPWJ0RGUYgQE7cGgS3tNxbqCGM7g==",
      "license": "MIT"
    },
    "node_modules/didyoumean": {
      "version": "1.2.2",
      "resolved": "https://registry.npmjs.org/didyoumean/-/didyoumean-1.2.2.tgz",
      "integrity": "sha512-gxtyfqMg7GKyhQmb056K7M3xszy/myH8w+B4RT+QXBQsvAOdc3XymqDDPHx1BgPgsdAA5SIifona89YtRATDzw==",
      "dev": true,
      "license": "Apache-2.0"
    },
    "node_modules/dijkstrajs": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/dijkstrajs/-/dijkstrajs-1.0.3.tgz",
      "integrity": "sha512-qiSlmBq9+BCdCA/L46dw8Uy93mloxsPSbwnm5yrKn2vMPiy8KyAskTF6zuV/j5BMsmOGZDPs7KjU+mjb670kfA==",
      "license": "MIT"
    },
    "node_modules/dlv": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/dlv/-/dlv-1.1.3.tgz",
      "integrity": "sha512-+HlytyjlPKnIG8XuRG8WvmBP8xs8P71y+SKKS6ZXWoEgLuePxtDoUEiH7WkdePWrQ5JBpE6aoVqfZfJUQkjXwA==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/draco3d": {
      "version": "1.5.7",
      "resolved": "https://registry.npmjs.org/draco3d/-/draco3d-1.5.7.tgz",
      "integrity": "sha512-m6WCKt/erDXcw+70IJXnG7M3awwQPAsZvJGX5zY7beBqpELw6RDGkYVU0W43AFxye4pDZ5i2Lbyc/NNGqwjUVQ==",
      "license": "Apache-2.0"
    },
    "node_modules/dunder-proto": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/dunder-proto/-/dunder-proto-1.0.1.tgz",
      "integrity": "sha512-KIN/nDJBQRcXw0MLVhZE9iQHmG68qAVIBg9CqmUYjmQIhgij9U5MFvrqkUL5FbtyyzZuOeOt0zdeRe4UY7ct+A==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "call-bind-apply-helpers": "^1.0.1",
        "es-errors": "^1.3.0",
        "gopd": "^1.2.0"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/duplexify": {
      "version": "4.1.3",
      "resolved": "https://registry.npmjs.org/duplexify/-/duplexify-4.1.3.tgz",
      "integrity": "sha512-M3BmBhwJRZsSx38lZyhE53Csddgzl5R7xGJNk7CVddZD6CcmwMCH8J+7AprIrQKH7TonKxaCjcv27Qmf+sQ+oA==",
      "license": "MIT",
      "dependencies": {
        "end-of-stream": "^1.4.1",
        "inherits": "^2.0.3",
        "readable-stream": "^3.1.1",
        "stream-shift": "^1.0.2"
      }
    },
    "node_modules/eastasianwidth": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/eastasianwidth/-/eastasianwidth-0.2.0.tgz",
      "integrity": "sha512-I88TYZWc9XiYHRQ4/3c5rjjfgkjhLyW2luGIheGERbNQ6OY7yTybanSpDXZa8y7VUP9YmDcYa+eyq4ca7iLqWA==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/eciesjs": {
      "version": "0.4.15",
      "resolved": "https://registry.npmjs.org/eciesjs/-/eciesjs-0.4.15.tgz",
      "integrity": "sha512-r6kEJXDKecVOCj2nLMuXK/FCPeurW33+3JRpfXVbjLja3XUYFfD9I/JBreH6sUyzcm3G/YQboBjMla6poKeSdA==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "@ecies/ciphers": "^0.2.3",
        "@noble/ciphers": "^1.3.0",
        "@noble/curves": "^1.9.1",
        "@noble/hashes": "^1.8.0"
      },
      "engines": {
        "bun": ">=1",
        "deno": ">=2",
        "node": ">=16"
      }
    },
    "node_modules/eciesjs/node_modules/@ecies/ciphers": {
      "version": "0.2.3",
      "resolved": "https://registry.npmjs.org/@ecies/ciphers/-/ciphers-0.2.3.tgz",
      "integrity": "sha512-tapn6XhOueMwht3E2UzY0ZZjYokdaw9XtL9kEyjhQ/Fb9vL9xTFbOaI+fV0AWvTpYu4BNloC6getKW6NtSg4mA==",
      "license": "MIT",
      "peer": true,
      "engines": {
        "bun": ">=1",
        "deno": ">=2",
        "node": ">=16"
      },
      "peerDependencies": {
        "@noble/ciphers": "^1.0.0"
      }
    },
    "node_modules/eciesjs/node_modules/@noble/ciphers": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/@noble/ciphers/-/ciphers-1.3.0.tgz",
      "integrity": "sha512-2I0gnIVPtfnMw9ee9h1dJG7tp81+8Ob3OJb3Mv37rx5L40/b0i7djjCVvGOVqc9AEIQyvyu1i6ypKdFw8R8gQw==",
      "license": "MIT",
      "peer": true,
      "engines": {
        "node": "^14.21.3 || >=16"
      },
      "funding": {
        "url": "https://paulmillr.com/funding/"
      }
    },
    "node_modules/electron-to-chromium": {
      "version": "1.5.171",
      "resolved": "https://registry.npmjs.org/electron-to-chromium/-/electron-to-chromium-1.5.171.tgz",
      "integrity": "sha512-scWpzXEJEMrGJa4Y6m/tVotb0WuvNmasv3wWVzUAeCgKU0ToFOhUW6Z+xWnRQANMYGxN4ngJXIThgBJOqzVPCQ==",
      "dev": true,
      "license": "ISC"
    },
    "node_modules/emoji-regex": {
      "version": "8.0.0",
      "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz",
      "integrity": "sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==",
      "license": "MIT"
    },
    "node_modules/encode-utf8": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/encode-utf8/-/encode-utf8-1.0.3.tgz",
      "integrity": "sha512-ucAnuBEhUK4boH2HjVYG5Q2mQyPorvv0u/ocS+zhdw0S8AlHYY+GOFhP1Gio5z4icpP2ivFSvhtFjQi8+T9ppw==",
      "license": "MIT"
    },
    "node_modules/encoding": {
      "version": "0.1.13",
      "resolved": "https://registry.npmjs.org/encoding/-/encoding-0.1.13.tgz",
      "integrity": "sha512-ETBauow1T35Y/WZMkio9jiM0Z5xjHHmJ4XmjZOq1l/dXz3lr2sRn87nJy20RupqSh1F2m3HHPSp8ShIPQJrJ3A==",
      "license": "MIT",
      "dependencies": {
        "iconv-lite": "^0.6.2"
      }
    },
    "node_modules/end-of-stream": {
      "version": "1.4.5",
      "resolved": "https://registry.npmjs.org/end-of-stream/-/end-of-stream-1.4.5.tgz",
      "integrity": "sha512-ooEGc6HP26xXq/N+GCGOT0JKCLDGrq2bQUZrQ7gyrJiZANJ/8YDTxTpQBXGMn+WbIQXNVpyWymm7KYVICQnyOg==",
      "license": "MIT",
      "dependencies": {
        "once": "^1.4.0"
      }
    },
    "node_modules/engine.io-client": {
      "version": "6.6.3",
      "resolved": "https://registry.npmjs.org/engine.io-client/-/engine.io-client-6.6.3.tgz",
      "integrity": "sha512-T0iLjnyNWahNyv/lcjS2y4oE358tVS/SYQNxYXGAJ9/GLgH4VCvOQ/mhTjqU88mLZCQgiG8RIegFHYCdVC+j5w==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "@socket.io/component-emitter": "~3.1.0",
        "debug": "~4.3.1",
        "engine.io-parser": "~5.2.1",
        "ws": "~8.17.1",
        "xmlhttprequest-ssl": "~2.1.1"
      }
    },
    "node_modules/engine.io-client/node_modules/debug": {
      "version": "4.3.7",
      "resolved": "https://registry.npmjs.org/debug/-/debug-4.3.7.tgz",
      "integrity": "sha512-Er2nc/H7RrMXZBFCEim6TCmMk02Z8vLC2Rbi1KEBggpo0fS6l0S1nnapwmIi3yW/+GOJap1Krg4w0Hg80oCqgQ==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "ms": "^2.1.3"
      },
      "engines": {
        "node": ">=6.0"
      },
      "peerDependenciesMeta": {
        "supports-color": {
          "optional": true
        }
      }
    },
    "node_modules/engine.io-client/node_modules/ws": {
      "version": "8.17.1",
      "resolved": "https://registry.npmjs.org/ws/-/ws-8.17.1.tgz",
      "integrity": "sha512-6XQFvXTkbfUOZOKKILFG1PDK2NDQs4azKQl26T0YS5CxqWLgXajbPZ+h4gZekJyRqFU8pvnbAbbs/3TgRPy+GQ==",
      "license": "MIT",
      "peer": true,
      "engines": {
        "node": ">=10.0.0"
      },
      "peerDependencies": {
        "bufferutil": "^4.0.1",
        "utf-8-validate": ">=5.0.2"
      },
      "peerDependenciesMeta": {
        "bufferutil": {
          "optional": true
        },
        "utf-8-validate": {
          "optional": true
        }
      }
    },
    "node_modules/engine.io-parser": {
      "version": "5.2.3",
      "resolved": "https://registry.npmjs.org/engine.io-parser/-/engine.io-parser-5.2.3.tgz",
      "integrity": "sha512-HqD3yTBfnBxIrbnM1DoD6Pcq8NECnh8d4As1Qgh0z5Gg3jRRIqijury0CL3ghu/edArpUYiYqQiDUQBIs4np3Q==",
      "license": "MIT",
      "peer": true,
      "engines": {
        "node": ">=10.0.0"
      }
    },
    "node_modules/es-define-property": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/es-define-property/-/es-define-property-1.0.1.tgz",
      "integrity": "sha512-e3nRfgfUZ4rNGL232gUgX06QNyyez04KdjFrF+LTRoOXmrOgFKDg4BCdsjW8EnT69eqdYGmRpJwiPVYNrCaW3g==",
      "license": "MIT",
      "peer": true,
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/es-errors": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/es-errors/-/es-errors-1.3.0.tgz",
      "integrity": "sha512-Zf5H2Kxt2xjTvbJvP2ZWLEICxA6j+hAmMzIlypy4xcBg1vKVnx89Wy0GbS+kf5cwCVFFzdCFh2XSCFNULS6csw==",
      "license": "MIT",
      "peer": true,
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/es-object-atoms": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/es-object-atoms/-/es-object-atoms-1.1.1.tgz",
      "integrity": "sha512-FGgH2h8zKNim9ljj7dankFPcICIK9Cp5bm+c2gQSYePhpaG5+esrLODihIorn+Pe6FGJzWhXQotPv73jTaldXA==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "es-errors": "^1.3.0"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/es-toolkit": {
      "version": "1.39.3",
      "resolved": "https://registry.npmjs.org/es-toolkit/-/es-toolkit-1.39.3.tgz",
      "integrity": "sha512-Qb/TCFCldgOy8lZ5uC7nLGdqJwSabkQiYQShmw4jyiPk1pZzaYWTwaYKYP7EgLccWYgZocMrtItrwh683voaww==",
      "license": "MIT",
      "workspaces": [
        "docs",
        "benchmarks"
      ]
    },
    "node_modules/es6-promise": {
      "version": "4.2.8",
      "resolved": "https://registry.npmjs.org/es6-promise/-/es6-promise-4.2.8.tgz",
      "integrity": "sha512-HJDGx5daxeIvxdBxvG2cb9g4tEvwIk3i8+nhX0yGrYmZUzbkdg8QbDevheDB8gd0//uPj4c1EQua8Q+MViT0/w==",
      "license": "MIT",
      "peer": true
    },
    "node_modules/es6-promisify": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/es6-promisify/-/es6-promisify-5.0.0.tgz",
      "integrity": "sha512-C+d6UdsYDk0lMebHNR4S2NybQMMngAOnOwYBQjTOiv0MkoJMP0Myw2mgpDLBcpfCmRLxyFqYhS/CfOENq4SJhQ==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "es6-promise": "^4.0.3"
      }
    },
    "node_modules/esbuild": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/esbuild/-/esbuild-0.21.5.tgz",
      "integrity": "sha512-mg3OPMV4hXywwpoDxu3Qda5xCKQi+vCTZq8S9J/EpkhB2HzKXq4SNFZE3+NK93JYxc8VMSep+lOUSC/RVKaBqw==",
      "hasInstallScript": true,
      "license": "MIT",
      "bin": {
        "esbuild": "bin/esbuild"
      },
      "engines": {
        "node": ">=12"
      },
      "optionalDependencies": {
        "@esbuild/aix-ppc64": "0.21.5",
        "@esbuild/android-arm": "0.21.5",
        "@esbuild/android-arm64": "0.21.5",
        "@esbuild/android-x64": "0.21.5",
        "@esbuild/darwin-arm64": "0.21.5",
        "@esbuild/darwin-x64": "0.21.5",
        "@esbuild/freebsd-arm64": "0.21.5",
        "@esbuild/freebsd-x64": "0.21.5",
        "@esbuild/linux-arm": "0.21.5",
        "@esbuild/linux-arm64": "0.21.5",
        "@esbuild/linux-ia32": "0.21.5",
        "@esbuild/linux-loong64": "0.21.5",
        "@esbuild/linux-mips64el": "0.21.5",
        "@esbuild/linux-ppc64": "0.21.5",
        "@esbuild/linux-riscv64": "0.21.5",
        "@esbuild/linux-s390x": "0.21.5",
        "@esbuild/linux-x64": "0.21.5",
        "@esbuild/netbsd-x64": "0.21.5",
        "@esbuild/openbsd-x64": "0.21.5",
        "@esbuild/sunos-x64": "0.21.5",
        "@esbuild/win32-arm64": "0.21.5",
        "@esbuild/win32-ia32": "0.21.5",
        "@esbuild/win32-x64": "0.21.5"
      }
    },
    "node_modules/escalade": {
      "version": "3.2.0",
      "resolved": "https://registry.npmjs.org/escalade/-/escalade-3.2.0.tgz",
      "integrity": "sha512-WUj2qlxaQtO4g6Pq5c29GTcWGDyd8itL8zTlipgECz3JesAiiOKotd8JU6otB3PACgG6xkJUyVhboMS+bje/jA==",
      "license": "MIT",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/escape-latex": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/escape-latex/-/escape-latex-1.2.0.tgz",
      "integrity": "sha512-nV5aVWW1K0wEiUIEdZ4erkGGH8mDxGyxSeqPzRNtWP7ataw+/olFObw7hujFWlVjNsaDFw5VZ5NzVSIqRgfTiw==",
      "license": "MIT"
    },
    "node_modules/escape-string-regexp": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-4.0.0.tgz",
      "integrity": "sha512-TtpcNJ3XAzx3Gq8sWRzJaVajRs0uVxA2YAkdb1jm2YkPz4G6egUFAyA3n5vtEIZefPk5Wa4UXbKuS5fKkJWdgA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/eslint": {
      "version": "9.29.0",
      "resolved": "https://registry.npmjs.org/eslint/-/eslint-9.29.0.tgz",
      "integrity": "sha512-GsGizj2Y1rCWDu6XoEekL3RLilp0voSePurjZIkxL3wlm5o5EC9VpgaP7lrCvjnkuLvzFBQWB3vWB3K5KQTveQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@eslint-community/eslint-utils": "^4.2.0",
        "@eslint-community/regexpp": "^4.12.1",
        "@eslint/config-array": "^0.20.1",
        "@eslint/config-helpers": "^0.2.1",
        "@eslint/core": "^0.14.0",
        "@eslint/eslintrc": "^3.3.1",
        "@eslint/js": "9.29.0",
        "@eslint/plugin-kit": "^0.3.1",
        "@humanfs/node": "^0.16.6",
        "@humanwhocodes/module-importer": "^1.0.1",
        "@humanwhocodes/retry": "^0.4.2",
        "@types/estree": "^1.0.6",
        "@types/json-schema": "^7.0.15",
        "ajv": "^6.12.4",
        "chalk": "^4.0.0",
        "cross-spawn": "^7.0.6",
        "debug": "^4.3.2",
        "escape-string-regexp": "^4.0.0",
        "eslint-scope": "^8.4.0",
        "eslint-visitor-keys": "^4.2.1",
        "espree": "^10.4.0",
        "esquery": "^1.5.0",
        "esutils": "^2.0.2",
        "fast-deep-equal": "^3.1.3",
        "file-entry-cache": "^8.0.0",
        "find-up": "^5.0.0",
        "glob-parent": "^6.0.2",
        "ignore": "^5.2.0",
        "imurmurhash": "^0.1.4",
        "is-glob": "^4.0.0",
        "json-stable-stringify-without-jsonify": "^1.0.1",
        "lodash.merge": "^4.6.2",
        "minimatch": "^3.1.2",
        "natural-compare": "^1.4.0",
        "optionator": "^0.9.3"
      },
      "bin": {
        "eslint": "bin/eslint.js"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "url": "https://eslint.org/donate"
      },
      "peerDependencies": {
        "jiti": "*"
      },
      "peerDependenciesMeta": {
        "jiti": {
          "optional": true
        }
      }
    },
    "node_modules/eslint-plugin-react-hooks": {
      "version": "5.2.0",
      "resolved": "https://registry.npmjs.org/eslint-plugin-react-hooks/-/eslint-plugin-react-hooks-5.2.0.tgz",
      "integrity": "sha512-+f15FfK64YQwZdJNELETdn5ibXEUQmW1DZL6KXhNnc2heoy/sg9VJJeT7n8TlMWouzWqSWavFkIhHyIbIAEapg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=10"
      },
      "peerDependencies": {
        "eslint": "^3.0.0 || ^4.0.0 || ^5.0.0 || ^6.0.0 || ^7.0.0 || ^8.0.0-0 || ^9.0.0"
      }
    },
    "node_modules/eslint-plugin-react-refresh": {
      "version": "0.4.20",
      "resolved": "https://registry.npmjs.org/eslint-plugin-react-refresh/-/eslint-plugin-react-refresh-0.4.20.tgz",
      "integrity": "sha512-XpbHQ2q5gUF8BGOX4dHe+71qoirYMhApEPZ7sfhF/dNnOF1UXnCMGZf79SFTBO7Bz5YEIT4TMieSlJBWhP9WBA==",
      "dev": true,
      "license": "MIT",
      "peerDependencies": {
        "eslint": ">=8.40"
      }
    },
    "node_modules/eslint-scope": {
      "version": "8.4.0",
      "resolved": "https://registry.npmjs.org/eslint-scope/-/eslint-scope-8.4.0.tgz",
      "integrity": "sha512-sNXOfKCn74rt8RICKMvJS7XKV/Xk9kA7DyJr8mJik3S7Cwgy3qlkkmyS2uQB3jiJg6VNdZd/pDBJu0nvG2NlTg==",
      "dev": true,
      "license": "BSD-2-Clause",
      "dependencies": {
        "esrecurse": "^4.3.0",
        "estraverse": "^5.2.0"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "url": "https://opencollective.com/eslint"
      }
    },
    "node_modules/eslint-visitor-keys": {
      "version": "4.2.1",
      "resolved": "https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-4.2.1.tgz",
      "integrity": "sha512-Uhdk5sfqcee/9H/rCOJikYz67o0a2Tw2hGRPOG2Y1R2dg7brRe1uG0yaNQDHu+TO/uQPF/5eCapvYSmHUjt7JQ==",
      "dev": true,
      "license": "Apache-2.0",
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "url": "https://opencollective.com/eslint"
      }
    },
    "node_modules/eslint/node_modules/chalk": {
      "version": "4.1.2",
      "resolved": "https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz",
      "integrity": "sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "ansi-styles": "^4.1.0",
        "supports-color": "^7.1.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/chalk/chalk?sponsor=1"
      }
    },
    "node_modules/espree": {
      "version": "10.4.0",
      "resolved": "https://registry.npmjs.org/espree/-/espree-10.4.0.tgz",
      "integrity": "sha512-j6PAQ2uUr79PZhBjP5C5fhl8e39FmRnOjsD5lGnWrFU8i2G776tBK7+nP8KuQUTTyAZUwfQqXAgrVH5MbH9CYQ==",
      "dev": true,
      "license": "BSD-2-Clause",
      "dependencies": {
        "acorn": "^8.15.0",
        "acorn-jsx": "^5.3.2",
        "eslint-visitor-keys": "^4.2.1"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "url": "https://opencollective.com/eslint"
      }
    },
    "node_modules/esprima": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/esprima/-/esprima-4.0.1.tgz",
      "integrity": "sha512-eGuFFw7Upda+g4p+QHvnW0RyTX/SVeJBDM/gCtMARO0cLuT2HcEKnTPvhjV6aGeqrCB/sbNop0Kszm0jsaWU4A==",
      "license": "BSD-2-Clause",
      "bin": {
        "esparse": "bin/esparse.js",
        "esvalidate": "bin/esvalidate.js"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/esquery": {
      "version": "1.6.0",
      "resolved": "https://registry.npmjs.org/esquery/-/esquery-1.6.0.tgz",
      "integrity": "sha512-ca9pw9fomFcKPvFLXhBKUK90ZvGibiGOvRJNbjljY7s7uq/5YO4BOzcYtJqExdx99rF6aAcnRxHmcUHcz6sQsg==",
      "dev": true,
      "license": "BSD-3-Clause",
      "dependencies": {
        "estraverse": "^5.1.0"
      },
      "engines": {
        "node": ">=0.10"
      }
    },
    "node_modules/esrecurse": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/esrecurse/-/esrecurse-4.3.0.tgz",
      "integrity": "sha512-KmfKL3b6G+RXvP8N1vr3Tq1kL/oCFgn2NYXEtqP8/L3pKapUA4G8cFVaoF3SU323CD4XypR/ffioHmkti6/Tag==",
      "dev": true,
      "license": "BSD-2-Clause",
      "dependencies": {
        "estraverse": "^5.2.0"
      },
      "engines": {
        "node": ">=4.0"
      }
    },
    "node_modules/estraverse": {
      "version": "5.3.0",
      "resolved": "https://registry.npmjs.org/estraverse/-/estraverse-5.3.0.tgz",
      "integrity": "sha512-MMdARuVEQziNTeJD8DgMqmhwR11BRQ/cBP+pLtYdSTnf3MIO8fFeiINEbX36ZdNlfU/7A9f3gUw49B3oQsvwBA==",
      "dev": true,
      "license": "BSD-2-Clause",
      "engines": {
        "node": ">=4.0"
      }
    },
    "node_modules/esutils": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/esutils/-/esutils-2.0.3.tgz",
      "integrity": "sha512-kVscqXk4OCp68SZ0dkgEKVi6/8ij300KBWTJq32P/dYeWTSwK41WyTxalN1eRmA5Z9UU/LX9D7FWSmV9SAYx6g==",
      "dev": true,
      "license": "BSD-2-Clause",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/eth-rpc-errors": {
      "version": "4.0.3",
      "resolved": "https://registry.npmjs.org/eth-rpc-errors/-/eth-rpc-errors-4.0.3.tgz",
      "integrity": "sha512-Z3ymjopaoft7JDoxZcEb3pwdGh7yiYMhOwm2doUt6ASXlMavpNlK6Cre0+IMl2VSGyEU9rkiperQhp5iRxn5Pg==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "fast-safe-stringify": "^2.0.6"
      }
    },
    "node_modules/ethereum-cryptography": {
      "version": "2.2.1",
      "resolved": "https://registry.npmjs.org/ethereum-cryptography/-/ethereum-cryptography-2.2.1.tgz",
      "integrity": "sha512-r/W8lkHSiTLxUxW8Rf3u4HGB0xQweG2RyETjywylKZSzLWoWAijRz8WCuOtJ6wah+avllXBqZuk29HCCvhEIRg==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "@noble/curves": "1.4.2",
        "@noble/hashes": "1.4.0",
        "@scure/bip32": "1.4.0",
        "@scure/bip39": "1.3.0"
      }
    },
    "node_modules/ethereum-cryptography/node_modules/@noble/curves": {
      "version": "1.4.2",
      "resolved": "https://registry.npmjs.org/@noble/curves/-/curves-1.4.2.tgz",
      "integrity": "sha512-TavHr8qycMChk8UwMld0ZDRvatedkzWfH8IiaeGCfymOP5i0hSCozz9vHOL0nkwk7HRMlFnAiKpS2jrUmSybcw==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "@noble/hashes": "1.4.0"
      },
      "funding": {
        "url": "https://paulmillr.com/funding/"
      }
    },
    "node_modules/ethereum-cryptography/node_modules/@noble/hashes": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/@noble/hashes/-/hashes-1.4.0.tgz",
      "integrity": "sha512-V1JJ1WTRUqHHrOSh597hURcMqVKVGL/ea3kv0gSnEdsEZ0/+VyPghM1lMNGc00z7CIQorSvbKpuJkxvuHbvdbg==",
      "license": "MIT",
      "peer": true,
      "engines": {
        "node": ">= 16"
      },
      "funding": {
        "url": "https://paulmillr.com/funding/"
      }
    },
    "node_modules/ethereum-cryptography/node_modules/@scure/base": {
      "version": "1.1.9",
      "resolved": "https://registry.npmjs.org/@scure/base/-/base-1.1.9.tgz",
      "integrity": "sha512-8YKhl8GHiNI/pU2VMaofa2Tor7PJRAjwQLBBuilkJ9L5+13yVbC7JO/wS7piioAvPSwR3JKM1IJ/u4xQzbcXKg==",
      "license": "MIT",
      "peer": true,
      "funding": {
        "url": "https://paulmillr.com/funding/"
      }
    },
    "node_modules/ethereum-cryptography/node_modules/@scure/bip32": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/@scure/bip32/-/bip32-1.4.0.tgz",
      "integrity": "sha512-sVUpc0Vq3tXCkDGYVWGIZTRfnvu8LoTDaev7vbwh0omSvVORONr960MQWdKqJDCReIEmTj3PAr73O3aoxz7OPg==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "@noble/curves": "~1.4.0",
        "@noble/hashes": "~1.4.0",
        "@scure/base": "~1.1.6"
      },
      "funding": {
        "url": "https://paulmillr.com/funding/"
      }
    },
    "node_modules/ethers": {
      "version": "6.14.4",
      "resolved": "https://registry.npmjs.org/ethers/-/ethers-6.14.4.tgz",
      "integrity": "sha512-Jm/dzRs2Z9iBrT6e9TvGxyb5YVKAPLlpna7hjxH7KH/++DSh2T/JVmQUv7iHI5E55hDbp/gEVvstWYXVxXFzsA==",
      "funding": [
        {
          "type": "individual",
          "url": "https://github.com/sponsors/ethers-io/"
        },
        {
          "type": "individual",
          "url": "https://www.buymeacoffee.com/ricmoo"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "@adraffy/ens-normalize": "1.10.1",
        "@noble/curves": "1.2.0",
        "@noble/hashes": "1.3.2",
        "@types/node": "22.7.5",
        "aes-js": "4.0.0-beta.5",
        "tslib": "2.7.0",
        "ws": "8.17.1"
      },
      "engines": {
        "node": ">=14.0.0"
      }
    },
    "node_modules/ethers/node_modules/@noble/curves": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/@noble/curves/-/curves-1.2.0.tgz",
      "integrity": "sha512-oYclrNgRaM9SsBUBVbb8M6DTV7ZHRTKugureoYEncY5c65HOmRzvSiTE3y5CYaPYJA/GVkrhXEoF0M3Ya9PMnw==",
      "license": "MIT",
      "dependencies": {
        "@noble/hashes": "1.3.2"
      },
      "funding": {
        "url": "https://paulmillr.com/funding/"
      }
    },
    "node_modules/ethers/node_modules/@noble/hashes": {
      "version": "1.3.2",
      "resolved": "https://registry.npmjs.org/@noble/hashes/-/hashes-1.3.2.tgz",
      "integrity": "sha512-MVC8EAQp7MvEcm30KWENFjgR+Mkmf+D189XJTkFIlwohU5hcBbn1ZkKq7KVTi2Hme3PMGF390DaL52beVrIihQ==",
      "license": "MIT",
      "engines": {
        "node": ">= 16"
      },
      "funding": {
        "url": "https://paulmillr.com/funding/"
      }
    },
    "node_modules/ethers/node_modules/@types/node": {
      "version": "22.7.5",
      "resolved": "https://registry.npmjs.org/@types/node/-/node-22.7.5.tgz",
      "integrity": "sha512-jML7s2NAzMWc//QSJ1a3prpk78cOPchGvXJsC3C6R6PSMoooztvRVQEz89gmBTBY1SPMaqo5teB4uNHPdetShQ==",
      "license": "MIT",
      "dependencies": {
        "undici-types": "~6.19.2"
      }
    },
    "node_modules/ethers/node_modules/tslib": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/tslib/-/tslib-2.7.0.tgz",
      "integrity": "sha512-gLXCKdN1/j47AiHiOkJN69hJmcbGTHI0ImLmbYLHykhgeN0jVGola9yVjFgzCUklsZQMW55o+dW7IXv3RCXDzA==",
      "license": "0BSD"
    },
    "node_modules/ethers/node_modules/undici-types": {
      "version": "6.19.8",
      "resolved": "https://registry.npmjs.org/undici-types/-/undici-types-6.19.8.tgz",
      "integrity": "sha512-ve2KP6f/JnbPBFyobGHuerC9g1FYGn/F8n1LWTwNxCEzd6IfqTwUQcNXgEtmmQ6DlRrC1hrSrBnCZPokRrDHjw==",
      "license": "MIT"
    },
    "node_modules/ethers/node_modules/ws": {
      "version": "8.17.1",
      "resolved": "https://registry.npmjs.org/ws/-/ws-8.17.1.tgz",
      "integrity": "sha512-6XQFvXTkbfUOZOKKILFG1PDK2NDQs4azKQl26T0YS5CxqWLgXajbPZ+h4gZekJyRqFU8pvnbAbbs/3TgRPy+GQ==",
      "license": "MIT",
      "engines": {
        "node": ">=10.0.0"
      },
      "peerDependencies": {
        "bufferutil": "^4.0.1",
        "utf-8-validate": ">=5.0.2"
      },
      "peerDependenciesMeta": {
        "bufferutil": {
          "optional": true
        },
        "utf-8-validate": {
          "optional": true
        }
      }
    },
    "node_modules/eventemitter2": {
      "version": "6.4.9",
      "resolved": "https://registry.npmjs.org/eventemitter2/-/eventemitter2-6.4.9.tgz",
      "integrity": "sha512-JEPTiaOt9f04oa6NOkc4aH+nVp5I3wEjpHbIPqfgCdD5v5bUzy7xQqwcVO2aDQgOWhI28da57HksMrzK9HlRxg==",
      "license": "MIT",
      "peer": true
    },
    "node_modules/eventemitter3": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/eventemitter3/-/eventemitter3-5.0.1.tgz",
      "integrity": "sha512-GWkBvjiSZK87ELrYOSESUYeVIc9mvLLf/nXalMOS5dYrgZq9o5OVkbZAVM06CVxYsCwH9BDZFPlQTlPA1j4ahA==",
      "license": "MIT"
    },
    "node_modules/events": {
      "version": "3.3.0",
      "resolved": "https://registry.npmjs.org/events/-/events-3.3.0.tgz",
      "integrity": "sha512-mQw+2fkQbALzQ7V0MY0IqdnXNOeTtP4r0lN9z7AAawCXgqea7bDii20AYrIBrFd/Hx0M2Ocz6S111CaFkUcb0Q==",
      "license": "MIT",
      "engines": {
        "node": ">=0.8.x"
      }
    },
    "node_modules/extension-port-stream": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/extension-port-stream/-/extension-port-stream-3.0.0.tgz",
      "integrity": "sha512-an2S5quJMiy5bnZKEf6AkfH/7r8CzHvhchU40gxN+OM6HPhe7Z9T1FUychcf2M9PpPOO0Hf7BAEfJkw2TDIBDw==",
      "license": "ISC",
      "peer": true,
      "dependencies": {
        "readable-stream": "^3.6.2 || ^4.4.2",
        "webextension-polyfill": ">=0.10.0 <1.0"
      },
      "engines": {
        "node": ">=12.0.0"
      }
    },
    "node_modules/eyes": {
      "version": "0.1.8",
      "resolved": "https://registry.npmjs.org/eyes/-/eyes-0.1.8.tgz",
      "integrity": "sha512-GipyPsXO1anza0AOZdy69Im7hGFCNB7Y/NGjDlZGJ3GJJLtwNSb2vrzYrTYJRrRloVx7pl+bhUaTB8yiccPvFQ==",
      "peer": true,
      "engines": {
        "node": "> 0.1.90"
      }
    },
    "node_modules/fast-deep-equal": {
      "version": "3.1.3",
      "resolved": "https://registry.npmjs.org/fast-deep-equal/-/fast-deep-equal-3.1.3.tgz",
      "integrity": "sha512-f3qQ9oQy9j2AhBe/H9VC91wLmKBCCU/gDOnKNAYG5hswO7BLKj09Hc5HYNz9cGI++xlpDCIgDaitVs03ATR84Q==",
      "license": "MIT"
    },
    "node_modules/fast-glob": {
      "version": "3.3.3",
      "resolved": "https://registry.npmjs.org/fast-glob/-/fast-glob-3.3.3.tgz",
      "integrity": "sha512-7MptL8U0cqcFdzIzwOTHoilX9x5BrNqye7Z/LuC7kCMRio1EMSyqRK3BEAUD7sXRq4iT4AzTVuZdhgQ2TCvYLg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@nodelib/fs.stat": "^2.0.2",
        "@nodelib/fs.walk": "^1.2.3",
        "glob-parent": "^5.1.2",
        "merge2": "^1.3.0",
        "micromatch": "^4.0.8"
      },
      "engines": {
        "node": ">=8.6.0"
      }
    },
    "node_modules/fast-glob/node_modules/glob-parent": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz",
      "integrity": "sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "is-glob": "^4.0.1"
      },
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/fast-json-stable-stringify": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/fast-json-stable-stringify/-/fast-json-stable-stringify-2.1.0.tgz",
      "integrity": "sha512-lhd/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/fast-levenshtein": {
      "version": "2.0.6",
      "resolved": "https://registry.npmjs.org/fast-levenshtein/-/fast-levenshtein-2.0.6.tgz",
      "integrity": "sha512-DCXu6Ifhqcks7TZKY3Hxp3y6qphY5SJZmrWMDrKcERSOXWQdMhU9Ig/PYrzyw/ul9jOIyh0N4M0tbC5hodg8dw==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/fast-redact": {
      "version": "3.5.0",
      "resolved": "https://registry.npmjs.org/fast-redact/-/fast-redact-3.5.0.tgz",
      "integrity": "sha512-dwsoQlS7h9hMeYUq1W++23NDcBLV4KqONnITDV9DjfS3q1SgDGVrBdvvTLUotWtPSD7asWDV9/CmsZPy8Hf70A==",
      "license": "MIT",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/fast-safe-stringify": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/fast-safe-stringify/-/fast-safe-stringify-2.1.1.tgz",
      "integrity": "sha512-W+KJc2dmILlPplD/H4K9l9LcAHAfPtP6BY84uVLXQ6Evcz9Lcg33Y2z1IVblT6xdY54PXYVHEv+0Wpq8Io6zkA==",
      "license": "MIT",
      "peer": true
    },
    "node_modules/fast-stable-stringify": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/fast-stable-stringify/-/fast-stable-stringify-1.0.0.tgz",
      "integrity": "sha512-wpYMUmFu5f00Sm0cj2pfivpmawLZ0NKdviQ4w9zJeR8JVtOpOxHmLaJuj0vxvGqMJQWyP/COUkF75/57OKyRag==",
      "license": "MIT",
      "peer": true
    },
    "node_modules/fastq": {
      "version": "1.19.1",
      "resolved": "https://registry.npmjs.org/fastq/-/fastq-1.19.1.tgz",
      "integrity": "sha512-GwLTyxkCXjXbxqIhTsMI2Nui8huMPtnxg7krajPJAjnEG/iiOS7i+zCtWGZR9G0NBKbXKh6X9m9UIsYX/N6vvQ==",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "reusify": "^1.0.4"
      }
    },
    "node_modules/fetch-cookie": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/fetch-cookie/-/fetch-cookie-3.0.1.tgz",
      "integrity": "sha512-ZGXe8Y5Z/1FWqQ9q/CrJhkUD73DyBU9VF0hBQmEO/wPHe4A9PKTjplFDLeFX8aOsYypZUcX5Ji/eByn3VCVO3Q==",
      "license": "Unlicense",
      "dependencies": {
        "set-cookie-parser": "^2.4.8",
        "tough-cookie": "^4.0.0"
      }
    },
    "node_modules/fflate": {
      "version": "0.8.2",
      "resolved": "https://registry.npmjs.org/fflate/-/fflate-0.8.2.tgz",
      "integrity": "sha512-cPJU47OaAoCbg0pBvzsgpTPhmhqI5eJjh/JIu8tPj5q+T7iLvW/JAYUqmE7KOB4R1ZyEhzBaIQpQpardBF5z8A==",
      "license": "MIT"
    },
    "node_modules/file-entry-cache": {
      "version": "8.0.0",
      "resolved": "https://registry.npmjs.org/file-entry-cache/-/file-entry-cache-8.0.0.tgz",
      "integrity": "sha512-XXTUwCvisa5oacNGRP9SfNtYBNAMi+RPwBFmblZEF7N7swHYQS6/Zfk7SRwx4D5j3CH211YNRco1DEMNVfZCnQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "flat-cache": "^4.0.0"
      },
      "engines": {
        "node": ">=16.0.0"
      }
    },
    "node_modules/fill-range": {
      "version": "7.1.1",
      "resolved": "https://registry.npmjs.org/fill-range/-/fill-range-7.1.1.tgz",
      "integrity": "sha512-YsGpe3WHLK8ZYi4tWDg2Jy3ebRz2rXowDxnld4bkQB00cc/1Zw9AWnC0i9ztDJitivtQvaI9KaLyKrc+hBW0yg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "to-regex-range": "^5.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/filter-obj": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/filter-obj/-/filter-obj-1.1.0.tgz",
      "integrity": "sha512-8rXg1ZnX7xzy2NGDVkBVaAy+lSlPNwad13BtgSlLuxfIslyt5Vg64U7tFcCt4WS1R0hvtnQybT/IyCkGZ3DpXQ==",
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/find-up": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/find-up/-/find-up-5.0.0.tgz",
      "integrity": "sha512-78/PXT1wlLLDgTzDs7sjq9hzz0vXD+zn+7wypEe4fXQxCmdmqfGsEPQxmiCSQI3ajFV91bVSsvNtrJRiW6nGng==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "locate-path": "^6.0.0",
        "path-exists": "^4.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/flat-cache": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/flat-cache/-/flat-cache-4.0.1.tgz",
      "integrity": "sha512-f7ccFPK3SXFHpx15UIGyRJ/FJQctuKZ0zVuN3frBo4HnK3cay9VEW0R6yPYFHC0AgqhukPzKjq22t5DmAyqGyw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "flatted": "^3.2.9",
        "keyv": "^4.5.4"
      },
      "engines": {
        "node": ">=16"
      }
    },
    "node_modules/flatted": {
      "version": "3.3.3",
      "resolved": "https://registry.npmjs.org/flatted/-/flatted-3.3.3.tgz",
      "integrity": "sha512-GX+ysw4PBCz0PzosHDepZGANEuFCMLrnRTiEy9McGjmkCQYwRq4A/X786G/fjM/+OjsWSU1ZrY5qyARZmO/uwg==",
      "dev": true,
      "license": "ISC"
    },
    "node_modules/for-each": {
      "version": "0.3.5",
      "resolved": "https://registry.npmjs.org/for-each/-/for-each-0.3.5.tgz",
      "integrity": "sha512-dKx12eRCVIzqCxFGplyFKJMPvLEWgmNtUrpTiJIR5u97zEhRG8ySrtboPHZXx7daLxQVrl643cTzbab2tkQjxg==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "is-callable": "^1.2.7"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/foreground-child": {
      "version": "3.3.1",
      "resolved": "https://registry.npmjs.org/foreground-child/-/foreground-child-3.3.1.tgz",
      "integrity": "sha512-gIXjKqtFuWEgzFRJA9WCQeSJLZDjgJUOMCMzxtvFq/37KojM1BFGufqsCy0r4qSQmYLsZYMeyRqzIWOMup03sw==",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "cross-spawn": "^7.0.6",
        "signal-exit": "^4.0.1"
      },
      "engines": {
        "node": ">=14"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/fraction.js": {
      "version": "4.3.7",
      "resolved": "https://registry.npmjs.org/fraction.js/-/fraction.js-4.3.7.tgz",
      "integrity": "sha512-ZsDfxO51wGAXREY55a7la9LScWpwv9RxIrYABrlvOFBlH/ShPnrtsXeuUIfXKKOVicNxQ+o8JTbJvjS4M89yew==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": "*"
      },
      "funding": {
        "type": "patreon",
        "url": "https://github.com/sponsors/rawify"
      }
    },
    "node_modules/fs-extra": {
      "version": "10.1.0",
      "resolved": "https://registry.npmjs.org/fs-extra/-/fs-extra-10.1.0.tgz",
      "integrity": "sha512-oRXApq54ETRj4eMiFzGnHWGy+zo5raudjuxN0b8H7s/RU2oW0Wvsx9O0ACRN/kRq9E8Vu/ReskGB5o3ji+FzHQ==",
      "license": "MIT",
      "dependencies": {
        "graceful-fs": "^4.2.0",
        "jsonfile": "^6.0.1",
        "universalify": "^2.0.0"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/fs.realpath": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/fs.realpath/-/fs.realpath-1.0.0.tgz",
      "integrity": "sha512-OO0pH2lK6a0hZnAdau5ItzHPI6pUlvI7jMVnxUQRtw4owF2wk8lOSabtGDCTP4Ggrg2MbGnWO9X8K1t4+fGMDw==",
      "license": "ISC"
    },
    "node_modules/fsevents": {
      "version": "2.3.3",
      "resolved": "https://registry.npmjs.org/fsevents/-/fsevents-2.3.3.tgz",
      "integrity": "sha512-5xoDfX+fL7faATnagmWPpbFtwh/R77WmMMqqHGS65C3vvB0YHrgF+B1YmZ3441tMj5n63k0212XNoJwzlhffQw==",
      "hasInstallScript": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": "^8.16.0 || ^10.6.0 || >=11.0.0"
      }
    },
    "node_modules/function-bind": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/function-bind/-/function-bind-1.1.2.tgz",
      "integrity": "sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==",
      "license": "MIT",
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/gensync": {
      "version": "1.0.0-beta.2",
      "resolved": "https://registry.npmjs.org/gensync/-/gensync-1.0.0-beta.2.tgz",
      "integrity": "sha512-3hN7NaskYvMDLQY55gnW3NQ+mesEAepTqlg+VEbj7zzqEMBVNhzcGYYeqFo/TlYz6eQiFcp1HcsCZO+nGgS8zg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/get-caller-file": {
      "version": "2.0.5",
      "resolved": "https://registry.npmjs.org/get-caller-file/-/get-caller-file-2.0.5.tgz",
      "integrity": "sha512-DyFP3BM/3YHTQOCUL/w0OZHR0lpKeGrxotcHWcqNEdnltqFwXVfhEBQ94eIo34AfQpo0rGki4cyIiftY06h2Fg==",
      "license": "ISC",
      "engines": {
        "node": "6.* || 8.* || >= 10.*"
      }
    },
    "node_modules/get-intrinsic": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/get-intrinsic/-/get-intrinsic-1.3.0.tgz",
      "integrity": "sha512-9fSjSaos/fRIVIp+xSJlE6lfwhES7LNtKaCBIamHsjr2na1BiABJPo0mOjjz8GJDURarmCPGqaiVg5mfjb98CQ==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "call-bind-apply-helpers": "^1.0.2",
        "es-define-property": "^1.0.1",
        "es-errors": "^1.3.0",
        "es-object-atoms": "^1.1.1",
        "function-bind": "^1.1.2",
        "get-proto": "^1.0.1",
        "gopd": "^1.2.0",
        "has-symbols": "^1.1.0",
        "hasown": "^2.0.2",
        "math-intrinsics": "^1.1.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/get-proto": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/get-proto/-/get-proto-1.0.1.tgz",
      "integrity": "sha512-sTSfBjoXBp89JvIKIefqw7U2CCebsc74kiY6awiGogKtoSGbgjYE/G/+l9sF3MWFPNc9IcoOC4ODfKHfxFmp0g==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "dunder-proto": "^1.0.1",
        "es-object-atoms": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/get-starknet-core": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/get-starknet-core/-/get-starknet-core-4.0.0.tgz",
      "integrity": "sha512-6pLmidQZkC3wZsrHY99grQHoGpuuXqkbSP65F8ov1/JsEI8DDLkhsAuLCKFzNOK56cJp+f1bWWfTJ57e9r5eqQ==",
      "deprecated": "Package no longer supported. Please use @starknet-io/get-starknet-core",
      "license": "MIT",
      "dependencies": {
        "@starknet-io/types-js": "^0.7.7"
      }
    },
    "node_modules/glob": {
      "version": "7.2.3",
      "resolved": "https://registry.npmjs.org/glob/-/glob-7.2.3.tgz",
      "integrity": "sha512-nFR0zLpU2YCaRxwoCJvL6UvCH2JFyFVIvwTLsIf21AuHlMskA1hhTdk+LlYJtOlYt9v6dvszD2BGRqBL+iQK9Q==",
      "deprecated": "Glob versions prior to v9 are no longer supported",
      "license": "ISC",
      "dependencies": {
        "fs.realpath": "^1.0.0",
        "inflight": "^1.0.4",
        "inherits": "2",
        "minimatch": "^3.1.1",
        "once": "^1.3.0",
        "path-is-absolute": "^1.0.0"
      },
      "engines": {
        "node": "*"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/glob-parent": {
      "version": "6.0.2",
      "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-6.0.2.tgz",
      "integrity": "sha512-XxwI8EOhVQgWp6iDL+3b0r86f4d6AX6zSU55HfB4ydCEuXLXc5FcYeOu+nnGftS4TEju/11rt4KJPTMgbfmv4A==",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "is-glob": "^4.0.3"
      },
      "engines": {
        "node": ">=10.13.0"
      }
    },
    "node_modules/globals": {
      "version": "15.15.0",
      "resolved": "https://registry.npmjs.org/globals/-/globals-15.15.0.tgz",
      "integrity": "sha512-7ACyT3wmyp3I61S4fG682L0VA2RGD9otkqGJIwNUMF1SWUombIIk+af1unuDYgMm082aHYwD+mzJvv9Iu8dsgg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=18"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/glsl-noise": {
      "version": "0.0.0",
      "resolved": "https://registry.npmjs.org/glsl-noise/-/glsl-noise-0.0.0.tgz",
      "integrity": "sha512-b/ZCF6amfAUb7dJM/MxRs7AetQEahYzJ8PtgfrmEdtw6uyGOr+ZSGtgjFm6mfsBkxJ4d2W7kg+Nlqzqvn3Bc0w==",
      "license": "MIT"
    },
    "node_modules/gopd": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/gopd/-/gopd-1.2.0.tgz",
      "integrity": "sha512-ZUKRh6/kUFoAiTAtTYPZJ3hw9wNxx+BIBOijnlG9PnrJsCcSjs1wyyD6vJpaYtgnzDrKYRSqf3OO6Rfa93xsRg==",
      "license": "MIT",
      "peer": true,
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/graceful-fs": {
      "version": "4.2.11",
      "resolved": "https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.2.11.tgz",
      "integrity": "sha512-RbJ5/jmFcNNCcDV5o9eTnBLJ/HszWV0P73bc+Ff4nS/rJj+YaS6IGyiOL0VoBYX+l1Wrl3k63h/KrH+nhJ0XvQ==",
      "license": "ISC"
    },
    "node_modules/graphemer": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/graphemer/-/graphemer-1.4.0.tgz",
      "integrity": "sha512-EtKwoO6kxCL9WO5xipiHTZlSzBm7WLT627TqC/uVRd0HKmq8NXyebnNYxDoBi7wt8eTWrUrKXCOVaFq9x1kgag==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/h3": {
      "version": "1.15.3",
      "resolved": "https://registry.npmjs.org/h3/-/h3-1.15.3.tgz",
      "integrity": "sha512-z6GknHqyX0h9aQaTx22VZDf6QyZn+0Nh+Ym8O/u0SGSkyF5cuTJYKlc8MkzW3Nzf9LE1ivcpmYC3FUGpywhuUQ==",
      "license": "MIT",
      "dependencies": {
        "cookie-es": "^1.2.2",
        "crossws": "^0.3.4",
        "defu": "^6.1.4",
        "destr": "^2.0.5",
        "iron-webcrypto": "^1.2.1",
        "node-mock-http": "^1.0.0",
        "radix3": "^1.1.2",
        "ufo": "^1.6.1",
        "uncrypto": "^0.1.3"
      }
    },
    "node_modules/has-flag": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
      "integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/has-property-descriptors": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/has-property-descriptors/-/has-property-descriptors-1.0.2.tgz",
      "integrity": "sha512-55JNKuIW+vq4Ke1BjOTjM2YctQIvCT7GFzHwmfZPGo5wnrgkid0YQtnAleFSqumZm4az3n2BS+erby5ipJdgrg==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "es-define-property": "^1.0.0"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/has-symbols": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/has-symbols/-/has-symbols-1.1.0.tgz",
      "integrity": "sha512-1cDNdwJ2Jaohmb3sg4OmKaMBwuC48sYni5HUw2DvsC8LjGTLK9h+eb1X6RyuOHe4hT0ULCW68iomhjUoKUqlPQ==",
      "license": "MIT",
      "peer": true,
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/has-tostringtag": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/has-tostringtag/-/has-tostringtag-1.0.2.tgz",
      "integrity": "sha512-NqADB8VjPFLM2V0VvHUewwwsw0ZWBaIdgo+ieHtK3hasLz4qeCRjYcqfB6AQrBggRKppKF8L52/VqdVsO47Dlw==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "has-symbols": "^1.0.3"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/hasown": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/hasown/-/hasown-2.0.2.tgz",
      "integrity": "sha512-0hJU9SCPvmMzIBdZFqNPXWa6dqh7WdH0cII9y+CyS8rG3nL48Bclra9HmKhVVUHyPWNH5Y7xDwAB7bfgSjkUMQ==",
      "license": "MIT",
      "dependencies": {
        "function-bind": "^1.1.2"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/hls.js": {
      "version": "1.6.7",
      "resolved": "https://registry.npmjs.org/hls.js/-/hls.js-1.6.7.tgz",
      "integrity": "sha512-QW2fnwDGKGc9DwQUGLbmMOz8G48UZK7PVNJPcOUql1b8jubKx4/eMHNP5mGqr6tYlJNDG1g10Lx2U/qPzL6zwQ==",
      "license": "Apache-2.0"
    },
    "node_modules/hpke-js": {
      "version": "1.6.2",
      "resolved": "https://registry.npmjs.org/hpke-js/-/hpke-js-1.6.2.tgz",
      "integrity": "sha512-HllaSHiEEd9bZ9L0F0hFERSu2iAWDptkzVUqxra3lTapSPP8Bnyc6J9Viwn/oktPLBXOJpX57lfXSHYsh4HLag==",
      "license": "MIT",
      "dependencies": {
        "@hpke/chacha20poly1305": "^1.6.2",
        "@hpke/common": "^1.7.2",
        "@hpke/core": "^1.7.2",
        "@hpke/dhkem-x25519": "^1.6.2",
        "@hpke/dhkem-x448": "^1.6.2",
        "@noble/hashes": "^1.7.1"
      },
      "engines": {
        "node": ">=16.0.0"
      }
    },
    "node_modules/humanize-ms": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/humanize-ms/-/humanize-ms-1.2.1.tgz",
      "integrity": "sha512-Fl70vYtsAFb/C06PTS9dZBo7ihau+Tu/DNCk/OyHhea07S+aeMWpFFkUaXRa8fI+ScZbEI8dfSxwY7gxZ9SAVQ==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "ms": "^2.0.0"
      }
    },
    "node_modules/iconv-lite": {
      "version": "0.6.3",
      "resolved": "https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.6.3.tgz",
      "integrity": "sha512-4fCk79wshMdzMp2rH06qWrJE4iolqLhCUH+OiuIgU++RB0+94NlDL81atO7GX55uUKueo0txHNtvEyI6D7WdMw==",
      "license": "MIT",
      "dependencies": {
        "safer-buffer": ">= 2.1.2 < 3.0.0"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/idb-keyval": {
      "version": "6.2.2",
      "resolved": "https://registry.npmjs.org/idb-keyval/-/idb-keyval-6.2.2.tgz",
      "integrity": "sha512-yjD9nARJ/jb1g+CvD0tlhUHOrJ9Sy0P8T9MF3YaLlHnSRpwPfpTX0XIvpmw3gAJUmEu3FiICLBDPXVwyEvrleg==",
      "license": "Apache-2.0"
    },
    "node_modules/ieee754": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/ieee754/-/ieee754-1.2.1.tgz",
      "integrity": "sha512-dcyqhDvX1C46lXZcVqCpK+FtMRQVdIMN6/Df5js2zouUsqG7I6sFxitIC+7KYK29KdXOLHdu9zL4sFnoVQnqaA==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ],
      "license": "BSD-3-Clause"
    },
    "node_modules/ignore": {
      "version": "5.3.2",
      "resolved": "https://registry.npmjs.org/ignore/-/ignore-5.3.2.tgz",
      "integrity": "sha512-hsBTNUqQTDwkWtcdYI2i06Y/nUBEsNEDJKjWdigLvegy8kDuJAS8uRlpkkcQpyEXL0Z/pjDy5HBmMjRCJ2gq+g==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 4"
      }
    },
    "node_modules/immediate": {
      "version": "3.0.6",
      "resolved": "https://registry.npmjs.org/immediate/-/immediate-3.0.6.tgz",
      "integrity": "sha512-XXOFtyqDjNDAQxVfYxuF7g9Il/IbWmmlQg2MYKOH8ExIT1qg6xc4zyS3HaEEATgs1btfzxq15ciUiY7gjSXRGQ==",
      "license": "MIT"
    },
    "node_modules/immer": {
      "version": "10.1.1",
      "resolved": "https://registry.npmjs.org/immer/-/immer-10.1.1.tgz",
      "integrity": "sha512-s2MPrmjovJcoMaHtx6K11Ra7oD05NT97w1IC5zpMkT6Atjr7H8LjaDd81iIxUYpMKSRRNMJE703M1Fhr/TctHw==",
      "license": "MIT",
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/immer"
      }
    },
    "node_modules/import-fresh": {
      "version": "3.3.1",
      "resolved": "https://registry.npmjs.org/import-fresh/-/import-fresh-3.3.1.tgz",
      "integrity": "sha512-TR3KfrTZTYLPB6jUjfx6MF9WcWrHL9su5TObK4ZkYgBdWKPOFoSoQIdEuTuR82pmtxH2spWG9h6etwfr1pLBqQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "parent-module": "^1.0.0",
        "resolve-from": "^4.0.0"
      },
      "engines": {
        "node": ">=6"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/imurmurhash": {
      "version": "0.1.4",
      "resolved": "https://registry.npmjs.org/imurmurhash/-/imurmurhash-0.1.4.tgz",
      "integrity": "sha512-JmXMZ6wuvDmLiHEml9ykzqO6lwFbof0GG4IkcGaENdCRDDmMVnny7s5HsIgHCbaq0w2MyPhDqkhTUgS2LU2PHA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=0.8.19"
      }
    },
    "node_modules/inflight": {
      "version": "1.0.6",
      "resolved": "https://registry.npmjs.org/inflight/-/inflight-1.0.6.tgz",
      "integrity": "sha512-k92I/b08q4wvFscXCLvqfsHCrjrF7yiXsQuIVvVE7N82W3+aqpzuUdBbfhWcy/FZR3/4IgflMgKLOsvPDrGCJA==",
      "deprecated": "This module is not supported, and leaks memory. Do not use it. Check out lru-cache if you want a good and tested way to coalesce async requests by a key value, which is much more comprehensive and powerful.",
      "license": "ISC",
      "dependencies": {
        "once": "^1.3.0",
        "wrappy": "1"
      }
    },
    "node_modules/inherits": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz",
      "integrity": "sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==",
      "license": "ISC"
    },
    "node_modules/iron-webcrypto": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/iron-webcrypto/-/iron-webcrypto-1.2.1.tgz",
      "integrity": "sha512-feOM6FaSr6rEABp/eDfVseKyTMDt+KGpeB35SkVn9Tyn0CqvVsY3EwI0v5i8nMHyJnzCIQf7nsy3p41TPkJZhg==",
      "license": "MIT",
      "funding": {
        "url": "https://github.com/sponsors/brc-dd"
      }
    },
    "node_modules/is-arguments": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/is-arguments/-/is-arguments-1.2.0.tgz",
      "integrity": "sha512-7bVbi0huj/wrIAOzb8U1aszg9kdi3KN/CyU19CTI7tAoZYEZoL9yCDXpbXN+uPsuWnP02cyug1gleqq+TU+YCA==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "call-bound": "^1.0.2",
        "has-tostringtag": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-binary-path": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/is-binary-path/-/is-binary-path-2.1.0.tgz",
      "integrity": "sha512-ZMERYes6pDydyuGidse7OsHxtbI7WVeUEozgR/g7rd0xUimYNlvZRE/K2MgZTjWy725IfelLeVcEM97mmtRGXw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "binary-extensions": "^2.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/is-callable": {
      "version": "1.2.7",
      "resolved": "https://registry.npmjs.org/is-callable/-/is-callable-1.2.7.tgz",
      "integrity": "sha512-1BC0BVFhS/p0qtw6enp8e+8OD0UrK0oFLztSjNzhcKA3WDuJxxAPXzPuPtKkjEY9UUoEWlX/8fgKeu2S8i9JTA==",
      "license": "MIT",
      "peer": true,
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-core-module": {
      "version": "2.16.1",
      "resolved": "https://registry.npmjs.org/is-core-module/-/is-core-module-2.16.1.tgz",
      "integrity": "sha512-UfoeMA6fIJ8wTYFEUjelnaGI67v6+N7qXJEvQuIGa99l4xsCruSYOVSQ0uPANn4dAzm8lkYPaKLrrijLq7x23w==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "hasown": "^2.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-docker": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/is-docker/-/is-docker-3.0.0.tgz",
      "integrity": "sha512-eljcgEDlEns/7AXFosB5K/2nCM4P7FQPkGc/DWLy5rmFEWvZayGrik1d9/QIY5nJ4f9YsVvBkA6kJpHn9rISdQ==",
      "license": "MIT",
      "peer": true,
      "bin": {
        "is-docker": "cli.js"
      },
      "engines": {
        "node": "^12.20.0 || ^14.13.1 || >=16.0.0"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/is-extglob": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz",
      "integrity": "sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/is-fullwidth-code-point": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz",
      "integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/is-generator-function": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/is-generator-function/-/is-generator-function-1.1.0.tgz",
      "integrity": "sha512-nPUB5km40q9e8UfN/Zc24eLlzdSf9OfKByBw9CIdw4H1giPMeA0OIJvbchsCu4npfI2QcMVBsGEBHKZ7wLTWmQ==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "call-bound": "^1.0.3",
        "get-proto": "^1.0.0",
        "has-tostringtag": "^1.0.2",
        "safe-regex-test": "^1.1.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-glob": {
      "version": "4.0.3",
      "resolved": "https://registry.npmjs.org/is-glob/-/is-glob-4.0.3.tgz",
      "integrity": "sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "is-extglob": "^2.1.1"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/is-inside-container": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/is-inside-container/-/is-inside-container-1.0.0.tgz",
      "integrity": "sha512-KIYLCCJghfHZxqjYBE7rEy0OBuTd5xCHS7tHVgvCLkx7StIoaxwNW3hCALgEUjFfeRk+MG/Qxmp/vtETEF3tRA==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "is-docker": "^3.0.0"
      },
      "bin": {
        "is-inside-container": "cli.js"
      },
      "engines": {
        "node": ">=14.16"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/is-number": {
      "version": "7.0.0",
      "resolved": "https://registry.npmjs.org/is-number/-/is-number-7.0.0.tgz",
      "integrity": "sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=0.12.0"
      }
    },
    "node_modules/is-promise": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/is-promise/-/is-promise-4.0.0.tgz",
      "integrity": "sha512-hvpoI6korhJMnej285dSg6nu1+e6uxs7zG3BYAm5byqDsgJNWwxzM6z6iZiAgQR4TJ30JmBTOwqZUw3WlyH3AQ==",
      "license": "MIT",
      "peer": true
    },
    "node_modules/is-regex": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/is-regex/-/is-regex-1.2.1.tgz",
      "integrity": "sha512-MjYsKHO5O7mCsmRGxWcLWheFqN9DJ/2TmngvjKXihe6efViPqc274+Fx/4fYj/r03+ESvBdTXK0V6tA3rgez1g==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "call-bound": "^1.0.2",
        "gopd": "^1.2.0",
        "has-tostringtag": "^1.0.2",
        "hasown": "^2.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-stream": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/is-stream/-/is-stream-2.0.1.tgz",
      "integrity": "sha512-hFoiJiTl63nn+kstHGBtewWSKnQLpyb155KHheA1l39uvtO9nWIop1p3udqPcUd/xbF1VLMO4n7OI6p7RbngDg==",
      "license": "MIT",
      "peer": true,
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/is-typed-array": {
      "version": "1.1.15",
      "resolved": "https://registry.npmjs.org/is-typed-array/-/is-typed-array-1.1.15.tgz",
      "integrity": "sha512-p3EcsicXjit7SaskXHs1hA91QxgTw46Fv6EFKKGS5DRFLD8yKnohjF3hxoju94b/OcMZoQukzpPpBE9uLVKzgQ==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "which-typed-array": "^1.1.16"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-wsl": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/is-wsl/-/is-wsl-3.1.0.tgz",
      "integrity": "sha512-UcVfVfaK4Sc4m7X3dUSoHoozQGBEFeDC+zVo06t98xe8CzHSZZBekNXH+tu0NalHolcJ/QAGqS46Hef7QXBIMw==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "is-inside-container": "^1.0.0"
      },
      "engines": {
        "node": ">=16"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/isarray": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
      "integrity": "sha512-VLghIWNM6ELQzo7zwmcg0NmTVyWKYjvIeM83yjp0wRDTmUnrM678fQbcKBo6n2CJEF0szoG//ytg+TKla89ALQ==",
      "license": "MIT",
      "peer": true
    },
    "node_modules/isexe": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/isexe/-/isexe-2.0.0.tgz",
      "integrity": "sha512-RHxMLp9lnKHGHRng9QFhRCMbYAcVpn69smSGcq3f36xjgVVWThj4qqLbTLlq7Ssj8B+fIQ1EuCEGI2lKsyQeIw==",
      "license": "ISC"
    },
    "node_modules/isomorphic-fetch": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/isomorphic-fetch/-/isomorphic-fetch-3.0.0.tgz",
      "integrity": "sha512-qvUtwJ3j6qwsF3jLxkZ72qCgjMysPzDfeV240JHiGZsANBYd+EEuu35v7dfrJ9Up0Ak07D7GGSkGhCHTqg/5wA==",
      "license": "MIT",
      "dependencies": {
        "node-fetch": "^2.6.1",
        "whatwg-fetch": "^3.4.1"
      }
    },
    "node_modules/isomorphic-ws": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/isomorphic-ws/-/isomorphic-ws-4.0.1.tgz",
      "integrity": "sha512-BhBvN2MBpWTaSHdWRb/bwdZJ1WaehQ2L1KngkCkfLUGF0mAWAT1sQUQacEmQ0jXkFw/czDXPNQSL5u2/Krsz1w==",
      "license": "MIT",
      "peer": true,
      "peerDependencies": {
        "ws": "*"
      }
    },
    "node_modules/isows": {
      "version": "1.0.7",
      "resolved": "https://registry.npmjs.org/isows/-/isows-1.0.7.tgz",
      "integrity": "sha512-I1fSfDCZL5P0v33sVqeTDSpcstAg/N+wF5HS033mogOVIp4B+oHC7oOCsA3axAbBSGTJ8QubbNmnIRN/h8U7hg==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/wevm"
        }
      ],
      "license": "MIT",
      "peerDependencies": {
        "ws": "*"
      }
    },
    "node_modules/its-fine": {
      "version": "1.2.5",
      "resolved": "https://registry.npmjs.org/its-fine/-/its-fine-1.2.5.tgz",
      "integrity": "sha512-fXtDA0X0t0eBYAGLVM5YsgJGsJ5jEmqZEPrGbzdf5awjv0xE7nqv3TVnvtUF060Tkes15DbDAKW/I48vsb6SyA==",
      "license": "MIT",
      "dependencies": {
        "@types/react-reconciler": "^0.28.0"
      },
      "peerDependencies": {
        "react": ">=18.0"
      }
    },
    "node_modules/its-fine/node_modules/@types/react-reconciler": {
      "version": "0.28.9",
      "resolved": "https://registry.npmjs.org/@types/react-reconciler/-/react-reconciler-0.28.9.tgz",
      "integrity": "sha512-HHM3nxyUZ3zAylX8ZEyrDNd2XZOnQ0D5XfunJF5FLQnZbHHYq4UWvW1QfelQNXv1ICNkwYhfxjwfnqivYB6bFg==",
      "license": "MIT",
      "peerDependencies": {
        "@types/react": "*"
      }
    },
    "node_modules/jackspeak": {
      "version": "3.4.3",
      "resolved": "https://registry.npmjs.org/jackspeak/-/jackspeak-3.4.3.tgz",
      "integrity": "sha512-OGlZQpz2yfahA/Rd1Y8Cd9SIEsqvXkLVoSw/cgwhnhFMDbsQFeZYoJJ7bIZBS9BcamUW96asq/npPWugM+RQBw==",
      "dev": true,
      "license": "BlueOak-1.0.0",
      "dependencies": {
        "@isaacs/cliui": "^8.0.2"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      },
      "optionalDependencies": {
        "@pkgjs/parseargs": "^0.11.0"
      }
    },
    "node_modules/javascript-natural-sort": {
      "version": "0.7.1",
      "resolved": "https://registry.npmjs.org/javascript-natural-sort/-/javascript-natural-sort-0.7.1.tgz",
      "integrity": "sha512-nO6jcEfZWQXDhOiBtG2KvKyEptz7RVbpGP4vTD2hLBdmNQSsCiicO2Ioinv6UI4y9ukqnBpy+XZ9H6uLNgJTlw==",
      "license": "MIT"
    },
    "node_modules/jayson": {
      "version": "4.2.0",
      "resolved": "https://registry.npmjs.org/jayson/-/jayson-4.2.0.tgz",
      "integrity": "sha512-VfJ9t1YLwacIubLhONk0KFeosUBwstRWQ0IRT1KDjEjnVnSOVHC3uwugyV7L0c7R9lpVyrUGT2XWiBA1UTtpyg==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "@types/connect": "^3.4.33",
        "@types/node": "^12.12.54",
        "@types/ws": "^7.4.4",
        "commander": "^2.20.3",
        "delay": "^5.0.0",
        "es6-promisify": "^5.0.0",
        "eyes": "^0.1.8",
        "isomorphic-ws": "^4.0.1",
        "json-stringify-safe": "^5.0.1",
        "stream-json": "^1.9.1",
        "uuid": "^8.3.2",
        "ws": "^7.5.10"
      },
      "bin": {
        "jayson": "bin/jayson.js"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/jayson/node_modules/@types/node": {
      "version": "12.20.55",
      "resolved": "https://registry.npmjs.org/@types/node/-/node-12.20.55.tgz",
      "integrity": "sha512-J8xLz7q2OFulZ2cyGTLE1TbbZcjpno7FaN6zdJNrgAdrJ+DZzh/uFR6YrTb4C+nXakvud8Q4+rbhoIWlYQbUFQ==",
      "license": "MIT",
      "peer": true
    },
    "node_modules/jayson/node_modules/commander": {
      "version": "2.20.3",
      "resolved": "https://registry.npmjs.org/commander/-/commander-2.20.3.tgz",
      "integrity": "sha512-GpVkmM8vF2vQUkj2LvZmD35JxeJOLCwJ9cUkugyk2nuhbv3+mJvpLYYt+0+USMxE+oj+ey/lJEnhZw75x/OMcQ==",
      "license": "MIT",
      "peer": true
    },
    "node_modules/jayson/node_modules/uuid": {
      "version": "8.3.2",
      "resolved": "https://registry.npmjs.org/uuid/-/uuid-8.3.2.tgz",
      "integrity": "sha512-+NYs2QeMWy+GWFOEm9xnn6HCDp0l7QBD7ml8zLUmJ+93Q5NF0NocErnwkTkXVFNiX3/fpC6afS8Dhb/gz7R7eg==",
      "license": "MIT",
      "peer": true,
      "bin": {
        "uuid": "dist/bin/uuid"
      }
    },
    "node_modules/jiti": {
      "version": "1.21.7",
      "resolved": "https://registry.npmjs.org/jiti/-/jiti-1.21.7.tgz",
      "integrity": "sha512-/imKNG4EbWNrVjoNC/1H5/9GFy+tqjGBHCaSsN+P2RnPqjsLmv6UD3Ej+Kj8nBWaRAwyk7kK5ZUc+OEatnTR3A==",
      "dev": true,
      "license": "MIT",
      "bin": {
        "jiti": "bin/jiti.js"
      }
    },
    "node_modules/js-cookie": {
      "version": "3.0.5",
      "resolved": "https://registry.npmjs.org/js-cookie/-/js-cookie-3.0.5.tgz",
      "integrity": "sha512-cEiJEAEoIbWfCZYKWhVwFuvPX1gETRYPw6LlaTKoxD3s2AkXzkCjnp6h0V77ozyqj0jakteJ4YqDJT830+lVGw==",
      "license": "MIT",
      "engines": {
        "node": ">=14"
      }
    },
    "node_modules/js-sha3": {
      "version": "0.8.0",
      "resolved": "https://registry.npmjs.org/js-sha3/-/js-sha3-0.8.0.tgz",
      "integrity": "sha512-gF1cRrHhIzNfToc802P800N8PpXS+evLLXfsVpowqmAFR9uwbi89WvXg2QspOmXL8QL86J4T1EpFu+yUkwJY3Q==",
      "license": "MIT"
    },
    "node_modules/js-tokens": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/js-tokens/-/js-tokens-4.0.0.tgz",
      "integrity": "sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ==",
      "license": "MIT"
    },
    "node_modules/js-yaml": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/js-yaml/-/js-yaml-4.1.0.tgz",
      "integrity": "sha512-wpxZs9NoxZaJESJGIZTyDEaYpl0FKSA+FB9aJiyemKhMwkxQg63h4T1KJgUGHpTqPDNRcmmYLugrRjJlBtWvRA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "argparse": "^2.0.1"
      },
      "bin": {
        "js-yaml": "bin/js-yaml.js"
      }
    },
    "node_modules/jsesc": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/jsesc/-/jsesc-3.1.0.tgz",
      "integrity": "sha512-/sM3dO2FOzXjKQhJuo0Q173wf2KOo8t4I8vHy6lF9poUp7bKT0/NHE8fPX23PwfhnykfqnC2xRxOnVw5XuGIaA==",
      "dev": true,
      "license": "MIT",
      "bin": {
        "jsesc": "bin/jsesc"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/json-buffer": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/json-buffer/-/json-buffer-3.0.1.tgz",
      "integrity": "sha512-4bV5BfR2mqfQTJm+V5tPPdf+ZpuhiIvTuAB5g8kcrXOZpTT/QwwVRWBywX1ozr6lEuPdbHxwaJlm9G6mI2sfSQ==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/json-schema-traverse": {
      "version": "0.4.1",
      "resolved": "https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-0.4.1.tgz",
      "integrity": "sha512-xbbCH5dCYU5T8LcEhhuh7HJ88HXuW3qsI3Y0zOZFKfZEHcpWiHU/Jxzk629Brsab/mMiHQti9wMP+845RPe3Vg==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/json-stable-stringify-without-jsonify": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/json-stable-stringify-without-jsonify/-/json-stable-stringify-without-jsonify-1.0.1.tgz",
      "integrity": "sha512-Bdboy+l7tA3OGW6FjyFHWkP5LuByj1Tk33Ljyq0axyzdk9//JSi2u3fP1QSmd1KNwq6VOKYGlAu87CisVir6Pw==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/json-stringify-safe": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/json-stringify-safe/-/json-stringify-safe-5.0.1.tgz",
      "integrity": "sha512-ZClg6AaYvamvYEE82d3Iyd3vSSIjQ+odgjaTzRuO3s7toCdFKczob2i0zCh7JE8kWn17yvAWhUVxvqGwUalsRA==",
      "license": "ISC",
      "peer": true
    },
    "node_modules/json5": {
      "version": "2.2.3",
      "resolved": "https://registry.npmjs.org/json5/-/json5-2.2.3.tgz",
      "integrity": "sha512-XmOWe7eyHYH14cLdVPoyg+GOH3rYX++KpzrylJwSW98t3Nk+U8XOl8FWKOgwtzdb8lXGf6zYwDUzeHMWfxasyg==",
      "dev": true,
      "license": "MIT",
      "bin": {
        "json5": "lib/cli.js"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/jsonfile": {
      "version": "6.1.0",
      "resolved": "https://registry.npmjs.org/jsonfile/-/jsonfile-6.1.0.tgz",
      "integrity": "sha512-5dgndWOriYSm5cnYaJNhalLNDKOqFwyDB/rr1E9ZsGciGvKPs8R2xYGCacuf3z6K1YKDz182fd+fY3cn3pMqXQ==",
      "license": "MIT",
      "dependencies": {
        "universalify": "^2.0.0"
      },
      "optionalDependencies": {
        "graceful-fs": "^4.1.6"
      }
    },
    "node_modules/keyv": {
      "version": "4.5.4",
      "resolved": "https://registry.npmjs.org/keyv/-/keyv-4.5.4.tgz",
      "integrity": "sha512-oxVHkHR/EJf2CNXnWxRLW6mg7JyCCUcG0DtEGmL2ctUo1PNTin1PUil+r/+4r5MpVgC/fn1kjsx7mjSujKqIpw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "json-buffer": "3.0.1"
      }
    },
    "node_modules/keyvaluestorage-interface": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/keyvaluestorage-interface/-/keyvaluestorage-interface-1.0.0.tgz",
      "integrity": "sha512-8t6Q3TclQ4uZynJY9IGr2+SsIGwK9JHcO6ootkHCGA0CrQCRy+VkouYNO2xicET6b9al7QKzpebNow+gkpCL8g==",
      "license": "MIT"
    },
    "node_modules/levn": {
      "version": "0.4.1",
      "resolved": "https://registry.npmjs.org/levn/-/levn-0.4.1.tgz",
      "integrity": "sha512-+bT2uH4E5LGE7h/n3evcS/sQlJXCpIp6ym8OWJ5eV6+67Dsql/LaaT7qJBAt2rzfoa/5QBGBhxDix1dMt2kQKQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "prelude-ls": "^1.2.1",
        "type-check": "~0.4.0"
      },
      "engines": {
        "node": ">= 0.8.0"
      }
    },
    "node_modules/lie": {
      "version": "3.3.0",
      "resolved": "https://registry.npmjs.org/lie/-/lie-3.3.0.tgz",
      "integrity": "sha512-UaiMJzeWRlEujzAuw5LokY1L5ecNQYZKfmyZ9L7wDHb/p5etKaxXhohBcrw0EYby+G/NA52vRSN4N39dxHAIwQ==",
      "license": "MIT",
      "dependencies": {
        "immediate": "~3.0.5"
      }
    },
    "node_modules/lilconfig": {
      "version": "3.1.3",
      "resolved": "https://registry.npmjs.org/lilconfig/-/lilconfig-3.1.3.tgz",
      "integrity": "sha512-/vlFKAoH5Cgt3Ie+JLhRbwOsCQePABiU3tJ1egGvyQ+33R/vcwM2Zl2QR/LzjsBeItPt3oSVXapn+m4nQDvpzw==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=14"
      },
      "funding": {
        "url": "https://github.com/sponsors/antonk52"
      }
    },
    "node_modules/lines-and-columns": {
      "version": "1.2.4",
      "resolved": "https://registry.npmjs.org/lines-and-columns/-/lines-and-columns-1.2.4.tgz",
      "integrity": "sha512-7ylylesZQ/PV29jhEDl3Ufjo6ZX7gCqJr5F7PKrqc93v7fzSymt1BpwEU8nAUXs8qzzvqhbjhK5QZg6Mt/HkBg==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/lit": {
      "version": "3.3.0",
      "resolved": "https://registry.npmjs.org/lit/-/lit-3.3.0.tgz",
      "integrity": "sha512-DGVsqsOIHBww2DqnuZzW7QsuCdahp50ojuDaBPC7jUDRpYoH0z7kHBBYZewRzer75FwtrkmkKk7iOAwSaWdBmw==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "@lit/reactive-element": "^2.1.0",
        "lit-element": "^4.2.0",
        "lit-html": "^3.3.0"
      }
    },
    "node_modules/lit-element": {
      "version": "4.2.0",
      "resolved": "https://registry.npmjs.org/lit-element/-/lit-element-4.2.0.tgz",
      "integrity": "sha512-MGrXJVAI5x+Bfth/pU9Kst1iWID6GHDLEzFEnyULB/sFiRLgkd8NPK/PeeXxktA3T6EIIaq8U3KcbTU5XFcP2Q==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "@lit-labs/ssr-dom-shim": "^1.2.0",
        "@lit/reactive-element": "^2.1.0",
        "lit-html": "^3.3.0"
      }
    },
    "node_modules/lit-html": {
      "version": "3.3.0",
      "resolved": "https://registry.npmjs.org/lit-html/-/lit-html-3.3.0.tgz",
      "integrity": "sha512-RHoswrFAxY2d8Cf2mm4OZ1DgzCoBKUKSPvA1fhtSELxUERq2aQQ2h05pO9j81gS1o7RIRJ+CePLogfyahwmynw==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "@types/trusted-types": "^2.0.2"
      }
    },
    "node_modules/locate-path": {
      "version": "6.0.0",
      "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-6.0.0.tgz",
      "integrity": "sha512-iPZK6eYjbxRu3uB4/WZ3EsEIMJFMqAoopl3R+zuq0UjcAm/MO6KCweDgPfP3elTztoKP3KtnVHxTn2NHBSDVUw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "p-locate": "^5.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/lodash-es": {
      "version": "4.17.21",
      "resolved": "https://registry.npmjs.org/lodash-es/-/lodash-es-4.17.21.tgz",
      "integrity": "sha512-mKnC+QJ9pWVzv+C4/U3rRsHapFfHvQFoFB92e52xeyGMcX6/OlIl78je1u8vePzYZSkkogMPJ2yjxxsb89cxyw==",
      "license": "MIT",
      "peer": true
    },
    "node_modules/lodash.merge": {
      "version": "4.6.2",
      "resolved": "https://registry.npmjs.org/lodash.merge/-/lodash.merge-4.6.2.tgz",
      "integrity": "sha512-0KpjqXRVvrYyCsX1swR/XTK0va6VQkQM6MNo7PqW77ByjAhoARA8EfrP1N4+KlKj8YS0ZUCtRT/YUuhyYDujIQ==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/loose-envify": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/loose-envify/-/loose-envify-1.4.0.tgz",
      "integrity": "sha512-lyuxPGr/Wfhrlem2CL/UcnUc1zcqKAImBDzukY7Y5F/yQiNdko6+fRLevlw1HgMySw7f611UIY408EtxRSoK3Q==",
      "license": "MIT",
      "dependencies": {
        "js-tokens": "^3.0.0 || ^4.0.0"
      },
      "bin": {
        "loose-envify": "cli.js"
      }
    },
    "node_modules/lossless-json": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/lossless-json/-/lossless-json-4.1.0.tgz",
      "integrity": "sha512-DgoRs42jH/yNubp8iinRqvG0xn5awHKXVY+7lGYjBaByoHGZt/Dz5Jkaf5znP2XHbTnAA+bbkhK3lMIaf3+92A==",
      "license": "MIT"
    },
    "node_modules/lru-cache": {
      "version": "5.1.1",
      "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-5.1.1.tgz",
      "integrity": "sha512-KpNARQA3Iwv+jTA0utUVVbrh+Jlrr1Fv0e56GGzAFOXN7dk/FviaDW8LHmK52DlcH4WP2n6gI8vN1aesBFgo9w==",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "yallist": "^3.0.2"
      }
    },
    "node_modules/lucide-react": {
      "version": "0.518.0",
      "resolved": "https://registry.npmjs.org/lucide-react/-/lucide-react-0.518.0.tgz",
      "integrity": "sha512-kFg34uQqnVl/7HwAiigxPSpj//43VIVHQbMygQPtS1yT4btMXHCWUipHcgcXHD2pm1Z2nUBA/M+Vnh/YmWXQUw==",
      "license": "ISC",
      "peerDependencies": {
        "react": "^16.5.1 || ^17.0.0 || ^18.0.0 || ^19.0.0"
      }
    },
    "node_modules/maath": {
      "version": "0.10.8",
      "resolved": "https://registry.npmjs.org/maath/-/maath-0.10.8.tgz",
      "integrity": "sha512-tRvbDF0Pgqz+9XUa4jjfgAQ8/aPKmQdWXilFu2tMy4GWj4NOsx99HlULO4IeREfbO3a0sA145DZYyvXPkybm0g==",
      "license": "MIT",
      "peerDependencies": {
        "@types/three": ">=0.134.0",
        "three": ">=0.134.0"
      }
    },
    "node_modules/match-sorter": {
      "version": "6.3.4",
      "resolved": "https://registry.npmjs.org/match-sorter/-/match-sorter-6.3.4.tgz",
      "integrity": "sha512-jfZW7cWS5y/1xswZo8VBOdudUiSd9nifYRWphc9M5D/ee4w4AoXLgBEdRbgVaxbMuagBPeUC5y2Hi8DO6o9aDg==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.23.8",
        "remove-accents": "0.5.0"
      }
    },
    "node_modules/math-intrinsics": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/math-intrinsics/-/math-intrinsics-1.1.0.tgz",
      "integrity": "sha512-/IXtbwEk5HTPyEwyKX6hGkYXxM9nbj64B+ilVJnC/R6B0pH5G4V3b0pVbL7DBj4tkhBAppbQUlf6F6Xl9LHu1g==",
      "license": "MIT",
      "peer": true,
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/mathjs": {
      "version": "12.4.3",
      "resolved": "https://registry.npmjs.org/mathjs/-/mathjs-12.4.3.tgz",
      "integrity": "sha512-oHdGPDbp7gO873xxG90RLq36IuicuKvbpr/bBG5g9c8Obm/VsKVrK9uoRZZHUodohzlnmCEqfDzbR3LH6m+aAQ==",
      "license": "Apache-2.0",
      "dependencies": {
        "@babel/runtime": "^7.24.4",
        "complex.js": "^2.1.1",
        "decimal.js": "^10.4.3",
        "escape-latex": "^1.2.0",
        "fraction.js": "4.3.4",
        "javascript-natural-sort": "^0.7.1",
        "seedrandom": "^3.0.5",
        "tiny-emitter": "^2.1.0",
        "typed-function": "^4.1.1"
      },
      "bin": {
        "mathjs": "bin/cli.js"
      },
      "engines": {
        "node": ">= 18"
      }
    },
    "node_modules/mathjs/node_modules/fraction.js": {
      "version": "4.3.4",
      "resolved": "https://registry.npmjs.org/fraction.js/-/fraction.js-4.3.4.tgz",
      "integrity": "sha512-pwiTgt0Q7t+GHZA4yaLjObx4vXmmdcS0iSJ19o8d/goUGgItX9UZWKWNnLHehxviD8wU2IWRsnR8cD5+yOJP2Q==",
      "license": "MIT",
      "engines": {
        "node": "*"
      },
      "funding": {
        "type": "patreon",
        "url": "https://github.com/sponsors/rawify"
      }
    },
    "node_modules/merge2": {
      "version": "1.4.1",
      "resolved": "https://registry.npmjs.org/merge2/-/merge2-1.4.1.tgz",
      "integrity": "sha512-8q7VEgMJW4J8tcfVPy8g09NcQwZdbwFEqhe/WZkoIzjn/3TGDwtOCYtXGxA3O8tPzpczCCDgv+P2P5y00ZJOOg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/meshline": {
      "version": "3.3.1",
      "resolved": "https://registry.npmjs.org/meshline/-/meshline-3.3.1.tgz",
      "integrity": "sha512-/TQj+JdZkeSUOl5Mk2J7eLcYTLiQm2IDzmlSvYm7ov15anEcDJ92GHqqazxTSreeNgfnYu24kiEvvv0WlbCdFQ==",
      "license": "MIT",
      "peerDependencies": {
        "three": ">=0.137"
      }
    },
    "node_modules/meshoptimizer": {
      "version": "0.18.1",
      "resolved": "https://registry.npmjs.org/meshoptimizer/-/meshoptimizer-0.18.1.tgz",
      "integrity": "sha512-ZhoIoL7TNV4s5B6+rx5mC//fw8/POGyNxS/DZyCJeiZ12ScLfVwRE/GfsxwiTkMYYD5DmK2/JXnEVXqL4rF+Sw==",
      "license": "MIT"
    },
    "node_modules/micro-ftch": {
      "version": "0.3.1",
      "resolved": "https://registry.npmjs.org/micro-ftch/-/micro-ftch-0.3.1.tgz",
      "integrity": "sha512-/0LLxhzP0tfiR5hcQebtudP56gUurs2CLkGarnCiB/OqEyUFQ6U3paQi/tgLv0hBJYt2rnr9MNpxz4fiiugstg==",
      "license": "MIT",
      "peer": true
    },
    "node_modules/micro-starknet": {
      "version": "0.2.3",
      "resolved": "https://registry.npmjs.org/micro-starknet/-/micro-starknet-0.2.3.tgz",
      "integrity": "sha512-6XBcC+GerlwJSR4iA0VaeXtS2wrayWFcA4PEzrJPMuFmWCaUtuGIq5K/DB5F/XgnL54/zl2Bxo690Lj7mYVA8A==",
      "funding": [
        {
          "type": "individual",
          "url": "https://paulmillr.com/funding/"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "@noble/curves": "~1.0.0",
        "@noble/hashes": "~1.3.0"
      }
    },
    "node_modules/micro-starknet/node_modules/@noble/curves": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/@noble/curves/-/curves-1.0.0.tgz",
      "integrity": "sha512-2upgEu0iLiDVDZkNLeFV2+ht0BAVgQnEmCk6JsOch9Rp8xfkMCbvbAZlA2pBHQc73dbl+vFOXfqkf4uemdn0bw==",
      "funding": [
        {
          "type": "individual",
          "url": "https://paulmillr.com/funding/"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "@noble/hashes": "1.3.0"
      }
    },
    "node_modules/micro-starknet/node_modules/@noble/curves/node_modules/@noble/hashes": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/@noble/hashes/-/hashes-1.3.0.tgz",
      "integrity": "sha512-ilHEACi9DwqJB0pw7kv+Apvh50jiiSyR/cQ3y4W7lOR5mhvn/50FLUfsnfJz0BDZtl/RR16kXvptiv6q1msYZg==",
      "funding": [
        {
          "type": "individual",
          "url": "https://paulmillr.com/funding/"
        }
      ],
      "license": "MIT"
    },
    "node_modules/micro-starknet/node_modules/@noble/hashes": {
      "version": "1.3.3",
      "resolved": "https://registry.npmjs.org/@noble/hashes/-/hashes-1.3.3.tgz",
      "integrity": "sha512-V7/fPHgl+jsVPXqqeOzT8egNj2iBIVt+ECeMMG8TdcnTikP3oaBtUVqpT/gYCR68aEBJSF+XbYUxStjbFMqIIA==",
      "license": "MIT",
      "engines": {
        "node": ">= 16"
      },
      "funding": {
        "url": "https://paulmillr.com/funding/"
      }
    },
    "node_modules/micromatch": {
      "version": "4.0.8",
      "resolved": "https://registry.npmjs.org/micromatch/-/micromatch-4.0.8.tgz",
      "integrity": "sha512-PXwfBhYu0hBCPw8Dn0E+WDYb7af3dSLVWKi3HGv84IdF4TyFoC0ysxFd0Goxw7nSv4T/PzEJQxsYsEiFCKo2BA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "braces": "^3.0.3",
        "picomatch": "^2.3.1"
      },
      "engines": {
        "node": ">=8.6"
      }
    },
    "node_modules/microseconds": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/microseconds/-/microseconds-0.2.0.tgz",
      "integrity": "sha512-n7DHHMjR1avBbSpsTBj6fmMGh2AGrifVV4e+WYc3Q9lO+xnSZ3NyhcBND3vzzatt05LFhoKFRxrIyklmLlUtyA==",
      "license": "MIT"
    },
    "node_modules/minimatch": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz",
      "integrity": "sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==",
      "license": "ISC",
      "dependencies": {
        "brace-expansion": "^1.1.7"
      },
      "engines": {
        "node": "*"
      }
    },
    "node_modules/minipass": {
      "version": "7.1.2",
      "resolved": "https://registry.npmjs.org/minipass/-/minipass-7.1.2.tgz",
      "integrity": "sha512-qOOzS1cBTWYF4BH8fVePDBOO9iptMnGUEZwNc/cMWnTV2nVLZ7VoNWEPHkYczZA0pdoA7dl6e7FL659nX9S2aw==",
      "dev": true,
      "license": "ISC",
      "engines": {
        "node": ">=16 || 14 >=14.17"
      }
    },
    "node_modules/mipd": {
      "version": "0.0.7",
      "resolved": "https://registry.npmjs.org/mipd/-/mipd-0.0.7.tgz",
      "integrity": "sha512-aAPZPNDQ3uMTdKbuO2YmAw2TxLHO0moa4YKAyETM/DTj5FloZo+a+8tU+iv4GmW+sOxKLSRwcSFuczk+Cpt6fg==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/wagmi-dev"
        }
      ],
      "license": "MIT",
      "peerDependencies": {
        "typescript": ">=5.0.4"
      },
      "peerDependenciesMeta": {
        "typescript": {
          "optional": true
        }
      }
    },
    "node_modules/mobx": {
      "version": "6.13.7",
      "resolved": "https://registry.npmjs.org/mobx/-/mobx-6.13.7.tgz",
      "integrity": "sha512-aChaVU/DO5aRPmk1GX8L+whocagUUpBQqoPtJk+cm7UOXUk87J4PeWCh6nNmTTIfEhiR9DI/+FnA8dln/hTK7g==",
      "license": "MIT",
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/mobx"
      }
    },
    "node_modules/ms": {
      "version": "2.1.3",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.3.tgz",
      "integrity": "sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==",
      "license": "MIT"
    },
    "node_modules/multiformats": {
      "version": "9.9.0",
      "resolved": "https://registry.npmjs.org/multiformats/-/multiformats-9.9.0.tgz",
      "integrity": "sha512-HoMUjhH9T8DDBNT+6xzkrd9ga/XiBI4xLr58LJACwK6G3HTOPeMz4nB4KJs33L2BelrIJa7P0VuNaVF3hMYfjg==",
      "license": "(Apache-2.0 AND MIT)"
    },
    "node_modules/mz": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/mz/-/mz-2.7.0.tgz",
      "integrity": "sha512-z81GNO7nnYMEhrGh9LeymoE4+Yr0Wn5McHIZMK5cfQCl+NDX08sCZgUc9/6MHni9IWuFLm1Z3HTCXu2z9fN62Q==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "any-promise": "^1.0.0",
        "object-assign": "^4.0.1",
        "thenify-all": "^1.0.0"
      }
    },
    "node_modules/nano-time": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/nano-time/-/nano-time-1.0.0.tgz",
      "integrity": "sha512-flnngywOoQ0lLQOTRNexn2gGSNuM9bKj9RZAWSzhQ+UJYaAFG9bac4DW9VHjUAzrOaIcajHybCTHe/bkvozQqA==",
      "license": "ISC",
      "dependencies": {
        "big-integer": "^1.6.16"
      }
    },
    "node_modules/nanoid": {
      "version": "3.3.11",
      "resolved": "https://registry.npmjs.org/nanoid/-/nanoid-3.3.11.tgz",
      "integrity": "sha512-N8SpfPUnUp1bK+PMYW8qSWdl9U+wwNWI4QKxOYDy9JAro3WMX7p2OeVRF9v+347pnakNevPmiHhNmZ2HbFA76w==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "license": "MIT",
      "bin": {
        "nanoid": "bin/nanoid.cjs"
      },
      "engines": {
        "node": "^10 || ^12 || ^13.7 || ^14 || >=15.0.1"
      }
    },
    "node_modules/natural-compare": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/natural-compare/-/natural-compare-1.4.0.tgz",
      "integrity": "sha512-OWND8ei3VtNC9h7V60qff3SVobHr996CTwgxubgyQYEpg290h9J0buyECNNJexkFm5sOajh5G116RYA1c8ZMSw==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/neverthrow": {
      "version": "8.2.0",
      "resolved": "https://registry.npmjs.org/neverthrow/-/neverthrow-8.2.0.tgz",
      "integrity": "sha512-kOCT/1MCPAxY5iUV3wytNFUMUolzuwd/VF/1KCx7kf6CutrOsTie+84zTGTpgQycjvfLdBBdvBvFLqFD2c0wkQ==",
      "license": "MIT",
      "engines": {
        "node": ">=18"
      },
      "optionalDependencies": {
        "@rollup/rollup-linux-x64-gnu": "^4.24.0"
      }
    },
    "node_modules/node-fetch": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/node-fetch/-/node-fetch-2.7.0.tgz",
      "integrity": "sha512-c4FRfUm/dbcWZ7U+1Wq0AwCyFL+3nt2bEw05wfxSz+DWpWsitgmSgYmy2dQdWyKC1694ELPqMs/YzUSNozLt8A==",
      "license": "MIT",
      "dependencies": {
        "whatwg-url": "^5.0.0"
      },
      "engines": {
        "node": "4.x || >=6.0.0"
      },
      "peerDependencies": {
        "encoding": "^0.1.0"
      },
      "peerDependenciesMeta": {
        "encoding": {
          "optional": true
        }
      }
    },
    "node_modules/node-fetch-native": {
      "version": "1.6.6",
      "resolved": "https://registry.npmjs.org/node-fetch-native/-/node-fetch-native-1.6.6.tgz",
      "integrity": "sha512-8Mc2HhqPdlIfedsuZoc3yioPuzp6b+L5jRCRY1QzuWZh2EGJVQrGppC6V6cF0bLdbW0+O2YpqCA25aF/1lvipQ==",
      "license": "MIT"
    },
    "node_modules/node-gyp-build": {
      "version": "4.8.4",
      "resolved": "https://registry.npmjs.org/node-gyp-build/-/node-gyp-build-4.8.4.tgz",
      "integrity": "sha512-LA4ZjwlnUblHVgq0oBF3Jl/6h/Nvs5fzBLwdEF4nuxnFdsfajde4WfxtJr3CaiH+F6ewcIB/q4jQ4UzPyid+CQ==",
      "license": "MIT",
      "peer": true,
      "bin": {
        "node-gyp-build": "bin.js",
        "node-gyp-build-optional": "optional.js",
        "node-gyp-build-test": "build-test.js"
      }
    },
    "node_modules/node-gyp-build-optional-packages": {
      "version": "5.1.1",
      "resolved": "https://registry.npmjs.org/node-gyp-build-optional-packages/-/node-gyp-build-optional-packages-5.1.1.tgz",
      "integrity": "sha512-+P72GAjVAbTxjjwUmwjVrqrdZROD4nf8KgpBoDxqXXTiYZZt/ud60dE5yvCSr9lRO8e8yv6kgJIC0K0PfZFVQw==",
      "license": "MIT",
      "optional": true,
      "dependencies": {
        "detect-libc": "^2.0.1"
      },
      "bin": {
        "node-gyp-build-optional-packages": "bin.js",
        "node-gyp-build-optional-packages-optional": "optional.js",
        "node-gyp-build-optional-packages-test": "build-test.js"
      }
    },
    "node_modules/node-mock-http": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/node-mock-http/-/node-mock-http-1.0.0.tgz",
      "integrity": "sha512-0uGYQ1WQL1M5kKvGRXWQ3uZCHtLTO8hln3oBjIusM75WoesZ909uQJs/Hb946i2SS+Gsrhkaa6iAO17jRIv6DQ==",
      "license": "MIT"
    },
    "node_modules/node-releases": {
      "version": "2.0.19",
      "resolved": "https://registry.npmjs.org/node-releases/-/node-releases-2.0.19.tgz",
      "integrity": "sha512-xxOWJsBKtzAq7DY0J+DTzuz58K8e7sJbdgwkbMWQe8UYB6ekmsQ45q0M/tJDsGaZmbC+l7n57UV8Hl5tHxO9uw==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/normalize-path": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/normalize-path/-/normalize-path-3.0.0.tgz",
      "integrity": "sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA==",
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/normalize-range": {
      "version": "0.1.2",
      "resolved": "https://registry.npmjs.org/normalize-range/-/normalize-range-0.1.2.tgz",
      "integrity": "sha512-bdok/XvKII3nUpklnV6P2hxtMNrCboOjAcyBuQnWEhO665FwrSNRxU+AqpsyvO6LgGYPspN+lu5CLtw4jPRKNA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/obj-multiplex": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/obj-multiplex/-/obj-multiplex-1.0.0.tgz",
      "integrity": "sha512-0GNJAOsHoBHeNTvl5Vt6IWnpUEcc3uSRxzBri7EDyIcMgYvnY2JL2qdeV5zTMjWQX5OHcD5amcW2HFfDh0gjIA==",
      "license": "ISC",
      "peer": true,
      "dependencies": {
        "end-of-stream": "^1.4.0",
        "once": "^1.4.0",
        "readable-stream": "^2.3.3"
      }
    },
    "node_modules/obj-multiplex/node_modules/readable-stream": {
      "version": "2.3.8",
      "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.8.tgz",
      "integrity": "sha512-8p0AUk4XODgIewSi0l8Epjs+EVnWiK7NoDIEGU0HhE7+ZyY8D1IMY7odu5lRrFXGg71L15KG8QrPmum45RTtdA==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "core-util-is": "~1.0.0",
        "inherits": "~2.0.3",
        "isarray": "~1.0.0",
        "process-nextick-args": "~2.0.0",
        "safe-buffer": "~5.1.1",
        "string_decoder": "~1.1.1",
        "util-deprecate": "~1.0.1"
      }
    },
    "node_modules/obj-multiplex/node_modules/safe-buffer": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
      "integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g==",
      "license": "MIT",
      "peer": true
    },
    "node_modules/obj-multiplex/node_modules/string_decoder": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
      "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "safe-buffer": "~5.1.0"
      }
    },
    "node_modules/object-assign": {
      "version": "4.1.1",
      "resolved": "https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz",
      "integrity": "sha512-rJgTQnkUnH1sFw8yT6VSU3zD3sWmu6sZhIseY8VX+GRu3P6F7Fu+JNDoXfklElbLJSnc3FUQHVe4cU5hj+BcUg==",
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/object-hash": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/object-hash/-/object-hash-3.0.0.tgz",
      "integrity": "sha512-RSn9F68PjH9HqtltsSnqYC1XXoWe9Bju5+213R98cNGttag9q9yAOTzdbsqvIa7aNm5WffBZFpWYr2aWrklWAw==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/oblivious-set": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/oblivious-set/-/oblivious-set-1.0.0.tgz",
      "integrity": "sha512-z+pI07qxo4c2CulUHCDf9lcqDlMSo72N/4rLUpRXf6fu+q8vjt8y0xS+Tlf8NTJDdTXHbdeO1n3MlbctwEoXZw==",
      "license": "MIT"
    },
    "node_modules/ofetch": {
      "version": "1.4.1",
      "resolved": "https://registry.npmjs.org/ofetch/-/ofetch-1.4.1.tgz",
      "integrity": "sha512-QZj2DfGplQAr2oj9KzceK9Hwz6Whxazmn85yYeVuS3u9XTMOGMRx0kO95MQ+vLsj/S/NwBDMMLU5hpxvI6Tklw==",
      "license": "MIT",
      "dependencies": {
        "destr": "^2.0.3",
        "node-fetch-native": "^1.6.4",
        "ufo": "^1.5.4"
      }
    },
    "node_modules/on-exit-leak-free": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/on-exit-leak-free/-/on-exit-leak-free-0.2.0.tgz",
      "integrity": "sha512-dqaz3u44QbRXQooZLTUKU41ZrzYrcvLISVgbrzbyCMxpmSLJvZ3ZamIJIZ29P6OhZIkNIQKosdeM6t1LYbA9hg==",
      "license": "MIT"
    },
    "node_modules/once": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/once/-/once-1.4.0.tgz",
      "integrity": "sha512-lNaJgI+2Q5URQBkccEKHTQOPaXdUxnZZElQTZY0MFUAuaEqe1E+Nyvgdz/aIyNi6Z9MzO5dv1H8n58/GELp3+w==",
      "license": "ISC",
      "dependencies": {
        "wrappy": "1"
      }
    },
    "node_modules/open": {
      "version": "10.1.2",
      "resolved": "https://registry.npmjs.org/open/-/open-10.1.2.tgz",
      "integrity": "sha512-cxN6aIDPz6rm8hbebcP7vrQNhvRcveZoJU72Y7vskh4oIm+BZwBECnx5nTmrlres1Qapvx27Qo1Auukpf8PKXw==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "default-browser": "^5.2.1",
        "define-lazy-prop": "^3.0.0",
        "is-inside-container": "^1.0.0",
        "is-wsl": "^3.1.0"
      },
      "engines": {
        "node": ">=18"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/optionator": {
      "version": "0.9.4",
      "resolved": "https://registry.npmjs.org/optionator/-/optionator-0.9.4.tgz",
      "integrity": "sha512-6IpQ7mKUxRcZNLIObR0hz7lxsapSSIYNZJwXPGeF0mTVqGKFIXj1DQcMoT22S3ROcLyY/rz0PWaWZ9ayWmad9g==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "deep-is": "^0.1.3",
        "fast-levenshtein": "^2.0.6",
        "levn": "^0.4.1",
        "prelude-ls": "^1.2.1",
        "type-check": "^0.4.0",
        "word-wrap": "^1.2.5"
      },
      "engines": {
        "node": ">= 0.8.0"
      }
    },
    "node_modules/ox": {
      "version": "0.8.1",
      "resolved": "https://registry.npmjs.org/ox/-/ox-0.8.1.tgz",
      "integrity": "sha512-e+z5epnzV+Zuz91YYujecW8cF01mzmrUtWotJ0oEPym/G82uccs7q0WDHTYL3eiONbTUEvcZrptAKLgTBD3u2A==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/wevm"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "@adraffy/ens-normalize": "^1.11.0",
        "@noble/ciphers": "^1.3.0",
        "@noble/curves": "^1.9.1",
        "@noble/hashes": "^1.8.0",
        "@scure/bip32": "^1.7.0",
        "@scure/bip39": "^1.6.0",
        "abitype": "^1.0.8",
        "eventemitter3": "5.0.1"
      },
      "peerDependencies": {
        "typescript": ">=5.4.0"
      },
      "peerDependenciesMeta": {
        "typescript": {
          "optional": true
        }
      }
    },
    "node_modules/ox/node_modules/@adraffy/ens-normalize": {
      "version": "1.11.0",
      "resolved": "https://registry.npmjs.org/@adraffy/ens-normalize/-/ens-normalize-1.11.0.tgz",
      "integrity": "sha512-/3DDPKHqqIqxUULp8yP4zODUY1i+2xvVWsv8A79xGWdCAG+8sb0hRh0Rk2QyOJUnnbyPUAZYcpBuRe3nS2OIUg==",
      "license": "MIT"
    },
    "node_modules/ox/node_modules/@noble/ciphers": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/@noble/ciphers/-/ciphers-1.3.0.tgz",
      "integrity": "sha512-2I0gnIVPtfnMw9ee9h1dJG7tp81+8Ob3OJb3Mv37rx5L40/b0i7djjCVvGOVqc9AEIQyvyu1i6ypKdFw8R8gQw==",
      "license": "MIT",
      "engines": {
        "node": "^14.21.3 || >=16"
      },
      "funding": {
        "url": "https://paulmillr.com/funding/"
      }
    },
    "node_modules/ox/node_modules/@scure/bip39": {
      "version": "1.6.0",
      "resolved": "https://registry.npmjs.org/@scure/bip39/-/bip39-1.6.0.tgz",
      "integrity": "sha512-+lF0BbLiJNwVlev4eKelw1WWLaiKXw7sSl8T6FvBlWkdX+94aGJ4o8XjUdlyhTCjd8c+B3KT3JfS8P0bLRNU6A==",
      "license": "MIT",
      "dependencies": {
        "@noble/hashes": "~1.8.0",
        "@scure/base": "~1.2.5"
      },
      "funding": {
        "url": "https://paulmillr.com/funding/"
      }
    },
    "node_modules/ox/node_modules/abitype": {
      "version": "1.0.8",
      "resolved": "https://registry.npmjs.org/abitype/-/abitype-1.0.8.tgz",
      "integrity": "sha512-ZeiI6h3GnW06uYDLx0etQtX/p8E24UaHHBj57RSjK7YBFe7iuVn07EDpOeP451D06sF27VOz9JJPlIKJmXgkEg==",
      "license": "MIT",
      "funding": {
        "url": "https://github.com/sponsors/wevm"
      },
      "peerDependencies": {
        "typescript": ">=5.0.4",
        "zod": "^3 >=3.22.0"
      },
      "peerDependenciesMeta": {
        "typescript": {
          "optional": true
        },
        "zod": {
          "optional": true
        }
      }
    },
    "node_modules/p-limit": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/p-limit/-/p-limit-3.1.0.tgz",
      "integrity": "sha512-TYOanM3wGwNGsZN2cVTYPArw454xnXj5qmWF1bEoAc4+cU/ol7GVh7odevjp1FNHduHc3KZMcFduxU5Xc6uJRQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "yocto-queue": "^0.1.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/p-locate": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/p-locate/-/p-locate-5.0.0.tgz",
      "integrity": "sha512-LaNjtRWUBY++zB5nE/NwcaoMylSPk+S+ZHNB1TzdbMJMny6dynpAGt7X/tl/QYq3TIeE6nxHppbo2LGymrG5Pw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "p-limit": "^3.0.2"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/p-try": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/p-try/-/p-try-2.2.0.tgz",
      "integrity": "sha512-R4nPAVTAU0B9D35/Gk3uJf/7XYbQcyohSKdvAxIRSNghFl4e71hVoGnBNQz9cWaXxO2I10KTC+3jMdvvoKw6dQ==",
      "license": "MIT",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/package-json-from-dist": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/package-json-from-dist/-/package-json-from-dist-1.0.1.tgz",
      "integrity": "sha512-UEZIS3/by4OC8vL3P2dTXRETpebLI2NiI5vIrjaD/5UtrkFX/tNbwjTSRAGC/+7CAo2pIcBaRgWmcBBHcsaCIw==",
      "dev": true,
      "license": "BlueOak-1.0.0"
    },
    "node_modules/pako": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/pako/-/pako-2.1.0.tgz",
      "integrity": "sha512-w+eufiZ1WuJYgPXbV/PO3NCMEc3xqylkKHzp8bxp1uW4qaSNQUkwmLLEc3kKsfz8lpV1F8Ht3U1Cm+9Srog2ug==",
      "license": "(MIT AND Zlib)"
    },
    "node_modules/parent-module": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/parent-module/-/parent-module-1.0.1.tgz",
      "integrity": "sha512-GQ2EWRpQV8/o+Aw8YqtfZZPfNRWZYkbidE9k5rpl/hC3vtHHBfGm2Ifi6qWV+coDGkrUKZAxE3Lot5kcsRlh+g==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "callsites": "^3.0.0"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/path-exists": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/path-exists/-/path-exists-4.0.0.tgz",
      "integrity": "sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAHfZQ8FnmB4MG4LWy7/w==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/path-is-absolute": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/path-is-absolute/-/path-is-absolute-1.0.1.tgz",
      "integrity": "sha512-AVbw3UJ2e9bq64vSaS9Am0fje1Pa8pbGqTTsmXfaIiMpnr5DlDhfJOuLj9Sf95ZPVDAUerDfEk88MPmPe7UCQg==",
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/path-key": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/path-key/-/path-key-3.1.1.tgz",
      "integrity": "sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/path-parse": {
      "version": "1.0.7",
      "resolved": "https://registry.npmjs.org/path-parse/-/path-parse-1.0.7.tgz",
      "integrity": "sha512-LDJzPVEEEPR+y48z93A0Ed0yXb8pAByGWo/k5YYdYgpY2/2EsOsksJrq7lOHxryrVOn1ejG6oAp8ahvOIQD8sw==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/path-scurry": {
      "version": "1.11.1",
      "resolved": "https://registry.npmjs.org/path-scurry/-/path-scurry-1.11.1.tgz",
      "integrity": "sha512-Xa4Nw17FS9ApQFJ9umLiJS4orGjm7ZzwUrwamcGQuHSzDyth9boKDaycYdDcZDuqYATXw4HFXgaqWTctW/v1HA==",
      "dev": true,
      "license": "BlueOak-1.0.0",
      "dependencies": {
        "lru-cache": "^10.2.0",
        "minipass": "^5.0.0 || ^6.0.2 || ^7.0.0"
      },
      "engines": {
        "node": ">=16 || 14 >=14.18"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/path-scurry/node_modules/lru-cache": {
      "version": "10.4.3",
      "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-10.4.3.tgz",
      "integrity": "sha512-JNAzZcXrCt42VGLuYz0zfAzDfAvJWW6AfYlDBQyDV5DClI2m5sAmK+OIO7s59XfsRsWHp02jAJrRadPRGTt6SQ==",
      "dev": true,
      "license": "ISC"
    },
    "node_modules/picocolors": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/picocolors/-/picocolors-1.1.1.tgz",
      "integrity": "sha512-xceH2snhtb5M9liqDsmEw56le376mTZkEX/jEb/RxNFyegNul7eNslCXP9FDj/Lcu0X8KEyMceP2ntpaHrDEVA==",
      "license": "ISC"
    },
    "node_modules/picomatch": {
      "version": "2.3.1",
      "resolved": "https://registry.npmjs.org/picomatch/-/picomatch-2.3.1.tgz",
      "integrity": "sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==",
      "license": "MIT",
      "engines": {
        "node": ">=8.6"
      },
      "funding": {
        "url": "https://github.com/sponsors/jonschlinkert"
      }
    },
    "node_modules/pify": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/pify/-/pify-2.3.0.tgz",
      "integrity": "sha512-udgsAY+fTnvv7kI7aaxbqwWNb0AHiB0qBO89PZKPkoTmGOgdbrHDKD+0B2X4uTfJ/FT1R09r9gTsjUjNJotuog==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/pino": {
      "version": "7.11.0",
      "resolved": "https://registry.npmjs.org/pino/-/pino-7.11.0.tgz",
      "integrity": "sha512-dMACeu63HtRLmCG8VKdy4cShCPKaYDR4youZqoSWLxl5Gu99HUw8bw75thbPv9Nip+H+QYX8o3ZJbTdVZZ2TVg==",
      "license": "MIT",
      "dependencies": {
        "atomic-sleep": "^1.0.0",
        "fast-redact": "^3.0.0",
        "on-exit-leak-free": "^0.2.0",
        "pino-abstract-transport": "v0.5.0",
        "pino-std-serializers": "^4.0.0",
        "process-warning": "^1.0.0",
        "quick-format-unescaped": "^4.0.3",
        "real-require": "^0.1.0",
        "safe-stable-stringify": "^2.1.0",
        "sonic-boom": "^2.2.1",
        "thread-stream": "^0.15.1"
      },
      "bin": {
        "pino": "bin.js"
      }
    },
    "node_modules/pino-abstract-transport": {
      "version": "0.5.0",
      "resolved": "https://registry.npmjs.org/pino-abstract-transport/-/pino-abstract-transport-0.5.0.tgz",
      "integrity": "sha512-+KAgmVeqXYbTtU2FScx1XS3kNyfZ5TrXY07V96QnUSFqo2gAqlvmaxH67Lj7SWazqsMabf+58ctdTcBgnOLUOQ==",
      "license": "MIT",
      "dependencies": {
        "duplexify": "^4.1.2",
        "split2": "^4.0.0"
      }
    },
    "node_modules/pino-std-serializers": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/pino-std-serializers/-/pino-std-serializers-4.0.0.tgz",
      "integrity": "sha512-cK0pekc1Kjy5w9V2/n+8MkZwusa6EyyxfeQCB799CQRhRt/CqYKiWs5adeu8Shve2ZNffvfC/7J64A2PJo1W/Q==",
      "license": "MIT"
    },
    "node_modules/pirates": {
      "version": "4.0.7",
      "resolved": "https://registry.npmjs.org/pirates/-/pirates-4.0.7.tgz",
      "integrity": "sha512-TfySrs/5nm8fQJDcBDuUng3VOUKsd7S+zqvbOTiGXHfxX4wK31ard+hoNuvkicM/2YFzlpDgABOevKSsB4G/FA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/pngjs": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/pngjs/-/pngjs-5.0.0.tgz",
      "integrity": "sha512-40QW5YalBNfQo5yRYmiw7Yz6TKKVr3h6970B2YE+3fQpsWcrbj1PzJgxeJ19DRQjhMbKPIuMY8rFaXc8moolVw==",
      "license": "MIT",
      "engines": {
        "node": ">=10.13.0"
      }
    },
    "node_modules/pony-cause": {
      "version": "2.1.11",
      "resolved": "https://registry.npmjs.org/pony-cause/-/pony-cause-2.1.11.tgz",
      "integrity": "sha512-M7LhCsdNbNgiLYiP4WjsfLUuFmCfnjdF6jKe2R9NKl4WFN+HZPGHJZ9lnLP7f9ZnKe3U9nuWD0szirmj+migUg==",
      "license": "0BSD",
      "peer": true,
      "engines": {
        "node": ">=12.0.0"
      }
    },
    "node_modules/possible-typed-array-names": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/possible-typed-array-names/-/possible-typed-array-names-1.1.0.tgz",
      "integrity": "sha512-/+5VFTchJDoVj3bhoqi6UeymcD00DAwb1nJwamzPvHEszJ4FpF6SNNbUbOS8yI56qHzdV8eK0qEfOSiodkTdxg==",
      "license": "MIT",
      "peer": true,
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/postcss": {
      "version": "8.5.6",
      "resolved": "https://registry.npmjs.org/postcss/-/postcss-8.5.6.tgz",
      "integrity": "sha512-3Ybi1tAuwAP9s0r1UQ2J4n5Y0G05bJkpUIO0/bI9MhwmD70S5aTWbXGBwxHrelT+XM1k6dM0pk+SwNkpTRN7Pg==",
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/postcss/"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/postcss"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "nanoid": "^3.3.11",
        "picocolors": "^1.1.1",
        "source-map-js": "^1.2.1"
      },
      "engines": {
        "node": "^10 || ^12 || >=14"
      }
    },
    "node_modules/postcss-import": {
      "version": "15.1.0",
      "resolved": "https://registry.npmjs.org/postcss-import/-/postcss-import-15.1.0.tgz",
      "integrity": "sha512-hpr+J05B2FVYUAXHeK1YyI267J/dDDhMU6B6civm8hSY1jYJnBXxzKDKDswzJmtLHryrjhnDjqqp/49t8FALew==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "postcss-value-parser": "^4.0.0",
        "read-cache": "^1.0.0",
        "resolve": "^1.1.7"
      },
      "engines": {
        "node": ">=14.0.0"
      },
      "peerDependencies": {
        "postcss": "^8.0.0"
      }
    },
    "node_modules/postcss-js": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/postcss-js/-/postcss-js-4.0.1.tgz",
      "integrity": "sha512-dDLF8pEO191hJMtlHFPRa8xsizHaM82MLfNkUHdUtVEV3tgTp5oj+8qbEqYM57SLfc74KSbw//4SeJma2LRVIw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "camelcase-css": "^2.0.1"
      },
      "engines": {
        "node": "^12 || ^14 || >= 16"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/postcss/"
      },
      "peerDependencies": {
        "postcss": "^8.4.21"
      }
    },
    "node_modules/postcss-load-config": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/postcss-load-config/-/postcss-load-config-4.0.2.tgz",
      "integrity": "sha512-bSVhyJGL00wMVoPUzAVAnbEoWyqRxkjv64tUl427SKnPrENtq6hJwUojroMz2VB+Q1edmi4IfrAPpami5VVgMQ==",
      "dev": true,
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/postcss/"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "lilconfig": "^3.0.0",
        "yaml": "^2.3.4"
      },
      "engines": {
        "node": ">= 14"
      },
      "peerDependencies": {
        "postcss": ">=8.0.9",
        "ts-node": ">=9.0.0"
      },
      "peerDependenciesMeta": {
        "postcss": {
          "optional": true
        },
        "ts-node": {
          "optional": true
        }
      }
    },
    "node_modules/postcss-nested": {
      "version": "6.2.0",
      "resolved": "https://registry.npmjs.org/postcss-nested/-/postcss-nested-6.2.0.tgz",
      "integrity": "sha512-HQbt28KulC5AJzG+cZtj9kvKB93CFCdLvog1WFLf1D+xmMvPGlBstkpTEZfK5+AN9hfJocyBFCNiqyS48bpgzQ==",
      "dev": true,
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/postcss/"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "postcss-selector-parser": "^6.1.1"
      },
      "engines": {
        "node": ">=12.0"
      },
      "peerDependencies": {
        "postcss": "^8.2.14"
      }
    },
    "node_modules/postcss-selector-parser": {
      "version": "6.1.2",
      "resolved": "https://registry.npmjs.org/postcss-selector-parser/-/postcss-selector-parser-6.1.2.tgz",
      "integrity": "sha512-Q8qQfPiZ+THO/3ZrOrO0cJJKfpYCagtMUkXbnEfmgUjwXg6z/WBeOyS9APBBPCTSiDV+s4SwQGu8yFsiMRIudg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "cssesc": "^3.0.0",
        "util-deprecate": "^1.0.2"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/postcss-value-parser": {
      "version": "4.2.0",
      "resolved": "https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-4.2.0.tgz",
      "integrity": "sha512-1NNCs6uurfkVbeXG4S8JFT9t19m45ICnif8zWLd5oPSZ50QnwMfK+H3jv408d4jw/7Bttv5axS5IiHoLaVNHeQ==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/posthog-js-lite": {
      "version": "3.2.1",
      "resolved": "https://registry.npmjs.org/posthog-js-lite/-/posthog-js-lite-3.2.1.tgz",
      "integrity": "sha512-F+S+T9XiQr2rOkD0UFTr8yu8qScm4aM2lR5PmyknxxqlkC5gpRKS+Hi8cq5CYda7Q3BODh0h7pdW1P2XfZjEag=="
    },
    "node_modules/potpack": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/potpack/-/potpack-1.0.2.tgz",
      "integrity": "sha512-choctRBIV9EMT9WGAZHn3V7t0Z2pMQyl0EZE6pFc/6ml3ssw7Dlf/oAOvFwjm1HVsqfQN8GfeFyJ+d8tRzqueQ==",
      "license": "ISC"
    },
    "node_modules/prelude-ls": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/prelude-ls/-/prelude-ls-1.2.1.tgz",
      "integrity": "sha512-vkcDPrRZo1QZLbn5RLGPpg/WmIQ65qoWWhcGKf/b5eplkkarX0m9z8ppCat4mlOqUsWpyNuYgO3VRyrYHSzX5g==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.8.0"
      }
    },
    "node_modules/process-nextick-args": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/process-nextick-args/-/process-nextick-args-2.0.1.tgz",
      "integrity": "sha512-3ouUOpQhtgrbOa17J7+uxOTpITYWaGP7/AhoR3+A+/1e9skrzelGi/dXzEYyvbxubEF6Wn2ypscTKiKJFFn1ag==",
      "license": "MIT",
      "peer": true
    },
    "node_modules/process-warning": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/process-warning/-/process-warning-1.0.0.tgz",
      "integrity": "sha512-du4wfLyj4yCZq1VupnVSZmRsPJsNuxoDQFdCFHLaYiEbFBD7QE0a+I4D7hOxrVnh78QE/YipFAj9lXHiXocV+Q==",
      "license": "MIT"
    },
    "node_modules/promise-worker-transferable": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/promise-worker-transferable/-/promise-worker-transferable-1.0.4.tgz",
      "integrity": "sha512-bN+0ehEnrXfxV2ZQvU2PetO0n4gqBD4ulq3MI1WOPLgr7/Mg9yRQkX5+0v1vagr74ZTsl7XtzlaYDo2EuCeYJw==",
      "license": "Apache-2.0",
      "dependencies": {
        "is-promise": "^2.1.0",
        "lie": "^3.0.2"
      }
    },
    "node_modules/promise-worker-transferable/node_modules/is-promise": {
      "version": "2.2.2",
      "resolved": "https://registry.npmjs.org/is-promise/-/is-promise-2.2.2.tgz",
      "integrity": "sha512-+lP4/6lKUBfQjZ2pdxThZvLUAafmZb8OAxFb8XXtiQmS35INgr85hdOGoEs124ez1FCnZJt6jau/T+alh58QFQ==",
      "license": "MIT"
    },
    "node_modules/prop-types": {
      "version": "15.8.1",
      "resolved": "https://registry.npmjs.org/prop-types/-/prop-types-15.8.1.tgz",
      "integrity": "sha512-oj87CgZICdulUohogVAR7AjlC0327U4el4L6eAvOqCeudMDVU0NThNaV+b9Df4dXgSP1gXMTnPdhfe/2qDH5cg==",
      "license": "MIT",
      "dependencies": {
        "loose-envify": "^1.4.0",
        "object-assign": "^4.1.1",
        "react-is": "^16.13.1"
      }
    },
    "node_modules/proxy-compare": {
      "version": "2.6.0",
      "resolved": "https://registry.npmjs.org/proxy-compare/-/proxy-compare-2.6.0.tgz",
      "integrity": "sha512-8xuCeM3l8yqdmbPoYeLbrAXCBWu19XEYc5/F28f5qOaoAIMyfmBUkl5axiK+x9olUvRlcekvnm98AP9RDngOIw==",
      "license": "MIT"
    },
    "node_modules/proxy-deep": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/proxy-deep/-/proxy-deep-3.1.1.tgz",
      "integrity": "sha512-kppbvLUNJ4IOMZds9/4gz/rtT5OFiesy3XosLsgMKlF3vb6GA5Y3ptyDlzKLcOcUBW+zaY+RiMINTsgE+O6e+Q==",
      "license": "MIT"
    },
    "node_modules/psl": {
      "version": "1.15.0",
      "resolved": "https://registry.npmjs.org/psl/-/psl-1.15.0.tgz",
      "integrity": "sha512-JZd3gMVBAVQkSs6HdNZo9Sdo0LNcQeMNP3CozBJb3JYC/QUYZTnKxP+f8oWRX4rHP5EurWxqAHTSwUCjlNKa1w==",
      "license": "MIT",
      "dependencies": {
        "punycode": "^2.3.1"
      },
      "funding": {
        "url": "https://github.com/sponsors/lupomontero"
      }
    },
    "node_modules/pump": {
      "version": "3.0.3",
      "resolved": "https://registry.npmjs.org/pump/-/pump-3.0.3.tgz",
      "integrity": "sha512-todwxLMY7/heScKmntwQG8CXVkWUOdYxIvY2s0VWAAMh/nd8SoYiRaKjlr7+iCs984f2P8zvrfWcDDYVb73NfA==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "end-of-stream": "^1.1.0",
        "once": "^1.3.1"
      }
    },
    "node_modules/punycode": {
      "version": "2.3.1",
      "resolved": "https://registry.npmjs.org/punycode/-/punycode-2.3.1.tgz",
      "integrity": "sha512-vYt7UD1U9Wg6138shLtLOvdAu+8DsC/ilFtEVHcH+wydcSpNE20AfSOduf6MkRFahL5FY7X1oU7nKVZFtfq8Fg==",
      "license": "MIT",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/qrcode": {
      "version": "1.5.3",
      "resolved": "https://registry.npmjs.org/qrcode/-/qrcode-1.5.3.tgz",
      "integrity": "sha512-puyri6ApkEHYiVl4CFzo1tDkAZ+ATcnbJrJ6RiBM1Fhctdn/ix9MTE3hRph33omisEbC/2fcfemsseiKgBPKZg==",
      "license": "MIT",
      "dependencies": {
        "dijkstrajs": "^1.0.1",
        "encode-utf8": "^1.0.3",
        "pngjs": "^5.0.0",
        "yargs": "^15.3.1"
      },
      "bin": {
        "qrcode": "bin/qrcode"
      },
      "engines": {
        "node": ">=10.13.0"
      }
    },
    "node_modules/qrcode/node_modules/cliui": {
      "version": "6.0.0",
      "resolved": "https://registry.npmjs.org/cliui/-/cliui-6.0.0.tgz",
      "integrity": "sha512-t6wbgtoCXvAzst7QgXxJYqPt0usEfbgQdftEPbLL/cvv6HPE5VgvqCuAIDR0NgU52ds6rFwqrgakNLrHEjCbrQ==",
      "license": "ISC",
      "dependencies": {
        "string-width": "^4.2.0",
        "strip-ansi": "^6.0.0",
        "wrap-ansi": "^6.2.0"
      }
    },
    "node_modules/qrcode/node_modules/find-up": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/find-up/-/find-up-4.1.0.tgz",
      "integrity": "sha512-PpOwAdQ/YlXQ2vj8a3h8IipDuYRi3wceVQQGYWxNINccq40Anw7BlsEXCMbt1Zt+OLA6Fq9suIpIWD0OsnISlw==",
      "license": "MIT",
      "dependencies": {
        "locate-path": "^5.0.0",
        "path-exists": "^4.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/qrcode/node_modules/locate-path": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-5.0.0.tgz",
      "integrity": "sha512-t7hw9pI+WvuwNJXwk5zVHpyhIqzg2qTlklJOf0mVxGSbe3Fp2VieZcduNYjaLDoy6p9uGpQEGWG87WpMKlNq8g==",
      "license": "MIT",
      "dependencies": {
        "p-locate": "^4.1.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/qrcode/node_modules/p-limit": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/p-limit/-/p-limit-2.3.0.tgz",
      "integrity": "sha512-//88mFWSJx8lxCzwdAABTJL2MyWB12+eIY7MDL2SqLmAkeKU9qxRvWuSyTjm3FUmpBEMuFfckAIqEaVGUDxb6w==",
      "license": "MIT",
      "dependencies": {
        "p-try": "^2.0.0"
      },
      "engines": {
        "node": ">=6"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/qrcode/node_modules/p-locate": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/p-locate/-/p-locate-4.1.0.tgz",
      "integrity": "sha512-R79ZZ/0wAxKGu3oYMlz8jy/kbhsNrS7SKZ7PxEHBgJ5+F2mtFW2fK2cOtBh1cHYkQsbzFV7I+EoRKe6Yt0oK7A==",
      "license": "MIT",
      "dependencies": {
        "p-limit": "^2.2.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/qrcode/node_modules/wrap-ansi": {
      "version": "6.2.0",
      "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-6.2.0.tgz",
      "integrity": "sha512-r6lPcBGxZXlIcymEu7InxDMhdW0KDxpLgoFLcguasxCaJ/SOIZwINatK9KY/tf+ZrlywOKU0UDj3ATXUBfxJXA==",
      "license": "MIT",
      "dependencies": {
        "ansi-styles": "^4.0.0",
        "string-width": "^4.1.0",
        "strip-ansi": "^6.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/qrcode/node_modules/y18n": {
      "version": "4.0.3",
      "resolved": "https://registry.npmjs.org/y18n/-/y18n-4.0.3.tgz",
      "integrity": "sha512-JKhqTOwSrqNA1NY5lSztJ1GrBiUodLMmIZuLiDaMRJ+itFd+ABVE8XBjOvIWL+rSqNDC74LCSFmlb/U4UZ4hJQ==",
      "license": "ISC"
    },
    "node_modules/qrcode/node_modules/yargs": {
      "version": "15.4.1",
      "resolved": "https://registry.npmjs.org/yargs/-/yargs-15.4.1.tgz",
      "integrity": "sha512-aePbxDmcYW++PaqBsJ+HYUFwCdv4LVvdnhBy78E57PIor8/OVvhMrADFFEDh8DHDFRv/O9i3lPhsENjO7QX0+A==",
      "license": "MIT",
      "dependencies": {
        "cliui": "^6.0.0",
        "decamelize": "^1.2.0",
        "find-up": "^4.1.0",
        "get-caller-file": "^2.0.1",
        "require-directory": "^2.1.1",
        "require-main-filename": "^2.0.0",
        "set-blocking": "^2.0.0",
        "string-width": "^4.2.0",
        "which-module": "^2.0.0",
        "y18n": "^4.0.0",
        "yargs-parser": "^18.1.2"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/qrcode/node_modules/yargs-parser": {
      "version": "18.1.3",
      "resolved": "https://registry.npmjs.org/yargs-parser/-/yargs-parser-18.1.3.tgz",
      "integrity": "sha512-o50j0JeToy/4K6OZcaQmW6lyXXKhq7csREXcDwk2omFPJEwUNOVtJKvmDr9EI1fAJZUyZcRF7kxGBWmRXudrCQ==",
      "license": "ISC",
      "dependencies": {
        "camelcase": "^5.0.0",
        "decamelize": "^1.2.0"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/query-string": {
      "version": "7.1.3",
      "resolved": "https://registry.npmjs.org/query-string/-/query-string-7.1.3.tgz",
      "integrity": "sha512-hh2WYhq4fi8+b+/2Kg9CEge4fDPvHS534aOOvOZeQ3+Vf2mCFsaFBYj0i+iXcAq6I9Vzp5fjMFBlONvayDC1qg==",
      "license": "MIT",
      "dependencies": {
        "decode-uri-component": "^0.2.2",
        "filter-obj": "^1.1.0",
        "split-on-first": "^1.0.0",
        "strict-uri-encode": "^2.0.0"
      },
      "engines": {
        "node": ">=6"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/querystringify": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/querystringify/-/querystringify-2.2.0.tgz",
      "integrity": "sha512-FIqgj2EUvTa7R50u0rGsyTftzjYmv/a3hO345bZNrqabNqjtgiDMgmo4mkUjd+nzU5oF3dClKqFIPUKybUyqoQ==",
      "license": "MIT"
    },
    "node_modules/queue-microtask": {
      "version": "1.2.3",
      "resolved": "https://registry.npmjs.org/queue-microtask/-/queue-microtask-1.2.3.tgz",
      "integrity": "sha512-NuaNSa6flKT5JaSYQzJok04JzTL1CA6aGhv5rfLW3PgqA+M2ChpZQnAC8h8i4ZFkBS8X5RqkDBHA7r4hej3K9A==",
      "dev": true,
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ],
      "license": "MIT"
    },
    "node_modules/quick-format-unescaped": {
      "version": "4.0.4",
      "resolved": "https://registry.npmjs.org/quick-format-unescaped/-/quick-format-unescaped-4.0.4.tgz",
      "integrity": "sha512-tYC1Q1hgyRuHgloV/YXs2w15unPVh8qfu/qCTfhTYamaw7fyhumKa2yGpdSo87vY32rIclj+4fWYQXUMs9EHvg==",
      "license": "MIT"
    },
    "node_modules/radix3": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/radix3/-/radix3-1.1.2.tgz",
      "integrity": "sha512-b484I/7b8rDEdSDKckSSBA8knMpcdsXudlE/LNL639wFoHKwLbEkQFZHWEYwDC0wa0FKUcCY+GAF73Z7wxNVFA==",
      "license": "MIT"
    },
    "node_modules/react": {
      "version": "18.3.1",
      "resolved": "https://registry.npmjs.org/react/-/react-18.3.1.tgz",
      "integrity": "sha512-wS+hAgJShR0KhEvPJArfuPVN1+Hz1t0Y6n5jLrGQbkb4urgPE/0Rve+1kMB1v/oWgHgm4WIcV+i7F2pTVj+2iQ==",
      "license": "MIT",
      "dependencies": {
        "loose-envify": "^1.1.0"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/react-composer": {
      "version": "5.0.3",
      "resolved": "https://registry.npmjs.org/react-composer/-/react-composer-5.0.3.tgz",
      "integrity": "sha512-1uWd07EME6XZvMfapwZmc7NgCZqDemcvicRi3wMJzXsQLvZ3L7fTHVyPy1bZdnWXM4iPjYuNE+uJ41MLKeTtnA==",
      "license": "MIT",
      "dependencies": {
        "prop-types": "^15.6.0"
      },
      "peerDependencies": {
        "react": "^15.0.0 || ^16.0.0 || ^17.0.0 || ^18.0.0"
      }
    },
    "node_modules/react-dom": {
      "version": "18.3.1",
      "resolved": "https://registry.npmjs.org/react-dom/-/react-dom-18.3.1.tgz",
      "integrity": "sha512-5m4nQKp+rZRb09LNH59GM4BxTh9251/ylbKIbpe7TpGxfJ+9kv6BLkLBXIjjspbgbnIBNqlI23tRnTWT0snUIw==",
      "license": "MIT",
      "dependencies": {
        "loose-envify": "^1.1.0",
        "scheduler": "^0.23.2"
      },
      "peerDependencies": {
        "react": "^18.3.1"
      }
    },
    "node_modules/react-is": {
      "version": "16.13.1",
      "resolved": "https://registry.npmjs.org/react-is/-/react-is-16.13.1.tgz",
      "integrity": "sha512-24e6ynE2H+OKt4kqsOvNd8kBpV65zoxbA4BVsEOB3ARVWQki/DHzaUoC5KuON/BiccDaCCTZBuOcfZs70kR8bQ==",
      "license": "MIT"
    },
    "node_modules/react-query": {
      "version": "3.39.3",
      "resolved": "https://registry.npmjs.org/react-query/-/react-query-3.39.3.tgz",
      "integrity": "sha512-nLfLz7GiohKTJDuT4us4X3h/8unOh+00MLb2yJoGTPjxKs2bc1iDhkNx2bd5MKklXnOD3NrVZ+J2UXujA5In4g==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.5.5",
        "broadcast-channel": "^3.4.1",
        "match-sorter": "^6.0.2"
      },
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/tannerlinsley"
      },
      "peerDependencies": {
        "react": "^16.8.0 || ^17.0.0 || ^18.0.0"
      },
      "peerDependenciesMeta": {
        "react-dom": {
          "optional": true
        },
        "react-native": {
          "optional": true
        }
      }
    },
    "node_modules/react-reconciler": {
      "version": "0.27.0",
      "resolved": "https://registry.npmjs.org/react-reconciler/-/react-reconciler-0.27.0.tgz",
      "integrity": "sha512-HmMDKciQjYmBRGuuhIaKA1ba/7a+UsM5FzOZsMO2JYHt9Jh8reCb7j1eDC95NOyUlKM9KRyvdx0flBuDvYSBoA==",
      "license": "MIT",
      "dependencies": {
        "loose-envify": "^1.1.0",
        "scheduler": "^0.21.0"
      },
      "engines": {
        "node": ">=0.10.0"
      },
      "peerDependencies": {
        "react": "^18.0.0"
      }
    },
    "node_modules/react-reconciler/node_modules/scheduler": {
      "version": "0.21.0",
      "resolved": "https://registry.npmjs.org/scheduler/-/scheduler-0.21.0.tgz",
      "integrity": "sha512-1r87x5fz9MXqswA2ERLo0EbOAU74DpIUO090gIasYTqlVoJeMcl+Z1Rg7WHz+qtPujhS/hGIt9kxZOYBV3faRQ==",
      "license": "MIT",
      "dependencies": {
        "loose-envify": "^1.1.0"
      }
    },
    "node_modules/react-refresh": {
      "version": "0.17.0",
      "resolved": "https://registry.npmjs.org/react-refresh/-/react-refresh-0.17.0.tgz",
      "integrity": "sha512-z6F7K9bV85EfseRCp2bzrpyQ0Gkw1uLoCel9XBVWPg/TjRj94SkJzUTGfOa4bs7iJvBWtQG0Wq7wnI0syw3EBQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/react-use-measure": {
      "version": "2.1.7",
      "resolved": "https://registry.npmjs.org/react-use-measure/-/react-use-measure-2.1.7.tgz",
      "integrity": "sha512-KrvcAo13I/60HpwGO5jpW7E9DfusKyLPLvuHlUyP5zqnmAPhNc6qTRjUQrdTADl0lpPpDVU2/Gg51UlOGHXbdg==",
      "license": "MIT",
      "peerDependencies": {
        "react": ">=16.13",
        "react-dom": ">=16.13"
      },
      "peerDependenciesMeta": {
        "react-dom": {
          "optional": true
        }
      }
    },
    "node_modules/read-cache": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/read-cache/-/read-cache-1.0.0.tgz",
      "integrity": "sha512-Owdv/Ft7IjOgm/i0xvNDZ1LrRANRfew4b2prF3OWMQLxLfu3bS8FVhCsrSCMK4lR56Y9ya+AThoTpDCTxCmpRA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "pify": "^2.3.0"
      }
    },
    "node_modules/readable-stream": {
      "version": "3.6.2",
      "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-3.6.2.tgz",
      "integrity": "sha512-9u/sniCrY3D5WdsERHzHE4G2YCXqoG5FTHUiCC4SIbr6XcLZBY05ya9EKjYek9O5xOAwjGq+1JdGBAS7Q9ScoA==",
      "license": "MIT",
      "dependencies": {
        "inherits": "^2.0.3",
        "string_decoder": "^1.1.1",
        "util-deprecate": "^1.0.1"
      },
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/readdirp": {
      "version": "3.6.0",
      "resolved": "https://registry.npmjs.org/readdirp/-/readdirp-3.6.0.tgz",
      "integrity": "sha512-hOS089on8RduqdbhvQ5Z37A0ESjsqz6qnRcffsMU3495FuTdqSm+7bhJ29JvIOsBDEEnan5DPu9t3To9VRlMzA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "picomatch": "^2.2.1"
      },
      "engines": {
        "node": ">=8.10.0"
      }
    },
    "node_modules/real-require": {
      "version": "0.1.0",
      "resolved": "https://registry.npmjs.org/real-require/-/real-require-0.1.0.tgz",
      "integrity": "sha512-r/H9MzAWtrv8aSVjPCMFpDMl5q66GqtmmRkRjpHTsp4zBAa+snZyiQNlMONiUmEJcsnaw0wCauJ2GWODr/aFkg==",
      "license": "MIT",
      "engines": {
        "node": ">= 12.13.0"
      }
    },
    "node_modules/redeyed": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/redeyed/-/redeyed-2.1.1.tgz",
      "integrity": "sha512-FNpGGo1DycYAdnrKFxCMmKYgo/mILAqtRYbkdQD8Ep/Hk2PQ5+aEAEx+IU713RTDmuBaH0c8P5ZozurNu5ObRQ==",
      "license": "MIT",
      "dependencies": {
        "esprima": "~4.0.0"
      }
    },
    "node_modules/remove-accents": {
      "version": "0.5.0",
      "resolved": "https://registry.npmjs.org/remove-accents/-/remove-accents-0.5.0.tgz",
      "integrity": "sha512-8g3/Otx1eJaVD12e31UbJj1YzdtVvzH85HV7t+9MJYk/u3XmkOUJ5Ys9wQrf9PCPK8+xn4ymzqYCiZl6QWKn+A==",
      "license": "MIT"
    },
    "node_modules/require-directory": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/require-directory/-/require-directory-2.1.1.tgz",
      "integrity": "sha512-fGxEI7+wsG9xrvdjsrlmL22OMTTiHRwAMroiEeMgq8gzoLC/PQr7RsRDSTLUg/bZAZtF+TVIkHc6/4RIKrui+Q==",
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/require-from-string": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/require-from-string/-/require-from-string-2.0.2.tgz",
      "integrity": "sha512-Xf0nWe6RseziFMu+Ap9biiUbmplq6S9/p+7w7YXP/JBHhrUDDUhwa+vANyubuqfZWTveU//DYVGsDG7RKL/vEw==",
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/require-main-filename": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/require-main-filename/-/require-main-filename-2.0.0.tgz",
      "integrity": "sha512-NKN5kMDylKuldxYLSUfrbo5Tuzh4hd+2E8NPPX02mZtn1VuREQToYe/ZdlJy+J3uCpfaiGF05e7B8W0iXbQHmg==",
      "license": "ISC"
    },
    "node_modules/requires-port": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/requires-port/-/requires-port-1.0.0.tgz",
      "integrity": "sha512-KigOCHcocU3XODJxsu8i/j8T9tzT4adHiecwORRQ0ZZFcp7ahwXuRU1m+yuO90C5ZUyGeGfocHDI14M3L3yDAQ==",
      "license": "MIT"
    },
    "node_modules/resolve": {
      "version": "1.22.10",
      "resolved": "https://registry.npmjs.org/resolve/-/resolve-1.22.10.tgz",
      "integrity": "sha512-NPRy+/ncIMeDlTAsuqwKIiferiawhefFJtkNSW0qZJEqMEb+qBt/77B/jGeeek+F0uOeN05CDa6HXbbIgtVX4w==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "is-core-module": "^2.16.0",
        "path-parse": "^1.0.7",
        "supports-preserve-symlinks-flag": "^1.0.0"
      },
      "bin": {
        "resolve": "bin/resolve"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/resolve-from": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/resolve-from/-/resolve-from-4.0.0.tgz",
      "integrity": "sha512-pb/MYmXstAkysRFx8piNI1tGFNQIFA3vkE3Gq4EuA1dF6gHp/+vgZqsCGJapvy8N3Q+4o7FwvquPJcnZ7RYy4g==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/reusify": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/reusify/-/reusify-1.1.0.tgz",
      "integrity": "sha512-g6QUff04oZpHs0eG5p83rFLhHeV00ug/Yf9nZM6fLeUrPguBTkTQOdpAWWspMh55TZfVQDPaN3NQJfbVRAxdIw==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "iojs": ">=1.0.0",
        "node": ">=0.10.0"
      }
    },
    "node_modules/rimraf": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/rimraf/-/rimraf-3.0.2.tgz",
      "integrity": "sha512-JZkJMZkAGFFPP2YqXZXPbMlMBgsxzE8ILs4lMIX/2o0L9UBw9O/Y3o6wFw/i9YLapcUJWwqbi3kdxIPdC62TIA==",
      "deprecated": "Rimraf versions prior to v4 are no longer supported",
      "license": "ISC",
      "dependencies": {
        "glob": "^7.1.3"
      },
      "bin": {
        "rimraf": "bin.js"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/rollup": {
      "version": "4.44.0",
      "resolved": "https://registry.npmjs.org/rollup/-/rollup-4.44.0.tgz",
      "integrity": "sha512-qHcdEzLCiktQIfwBq420pn2dP+30uzqYxv9ETm91wdt2R9AFcWfjNAmje4NWlnCIQ5RMTzVf0ZyisOKqHR6RwA==",
      "license": "MIT",
      "dependencies": {
        "@types/estree": "1.0.8"
      },
      "bin": {
        "rollup": "dist/bin/rollup"
      },
      "engines": {
        "node": ">=18.0.0",
        "npm": ">=8.0.0"
      },
      "optionalDependencies": {
        "@rollup/rollup-android-arm-eabi": "4.44.0",
        "@rollup/rollup-android-arm64": "4.44.0",
        "@rollup/rollup-darwin-arm64": "4.44.0",
        "@rollup/rollup-darwin-x64": "4.44.0",
        "@rollup/rollup-freebsd-arm64": "4.44.0",
        "@rollup/rollup-freebsd-x64": "4.44.0",
        "@rollup/rollup-linux-arm-gnueabihf": "4.44.0",
        "@rollup/rollup-linux-arm-musleabihf": "4.44.0",
        "@rollup/rollup-linux-arm64-gnu": "4.44.0",
        "@rollup/rollup-linux-arm64-musl": "4.44.0",
        "@rollup/rollup-linux-loongarch64-gnu": "4.44.0",
        "@rollup/rollup-linux-powerpc64le-gnu": "4.44.0",
        "@rollup/rollup-linux-riscv64-gnu": "4.44.0",
        "@rollup/rollup-linux-riscv64-musl": "4.44.0",
        "@rollup/rollup-linux-s390x-gnu": "4.44.0",
        "@rollup/rollup-linux-x64-gnu": "4.44.0",
        "@rollup/rollup-linux-x64-musl": "4.44.0",
        "@rollup/rollup-win32-arm64-msvc": "4.44.0",
        "@rollup/rollup-win32-ia32-msvc": "4.44.0",
        "@rollup/rollup-win32-x64-msvc": "4.44.0",
        "fsevents": "~2.3.2"
      }
    },
    "node_modules/rpc-websockets": {
      "version": "9.1.1",
      "resolved": "https://registry.npmjs.org/rpc-websockets/-/rpc-websockets-9.1.1.tgz",
      "integrity": "sha512-1IXGM/TfPT6nfYMIXkJdzn+L4JEsmb0FL1O2OBjaH03V3yuUDdKFulGLMFG6ErV+8pZ5HVC0limve01RyO+saA==",
      "license": "LGPL-3.0-only",
      "peer": true,
      "dependencies": {
        "@swc/helpers": "^0.5.11",
        "@types/uuid": "^8.3.4",
        "@types/ws": "^8.2.2",
        "buffer": "^6.0.3",
        "eventemitter3": "^5.0.1",
        "uuid": "^8.3.2",
        "ws": "^8.5.0"
      },
      "funding": {
        "type": "paypal",
        "url": "https://paypal.me/kozjak"
      },
      "optionalDependencies": {
        "bufferutil": "^4.0.1",
        "utf-8-validate": "^5.0.2"
      }
    },
    "node_modules/rpc-websockets/node_modules/@types/uuid": {
      "version": "8.3.4",
      "resolved": "https://registry.npmjs.org/@types/uuid/-/uuid-8.3.4.tgz",
      "integrity": "sha512-c/I8ZRb51j+pYGAu5CrFMRxqZ2ke4y2grEBO5AUjgSkSk+qT2Ea+OdWElz/OiMf5MNpn2b17kuVBwZLQJXzihw==",
      "license": "MIT",
      "peer": true
    },
    "node_modules/rpc-websockets/node_modules/@types/ws": {
      "version": "8.18.1",
      "resolved": "https://registry.npmjs.org/@types/ws/-/ws-8.18.1.tgz",
      "integrity": "sha512-ThVF6DCVhA8kUGy+aazFQ4kXQ7E1Ty7A3ypFOe0IcJV8O/M511G99AW24irKrW56Wt44yG9+ij8FaqoBGkuBXg==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "@types/node": "*"
      }
    },
    "node_modules/rpc-websockets/node_modules/uuid": {
      "version": "8.3.2",
      "resolved": "https://registry.npmjs.org/uuid/-/uuid-8.3.2.tgz",
      "integrity": "sha512-+NYs2QeMWy+GWFOEm9xnn6HCDp0l7QBD7ml8zLUmJ+93Q5NF0NocErnwkTkXVFNiX3/fpC6afS8Dhb/gz7R7eg==",
      "license": "MIT",
      "peer": true,
      "bin": {
        "uuid": "dist/bin/uuid"
      }
    },
    "node_modules/rpc-websockets/node_modules/ws": {
      "version": "8.18.2",
      "resolved": "https://registry.npmjs.org/ws/-/ws-8.18.2.tgz",
      "integrity": "sha512-DMricUmwGZUVr++AEAe2uiVM7UoO9MAVZMDu05UQOaUII0lp+zOzLLU4Xqh/JvTqklB1T4uELaaPBKyjE1r4fQ==",
      "license": "MIT",
      "peer": true,
      "engines": {
        "node": ">=10.0.0"
      },
      "peerDependencies": {
        "bufferutil": "^4.0.1",
        "utf-8-validate": ">=5.0.2"
      },
      "peerDependenciesMeta": {
        "bufferutil": {
          "optional": true
        },
        "utf-8-validate": {
          "optional": true
        }
      }
    },
    "node_modules/run-applescript": {
      "version": "7.0.0",
      "resolved": "https://registry.npmjs.org/run-applescript/-/run-applescript-7.0.0.tgz",
      "integrity": "sha512-9by4Ij99JUr/MCFBUkDKLWK3G9HVXmabKz9U5MlIAIuvuzkiOicRYs8XJLxX+xahD+mLiiCYDqF9dKAgtzKP1A==",
      "license": "MIT",
      "peer": true,
      "engines": {
        "node": ">=18"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/run-parallel": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/run-parallel/-/run-parallel-1.2.0.tgz",
      "integrity": "sha512-5l4VyZR86LZ/lDxZTR6jqL8AFE2S0IFLMP26AbjsLVADxHdhB/c0GUsH+y39UfCi3dzz8OlQuPmnaJOMoDHQBA==",
      "dev": true,
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "queue-microtask": "^1.2.2"
      }
    },
    "node_modules/rxjs": {
      "version": "7.5.5",
      "resolved": "https://registry.npmjs.org/rxjs/-/rxjs-7.5.5.tgz",
      "integrity": "sha512-sy+H0pQofO95VDmFLzyaw9xNJU4KTRSwQIGM6+iG3SypAtCiLDzpeG8sJrNCWn2Up9km+KhkvTdbkrdy+yzZdw==",
      "license": "Apache-2.0",
      "dependencies": {
        "tslib": "^2.1.0"
      }
    },
    "node_modules/safe-buffer": {
      "version": "5.2.1",
      "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.2.1.tgz",
      "integrity": "sha512-rp3So07KcdmmKbGvgaNxQSJr7bGVSVk5S9Eq1F+ppbRo70+YeaDxkw5Dd8NPN+GD6bjnYm2VuPuCXmpuYvmCXQ==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ],
      "license": "MIT"
    },
    "node_modules/safe-regex-test": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/safe-regex-test/-/safe-regex-test-1.1.0.tgz",
      "integrity": "sha512-x/+Cz4YrimQxQccJf5mKEbIa1NzeCRNI5Ecl/ekmlYaampdNLPalVyIcCZNNH3MvmqBugV5TMYZXv0ljslUlaw==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "call-bound": "^1.0.2",
        "es-errors": "^1.3.0",
        "is-regex": "^1.2.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/safe-stable-stringify": {
      "version": "2.5.0",
      "resolved": "https://registry.npmjs.org/safe-stable-stringify/-/safe-stable-stringify-2.5.0.tgz",
      "integrity": "sha512-b3rppTKm9T+PsVCBEOUR46GWI7fdOs00VKZ1+9c1EWDaDMvjQc6tUwuFyIprgGgTcWoVHSKrU8H31ZHA2e0RHA==",
      "license": "MIT",
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/safer-buffer": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/safer-buffer/-/safer-buffer-2.1.2.tgz",
      "integrity": "sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg==",
      "license": "MIT"
    },
    "node_modules/scheduler": {
      "version": "0.23.2",
      "resolved": "https://registry.npmjs.org/scheduler/-/scheduler-0.23.2.tgz",
      "integrity": "sha512-UOShsPwz7NrMUqhR6t0hWjFduvOzbtv7toDH1/hIrfRNIDBnnBWd0CwJTGvTpngVlmwGCdP9/Zl/tVrDqcuYzQ==",
      "license": "MIT",
      "dependencies": {
        "loose-envify": "^1.1.0"
      }
    },
    "node_modules/seedrandom": {
      "version": "3.0.5",
      "resolved": "https://registry.npmjs.org/seedrandom/-/seedrandom-3.0.5.tgz",
      "integrity": "sha512-8OwmbklUNzwezjGInmZ+2clQmExQPvomqjL7LFqOYqtmuxRgQYqOD3mHaU+MvZn5FLUeVxVfQjwLZW/n/JFuqg==",
      "license": "MIT"
    },
    "node_modules/semver": {
      "version": "7.7.2",
      "resolved": "https://registry.npmjs.org/semver/-/semver-7.7.2.tgz",
      "integrity": "sha512-RF0Fw+rO5AMf9MAyaRXI4AV0Ulj5lMHqVxxdSgiVbixSCXoEmmX/jk0CuJw4+3SqroYO9VoUh+HcuJivvtJemA==",
      "license": "ISC",
      "bin": {
        "semver": "bin/semver.js"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/set-blocking": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/set-blocking/-/set-blocking-2.0.0.tgz",
      "integrity": "sha512-KiKBS8AnWGEyLzofFfmvKwpdPzqiy16LvQfK3yv/fVH7Bj13/wl3JSR1J+rfgRE9q7xUJK4qvgS8raSOeLUehw==",
      "license": "ISC"
    },
    "node_modules/set-cookie-parser": {
      "version": "2.7.1",
      "resolved": "https://registry.npmjs.org/set-cookie-parser/-/set-cookie-parser-2.7.1.tgz",
      "integrity": "sha512-IOc8uWeOZgnb3ptbCURJWNjWUPcO3ZnTTdzsurqERrP6nPyv+paC55vJM0LpOlT2ne+Ix+9+CRG1MNLlyZ4GjQ==",
      "license": "MIT"
    },
    "node_modules/set-function-length": {
      "version": "1.2.2",
      "resolved": "https://registry.npmjs.org/set-function-length/-/set-function-length-1.2.2.tgz",
      "integrity": "sha512-pgRc4hJ4/sNjWCSS9AmnS40x3bNMDTknHgL5UaMBTMyJnU90EgWh1Rz+MC9eFu4BuN/UwZjKQuY/1v3rM7HMfg==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "define-data-property": "^1.1.4",
        "es-errors": "^1.3.0",
        "function-bind": "^1.1.2",
        "get-intrinsic": "^1.2.4",
        "gopd": "^1.0.1",
        "has-property-descriptors": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/sha256-uint8array": {
      "version": "0.10.7",
      "resolved": "https://registry.npmjs.org/sha256-uint8array/-/sha256-uint8array-0.10.7.tgz",
      "integrity": "sha512-1Q6JQU4tX9NqsDGodej6pkrUVQVNapLZnvkwIhddH/JqzBZF1fSaxSWNY6sziXBE8aEa2twtGkXUrwzGeZCMpQ==",
      "license": "MIT"
    },
    "node_modules/shebang-command": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/shebang-command/-/shebang-command-2.0.0.tgz",
      "integrity": "sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==",
      "license": "MIT",
      "dependencies": {
        "shebang-regex": "^3.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/shebang-regex": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/shebang-regex/-/shebang-regex-3.0.0.tgz",
      "integrity": "sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/signal-exit": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/signal-exit/-/signal-exit-4.1.0.tgz",
      "integrity": "sha512-bzyZ1e88w9O1iNJbKnOlvYTrWPDl46O1bG0D3XInv+9tkPrxrN8jUUTiFlDkkmKWgn1M6CfIA13SuGqOa9Korw==",
      "dev": true,
      "license": "ISC",
      "engines": {
        "node": ">=14"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/socket.io-client": {
      "version": "4.8.1",
      "resolved": "https://registry.npmjs.org/socket.io-client/-/socket.io-client-4.8.1.tgz",
      "integrity": "sha512-hJVXfu3E28NmzGk8o1sHhN3om52tRvwYeidbj7xKy2eIIse5IoKX3USlS6Tqt3BHAtflLIkCQBkzVrEEfWUyYQ==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "@socket.io/component-emitter": "~3.1.0",
        "debug": "~4.3.2",
        "engine.io-client": "~6.6.1",
        "socket.io-parser": "~4.2.4"
      },
      "engines": {
        "node": ">=10.0.0"
      }
    },
    "node_modules/socket.io-client/node_modules/debug": {
      "version": "4.3.7",
      "resolved": "https://registry.npmjs.org/debug/-/debug-4.3.7.tgz",
      "integrity": "sha512-Er2nc/H7RrMXZBFCEim6TCmMk02Z8vLC2Rbi1KEBggpo0fS6l0S1nnapwmIi3yW/+GOJap1Krg4w0Hg80oCqgQ==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "ms": "^2.1.3"
      },
      "engines": {
        "node": ">=6.0"
      },
      "peerDependenciesMeta": {
        "supports-color": {
          "optional": true
        }
      }
    },
    "node_modules/socket.io-parser": {
      "version": "4.2.4",
      "resolved": "https://registry.npmjs.org/socket.io-parser/-/socket.io-parser-4.2.4.tgz",
      "integrity": "sha512-/GbIKmo8ioc+NIWIhwdecY0ge+qVBSMdgxGygevmdHj24bsfgtCmcUUcQ5ZzcylGFHsN3k4HB4Cgkl96KVnuew==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "@socket.io/component-emitter": "~3.1.0",
        "debug": "~4.3.1"
      },
      "engines": {
        "node": ">=10.0.0"
      }
    },
    "node_modules/socket.io-parser/node_modules/debug": {
      "version": "4.3.7",
      "resolved": "https://registry.npmjs.org/debug/-/debug-4.3.7.tgz",
      "integrity": "sha512-Er2nc/H7RrMXZBFCEim6TCmMk02Z8vLC2Rbi1KEBggpo0fS6l0S1nnapwmIi3yW/+GOJap1Krg4w0Hg80oCqgQ==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "ms": "^2.1.3"
      },
      "engines": {
        "node": ">=6.0"
      },
      "peerDependenciesMeta": {
        "supports-color": {
          "optional": true
        }
      }
    },
    "node_modules/sonic-boom": {
      "version": "2.8.0",
      "resolved": "https://registry.npmjs.org/sonic-boom/-/sonic-boom-2.8.0.tgz",
      "integrity": "sha512-kuonw1YOYYNOve5iHdSahXPOK49GqwA+LZhI6Wz/l0rP57iKyXXIHaRagOBHAPmGwJC6od2Z9zgvZ5loSgMlVg==",
      "license": "MIT",
      "dependencies": {
        "atomic-sleep": "^1.0.0"
      }
    },
    "node_modules/source-map-js": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/source-map-js/-/source-map-js-1.2.1.tgz",
      "integrity": "sha512-UXWMKhLOwVKb728IUtQPXxfYU+usdybtUrK/8uGE8CQMvrhOpwvzDBwj0QhSL7MQc7vIsISBG8VQ8+IDQxpfQA==",
      "license": "BSD-3-Clause",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/split-on-first": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/split-on-first/-/split-on-first-1.1.0.tgz",
      "integrity": "sha512-43ZssAJaMusuKWL8sKUBQXHWOpq8d6CfN/u1p4gUzfJkM05C8rxTmYrkIPTXapZpORA6LkkzcUulJ8FqA7Uudw==",
      "license": "MIT",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/split2": {
      "version": "4.2.0",
      "resolved": "https://registry.npmjs.org/split2/-/split2-4.2.0.tgz",
      "integrity": "sha512-UcjcJOWknrNkF6PLX83qcHM6KHgVKNkV62Y8a5uYDVv9ydGQVwAHMKqHdJje1VTWpljG0WYpCDhrCdAOYH4TWg==",
      "license": "ISC",
      "engines": {
        "node": ">= 10.x"
      }
    },
    "node_modules/starknet": {
      "version": "6.23.1",
      "resolved": "https://registry.npmjs.org/starknet/-/starknet-6.23.1.tgz",
      "integrity": "sha512-vQV9luXpmwZZs9RVZaRwm2iD8T0PYx1AzgZeQsCvD89tR0HwUF0paty27ZzuJrdPe0CmAs/ipAYFCE55jbj0RQ==",
      "license": "MIT",
      "dependencies": {
        "@noble/curves": "1.7.0",
        "@noble/hashes": "1.6.0",
        "@scure/base": "1.2.1",
        "@scure/starknet": "1.1.0",
        "abi-wan-kanabi": "^2.2.3",
        "fetch-cookie": "~3.0.0",
        "isomorphic-fetch": "~3.0.0",
        "lossless-json": "^4.0.1",
        "pako": "^2.0.4",
        "starknet-types-07": "npm:@starknet-io/types-js@^0.7.10",
        "ts-mixer": "^6.0.3"
      }
    },
    "node_modules/starknet-types-07": {
      "name": "@starknet-io/types-js",
      "version": "0.7.10",
      "resolved": "https://registry.npmjs.org/@starknet-io/types-js/-/types-js-0.7.10.tgz",
      "integrity": "sha512-1VtCqX4AHWJlRRSYGSn+4X1mqolI1Tdq62IwzoU2vUuEE72S1OlEeGhpvd6XsdqXcfHmVzYfj8k1XtKBQqwo9w==",
      "license": "MIT"
    },
    "node_modules/starknet/node_modules/@noble/curves": {
      "version": "1.7.0",
      "resolved": "https://registry.npmjs.org/@noble/curves/-/curves-1.7.0.tgz",
      "integrity": "sha512-UTMhXK9SeDhFJVrHeUJ5uZlI6ajXg10O6Ddocf9S6GjbSBVZsJo88HzKwXznNfGpMTRDyJkqMjNDPYgf0qFWnw==",
      "license": "MIT",
      "dependencies": {
        "@noble/hashes": "1.6.0"
      },
      "engines": {
        "node": "^14.21.3 || >=16"
      },
      "funding": {
        "url": "https://paulmillr.com/funding/"
      }
    },
    "node_modules/starknet/node_modules/@noble/hashes": {
      "version": "1.6.0",
      "resolved": "https://registry.npmjs.org/@noble/hashes/-/hashes-1.6.0.tgz",
      "integrity": "sha512-YUULf0Uk4/mAA89w+k3+yUYh6NrEvxZa5T6SY3wlMvE2chHkxFUUIDI8/XW1QSC357iA5pSnqt7XEhvFOqmDyQ==",
      "license": "MIT",
      "engines": {
        "node": "^14.21.3 || >=16"
      },
      "funding": {
        "url": "https://paulmillr.com/funding/"
      }
    },
    "node_modules/starknet/node_modules/@scure/base": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/@scure/base/-/base-1.2.1.tgz",
      "integrity": "sha512-DGmGtC8Tt63J5GfHgfl5CuAXh96VF/LD8K9Hr/Gv0J2lAoRGlPOMpqMpMbCTOoOJMZCk2Xt+DskdDyn6dEFdzQ==",
      "license": "MIT",
      "funding": {
        "url": "https://paulmillr.com/funding/"
      }
    },
    "node_modules/starknetkit": {
      "version": "2.10.4",
      "resolved": "https://registry.npmjs.org/starknetkit/-/starknetkit-2.10.4.tgz",
      "integrity": "sha512-POdv8GdGzBmwgMxn+FQhGXxcc4kFY6tnCHoB/c3j5vigZO2fLVxi5tJX9nYsITRX7QzoV3yal7W5e2agJ4SFSA==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "@starknet-io/get-starknet": "^4.0.6",
        "@starknet-io/get-starknet-core": "^4.0.6",
        "@starknet-io/types-js": "^0.7.10",
        "@trpc/client": "^10.38.1",
        "@trpc/server": "^10.38.1",
        "@walletconnect/sign-client": "^2.11.0",
        "bowser": "^2.11.0",
        "detect-browser": "^5.3.0",
        "eventemitter3": "^5.0.1",
        "events": "^3.3.0",
        "lodash-es": "^4.17.21",
        "svelte-forms": "^2.3.1",
        "trpc-browser": "^1.3.2"
      },
      "peerDependencies": {
        "starknet": "^6.21.1"
      }
    },
    "node_modules/stats-gl": {
      "version": "2.4.2",
      "resolved": "https://registry.npmjs.org/stats-gl/-/stats-gl-2.4.2.tgz",
      "integrity": "sha512-g5O9B0hm9CvnM36+v7SFl39T7hmAlv541tU81ME8YeSb3i1CIP5/QdDeSB3A0la0bKNHpxpwxOVRo2wFTYEosQ==",
      "license": "MIT",
      "dependencies": {
        "@types/three": "*",
        "three": "^0.170.0"
      },
      "peerDependencies": {
        "@types/three": "*",
        "three": "*"
      }
    },
    "node_modules/stats-gl/node_modules/three": {
      "version": "0.170.0",
      "resolved": "https://registry.npmjs.org/three/-/three-0.170.0.tgz",
      "integrity": "sha512-FQK+LEpYc0fBD+J8g6oSEyyNzjp+Q7Ks1C568WWaoMRLW+TkNNWmenWeGgJjV105Gd+p/2ql1ZcjYvNiPZBhuQ==",
      "license": "MIT"
    },
    "node_modules/stats.js": {
      "version": "0.17.0",
      "resolved": "https://registry.npmjs.org/stats.js/-/stats.js-0.17.0.tgz",
      "integrity": "sha512-hNKz8phvYLPEcRkeG1rsGmV5ChMjKDAWU7/OJJdDErPBNChQXxCo3WZurGpnWc6gZhAzEPFad1aVgyOANH1sMw==",
      "license": "MIT"
    },
    "node_modules/stream-chain": {
      "version": "2.2.5",
      "resolved": "https://registry.npmjs.org/stream-chain/-/stream-chain-2.2.5.tgz",
      "integrity": "sha512-1TJmBx6aSWqZ4tx7aTpBDXK0/e2hhcNSTV8+CbFJtDjbb+I1mZ8lHit0Grw9GRT+6JbIrrDd8esncgBi8aBXGA==",
      "license": "BSD-3-Clause",
      "peer": true
    },
    "node_modules/stream-json": {
      "version": "1.9.1",
      "resolved": "https://registry.npmjs.org/stream-json/-/stream-json-1.9.1.tgz",
      "integrity": "sha512-uWkjJ+2Nt/LO9Z/JyKZbMusL8Dkh97uUBTv3AJQ74y07lVahLY4eEFsPsE97pxYBwr8nnjMAIch5eqI0gPShyw==",
      "license": "BSD-3-Clause",
      "peer": true,
      "dependencies": {
        "stream-chain": "^2.2.5"
      }
    },
    "node_modules/stream-shift": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/stream-shift/-/stream-shift-1.0.3.tgz",
      "integrity": "sha512-76ORR0DO1o1hlKwTbi/DM3EXWGf3ZJYO8cXX5RJwnul2DEg2oyoZyjLNoQM8WsvZiFKCRfC1O0J7iCvie3RZmQ==",
      "license": "MIT"
    },
    "node_modules/strict-uri-encode": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/strict-uri-encode/-/strict-uri-encode-2.0.0.tgz",
      "integrity": "sha512-QwiXZgpRcKkhTj2Scnn++4PKtWsH0kpzZ62L2R6c/LUVYv7hVnZqcg2+sMuT6R7Jusu1vviK/MFsu6kNJfWlEQ==",
      "license": "MIT",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/string_decoder": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.3.0.tgz",
      "integrity": "sha512-hkRX8U1WjJFd8LsDJ2yQ/wWWxaopEsABU1XfkM8A+j0+85JAGppt16cr1Whg6KIbb4okU6Mql6BOj+uup/wKeA==",
      "license": "MIT",
      "dependencies": {
        "safe-buffer": "~5.2.0"
      }
    },
    "node_modules/string-width": {
      "version": "4.2.3",
      "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
      "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
      "license": "MIT",
      "dependencies": {
        "emoji-regex": "^8.0.0",
        "is-fullwidth-code-point": "^3.0.0",
        "strip-ansi": "^6.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/string-width-cjs": {
      "name": "string-width",
      "version": "4.2.3",
      "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
      "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "emoji-regex": "^8.0.0",
        "is-fullwidth-code-point": "^3.0.0",
        "strip-ansi": "^6.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/strip-ansi": {
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
      "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
      "license": "MIT",
      "dependencies": {
        "ansi-regex": "^5.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/strip-ansi-cjs": {
      "name": "strip-ansi",
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
      "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "ansi-regex": "^5.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/strip-json-comments": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/strip-json-comments/-/strip-json-comments-3.1.1.tgz",
      "integrity": "sha512-6fPc+R4ihwqP6N/aIv2f1gMH8lOVtWQHoqC4yK6oSDVVocumAsfCqjkXnqiYMhmMwS/mEHLp7Vehlt3ql6lEig==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/sucrase": {
      "version": "3.35.0",
      "resolved": "https://registry.npmjs.org/sucrase/-/sucrase-3.35.0.tgz",
      "integrity": "sha512-8EbVDiu9iN/nESwxeSxDKe0dunta1GOlHufmSSXxMD2z2/tMZpDMpvXQGsc+ajGo8y2uYUmixaSRUc/QPoQ0GA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@jridgewell/gen-mapping": "^0.3.2",
        "commander": "^4.0.0",
        "glob": "^10.3.10",
        "lines-and-columns": "^1.1.6",
        "mz": "^2.7.0",
        "pirates": "^4.0.1",
        "ts-interface-checker": "^0.1.9"
      },
      "bin": {
        "sucrase": "bin/sucrase",
        "sucrase-node": "bin/sucrase-node"
      },
      "engines": {
        "node": ">=16 || 14 >=14.17"
      }
    },
    "node_modules/sucrase/node_modules/brace-expansion": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-2.0.2.tgz",
      "integrity": "sha512-Jt0vHyM+jmUBqojB7E1NIYadt0vI0Qxjxd2TErW94wDz+E2LAm5vKMXXwg6ZZBTHPuUlDgQHKXvjGBdfcF1ZDQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "balanced-match": "^1.0.0"
      }
    },
    "node_modules/sucrase/node_modules/commander": {
      "version": "4.1.1",
      "resolved": "https://registry.npmjs.org/commander/-/commander-4.1.1.tgz",
      "integrity": "sha512-NOKm8xhkzAjzFx8B2v5OAHT+u5pRQc2UCa2Vq9jYL/31o2wi9mxBA7LIFs3sV5VSC49z6pEhfbMULvShKj26WA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/sucrase/node_modules/glob": {
      "version": "10.4.5",
      "resolved": "https://registry.npmjs.org/glob/-/glob-10.4.5.tgz",
      "integrity": "sha512-7Bv8RF0k6xjo7d4A/PxYLbUCfb6c+Vpd2/mB2yRDlew7Jb5hEXiCD9ibfO7wpk8i4sevK6DFny9h7EYbM3/sHg==",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "foreground-child": "^3.1.0",
        "jackspeak": "^3.1.2",
        "minimatch": "^9.0.4",
        "minipass": "^7.1.2",
        "package-json-from-dist": "^1.0.0",
        "path-scurry": "^1.11.1"
      },
      "bin": {
        "glob": "dist/esm/bin.mjs"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/sucrase/node_modules/minimatch": {
      "version": "9.0.5",
      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-9.0.5.tgz",
      "integrity": "sha512-G6T0ZX48xgozx7587koeX9Ys2NYy6Gmv//P89sEte9V9whIapMNF4idKxnW2QtCcLiTWlb/wfCabAtAFWhhBow==",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "brace-expansion": "^2.0.1"
      },
      "engines": {
        "node": ">=16 || 14 >=14.17"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/superstruct": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/superstruct/-/superstruct-2.0.2.tgz",
      "integrity": "sha512-uV+TFRZdXsqXTL2pRvujROjdZQ4RAlBUS5BTh9IGm+jTqQntYThciG/qu57Gs69yjnVUSqdxF9YLmSnpupBW9A==",
      "license": "MIT",
      "peer": true,
      "engines": {
        "node": ">=14.0.0"
      }
    },
    "node_modules/supports-color": {
      "version": "7.2.0",
      "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz",
      "integrity": "sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "has-flag": "^4.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/supports-preserve-symlinks-flag": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/supports-preserve-symlinks-flag/-/supports-preserve-symlinks-flag-1.0.0.tgz",
      "integrity": "sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/suspend-react": {
      "version": "0.1.3",
      "resolved": "https://registry.npmjs.org/suspend-react/-/suspend-react-0.1.3.tgz",
      "integrity": "sha512-aqldKgX9aZqpoDp3e8/BZ8Dm7x1pJl+qI3ZKxDN0i/IQTWUwBx/ManmlVJ3wowqbno6c2bmiIfs+Um6LbsjJyQ==",
      "license": "MIT",
      "peerDependencies": {
        "react": ">=17.0"
      }
    },
    "node_modules/svelte-forms": {
      "version": "2.3.1",
      "resolved": "https://registry.npmjs.org/svelte-forms/-/svelte-forms-2.3.1.tgz",
      "integrity": "sha512-ExX9PM0JgvdOWlHl2ztD7XzLNPOPt9U5hBKV8sUAisMfcYWpPRnyz+6EFmh35BOBGJJmuhTDBGm5/7seLjOTIA==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "is-promise": "^4.0.0"
      }
    },
    "node_modules/swr": {
      "version": "2.3.3",
      "resolved": "https://registry.npmjs.org/swr/-/swr-2.3.3.tgz",
      "integrity": "sha512-dshNvs3ExOqtZ6kJBaAsabhPdHyeY4P2cKwRCniDVifBMoG/SVI7tfLWqPXriVspf2Rg4tPzXJTnwaihIeFw2A==",
      "license": "MIT",
      "dependencies": {
        "dequal": "^2.0.3",
        "use-sync-external-store": "^1.4.0"
      },
      "peerDependencies": {
        "react": "^16.11.0 || ^17.0.0 || ^18.0.0 || ^19.0.0"
      }
    },
    "node_modules/tailwind-merge": {
      "version": "3.3.1",
      "resolved": "https://registry.npmjs.org/tailwind-merge/-/tailwind-merge-3.3.1.tgz",
      "integrity": "sha512-gBXpgUm/3rp1lMZZrM/w7D8GKqshif0zAymAhbCyIt8KMe+0v9DQ7cdYLR4FHH/cKpdTXb+A/tKKU3eolfsI+g==",
      "license": "MIT",
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/dcastil"
      }
    },
    "node_modules/tailwindcss": {
      "version": "3.4.17",
      "resolved": "https://registry.npmjs.org/tailwindcss/-/tailwindcss-3.4.17.tgz",
      "integrity": "sha512-w33E2aCvSDP0tW9RZuNXadXlkHXqFzSkQew/aIa2i/Sj8fThxwovwlXHSPXTbAHwEIhBFXAedUhP2tueAKP8Og==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@alloc/quick-lru": "^5.2.0",
        "arg": "^5.0.2",
        "chokidar": "^3.6.0",
        "didyoumean": "^1.2.2",
        "dlv": "^1.1.3",
        "fast-glob": "^3.3.2",
        "glob-parent": "^6.0.2",
        "is-glob": "^4.0.3",
        "jiti": "^1.21.6",
        "lilconfig": "^3.1.3",
        "micromatch": "^4.0.8",
        "normalize-path": "^3.0.0",
        "object-hash": "^3.0.0",
        "picocolors": "^1.1.1",
        "postcss": "^8.4.47",
        "postcss-import": "^15.1.0",
        "postcss-js": "^4.0.1",
        "postcss-load-config": "^4.0.2",
        "postcss-nested": "^6.2.0",
        "postcss-selector-parser": "^6.1.2",
        "resolve": "^1.22.8",
        "sucrase": "^3.35.0"
      },
      "bin": {
        "tailwind": "lib/cli.js",
        "tailwindcss": "lib/cli.js"
      },
      "engines": {
        "node": ">=14.0.0"
      }
    },
    "node_modules/text-encoding-utf-8": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/text-encoding-utf-8/-/text-encoding-utf-8-1.0.2.tgz",
      "integrity": "sha512-8bw4MY9WjdsD2aMtO0OzOCY3pXGYNx2d2FfHRVUKkiCPDWjKuOlhLVASS+pD7VkLTVjW268LYJHwsnPFlBpbAg==",
      "peer": true
    },
    "node_modules/thenify": {
      "version": "3.3.1",
      "resolved": "https://registry.npmjs.org/thenify/-/thenify-3.3.1.tgz",
      "integrity": "sha512-RVZSIV5IG10Hk3enotrhvz0T9em6cyHBLkH/YAZuKqd8hRkKhSfCGIcP2KUY0EPxndzANBmNllzWPwak+bheSw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "any-promise": "^1.0.0"
      }
    },
    "node_modules/thenify-all": {
      "version": "1.6.0",
      "resolved": "https://registry.npmjs.org/thenify-all/-/thenify-all-1.6.0.tgz",
      "integrity": "sha512-RNxQH/qI8/t3thXJDwcstUO4zeqo64+Uy/+sNVRBx4Xn2OX+OZ9oP+iJnNFqplFra2ZUVeKCSa2oVWi3T4uVmA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "thenify": ">= 3.1.0 < 4"
      },
      "engines": {
        "node": ">=0.8"
      }
    },
    "node_modules/thread-stream": {
      "version": "0.15.2",
      "resolved": "https://registry.npmjs.org/thread-stream/-/thread-stream-0.15.2.tgz",
      "integrity": "sha512-UkEhKIg2pD+fjkHQKyJO3yoIvAP3N6RlNFt2dUhcS1FGvCD1cQa1M/PGknCLFIyZdtJOWQjejp7bdNqmN7zwdA==",
      "license": "MIT",
      "dependencies": {
        "real-require": "^0.1.0"
      }
    },
    "node_modules/three": {
      "version": "0.158.0",
      "resolved": "https://registry.npmjs.org/three/-/three-0.158.0.tgz",
      "integrity": "sha512-TALj4EOpdDPF1henk2Q+s17K61uEAAWQ7TJB68nr7FKxqwyDr3msOt5IWdbGm4TaWKjrtWS8DJJWe9JnvsWOhQ==",
      "license": "MIT"
    },
    "node_modules/three-mesh-bvh": {
      "version": "0.7.8",
      "resolved": "https://registry.npmjs.org/three-mesh-bvh/-/three-mesh-bvh-0.7.8.tgz",
      "integrity": "sha512-BGEZTOIC14U0XIRw3tO4jY7IjP7n7v24nv9JXS1CyeVRWOCkcOMhRnmENUjuV39gktAw4Ofhr0OvIAiTspQrrw==",
      "deprecated": "Deprecated due to three.js version incompatibility. Please use v0.8.0, instead.",
      "license": "MIT",
      "peerDependencies": {
        "three": ">= 0.151.0"
      }
    },
    "node_modules/three-stdlib": {
      "version": "2.36.0",
      "resolved": "https://registry.npmjs.org/three-stdlib/-/three-stdlib-2.36.0.tgz",
      "integrity": "sha512-kv0Byb++AXztEGsULgMAs8U2jgUdz6HPpAB/wDJnLiLlaWQX2APHhiTJIN7rqW+Of0eRgcp7jn05U1BsCP3xBA==",
      "license": "MIT",
      "dependencies": {
        "@types/draco3d": "^1.4.0",
        "@types/offscreencanvas": "^2019.6.4",
        "@types/webxr": "^0.5.2",
        "draco3d": "^1.4.1",
        "fflate": "^0.6.9",
        "potpack": "^1.0.1"
      },
      "peerDependencies": {
        "three": ">=0.128.0"
      }
    },
    "node_modules/three-stdlib/node_modules/fflate": {
      "version": "0.6.10",
      "resolved": "https://registry.npmjs.org/fflate/-/fflate-0.6.10.tgz",
      "integrity": "sha512-IQrh3lEPM93wVCEczc9SaAOvkmcoQn/G8Bo1e8ZPlY3X3bnAxWaBdvTdvM1hP62iZp0BXWDy4vTAy4fF0+Dlpg==",
      "license": "MIT"
    },
    "node_modules/tiny-emitter": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/tiny-emitter/-/tiny-emitter-2.1.0.tgz",
      "integrity": "sha512-NB6Dk1A9xgQPMoGqC5CVXn123gWyte215ONT5Pp5a0yt4nlEoO1ZWeCwpncaekPHXO60i47ihFnZPiRPjRMq4Q==",
      "license": "MIT"
    },
    "node_modules/to-regex-range": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/to-regex-range/-/to-regex-range-5.0.1.tgz",
      "integrity": "sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "is-number": "^7.0.0"
      },
      "engines": {
        "node": ">=8.0"
      }
    },
    "node_modules/tough-cookie": {
      "version": "4.1.4",
      "resolved": "https://registry.npmjs.org/tough-cookie/-/tough-cookie-4.1.4.tgz",
      "integrity": "sha512-Loo5UUvLD9ScZ6jh8beX1T6sO1w2/MpCRpEP7V280GKMVUQ0Jzar2U3UJPsrdbziLEMMhu3Ujnq//rhiFuIeag==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "psl": "^1.1.33",
        "punycode": "^2.1.1",
        "universalify": "^0.2.0",
        "url-parse": "^1.5.3"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/tough-cookie/node_modules/universalify": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/universalify/-/universalify-0.2.0.tgz",
      "integrity": "sha512-CJ1QgKmNg3CwvAv/kOFmtnEN05f0D/cn9QntgNOQlQF9dgvVTHj3t+8JPdjqawCHk7V/KA+fbUqzZ9XWhcqPUg==",
      "license": "MIT",
      "engines": {
        "node": ">= 4.0.0"
      }
    },
    "node_modules/tr46": {
      "version": "0.0.3",
      "resolved": "https://registry.npmjs.org/tr46/-/tr46-0.0.3.tgz",
      "integrity": "sha512-N3WMsuqV66lT30CrXNbEjx4GEwlow3v6rr4mCcv6prnfwhS01rkgyFdjPNBYd9br7LpXV1+Emh01fHnq2Gdgrw==",
      "license": "MIT"
    },
    "node_modules/troika-three-text": {
      "version": "0.52.4",
      "resolved": "https://registry.npmjs.org/troika-three-text/-/troika-three-text-0.52.4.tgz",
      "integrity": "sha512-V50EwcYGruV5rUZ9F4aNsrytGdKcXKALjEtQXIOBfhVoZU9VAqZNIoGQ3TMiooVqFAbR1w15T+f+8gkzoFzawg==",
      "license": "MIT",
      "dependencies": {
        "bidi-js": "^1.0.2",
        "troika-three-utils": "^0.52.4",
        "troika-worker-utils": "^0.52.0",
        "webgl-sdf-generator": "1.1.1"
      },
      "peerDependencies": {
        "three": ">=0.125.0"
      }
    },
    "node_modules/troika-three-utils": {
      "version": "0.52.4",
      "resolved": "https://registry.npmjs.org/troika-three-utils/-/troika-three-utils-0.52.4.tgz",
      "integrity": "sha512-NORAStSVa/BDiG52Mfudk4j1FG4jC4ILutB3foPnfGbOeIs9+G5vZLa0pnmnaftZUGm4UwSoqEpWdqvC7zms3A==",
      "license": "MIT",
      "peerDependencies": {
        "three": ">=0.125.0"
      }
    },
    "node_modules/troika-worker-utils": {
      "version": "0.52.0",
      "resolved": "https://registry.npmjs.org/troika-worker-utils/-/troika-worker-utils-0.52.0.tgz",
      "integrity": "sha512-W1CpvTHykaPH5brv5VHLfQo9D1OYuo0cSBEUQFFT/nBUzM8iD6Lq2/tgG/f1OelbAS1WtaTPQzE5uM49egnngw==",
      "license": "MIT"
    },
    "node_modules/trpc-browser": {
      "version": "1.4.4",
      "resolved": "https://registry.npmjs.org/trpc-browser/-/trpc-browser-1.4.4.tgz",
      "integrity": "sha512-5ZH/LqSoF008W8KU+4tfQ+g3F4Yl6BywDUnSlx5jT6fKa87mm8PkIXfhjGN1k6LoxjpMjy82bxvQzNLkJ3vUvw==",
      "license": "MIT",
      "peer": true,
      "workspaces": [
        ".",
        "examples/with-plasmo"
      ],
      "peerDependencies": {
        "@trpc/client": "^10.0.0",
        "@trpc/server": "^10.0.0"
      }
    },
    "node_modules/ts-api-utils": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/ts-api-utils/-/ts-api-utils-2.1.0.tgz",
      "integrity": "sha512-CUgTZL1irw8u29bzrOD/nH85jqyc74D6SshFgujOIA7osm2Rz7dYH77agkx7H4FBNxDq7Cjf+IjaX/8zwFW+ZQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=18.12"
      },
      "peerDependencies": {
        "typescript": ">=4.8.4"
      }
    },
    "node_modules/ts-interface-checker": {
      "version": "0.1.13",
      "resolved": "https://registry.npmjs.org/ts-interface-checker/-/ts-interface-checker-0.1.13.tgz",
      "integrity": "sha512-Y/arvbn+rrz3JCKl9C4kVNfTfSm2/mEp5FSz5EsZSANGPSlQrpRI5M4PKF+mJnE52jOO90PnPSc3Ur3bTQw0gA==",
      "dev": true,
      "license": "Apache-2.0"
    },
    "node_modules/ts-mixer": {
      "version": "6.0.4",
      "resolved": "https://registry.npmjs.org/ts-mixer/-/ts-mixer-6.0.4.tgz",
      "integrity": "sha512-ufKpbmrugz5Aou4wcr5Wc1UUFWOLhq+Fm6qa6P0w0K5Qw2yhaUoiWszhCVuNQyNwrlGiscHOmqYoAox1PtvgjA==",
      "license": "MIT"
    },
    "node_modules/tslib": {
      "version": "2.8.1",
      "resolved": "https://registry.npmjs.org/tslib/-/tslib-2.8.1.tgz",
      "integrity": "sha512-oJFu94HQb+KVduSUQL7wnpmqnfmLsOA/nAh6b6EH0wCEoK0/mPeXU6c3wKDV83MkOuHPRHtSXKKU99IBazS/2w==",
      "license": "0BSD"
    },
    "node_modules/tunnel-rat": {
      "version": "0.1.2",
      "resolved": "https://registry.npmjs.org/tunnel-rat/-/tunnel-rat-0.1.2.tgz",
      "integrity": "sha512-lR5VHmkPhzdhrM092lI2nACsLO4QubF0/yoOhzX7c+wIpbN1GjHNzCc91QlpxBi+cnx8vVJ+Ur6vL5cEoQPFpQ==",
      "license": "MIT",
      "dependencies": {
        "zustand": "^4.3.2"
      }
    },
    "node_modules/type-check": {
      "version": "0.4.0",
      "resolved": "https://registry.npmjs.org/type-check/-/type-check-0.4.0.tgz",
      "integrity": "sha512-XleUoc9uwGXqjWwXaUTZAmzMcFZ5858QA2vvx1Ur5xIcixXIP+8LnFDgRplU30us6teqdlskFfu+ae4K79Ooew==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "prelude-ls": "^1.2.1"
      },
      "engines": {
        "node": ">= 0.8.0"
      }
    },
    "node_modules/typed-function": {
      "version": "4.2.1",
      "resolved": "https://registry.npmjs.org/typed-function/-/typed-function-4.2.1.tgz",
      "integrity": "sha512-EGjWssW7Tsk4DGfE+5yluuljS1OGYWiI1J6e8puZz9nTMM51Oug8CD5Zo4gWMsOhq5BI+1bF+rWTm4Vbj3ivRA==",
      "license": "MIT",
      "engines": {
        "node": ">= 18"
      }
    },
    "node_modules/typescript": {
      "version": "5.8.3",
      "resolved": "https://registry.npmjs.org/typescript/-/typescript-5.8.3.tgz",
      "integrity": "sha512-p1diW6TqL9L07nNxvRMM7hMMw4c5XOo/1ibL4aAIGmSAt9slTE1Xgw5KWuof2uTOvCg9BY7ZRi+GaF+7sfgPeQ==",
      "license": "Apache-2.0",
      "bin": {
        "tsc": "bin/tsc",
        "tsserver": "bin/tsserver"
      },
      "engines": {
        "node": ">=14.17"
      }
    },
    "node_modules/typescript-eslint": {
      "version": "8.34.1",
      "resolved": "https://registry.npmjs.org/typescript-eslint/-/typescript-eslint-8.34.1.tgz",
      "integrity": "sha512-XjS+b6Vg9oT1BaIUfkW3M3LvqZE++rbzAMEHuccCfO/YkP43ha6w3jTEMilQxMF92nVOYCcdjv1ZUhAa1D/0ow==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@typescript-eslint/eslint-plugin": "8.34.1",
        "@typescript-eslint/parser": "8.34.1",
        "@typescript-eslint/utils": "8.34.1"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/typescript-eslint"
      },
      "peerDependencies": {
        "eslint": "^8.57.0 || ^9.0.0",
        "typescript": ">=4.8.4 <5.9.0"
      }
    },
    "node_modules/ufo": {
      "version": "1.6.1",
      "resolved": "https://registry.npmjs.org/ufo/-/ufo-1.6.1.tgz",
      "integrity": "sha512-9a4/uxlTWJ4+a5i0ooc1rU7C7YOw3wT+UGqdeNNHWnOF9qcMBgLRS+4IYUqbczewFx4mLEig6gawh7X6mFlEkA==",
      "license": "MIT"
    },
    "node_modules/uint8arrays": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/uint8arrays/-/uint8arrays-3.1.1.tgz",
      "integrity": "sha512-+QJa8QRnbdXVpHYjLoTpJIdCTiw9Ir62nocClWuXIq2JIh4Uta0cQsTSpFL678p2CN8B+XSApwcU+pQEqVpKWg==",
      "license": "MIT",
      "dependencies": {
        "multiformats": "^9.4.2"
      }
    },
    "node_modules/uncrypto": {
      "version": "0.1.3",
      "resolved": "https://registry.npmjs.org/uncrypto/-/uncrypto-0.1.3.tgz",
      "integrity": "sha512-Ql87qFHB3s/De2ClA9e0gsnS6zXG27SkTiSJwjCc9MebbfapQfuPzumMIUMi38ezPZVNFcHI9sUIepeQfw8J8Q==",
      "license": "MIT"
    },
    "node_modules/undici-types": {
      "version": "6.21.0",
      "resolved": "https://registry.npmjs.org/undici-types/-/undici-types-6.21.0.tgz",
      "integrity": "sha512-iwDZqg0QAGrg9Rav5H4n0M64c3mkR59cJ6wQp+7C4nI0gsmExaedaYLNO44eT4AtBBwjbTiGPMlt2Md0T9H9JQ==",
      "license": "MIT"
    },
    "node_modules/universalify": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/universalify/-/universalify-2.0.1.tgz",
      "integrity": "sha512-gptHNQghINnc/vTGIk0SOFGFNXw7JVrlRUtConJRlvaw6DuX0wO5Jeko9sWrMBhh+PsYAZ7oXAiOnf/UKogyiw==",
      "license": "MIT",
      "engines": {
        "node": ">= 10.0.0"
      }
    },
    "node_modules/unload": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/unload/-/unload-2.2.0.tgz",
      "integrity": "sha512-B60uB5TNBLtN6/LsgAf3udH9saB5p7gqJwcFfbOEZ8BcBHnGwCf6G/TGiEqkRAxX7zAFIUtzdrXQSdL3Q/wqNA==",
      "license": "Apache-2.0",
      "dependencies": {
        "@babel/runtime": "^7.6.2",
        "detect-node": "^2.0.4"
      }
    },
    "node_modules/update-browserslist-db": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/update-browserslist-db/-/update-browserslist-db-1.1.3.tgz",
      "integrity": "sha512-UxhIZQ+QInVdunkDAaiazvvT/+fXL5Osr0JZlJulepYu6Jd7qJtDZjlur0emRlT71EN3ScPoE7gvsuIKKNavKw==",
      "dev": true,
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/browserslist"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/browserslist"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "escalade": "^3.2.0",
        "picocolors": "^1.1.1"
      },
      "bin": {
        "update-browserslist-db": "cli.js"
      },
      "peerDependencies": {
        "browserslist": ">= 4.21.0"
      }
    },
    "node_modules/uri-js": {
      "version": "4.4.1",
      "resolved": "https://registry.npmjs.org/uri-js/-/uri-js-4.4.1.tgz",
      "integrity": "sha512-7rKUyy33Q1yc98pQ1DAmLtwX109F7TIfWlW1Ydo8Wl1ii1SeHieeh0HHfPeL2fMXK6z0s8ecKs9frCuLJvndBg==",
      "dev": true,
      "license": "BSD-2-Clause",
      "dependencies": {
        "punycode": "^2.1.0"
      }
    },
    "node_modules/url-parse": {
      "version": "1.5.10",
      "resolved": "https://registry.npmjs.org/url-parse/-/url-parse-1.5.10.tgz",
      "integrity": "sha512-WypcfiRhfeUP9vvF0j6rw0J3hrWrw6iZv3+22h6iRMJ/8z1Tj6XfLP4DsUix5MhMPnXpiHDoKyoZ/bdCkwBCiQ==",
      "license": "MIT",
      "dependencies": {
        "querystringify": "^2.1.1",
        "requires-port": "^1.0.0"
      }
    },
    "node_modules/use-sync-external-store": {
      "version": "1.5.0",
      "resolved": "https://registry.npmjs.org/use-sync-external-store/-/use-sync-external-store-1.5.0.tgz",
      "integrity": "sha512-Rb46I4cGGVBmjamjphe8L/UnvJD+uPPtTkNvX5mZgqdbavhI4EbgIWJiIHXJ8bc/i9EQGPRh4DwEURJ552Do0A==",
      "license": "MIT",
      "peerDependencies": {
        "react": "^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0"
      }
    },
    "node_modules/utf-8-validate": {
      "version": "5.0.10",
      "resolved": "https://registry.npmjs.org/utf-8-validate/-/utf-8-validate-5.0.10.tgz",
      "integrity": "sha512-Z6czzLq4u8fPOyx7TU6X3dvUZVvoJmxSQ+IcrlmagKhilxlhZgxPK6C5Jqbkw1IDUmFTM+cz9QDnnLTwDz/2gQ==",
      "hasInstallScript": true,
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "node-gyp-build": "^4.3.0"
      },
      "engines": {
        "node": ">=6.14.2"
      }
    },
    "node_modules/util": {
      "version": "0.12.5",
      "resolved": "https://registry.npmjs.org/util/-/util-0.12.5.tgz",
      "integrity": "sha512-kZf/K6hEIrWHI6XqOFUiiMa+79wE/D8Q+NCNAWclkyg3b4d2k7s0QGepNjiABc+aR3N1PAyHL7p6UcLY6LmrnA==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "inherits": "^2.0.3",
        "is-arguments": "^1.0.4",
        "is-generator-function": "^1.0.7",
        "is-typed-array": "^1.1.3",
        "which-typed-array": "^1.1.2"
      }
    },
    "node_modules/util-deprecate": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/util-deprecate/-/util-deprecate-1.0.2.tgz",
      "integrity": "sha512-EPD5q1uXyFxJpCrLnCc1nHnq3gOa6DZBocAIiI2TaSCA7VCJ1UJDMagCzIkXNsUYfD1daK//LTEQ8xiIbrHtcw==",
      "license": "MIT"
    },
    "node_modules/utility-types": {
      "version": "3.11.0",
      "resolved": "https://registry.npmjs.org/utility-types/-/utility-types-3.11.0.tgz",
      "integrity": "sha512-6Z7Ma2aVEWisaL6TvBCy7P8rm2LQoPv6dJ7ecIaIixHcwfbJ0x7mWdbcwlIM5IGQxPZSFYeqRCqlOOeKoJYMkw==",
      "license": "MIT",
      "engines": {
        "node": ">= 4"
      }
    },
    "node_modules/uuid": {
      "version": "10.0.0",
      "resolved": "https://registry.npmjs.org/uuid/-/uuid-10.0.0.tgz",
      "integrity": "sha512-8XkAphELsDnEGrDxUOHB3RGvXz6TeuYSGEZBOjtTtPm2lwhGBjLgOzLHB63IUWfBpNucQjND6d3AOudO+H3RWQ==",
      "funding": [
        "https://github.com/sponsors/broofa",
        "https://github.com/sponsors/ctavan"
      ],
      "license": "MIT",
      "bin": {
        "uuid": "dist/bin/uuid"
      }
    },
    "node_modules/valtio": {
      "version": "1.13.2",
      "resolved": "https://registry.npmjs.org/valtio/-/valtio-1.13.2.tgz",
      "integrity": "sha512-Qik0o+DSy741TmkqmRfjq+0xpZBXi/Y6+fXZLn0xNF1z/waFMbE3rkivv5Zcf9RrMUp6zswf2J7sbh2KBlba5A==",
      "license": "MIT",
      "dependencies": {
        "derive-valtio": "0.1.0",
        "proxy-compare": "2.6.0",
        "use-sync-external-store": "1.2.0"
      },
      "engines": {
        "node": ">=12.20.0"
      },
      "peerDependencies": {
        "@types/react": ">=16.8",
        "react": ">=16.8"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        },
        "react": {
          "optional": true
        }
      }
    },
    "node_modules/valtio/node_modules/use-sync-external-store": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/use-sync-external-store/-/use-sync-external-store-1.2.0.tgz",
      "integrity": "sha512-eEgnFxGQ1Ife9bzYs6VLi8/4X6CObHMw9Qr9tPY43iKwsPw8xE8+EFsf/2cFZ5S3esXgpWgtSCtLNS41F+sKPA==",
      "license": "MIT",
      "peerDependencies": {
        "react": "^16.8.0 || ^17.0.0 || ^18.0.0"
      }
    },
    "node_modules/viem": {
      "version": "2.31.3",
      "resolved": "https://registry.npmjs.org/viem/-/viem-2.31.3.tgz",
      "integrity": "sha512-q3JGI5QFB4LEiLfg9f2ZwjUygAn2W0wMLtj++7E/L2i8Y7zKAkR4TEEOhwBn7gyYXpuc7f1vfd26PJbkEKuj5w==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/wevm"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "@noble/curves": "1.9.2",
        "@noble/hashes": "1.8.0",
        "@scure/bip32": "1.7.0",
        "@scure/bip39": "1.6.0",
        "abitype": "1.0.8",
        "isows": "1.0.7",
        "ox": "0.8.1",
        "ws": "8.18.2"
      },
      "peerDependencies": {
        "typescript": ">=5.0.4"
      },
      "peerDependenciesMeta": {
        "typescript": {
          "optional": true
        }
      }
    },
    "node_modules/viem/node_modules/@scure/bip39": {
      "version": "1.6.0",
      "resolved": "https://registry.npmjs.org/@scure/bip39/-/bip39-1.6.0.tgz",
      "integrity": "sha512-+lF0BbLiJNwVlev4eKelw1WWLaiKXw7sSl8T6FvBlWkdX+94aGJ4o8XjUdlyhTCjd8c+B3KT3JfS8P0bLRNU6A==",
      "license": "MIT",
      "dependencies": {
        "@noble/hashes": "~1.8.0",
        "@scure/base": "~1.2.5"
      },
      "funding": {
        "url": "https://paulmillr.com/funding/"
      }
    },
    "node_modules/viem/node_modules/abitype": {
      "version": "1.0.8",
      "resolved": "https://registry.npmjs.org/abitype/-/abitype-1.0.8.tgz",
      "integrity": "sha512-ZeiI6h3GnW06uYDLx0etQtX/p8E24UaHHBj57RSjK7YBFe7iuVn07EDpOeP451D06sF27VOz9JJPlIKJmXgkEg==",
      "license": "MIT",
      "funding": {
        "url": "https://github.com/sponsors/wevm"
      },
      "peerDependencies": {
        "typescript": ">=5.0.4",
        "zod": "^3 >=3.22.0"
      },
      "peerDependenciesMeta": {
        "typescript": {
          "optional": true
        },
        "zod": {
          "optional": true
        }
      }
    },
    "node_modules/viem/node_modules/ws": {
      "version": "8.18.2",
      "resolved": "https://registry.npmjs.org/ws/-/ws-8.18.2.tgz",
      "integrity": "sha512-DMricUmwGZUVr++AEAe2uiVM7UoO9MAVZMDu05UQOaUII0lp+zOzLLU4Xqh/JvTqklB1T4uELaaPBKyjE1r4fQ==",
      "license": "MIT",
      "engines": {
        "node": ">=10.0.0"
      },
      "peerDependencies": {
        "bufferutil": "^4.0.1",
        "utf-8-validate": ">=5.0.2"
      },
      "peerDependenciesMeta": {
        "bufferutil": {
          "optional": true
        },
        "utf-8-validate": {
          "optional": true
        }
      }
    },
    "node_modules/vite": {
      "version": "5.4.19",
      "resolved": "https://registry.npmjs.org/vite/-/vite-5.4.19.tgz",
      "integrity": "sha512-qO3aKv3HoQC8QKiNSTuUM1l9o/XX3+c+VTgLHbJWHZGeTPVAg2XwazI9UWzoxjIJCGCV2zU60uqMzjeLZuULqA==",
      "license": "MIT",
      "dependencies": {
        "esbuild": "^0.21.3",
        "postcss": "^8.4.43",
        "rollup": "^4.20.0"
      },
      "bin": {
        "vite": "bin/vite.js"
      },
      "engines": {
        "node": "^18.0.0 || >=20.0.0"
      },
      "funding": {
        "url": "https://github.com/vitejs/vite?sponsor=1"
      },
      "optionalDependencies": {
        "fsevents": "~2.3.3"
      },
      "peerDependencies": {
        "@types/node": "^18.0.0 || >=20.0.0",
        "less": "*",
        "lightningcss": "^1.21.0",
        "sass": "*",
        "sass-embedded": "*",
        "stylus": "*",
        "sugarss": "*",
        "terser": "^5.4.0"
      },
      "peerDependenciesMeta": {
        "@types/node": {
          "optional": true
        },
        "less": {
          "optional": true
        },
        "lightningcss": {
          "optional": true
        },
        "sass": {
          "optional": true
        },
        "sass-embedded": {
          "optional": true
        },
        "stylus": {
          "optional": true
        },
        "sugarss": {
          "optional": true
        },
        "terser": {
          "optional": true
        }
      }
    },
    "node_modules/vite-plugin-top-level-await": {
      "version": "1.5.0",
      "resolved": "https://registry.npmjs.org/vite-plugin-top-level-await/-/vite-plugin-top-level-await-1.5.0.tgz",
      "integrity": "sha512-r/DtuvHrSqUVk23XpG2cl8gjt1aATMG5cjExXL1BUTcSNab6CzkcPua9BPEc9fuTP5UpwClCxUe3+dNGL0yrgQ==",
      "license": "MIT",
      "dependencies": {
        "@rollup/plugin-virtual": "^3.0.2",
        "@swc/core": "^1.10.16",
        "uuid": "^10.0.0"
      },
      "peerDependencies": {
        "vite": ">=2.8"
      }
    },
    "node_modules/vite-plugin-wasm": {
      "version": "3.4.1",
      "resolved": "https://registry.npmjs.org/vite-plugin-wasm/-/vite-plugin-wasm-3.4.1.tgz",
      "integrity": "sha512-ja3nSo2UCkVeitltJGkS3pfQHAanHv/DqGatdI39ja6McgABlpsZ5hVgl6wuR8Qx5etY3T5qgDQhOWzc5RReZA==",
      "license": "MIT",
      "peerDependencies": {
        "vite": "^2 || ^3 || ^4 || ^5 || ^6"
      }
    },
    "node_modules/webextension-polyfill": {
      "version": "0.10.0",
      "resolved": "https://registry.npmjs.org/webextension-polyfill/-/webextension-polyfill-0.10.0.tgz",
      "integrity": "sha512-c5s35LgVa5tFaHhrZDnr3FpQpjj1BB+RXhLTYUxGqBVN460HkbM8TBtEqdXWbpTKfzwCcjAZVF7zXCYSKtcp9g==",
      "license": "MPL-2.0",
      "peer": true
    },
    "node_modules/webgl-constants": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/webgl-constants/-/webgl-constants-1.1.1.tgz",
      "integrity": "sha512-LkBXKjU5r9vAW7Gcu3T5u+5cvSvh5WwINdr0C+9jpzVB41cjQAP5ePArDtk/WHYdVj0GefCgM73BA7FlIiNtdg=="
    },
    "node_modules/webgl-sdf-generator": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/webgl-sdf-generator/-/webgl-sdf-generator-1.1.1.tgz",
      "integrity": "sha512-9Z0JcMTFxeE+b2x1LJTdnaT8rT8aEp7MVxkNwoycNmJWwPdzoXzMh0BjJSh/AEFP+KPYZUli814h8bJZFIZ2jA==",
      "license": "MIT"
    },
    "node_modules/webidl-conversions": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/webidl-conversions/-/webidl-conversions-3.0.1.tgz",
      "integrity": "sha512-2JAn3z8AR6rjK8Sm8orRC0h/bcl/DqL7tRPdGZ4I1CjdF+EaMLmYxBHyXuKL849eucPFhvBoxMsflfOb8kxaeQ==",
      "license": "BSD-2-Clause"
    },
    "node_modules/whatwg-fetch": {
      "version": "3.6.20",
      "resolved": "https://registry.npmjs.org/whatwg-fetch/-/whatwg-fetch-3.6.20.tgz",
      "integrity": "sha512-EqhiFU6daOA8kpjOWTL0olhVOF3i7OrFzSYiGsEMB8GcXS+RrzauAERX65xMeNWVqxA6HXH2m69Z9LaKKdisfg==",
      "license": "MIT"
    },
    "node_modules/whatwg-url": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/whatwg-url/-/whatwg-url-5.0.0.tgz",
      "integrity": "sha512-saE57nupxk6v3HY35+jzBwYa0rKSy0XR8JSxZPwgLr7ys0IBzhGviA1/TUGJLmSVqs8pb9AnvICXEuOHLprYTw==",
      "license": "MIT",
      "dependencies": {
        "tr46": "~0.0.3",
        "webidl-conversions": "^3.0.0"
      }
    },
    "node_modules/which": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/which/-/which-2.0.2.tgz",
      "integrity": "sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==",
      "license": "ISC",
      "dependencies": {
        "isexe": "^2.0.0"
      },
      "bin": {
        "node-which": "bin/node-which"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/which-module": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/which-module/-/which-module-2.0.1.tgz",
      "integrity": "sha512-iBdZ57RDvnOR9AGBhML2vFZf7h8vmBjhoaZqODJBFWHVtKkDmKuHai3cx5PgVMrX5YDNp27AofYbAwctSS+vhQ==",
      "license": "ISC"
    },
    "node_modules/which-typed-array": {
      "version": "1.1.19",
      "resolved": "https://registry.npmjs.org/which-typed-array/-/which-typed-array-1.1.19.tgz",
      "integrity": "sha512-rEvr90Bck4WZt9HHFC4DJMsjvu7x+r6bImz0/BrbWb7A2djJ8hnZMrWnHo9F8ssv0OMErasDhftrfROTyqSDrw==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "available-typed-arrays": "^1.0.7",
        "call-bind": "^1.0.8",
        "call-bound": "^1.0.4",
        "for-each": "^0.3.5",
        "get-proto": "^1.0.1",
        "gopd": "^1.2.0",
        "has-tostringtag": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/word-wrap": {
      "version": "1.2.5",
      "resolved": "https://registry.npmjs.org/word-wrap/-/word-wrap-1.2.5.tgz",
      "integrity": "sha512-BN22B5eaMMI9UMtjrGd5g5eCYPpCPDUy0FJXbYsaT5zYxjFOckS53SQDE3pWkVoWpHXVb3BrYcEN4Twa55B5cA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/wrap-ansi": {
      "version": "7.0.0",
      "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-7.0.0.tgz",
      "integrity": "sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==",
      "license": "MIT",
      "dependencies": {
        "ansi-styles": "^4.0.0",
        "string-width": "^4.1.0",
        "strip-ansi": "^6.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/chalk/wrap-ansi?sponsor=1"
      }
    },
    "node_modules/wrap-ansi-cjs": {
      "name": "wrap-ansi",
      "version": "7.0.0",
      "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-7.0.0.tgz",
      "integrity": "sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "ansi-styles": "^4.0.0",
        "string-width": "^4.1.0",
        "strip-ansi": "^6.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/chalk/wrap-ansi?sponsor=1"
      }
    },
    "node_modules/wrappy": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz",
      "integrity": "sha512-l4Sp/DRseor9wL6EvV2+TuQn63dMkPjZ/sp9XkghTEbV9KlPS1xUsZ3u7/IQO4wxtcFB4bgpQPRcR3QCvezPcQ==",
      "license": "ISC"
    },
    "node_modules/ws": {
      "version": "7.5.10",
      "resolved": "https://registry.npmjs.org/ws/-/ws-7.5.10.tgz",
      "integrity": "sha512-+dbF1tHwZpXcbOJdVOkzLDxZP1ailvSxM6ZweXTegylPny803bFhA+vqBYw4s31NSAk4S2Qz+AKXK9a4wkdjcQ==",
      "license": "MIT",
      "engines": {
        "node": ">=8.3.0"
      },
      "peerDependencies": {
        "bufferutil": "^4.0.1",
        "utf-8-validate": "^5.0.2"
      },
      "peerDependenciesMeta": {
        "bufferutil": {
          "optional": true
        },
        "utf-8-validate": {
          "optional": true
        }
      }
    },
    "node_modules/xmlhttprequest-ssl": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/xmlhttprequest-ssl/-/xmlhttprequest-ssl-2.1.2.tgz",
      "integrity": "sha512-TEU+nJVUUnA4CYJFLvK5X9AOeH4KvDvhIfm0vV1GaQRtchnG0hgK5p8hw/xjv8cunWYCsiPCSDzObPyhEwq3KQ==",
      "peer": true,
      "engines": {
        "node": ">=0.4.0"
      }
    },
    "node_modules/y18n": {
      "version": "5.0.8",
      "resolved": "https://registry.npmjs.org/y18n/-/y18n-5.0.8.tgz",
      "integrity": "sha512-0pfFzegeDWJHJIAmTLRP2DwHjdF5s7jo9tuztdQxAhINCdvS+3nGINqPd00AphqJR/0LhANUS6/+7SCb98YOfA==",
      "license": "ISC",
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/yallist": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/yallist/-/yallist-3.1.1.tgz",
      "integrity": "sha512-a4UGQaWPH59mOXUYnAG2ewncQS4i4F43Tv3JoAM+s2VDAmS9NsK8GpDMLrCHPksFT7h3K6TOoUNn2pb7RoXx4g==",
      "dev": true,
      "license": "ISC"
    },
    "node_modules/yaml": {
      "version": "2.8.0",
      "resolved": "https://registry.npmjs.org/yaml/-/yaml-2.8.0.tgz",
      "integrity": "sha512-4lLa/EcQCB0cJkyts+FpIRx5G/llPxfP6VQU5KByHEhLxY3IJCH0f0Hy1MHI8sClTvsIb8qwRJ6R/ZdlDJ/leQ==",
      "dev": true,
      "license": "ISC",
      "bin": {
        "yaml": "bin.mjs"
      },
      "engines": {
        "node": ">= 14.6"
      }
    },
    "node_modules/yargs": {
      "version": "17.7.2",
      "resolved": "https://registry.npmjs.org/yargs/-/yargs-17.7.2.tgz",
      "integrity": "sha512-7dSzzRQ++CKnNI/krKnYRV7JKKPUXMEh61soaHKg9mrWEhzFWhFnxPxGl+69cD1Ou63C13NUPCnmIcrvqCuM6w==",
      "license": "MIT",
      "dependencies": {
        "cliui": "^8.0.1",
        "escalade": "^3.1.1",
        "get-caller-file": "^2.0.5",
        "require-directory": "^2.1.1",
        "string-width": "^4.2.3",
        "y18n": "^5.0.5",
        "yargs-parser": "^21.1.1"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/yargs-parser": {
      "version": "21.1.1",
      "resolved": "https://registry.npmjs.org/yargs-parser/-/yargs-parser-21.1.1.tgz",
      "integrity": "sha512-tVpsJW7DdjecAiFpbIB1e3qxIQsE6NoPc5/eTdrbbIC4h0LVsWhnoa3g+m2HclBIujHzsxZ4VJVA+GUuc2/LBw==",
      "license": "ISC",
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/yocto-queue": {
      "version": "0.1.0",
      "resolved": "https://registry.npmjs.org/yocto-queue/-/yocto-queue-0.1.0.tgz",
      "integrity": "sha512-rVksvsnNCdJ/ohGc6xgPwyN8eheCxsiLM8mxuE/t/mOVqJewPuO1miLpTHQiRgTKCLexL4MeAFVagts7HmNZ2Q==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/zod": {
      "version": "3.25.67",
      "resolved": "https://registry.npmjs.org/zod/-/zod-3.25.67.tgz",
      "integrity": "sha512-idA2YXwpCdqUSKRCACDE6ItZD9TZzy3OZMtpfLoh6oPR47lipysRrJfjzMqFxQ3uJuUPyUeWe1r9vLH33xO/Qw==",
      "license": "MIT",
      "funding": {
        "url": "https://github.com/sponsors/colinhacks"
      }
    },
    "node_modules/zustand": {
      "version": "4.5.7",
      "resolved": "https://registry.npmjs.org/zustand/-/zustand-4.5.7.tgz",
      "integrity": "sha512-CHOUy7mu3lbD6o6LJLfllpjkzhHXSBlX8B9+qPddUsIfeF5S/UZ5q0kmCsnRqT1UHFQZchNFDDzMbQsuesHWlw==",
      "license": "MIT",
      "dependencies": {
        "use-sync-external-store": "^1.2.2"
      },
      "engines": {
        "node": ">=12.7.0"
      },
      "peerDependencies": {
        "@types/react": ">=16.8",
        "immer": ">=9.0.6",
        "react": ">=16.8"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        },
        "immer": {
          "optional": true
        },
        "react": {
          "optional": true
        }
      }
    }
  }
}

```

`/home/suhas/Desktop/pune/blockroomsv2/client/index.html`:

```html
<!doctype html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <link rel="icon" type="image/svg+xml" href="/vite.svg" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <title>Dojo Starter React</title>
    </head>
    <body>
        <div id="root"></div>
        <script type="module" src="/src/main.tsx"></script>
    </body>
</html>

```

`/home/suhas/Desktop/pune/blockroomsv2/client/README.md`:

```md
# 🎮 Dojo Game Starter - Frontend Integration Guide

> **Complete React + Dojo integration documentation**
> From zero to onchain game in 5 minutes ⚡

[![Starknet](https://img.shields.io/badge/Starknet-Ready-orange)](https://starknet.io) [![Cairo](https://img.shields.io/badge/Cairo-2.0-blue)](https://cairo-lang.org) [![Dojo](https://img.shields.io/badge/Dojo-ECS-red)](https://dojoengine.org)

## 🚀 Quick Start

> Controller requires the client to run over HTTPS, so make sure you have the `mkcert` package installed on your system

```bash
git clone https://github.com/your-username/dojo-game-starter
cd dojo-game-starter/client
npm install && npm run mkcert && npm run dev:https
```

**That's it!** Your client is running locally with wallet integration, optimistic updates, and seamless blockchain connectivity.

> Note: this quickstart will connect your client to the existing Sepolia deployment, not your local version!

---

## 📚 Complete Integration Guide

This documentation series explains how to build robust onchain games using React + Dojo + Starknet. Follow the guides in order for best understanding:

### **🏗️ Foundation**
| Guide | Description | Key Topics |
|-------|-------------|------------|
| **[01. Overview](./docs/01-overview.md)** | Big picture and core concepts | Architecture, data flow, gaming UX |
| **[02. Architecture](./docs/02-architecture.md)** | System design and components | Providers, layers, performance |
| **[03. Core Files](./docs/03-core-files.md)** | Essential files and their roles | Bindings, contracts, configuration |

### **🔧 Integration**
| Guide | Description | Key Topics |
|-------|-------------|------------|
| **[04. Zustand State Management](./docs/04-zustand-state-management.md)** | Global state and optimistic updates | Store patterns, performance, persistence |
| **[05. Cartridge Controller](./docs/05-cartridge-controller.md)** | Gaming wallet integration | Session policies, seamless UX |
| **[06. React Hooks Pattern](./docs/06-react-hooks-pattern.md)** | Custom hooks for blockchain | Data fetching, actions, coordination |

### **⚡ Advanced**
| Guide | Description | Key Topics |
|-------|-------------|------------|
| **[07. Data Flow](./docs/07-data-flow.md)** | Complete request/response cycles | Real-time gameplay, state sync |
| **[08. Extending the System](./docs/08-extending-system.md)** | Building your dream game | Extension strategies, development approach |

---

## 🎯 What You'll Learn

By following this guide series, you'll master:

**🏗️ Technical Integration**
- React + Dojo + Starknet architecture
- Optimistic updates for instant UX
- Type-safe contract interactions
- Custom hooks for blockchain operations

**🎮 Gaming-Specific Patterns**
- Cartridge Controller for seamless wallet UX
- Session policies for uninterrupted gameplay
- Real-time state synchronization
- Error handling for blockchain operations

**🚀 Production Best Practices**
- Performance optimization techniques
- Testing strategies for Web3 apps
- Deployment and environment management
- Scalable architecture patterns

---

## 🎮 Game Mechanics Demo

The starter includes three core actions that demonstrate different interaction patterns:

| Action | Effect | Demonstrates |
|--------|--------|--------------|
| 🏋️ **Train** | +10 EXP | Pure advancement mechanics |
| ⛏️ **Mine** | +5 Coins, -5 Health | Risk/reward decisions |
| 💤 **Rest** | +20 Health | Resource management |

These simple mechanics showcase the complete integration stack: from Cairo contracts to React components, with optimistic updates and error handling.

---

## 🛠️ Tech Stack

```
Frontend:  React + Vite + TypeScript + TailwindCSS
State:     Zustand + React Query patterns
Wallet:    Cartridge Controller + Starknet React
Blockchain: Dojo + Cairo + Starknet
Data:      Torii GraphQL + Optimistic Updates
```

---

## 🎯 Perfect For

- 🏆 **Hackathon teams** needing quick onchain game setup
- 🎮 **Game developers** entering Web3 space
- 🏢 **Studios** prototyping blockchain games
- 📚 **Developers** learning Starknet + Dojo

---

## 🌟 Key Features

**⚡ Instant Feedback**
- Optimistic updates for immediate UI response
- Background blockchain confirmation
- Automatic rollback on transaction failure

**🎮 Gaming-First UX**
- Cartridge Controller integration
- Session policies for seamless actions
- No wallet popups during gameplay

**🔧 Developer Experience**
- Complete TypeScript integration
- Hot reload with contract changes
- Comprehensive error handling
- Testing strategies included

**🚀 Production Ready**
- Environment-based configuration
- Performance optimizations
- Deployment best practices
- Monitoring and analytics patterns

---

## 🚀 Getting Started

1. **Start with [Overview](./docs/01-overview.md)** to understand the big picture
2. **Follow the guides in order** for comprehensive understanding
3. **Reference specific topics** as needed during development
4. **Use [Extending the System](./docs/09-extending-system.md)** to build your unique game

Each guide builds upon the previous ones, creating a complete learning path from basic concepts to advanced implementation patterns.

---

## 📞 Support

- 💬 **Discord**: [Dojo Engine Community](https://discord.com/invite/dojoengine)
- 📚 **Docs**: [Official Dojo Documentation](https://dojoengine.org)
- 🐦 **Twitter**: [@ohayo_dojo](https://twitter.com/ohayo_dojo)

---

**Ready to build the future of onchain gaming?** Start with the [Overview](./docs/01-overview.md) and begin your journey! 🚀

```

`/home/suhas/Desktop/pune/blockroomsv2/client/tsconfig.json`:

```json
{
    "files": [],
    "references": [
        { "path": "./tsconfig.app.json" },
        { "path": "./tsconfig.node.json" }
    ]
}

```

`/home/suhas/Desktop/pune/blockroomsv2/client/package.json`:

```json
{
  "name": "dojo-starter-react",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite",
    "dev:https": "VITE_LOCAL_HTTPS=true vite",
    "dev:http": "VITE_LOCAL_HTTPS=false vite",
    "build": "tsc -b && vite build",
    "lint": "eslint .",
    "preview": "vite preview",
    "preview:https": "VITE_LOCAL_HTTPS=true vite preview",
    "serve": "vite preview",
    "format:check": "prettier --check .",
    "format": "prettier --write .",
    "mkcert": "mkcert -key-file dev-key.pem -cert-file dev.pem localhost 127.0.0.1 ::1"
  },
  "dependencies": {
    "@cartridge/connector": "^0.7.13",
    "@cartridge/controller": "^0.7.13",
    "@dojoengine/core": "^1.5.15",
    "@dojoengine/create-burner": "^1.5.15",
    "@dojoengine/predeployed-connector": "^1.5.15",
    "@dojoengine/sdk": "^1.5.16",
    "@dojoengine/torii-client": "^1.5.14",
    "@dojoengine/torii-wasm": "^1.5.14",
    "@dojoengine/utils": "^1.5.14",
    "@radix-ui/react-progress": "^1.1.7",
    "@radix-ui/react-slot": "^1.2.3",
    "@react-three/drei": "^9.122.0",
    "@react-three/fiber": "^8.18.0",
    "@starknet-react/chains": "^3.1.3",
    "@starknet-react/core": "^3.7.4",
    "@types/uuid": "^10.0.0",
    "buffer": "^6.0.3",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "immer": "^10.1.1",
    "lucide-react": "^0.518.0",
    "react": "^18.3.1",
    "react-dom": "^18.3.1",
    "starknet": "^6.23.1",
    "tailwind-merge": "^3.3.1",
    "three": "^0.158.0",
    "uuid": "^10.0.0",
    "vite-plugin-top-level-await": "^1.5.0",
    "vite-plugin-wasm": "^3.4.1",
    "zustand": "^4.5.7"
  },
  "devDependencies": {
    "@eslint/js": "^9.29.0",
    "@types/node": "^22.15.32",
    "@types/react": "^18.3.23",
    "@types/react-dom": "^18.3.7",
    "@types/three": "^0.177.0",
    "@vitejs/plugin-react": "^4.5.2",
    "autoprefixer": "^10.4.21",
    "eslint": "^9.29.0",
    "eslint-plugin-react-hooks": "5.2.0",
    "eslint-plugin-react-refresh": "^0.4.20",
    "globals": "^15.15.0",
    "postcss": "^8.5.6",
    "tailwindcss": "^3.4.17",
    "typescript": "^5.8.3",
    "typescript-eslint": "^8.34.1",
    "vite": "^5.4.19"
  }
}

```

`/home/suhas/Desktop/pune/blockroomsv2/client/tsconfig.app.tsbuildinfo`:

```tsbuildinfo
{"root":["./src/main.tsx","./src/vite-env.d.ts","./src/app/app.tsx","./src/components/game-actions.tsx","./src/components/game-section.tsx","./src/components/header.tsx","./src/components/links-section.tsx","./src/components/player-stats.tsx","./src/components/status-bar.tsx","./src/components/pages/homescreen.tsx","./src/components/ui/button.tsx","./src/components/ui/card.tsx","./src/components/ui/progress.tsx","./src/config/cartridgeconnector.tsx","./src/config/manifest.ts","./src/context/game-context.tsx","./src/dojo/bindings.ts","./src/dojo/contracts.gen.ts","./src/dojo/dojoconfig.ts","./src/dojo/starknet-provider.tsx","./src/dojo/hooks/usemineaction.tsx","./src/dojo/hooks/useplayer.tsx","./src/dojo/hooks/userestaction.tsx","./src/dojo/hooks/usespawnplayer.tsx","./src/dojo/hooks/usestarknetconnect.tsx","./src/dojo/hooks/usetrainaction.tsx","./src/utils/utils.ts","./src/zustand/store.ts"],"version":"5.8.3"}
```

`/home/suhas/Desktop/pune/blockroomsv2/client/public/Poc2.tsx`:

```tsx
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 poc2.glb --draw --types 
*/

import * as THREE from 'three'
import React from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    DoorFrame: THREE.Mesh
    Door: THREE.Mesh
    Handle_Back: THREE.Mesh
    Handle_Front: THREE.Mesh
    DoorFrame001: THREE.Mesh
    Door001: THREE.Mesh
    Handle_Back001: THREE.Mesh
    Handle_Front001: THREE.Mesh
    wall_pillar_thing_Material001_0001: THREE.Mesh
    wall_pillar_thing_Material001_0002: THREE.Mesh
    wall_pillar_thing_Material001_0003: THREE.Mesh
    wall_pillar_thing_Material001_0004: THREE.Mesh
    wall_pillar_thing_Material001_0005: THREE.Mesh
    wall_pillar_thing_Material001_0006: THREE.Mesh
    wall_pillar_thing_Material001_0007: THREE.Mesh
    wall_pillar_Material001_0001: THREE.Mesh
    wall_pillar_Material001_0002: THREE.Mesh
    wall_pillar_Material001_0003: THREE.Mesh
    wall_pillar_Material001_0004: THREE.Mesh
    wall_pillar_Material001_0005: THREE.Mesh
    wall_pillar_Material001_0006: THREE.Mesh
    wall_pillar_Material001_0007: THREE.Mesh
    wall_3_Material001_0001: THREE.Mesh
    wall_3_Material001_0002: THREE.Mesh
    wall_3_Material001_0003: THREE.Mesh
    wall_pillar_Material001_0008: THREE.Mesh
    wall_pillar_Material001_0009: THREE.Mesh
    wall_pillar_Material001_0010: THREE.Mesh
    wall_pillar_Material001_0011: THREE.Mesh
    wall_pillar_Material001_0012: THREE.Mesh
    wall_pillar_Material001_0013: THREE.Mesh
    wall_pillar_Material001_0014: THREE.Mesh
    wall_pillar_Material001_0015: THREE.Mesh
    wall_pillar_Material001_0016: THREE.Mesh
    wall_pillar_Material001_0017: THREE.Mesh
    wall_pillar_Material001_0018: THREE.Mesh
    wall_pillar_Material001_0019: THREE.Mesh
    wall_pillar_Material001_0020: THREE.Mesh
    wall_pillar_Material001_0021: THREE.Mesh
    wall_pillar_Material001_0022: THREE.Mesh
    wall_pillar_Material001_0023: THREE.Mesh
    wall_pillar_thing_Material001_0008: THREE.Mesh
    wall_pillar_thing_Material001_0009: THREE.Mesh
    wall_pillar_thing_Material001_0010: THREE.Mesh
    wall_pillar_thing_Material001_0011: THREE.Mesh
    wall_3_Material001_0004: THREE.Mesh
    wall_3_Material001_0005: THREE.Mesh
    wall_pillar_thing_Material001_0012: THREE.Mesh
    wall_pillar_thing_Material001_0013: THREE.Mesh
    wall_pillar_thing_Material001_0014: THREE.Mesh
    wall_pillar_thing_Material001_0015: THREE.Mesh
    wall_pillar_thing_Material001_0016: THREE.Mesh
    wall_pillar_thing_Material001_0017: THREE.Mesh
    wall_pillar_thing_Material001_0018: THREE.Mesh
    wall_pillar_thing_Material001_0019: THREE.Mesh
    wall_pillar_thing_Material001_0020: THREE.Mesh
    wall_pillar_thing_Material001_0021: THREE.Mesh
    wall_pillar_thing_Material001_0023: THREE.Mesh
    wall_pillar_Material001_0024: THREE.Mesh
    wall_pillar_Material001_0025: THREE.Mesh
    wall_pillar_Material001_0026: THREE.Mesh
    wall_pillar_Material001_0027: THREE.Mesh
    wall_pillar_Material001_0028: THREE.Mesh
    wall_pillar_Material001_0029: THREE.Mesh
    wall_pillar_Material001_0030: THREE.Mesh
    wall_pillar_thing_Material001_0022: THREE.Mesh
    wall_pillar_Material001_0031: THREE.Mesh
    wall_pillar_Material001_0032: THREE.Mesh
    wall_pillar_Material001_0033: THREE.Mesh
    wall_pillar_Material001_0034: THREE.Mesh
    wall_pillar_Material001_0035: THREE.Mesh
    wall_pillar_Material001_0036: THREE.Mesh
    wall_pillar_thing_Material001_0024: THREE.Mesh
    wall_pillar_thing_Material001_0025: THREE.Mesh
    wall_pillar_thing_Material001_0026: THREE.Mesh
    Plane: THREE.Mesh
    Cube: THREE.Mesh
    Cube001: THREE.Mesh
    Cube003: THREE.Mesh
    Cube004: THREE.Mesh
    Cube005: THREE.Mesh
    Cube006: THREE.Mesh
    Cube007: THREE.Mesh
    Cube008: THREE.Mesh
    Column: THREE.Mesh
    Column_box_bottom: THREE.Mesh
    Column_box_top: THREE.Mesh
    Cube009: THREE.Mesh
    Cube010: THREE.Mesh
    Cube011: THREE.Mesh
    Cube012: THREE.Mesh
    Cube013: THREE.Mesh
    Cube014: THREE.Mesh
    Cube015: THREE.Mesh
    Cube016: THREE.Mesh
    Cube017: THREE.Mesh
    Cube018: THREE.Mesh
    Cube019: THREE.Mesh
    Cube020: THREE.Mesh
    Cube021: THREE.Mesh
    Cube022: THREE.Mesh
    Cube023: THREE.Mesh
    Cube024: THREE.Mesh
    Cube025: THREE.Mesh
    Cube026: THREE.Mesh
    Cube027: THREE.Mesh
    Cube028: THREE.Mesh
    Cube029: THREE.Mesh
    Cube030: THREE.Mesh
    Cube031: THREE.Mesh
    Cube032: THREE.Mesh
    Cube033: THREE.Mesh
    Cube034: THREE.Mesh
    Cube035: THREE.Mesh
    Cube036: THREE.Mesh
    Cube037: THREE.Mesh
    Cube038: THREE.Mesh
    Cube039: THREE.Mesh
    Cube040: THREE.Mesh
    Cube041: THREE.Mesh
    Cube042: THREE.Mesh
    Cube043: THREE.Mesh
    Cube044: THREE.Mesh
    Cube045: THREE.Mesh
    Cube046: THREE.Mesh
    Cube047: THREE.Mesh
    Cube048: THREE.Mesh
    Cube049: THREE.Mesh
    Cube050: THREE.Mesh
    Cube051: THREE.Mesh
    Cube052: THREE.Mesh
    Cube053: THREE.Mesh
    Cube054: THREE.Mesh
    Cube055: THREE.Mesh
    Cube056: THREE.Mesh
    Cube057: THREE.Mesh
    Cube058: THREE.Mesh
    Cube059: THREE.Mesh
    Cube060: THREE.Mesh
    Column001: THREE.Mesh
    Column_box_bottom001: THREE.Mesh
    Column_box_top001: THREE.Mesh
    Cube061: THREE.Mesh
    Cube062: THREE.Mesh
    Cube063: THREE.Mesh
    Cube064: THREE.Mesh
    Cube065: THREE.Mesh
    Cube067: THREE.Mesh
    Cube068: THREE.Mesh
    Cube070: THREE.Mesh
    Cube071: THREE.Mesh
    Cube072: THREE.Mesh
    Cube073: THREE.Mesh
    Cube074: THREE.Mesh
    Cube075: THREE.Mesh
    Cube076: THREE.Mesh
    Cube077: THREE.Mesh
    Cube078: THREE.Mesh
    Plane001: THREE.Mesh
    Cube069: THREE.Mesh
    Cube079: THREE.Mesh
    Cube080: THREE.Mesh
    Cube081: THREE.Mesh
    Cube082: THREE.Mesh
    Cube066: THREE.Mesh
    Cube083: THREE.Mesh
    Cube084: THREE.Mesh
    Cube085: THREE.Mesh
    Cube086: THREE.Mesh
    Cube087: THREE.Mesh
    Cube088: THREE.Mesh
    Cube089: THREE.Mesh
    Cube090: THREE.Mesh
    Cube091: THREE.Mesh
    Cube092: THREE.Mesh
    Cube093: THREE.Mesh
    Cube094: THREE.Mesh
    Cube095: THREE.Mesh
    Cube096: THREE.Mesh
    Cube097: THREE.Mesh
    Cube098: THREE.Mesh
    Cube099: THREE.Mesh
    Cube100: THREE.Mesh
    Cube101: THREE.Mesh
    Cube102: THREE.Mesh
    Cube103: THREE.Mesh
    Cube104: THREE.Mesh
    Cube105: THREE.Mesh
    Cube106: THREE.Mesh
    Cube107: THREE.Mesh
    Cube108: THREE.Mesh
    Cube109: THREE.Mesh
    Plane002: THREE.Mesh
    Cube110: THREE.Mesh
    Cube111: THREE.Mesh
    Cube112: THREE.Mesh
    Cube113: THREE.Mesh
    Baseboard: THREE.Mesh
    Baseboard001: THREE.Mesh
    Cube002: THREE.Mesh
    Cube114: THREE.Mesh
    Cube115: THREE.Mesh
    Cube116: THREE.Mesh
    Cube117: THREE.Mesh
    Cube118: THREE.Mesh
    Cube119: THREE.Mesh
    Cube120: THREE.Mesh
    Cube121: THREE.Mesh
    Cube122: THREE.Mesh
    Cube123: THREE.Mesh
    Cube124: THREE.Mesh
    Cube126: THREE.Mesh
    Cube127: THREE.Mesh
    Cube128: THREE.Mesh
    Cube129: THREE.Mesh
    Cube130: THREE.Mesh
    Cube131: THREE.Mesh
    Cube132: THREE.Mesh
    Cube133: THREE.Mesh
    Cube134: THREE.Mesh
    Cube125: THREE.Mesh
    Cube135: THREE.Mesh
    Cube136: THREE.Mesh
    Cube137: THREE.Mesh
    Cube138: THREE.Mesh
    Cube139: THREE.Mesh
    Cube140: THREE.Mesh
    Cube141: THREE.Mesh
    Cube142: THREE.Mesh
    Cube143: THREE.Mesh
    Cube144: THREE.Mesh
    Cube145: THREE.Mesh
    Cube146: THREE.Mesh
    Cube147: THREE.Mesh
    Cube148: THREE.Mesh
    Cube149: THREE.Mesh
    Cube150: THREE.Mesh
    Cube151: THREE.Mesh
    Cube152: THREE.Mesh
    Cube153: THREE.Mesh
    Cube154: THREE.Mesh
    Cube155: THREE.Mesh
    Cube156: THREE.Mesh
    Cube157: THREE.Mesh
    Cube158: THREE.Mesh
    Cube159: THREE.Mesh
    Cube160: THREE.Mesh
    Cube161: THREE.Mesh
    Cube162: THREE.Mesh
    Cube164: THREE.Mesh
    Cube163: THREE.Mesh
    Cube165: THREE.Mesh
    Cube166: THREE.Mesh
    Cube167: THREE.Mesh
    Cube168: THREE.Mesh
    Cube169: THREE.Mesh
    Cube170: THREE.Mesh
    Cube171: THREE.Mesh
    Cube172: THREE.Mesh
    Cube173: THREE.Mesh
    Cube174: THREE.Mesh
    Cube175: THREE.Mesh
    Cube176: THREE.Mesh
    Cube177: THREE.Mesh
    Cube178: THREE.Mesh
    Cube179: THREE.Mesh
    Cube180: THREE.Mesh
    Cube181: THREE.Mesh
    Cube182: THREE.Mesh
    Cube183: THREE.Mesh
    Cube184: THREE.Mesh
    Cube185: THREE.Mesh
    Cube186: THREE.Mesh
    Cube187: THREE.Mesh
    Cube188: THREE.Mesh
    Cube189: THREE.Mesh
    Cube190: THREE.Mesh
    Cube191: THREE.Mesh
    Cube192: THREE.Mesh
    Cube193: THREE.Mesh
    Cube194: THREE.Mesh
    Cube195: THREE.Mesh
    Cube196: THREE.Mesh
    Cube197: THREE.Mesh
    Cube198: THREE.Mesh
    Cube199: THREE.Mesh
    Cube200: THREE.Mesh
    Cube201: THREE.Mesh
    Cube202: THREE.Mesh
    Cube203: THREE.Mesh
    Cube204: THREE.Mesh
    Cube205: THREE.Mesh
    Cube206: THREE.Mesh
    Cube207: THREE.Mesh
    Cube208: THREE.Mesh
    Cube209: THREE.Mesh
    Cube210: THREE.Mesh
    Cube211: THREE.Mesh
    Cube212: THREE.Mesh
    Cube213: THREE.Mesh
    Cube214: THREE.Mesh
    Cube215: THREE.Mesh
    Cube216: THREE.Mesh
    Cube217: THREE.Mesh
    Cube218: THREE.Mesh
    Cube219: THREE.Mesh
    Cube220: THREE.Mesh
    Cube221: THREE.Mesh
    Cube222: THREE.Mesh
    Cube223: THREE.Mesh
    Cube224: THREE.Mesh
    Cube225: THREE.Mesh
    Cube226: THREE.Mesh
    Cube227: THREE.Mesh
    Cube228: THREE.Mesh
    Cube229: THREE.Mesh
    Cube230: THREE.Mesh
    Cube231: THREE.Mesh
    Cube232: THREE.Mesh
    Cube233: THREE.Mesh
    Cube234: THREE.Mesh
    Cube235: THREE.Mesh
    Cube236: THREE.Mesh
    Cube237: THREE.Mesh
    Cube238: THREE.Mesh
    Cube239: THREE.Mesh
    Cube240: THREE.Mesh
    Cube241: THREE.Mesh
    Cube242: THREE.Mesh
    Cube243: THREE.Mesh
    Cube244: THREE.Mesh
    Cube245: THREE.Mesh
    Cube246: THREE.Mesh
    Cube247: THREE.Mesh
    Cube248: THREE.Mesh
    Cube249: THREE.Mesh
    Cube250: THREE.Mesh
    Cube251: THREE.Mesh
    Cube252: THREE.Mesh
    Cube253: THREE.Mesh
    Cube254: THREE.Mesh
    Cube255: THREE.Mesh
    Cube256: THREE.Mesh
    Cube257: THREE.Mesh
    Cube258: THREE.Mesh
    Cube259: THREE.Mesh
    Cube260: THREE.Mesh
    Cube261: THREE.Mesh
    Cube262: THREE.Mesh
    Cube263: THREE.Mesh
    Cube264: THREE.Mesh
    Cube265: THREE.Mesh
    Cube266: THREE.Mesh
    Cube267: THREE.Mesh
    Cube268: THREE.Mesh
    Cube269: THREE.Mesh
    Cube270: THREE.Mesh
    Cube271: THREE.Mesh
    Cube272: THREE.Mesh
    Cube273: THREE.Mesh
    Cube274: THREE.Mesh
    Cube275: THREE.Mesh
    Column002: THREE.Mesh
    Column_box_top002: THREE.Mesh
    Column003: THREE.Mesh
    Column_box_top003: THREE.Mesh
    Column004: THREE.Mesh
    Column_box_top004: THREE.Mesh
    Column005: THREE.Mesh
    Column_box_top005: THREE.Mesh
    Column006: THREE.Mesh
    Column_box_top006: THREE.Mesh
    Column007: THREE.Mesh
    Column_box_top007: THREE.Mesh
    Column008: THREE.Mesh
    Column_box_top008: THREE.Mesh
    Column009: THREE.Mesh
    Column_box_top009: THREE.Mesh
    Column010: THREE.Mesh
    Column_box_top010: THREE.Mesh
    Column011: THREE.Mesh
    Column_box_top011: THREE.Mesh
    Column012: THREE.Mesh
    Column_box_top012: THREE.Mesh
    Column013: THREE.Mesh
    Column_box_top013: THREE.Mesh
    Column014: THREE.Mesh
    Column_box_top014: THREE.Mesh
    Column015: THREE.Mesh
    Column_box_top015: THREE.Mesh
    Column016: THREE.Mesh
    Column_box_top016: THREE.Mesh
    Column017: THREE.Mesh
    Column_box_top017: THREE.Mesh
    Column018: THREE.Mesh
    Column_box_top018: THREE.Mesh
    Column019: THREE.Mesh
    Column_box_top019: THREE.Mesh
    Column020: THREE.Mesh
    Column_box_top020: THREE.Mesh
    Column021: THREE.Mesh
    Column_box_top021: THREE.Mesh
    Column022: THREE.Mesh
    Column_box_top022: THREE.Mesh
    Column023: THREE.Mesh
    Column_box_top023: THREE.Mesh
    Column024: THREE.Mesh
    Column_box_top024: THREE.Mesh
    Column025: THREE.Mesh
    Column_box_top025: THREE.Mesh
    Column026: THREE.Mesh
    Column_box_top026: THREE.Mesh
    Column027: THREE.Mesh
    Column_box_top027: THREE.Mesh
    Column028: THREE.Mesh
    Column029: THREE.Mesh
    Column_box_top028: THREE.Mesh
    Column030: THREE.Mesh
    Column_box_top029: THREE.Mesh
    Column031: THREE.Mesh
    Column_box_top030: THREE.Mesh
    Column032: THREE.Mesh
    Column_box_top031: THREE.Mesh
    Column033: THREE.Mesh
    Column_box_top032: THREE.Mesh
    Column034: THREE.Mesh
    Column_box_top033: THREE.Mesh
    Column035: THREE.Mesh
    Column_box_top034: THREE.Mesh
    Column036: THREE.Mesh
    Column_box_top035: THREE.Mesh
    Column037: THREE.Mesh
    Column_box_top036: THREE.Mesh
    Column038: THREE.Mesh
    Column_box_top037: THREE.Mesh
    Column039: THREE.Mesh
    Column_box_top038: THREE.Mesh
    Column040: THREE.Mesh
    Column_box_top039: THREE.Mesh
    Column041: THREE.Mesh
    Column_box_top040: THREE.Mesh
    Column042: THREE.Mesh
    Column_box_top041: THREE.Mesh
    Column043: THREE.Mesh
    Column044: THREE.Mesh
    Column_box_top042: THREE.Mesh
    Column045: THREE.Mesh
    Column_box_top043: THREE.Mesh
    Column046: THREE.Mesh
    Column_box_top044: THREE.Mesh
    Column047: THREE.Mesh
    Column_box_top045: THREE.Mesh
    Column048: THREE.Mesh
    Column049: THREE.Mesh
    Column_box_top046: THREE.Mesh
    Column050: THREE.Mesh
    Column_box_top047: THREE.Mesh
    Column051: THREE.Mesh
    Column_box_top048: THREE.Mesh
    Column052: THREE.Mesh
    Column_box_top049: THREE.Mesh
    Column053: THREE.Mesh
    Column_box_top050: THREE.Mesh
    Column054: THREE.Mesh
    Column_box_top051: THREE.Mesh
    Column055: THREE.Mesh
    Column_box_top052: THREE.Mesh
    Column056: THREE.Mesh
    Column_box_top053: THREE.Mesh
    Column057: THREE.Mesh
    Column_box_top054: THREE.Mesh
    Column058: THREE.Mesh
    Column_box_top055: THREE.Mesh
    Column059: THREE.Mesh
    Column_box_top056: THREE.Mesh
    Column060: THREE.Mesh
    Column_box_top057: THREE.Mesh
    Column061: THREE.Mesh
    Column_box_top058: THREE.Mesh
    Column062: THREE.Mesh
    Column_box_top059: THREE.Mesh
    Column063: THREE.Mesh
    Column064: THREE.Mesh
    Column_box_top060: THREE.Mesh
    Column065: THREE.Mesh
    Column_box_top061: THREE.Mesh
    Column066: THREE.Mesh
    Column_box_top062: THREE.Mesh
    Column067: THREE.Mesh
    Column_box_top063: THREE.Mesh
    Column068: THREE.Mesh
    Column_box_top064: THREE.Mesh
    Column069: THREE.Mesh
    Column_box_top065: THREE.Mesh
    Column070: THREE.Mesh
    Column_box_top066: THREE.Mesh
    Column071: THREE.Mesh
    Column_box_top067: THREE.Mesh
    Column072: THREE.Mesh
    Column_box_top068: THREE.Mesh
    Column073: THREE.Mesh
    Column074: THREE.Mesh
    Column_box_top069: THREE.Mesh
    Column075: THREE.Mesh
    Column_box_top070: THREE.Mesh
    Column076: THREE.Mesh
    Column_box_top071: THREE.Mesh
    Column077: THREE.Mesh
    Column_box_top072: THREE.Mesh
    Column078: THREE.Mesh
    Column079: THREE.Mesh
    Column_box_top073: THREE.Mesh
    Column080: THREE.Mesh
    Column_box_top074: THREE.Mesh
    Column081: THREE.Mesh
    Column_box_top075: THREE.Mesh
    Column082: THREE.Mesh
    Column_box_top076: THREE.Mesh
    Column083: THREE.Mesh
    Column_box_top077: THREE.Mesh
    Column084: THREE.Mesh
    Column_box_top078: THREE.Mesh
    Column085: THREE.Mesh
    Column_box_top079: THREE.Mesh
    Cube276: THREE.Mesh
    Cube277: THREE.Mesh
    Cube278: THREE.Mesh
    Cube279: THREE.Mesh
    Cube280: THREE.Mesh
    Cube281: THREE.Mesh
    Cube282: THREE.Mesh
    Cube283: THREE.Mesh
    Cube284: THREE.Mesh
    Cube285: THREE.Mesh
    Cube286: THREE.Mesh
    Cube287: THREE.Mesh
    Column086: THREE.Mesh
    Column087: THREE.Mesh
    Column088: THREE.Mesh
    Column089: THREE.Mesh
    Column090: THREE.Mesh
    Column091: THREE.Mesh
    Column092: THREE.Mesh
    Column093: THREE.Mesh
    Column094: THREE.Mesh
    Cube288: THREE.Mesh
    Cube289: THREE.Mesh
    Cube290: THREE.Mesh
    Cube291: THREE.Mesh
    Cube292: THREE.Mesh
    Cube293: THREE.Mesh
    Cube294: THREE.Mesh
    Cube295: THREE.Mesh
    Cube296: THREE.Mesh
    Cube297: THREE.Mesh
    Cube298: THREE.Mesh
    Cube299: THREE.Mesh
    Cube300: THREE.Mesh
    Cube301: THREE.Mesh
    Cube302: THREE.Mesh
    Cube303: THREE.Mesh
    Cube304: THREE.Mesh
    Cube305: THREE.Mesh
    Cube306: THREE.Mesh
    Cube307: THREE.Mesh
    Cube308: THREE.Mesh
    Cube309: THREE.Mesh
    Cube310: THREE.Mesh
    Cube311: THREE.Mesh
    Cube312: THREE.Mesh
    Cube314: THREE.Mesh
    Cube315: THREE.Mesh
    Column095: THREE.Mesh
    Column096: THREE.Mesh
    Column097: THREE.Mesh
    Column098: THREE.Mesh
    Column099: THREE.Mesh
    Column100: THREE.Mesh
    Column101: THREE.Mesh
    Cube313: THREE.Mesh
    Column102: THREE.Mesh
    Cube316: THREE.Mesh
    Cube317: THREE.Mesh
    Cube318: THREE.Mesh
    Cube319: THREE.Mesh
    Cube320: THREE.Mesh
    Column103: THREE.Mesh
    Column104: THREE.Mesh
    Cube321: THREE.Mesh
    Cube322: THREE.Mesh
    Cube323: THREE.Mesh
    Cube324: THREE.Mesh
    Cube325: THREE.Mesh
  }
  materials: {
    Door_material: THREE.MeshStandardMaterial
    Handle_material: THREE.MeshStandardMaterial
    ['Material.020']: THREE.MeshStandardMaterial
    ['Material.021']: THREE.MeshStandardMaterial
    ['Material.022']: THREE.MeshStandardMaterial
    ['Material.023']: THREE.MeshStandardMaterial
    ['Material.024']: THREE.MeshStandardMaterial
    ['Material.025']: THREE.MeshStandardMaterial
    ['Material.026']: THREE.MeshStandardMaterial
    ['Material.029']: THREE.MeshStandardMaterial
    ['Material.030']: THREE.MeshStandardMaterial
    ['Material.031']: THREE.MeshStandardMaterial
    ['Material.032']: THREE.MeshStandardMaterial
    ['Material.033']: THREE.MeshStandardMaterial
    ['Material.034']: THREE.MeshStandardMaterial
    ['Material.035']: THREE.MeshStandardMaterial
    ['Material.044']: THREE.MeshStandardMaterial
    ['Material.045']: THREE.MeshStandardMaterial
    ['Material.046']: THREE.MeshStandardMaterial
    ['Material.049']: THREE.MeshStandardMaterial
    ['Material.050']: THREE.MeshStandardMaterial
    ['Material.051']: THREE.MeshStandardMaterial
    ['Material.052']: THREE.MeshStandardMaterial
    ['Material.053']: THREE.MeshStandardMaterial
    ['Material.054']: THREE.MeshStandardMaterial
    ['Material.055']: THREE.MeshStandardMaterial
    ['Material.056']: THREE.MeshStandardMaterial
    ['Material.057']: THREE.MeshStandardMaterial
    ['Material.058']: THREE.MeshStandardMaterial
    ['Material.059']: THREE.MeshStandardMaterial
    ['Material.060']: THREE.MeshStandardMaterial
    ['Material.061']: THREE.MeshStandardMaterial
    ['Material.062']: THREE.MeshStandardMaterial
    ['Material.063']: THREE.MeshStandardMaterial
    ['Material.071']: THREE.MeshStandardMaterial
    ['Material.082']: THREE.MeshStandardMaterial
    ['Material.083']: THREE.MeshStandardMaterial
    ['Material.084']: THREE.MeshStandardMaterial
    ['Material.085']: THREE.MeshStandardMaterial
    ['Material.086']: THREE.MeshStandardMaterial
    ['Material.090']: THREE.MeshStandardMaterial
    ['Material.134']: THREE.MeshStandardMaterial
    ['Material.135']: THREE.MeshStandardMaterial
    ['Material.136']: THREE.MeshStandardMaterial
    ['Material.137']: THREE.MeshStandardMaterial
    ['Material.138']: THREE.MeshStandardMaterial
    ['Material.139']: THREE.MeshStandardMaterial
    ['Material.140']: THREE.MeshStandardMaterial
    ['Material.141']: THREE.MeshStandardMaterial
    ['Material.142']: THREE.MeshStandardMaterial
    ['Material.143']: THREE.MeshStandardMaterial
    ['Material.145']: THREE.MeshStandardMaterial
    ['Material.149']: THREE.MeshStandardMaterial
    ['Material.150']: THREE.MeshStandardMaterial
    ['Material.151']: THREE.MeshStandardMaterial
    ['Material.152']: THREE.MeshStandardMaterial
    ['Material.153']: THREE.MeshStandardMaterial
    ['Material.154']: THREE.MeshStandardMaterial
    ['Material.155']: THREE.MeshStandardMaterial
    ['Material.156']: THREE.MeshStandardMaterial
    ['Material.157']: THREE.MeshStandardMaterial
    ['Material.158']: THREE.MeshStandardMaterial
    ['Material.159']: THREE.MeshStandardMaterial
    ['Material.160']: THREE.MeshStandardMaterial
    ['Material.165']: THREE.MeshStandardMaterial
    ['Material.166']: THREE.MeshStandardMaterial
    ['Material.168']: THREE.MeshStandardMaterial
    ['Material.169']: THREE.MeshStandardMaterial
    ['Material.170']: THREE.MeshStandardMaterial
    Column_material: THREE.MeshStandardMaterial
    Column_rect: THREE.MeshStandardMaterial
    ['Material.001']: THREE.MeshStandardMaterial
    ['Column_material.001']: THREE.MeshStandardMaterial
    ['Column_rect.001']: THREE.MeshStandardMaterial
    ['Material.002']: THREE.MeshStandardMaterial
    ['Material.003']: THREE.MeshStandardMaterial
    ['Material.004']: THREE.MeshStandardMaterial
    ['Material.005']: THREE.MeshStandardMaterial
    Baseboard_material: THREE.MeshStandardMaterial
    ['Material.008']: THREE.MeshStandardMaterial
    ['Material.007']: THREE.MeshStandardMaterial
    ['Material.009']: THREE.MeshStandardMaterial
    ['Material.010']: THREE.MeshStandardMaterial
    ['Material.011']: THREE.MeshStandardMaterial
    ['Material.012']: THREE.MeshStandardMaterial
    ['Material.013']: THREE.MeshStandardMaterial
    ['Material.014']: THREE.MeshStandardMaterial
    ['Material.015']: THREE.MeshStandardMaterial
    ['Material.016']: THREE.MeshStandardMaterial
    ['Material.017']: THREE.MeshStandardMaterial
    ['Material.018']: THREE.MeshStandardMaterial
    ['Material.027']: THREE.MeshStandardMaterial
    ['Material.028']: THREE.MeshStandardMaterial
    ['Material.036']: THREE.MeshStandardMaterial
    ['Material.037']: THREE.MeshStandardMaterial
    ['Material.038']: THREE.MeshStandardMaterial
    ['Material.039']: THREE.MeshStandardMaterial
    ['Material.040']: THREE.MeshStandardMaterial
    ['Material.041']: THREE.MeshStandardMaterial
    ['Material.042']: THREE.MeshStandardMaterial
    ['Material.043']: THREE.MeshStandardMaterial
    ['Material.047']: THREE.MeshStandardMaterial
    ['Material.065']: THREE.MeshStandardMaterial
    ['Material.066']: THREE.MeshStandardMaterial
    ['Material.068']: THREE.MeshStandardMaterial
    ['Material.069']: THREE.MeshStandardMaterial
    ['Material.070']: THREE.MeshStandardMaterial
    ['Material.072']: THREE.MeshStandardMaterial
    ['Material.073']: THREE.MeshStandardMaterial
    ['Material.074']: THREE.MeshStandardMaterial
    ['Material.075']: THREE.MeshStandardMaterial
    ['Material.076']: THREE.MeshStandardMaterial
    ['Material.077']: THREE.MeshStandardMaterial
    ['Material.078']: THREE.MeshStandardMaterial
    ['Material.079']: THREE.MeshStandardMaterial
    ['Material.080']: THREE.MeshStandardMaterial
    ['Material.081']: THREE.MeshStandardMaterial
    ['Material.087']: THREE.MeshStandardMaterial
    ['Material.088']: THREE.MeshStandardMaterial
    ['Material.089']: THREE.MeshStandardMaterial
    ['Material.091']: THREE.MeshStandardMaterial
    ['Material.092']: THREE.MeshStandardMaterial
    ['Material.093']: THREE.MeshStandardMaterial
    ['Material.094']: THREE.MeshStandardMaterial
    ['Material.095']: THREE.MeshStandardMaterial
    ['Material.096']: THREE.MeshStandardMaterial
    ['Material.098']: THREE.MeshStandardMaterial
    ['Material.099']: THREE.MeshStandardMaterial
    ['Material.100']: THREE.MeshStandardMaterial
    ['Material.101']: THREE.MeshStandardMaterial
    ['Material.102']: THREE.MeshStandardMaterial
    ['Material.103']: THREE.MeshStandardMaterial
    ['Material.104']: THREE.MeshStandardMaterial
    ['Material.105']: THREE.MeshStandardMaterial
    ['Material.106']: THREE.MeshStandardMaterial
    ['Material.107']: THREE.MeshStandardMaterial
    ['Material.108']: THREE.MeshStandardMaterial
    ['Material.109']: THREE.MeshStandardMaterial
    ['Material.110']: THREE.MeshStandardMaterial
    ['Material.111']: THREE.MeshStandardMaterial
    ['Material.112']: THREE.MeshStandardMaterial
    ['Material.113']: THREE.MeshStandardMaterial
    ['Material.114']: THREE.MeshStandardMaterial
    ['Material.115']: THREE.MeshStandardMaterial
    ['Material.116']: THREE.MeshStandardMaterial
    ['Material.117']: THREE.MeshStandardMaterial
    ['Material.118']: THREE.MeshStandardMaterial
    ['Material.119']: THREE.MeshStandardMaterial
    ['Material.120']: THREE.MeshStandardMaterial
    ['Material.121']: THREE.MeshStandardMaterial
    ['Material.122']: THREE.MeshStandardMaterial
    ['Material.123']: THREE.MeshStandardMaterial
    ['Material.124']: THREE.MeshStandardMaterial
    ['Material.125']: THREE.MeshStandardMaterial
    ['Material.126']: THREE.MeshStandardMaterial
    ['Material.127']: THREE.MeshStandardMaterial
    ['Material.128']: THREE.MeshStandardMaterial
    ['Material.129']: THREE.MeshStandardMaterial
    ['Material.130']: THREE.MeshStandardMaterial
    ['Material.131']: THREE.MeshStandardMaterial
    ['Material.132']: THREE.MeshStandardMaterial
    ['Material.133']: THREE.MeshStandardMaterial
    ['Material.146']: THREE.MeshStandardMaterial
    ['Material.147']: THREE.MeshStandardMaterial
    ['Material.148']: THREE.MeshStandardMaterial
    ['Material.161']: THREE.MeshStandardMaterial
    ['Material.162']: THREE.MeshStandardMaterial
    ['Material.163']: THREE.MeshStandardMaterial
    ['Material.164']: THREE.MeshStandardMaterial
    ['Material.167']: THREE.MeshStandardMaterial
    ['Column_material.002']: THREE.MeshStandardMaterial
    ['Column_rect.002']: THREE.MeshStandardMaterial
    ['Column_material.003']: THREE.MeshStandardMaterial
    ['Column_rect.003']: THREE.MeshStandardMaterial
    ['Column_material.004']: THREE.MeshStandardMaterial
    ['Column_rect.004']: THREE.MeshStandardMaterial
    ['Column_material.005']: THREE.MeshStandardMaterial
    ['Column_rect.005']: THREE.MeshStandardMaterial
    ['Column_material.006']: THREE.MeshStandardMaterial
    ['Column_rect.006']: THREE.MeshStandardMaterial
    ['Column_material.007']: THREE.MeshStandardMaterial
    ['Column_rect.007']: THREE.MeshStandardMaterial
    ['Column_material.008']: THREE.MeshStandardMaterial
    ['Column_rect.008']: THREE.MeshStandardMaterial
    ['Column_material.009']: THREE.MeshStandardMaterial
    ['Column_rect.009']: THREE.MeshStandardMaterial
    ['Column_material.010']: THREE.MeshStandardMaterial
    ['Column_rect.010']: THREE.MeshStandardMaterial
    ['Column_material.011']: THREE.MeshStandardMaterial
    ['Column_rect.011']: THREE.MeshStandardMaterial
    ['Column_material.012']: THREE.MeshStandardMaterial
    ['Column_rect.012']: THREE.MeshStandardMaterial
    ['Column_material.013']: THREE.MeshStandardMaterial
    ['Column_rect.013']: THREE.MeshStandardMaterial
    ['Column_material.014']: THREE.MeshStandardMaterial
    ['Column_rect.014']: THREE.MeshStandardMaterial
    ['Column_material.015']: THREE.MeshStandardMaterial
    ['Column_rect.015']: THREE.MeshStandardMaterial
    ['Column_material.016']: THREE.MeshStandardMaterial
    ['Column_rect.016']: THREE.MeshStandardMaterial
    ['Column_material.017']: THREE.MeshStandardMaterial
    ['Column_rect.017']: THREE.MeshStandardMaterial
    ['Column_material.018']: THREE.MeshStandardMaterial
    ['Column_rect.018']: THREE.MeshStandardMaterial
    ['Column_material.019']: THREE.MeshStandardMaterial
    ['Column_rect.019']: THREE.MeshStandardMaterial
    ['Column_material.020']: THREE.MeshStandardMaterial
    ['Column_rect.020']: THREE.MeshStandardMaterial
    ['Column_material.021']: THREE.MeshStandardMaterial
    ['Column_rect.021']: THREE.MeshStandardMaterial
    ['Column_material.022']: THREE.MeshStandardMaterial
    ['Column_rect.022']: THREE.MeshStandardMaterial
    ['Column_material.023']: THREE.MeshStandardMaterial
    ['Column_rect.023']: THREE.MeshStandardMaterial
    ['Column_material.024']: THREE.MeshStandardMaterial
    ['Column_rect.024']: THREE.MeshStandardMaterial
    ['Column_material.025']: THREE.MeshStandardMaterial
    ['Column_rect.025']: THREE.MeshStandardMaterial
    ['Column_material.026']: THREE.MeshStandardMaterial
    ['Column_rect.026']: THREE.MeshStandardMaterial
    ['Column_material.027']: THREE.MeshStandardMaterial
    ['Column_rect.027']: THREE.MeshStandardMaterial
    ['Column_material.028']: THREE.MeshStandardMaterial
    ['Column_material.029']: THREE.MeshStandardMaterial
    ['Column_rect.028']: THREE.MeshStandardMaterial
    ['Column_material.030']: THREE.MeshStandardMaterial
    ['Column_rect.029']: THREE.MeshStandardMaterial
    ['Column_material.031']: THREE.MeshStandardMaterial
    ['Column_rect.030']: THREE.MeshStandardMaterial
    ['Column_material.032']: THREE.MeshStandardMaterial
    ['Column_rect.031']: THREE.MeshStandardMaterial
    ['Column_material.033']: THREE.MeshStandardMaterial
    ['Column_rect.032']: THREE.MeshStandardMaterial
    ['Column_material.034']: THREE.MeshStandardMaterial
    ['Column_rect.033']: THREE.MeshStandardMaterial
    ['Column_material.035']: THREE.MeshStandardMaterial
    ['Column_rect.034']: THREE.MeshStandardMaterial
    ['Column_material.036']: THREE.MeshStandardMaterial
    ['Column_rect.035']: THREE.MeshStandardMaterial
    ['Column_material.037']: THREE.MeshStandardMaterial
    ['Column_rect.036']: THREE.MeshStandardMaterial
    ['Column_material.038']: THREE.MeshStandardMaterial
    ['Column_rect.037']: THREE.MeshStandardMaterial
    ['Column_material.039']: THREE.MeshStandardMaterial
    ['Column_rect.038']: THREE.MeshStandardMaterial
    ['Column_material.040']: THREE.MeshStandardMaterial
    ['Column_rect.039']: THREE.MeshStandardMaterial
    ['Column_material.041']: THREE.MeshStandardMaterial
    ['Column_rect.040']: THREE.MeshStandardMaterial
    ['Column_material.042']: THREE.MeshStandardMaterial
    ['Column_rect.041']: THREE.MeshStandardMaterial
    ['Column_material.043']: THREE.MeshStandardMaterial
    ['Column_material.044']: THREE.MeshStandardMaterial
    ['Column_rect.042']: THREE.MeshStandardMaterial
    ['Column_material.045']: THREE.MeshStandardMaterial
    ['Column_rect.043']: THREE.MeshStandardMaterial
    ['Column_material.046']: THREE.MeshStandardMaterial
    ['Column_rect.044']: THREE.MeshStandardMaterial
    ['Column_material.047']: THREE.MeshStandardMaterial
    ['Column_rect.045']: THREE.MeshStandardMaterial
    ['Column_material.048']: THREE.MeshStandardMaterial
    ['Column_material.049']: THREE.MeshStandardMaterial
    ['Column_rect.046']: THREE.MeshStandardMaterial
    ['Column_material.050']: THREE.MeshStandardMaterial
    ['Column_rect.047']: THREE.MeshStandardMaterial
    ['Column_material.051']: THREE.MeshStandardMaterial
    ['Column_rect.048']: THREE.MeshStandardMaterial
    ['Column_material.052']: THREE.MeshStandardMaterial
    ['Column_rect.049']: THREE.MeshStandardMaterial
    ['Column_material.053']: THREE.MeshStandardMaterial
    ['Column_rect.050']: THREE.MeshStandardMaterial
    ['Column_material.054']: THREE.MeshStandardMaterial
    ['Column_rect.051']: THREE.MeshStandardMaterial
    ['Column_material.055']: THREE.MeshStandardMaterial
    ['Column_rect.052']: THREE.MeshStandardMaterial
    ['Column_material.056']: THREE.MeshStandardMaterial
    ['Column_rect.053']: THREE.MeshStandardMaterial
    ['Column_material.057']: THREE.MeshStandardMaterial
    ['Column_rect.054']: THREE.MeshStandardMaterial
    ['Column_material.058']: THREE.MeshStandardMaterial
    ['Column_rect.055']: THREE.MeshStandardMaterial
    ['Column_material.059']: THREE.MeshStandardMaterial
    ['Column_rect.056']: THREE.MeshStandardMaterial
    ['Column_material.060']: THREE.MeshStandardMaterial
    ['Column_rect.057']: THREE.MeshStandardMaterial
    ['Column_material.061']: THREE.MeshStandardMaterial
    ['Column_rect.058']: THREE.MeshStandardMaterial
    ['Column_material.062']: THREE.MeshStandardMaterial
    ['Column_rect.059']: THREE.MeshStandardMaterial
    ['Column_material.063']: THREE.MeshStandardMaterial
    ['Column_material.064']: THREE.MeshStandardMaterial
    ['Column_rect.060']: THREE.MeshStandardMaterial
    ['Column_material.065']: THREE.MeshStandardMaterial
    ['Column_rect.061']: THREE.MeshStandardMaterial
    ['Column_material.066']: THREE.MeshStandardMaterial
    ['Column_rect.062']: THREE.MeshStandardMaterial
    ['Column_material.067']: THREE.MeshStandardMaterial
    ['Column_rect.063']: THREE.MeshStandardMaterial
    ['Column_material.068']: THREE.MeshStandardMaterial
    ['Column_rect.064']: THREE.MeshStandardMaterial
    ['Column_material.069']: THREE.MeshStandardMaterial
    ['Column_rect.065']: THREE.MeshStandardMaterial
    ['Column_material.070']: THREE.MeshStandardMaterial
    ['Column_rect.066']: THREE.MeshStandardMaterial
    ['Column_material.071']: THREE.MeshStandardMaterial
    ['Column_rect.067']: THREE.MeshStandardMaterial
    ['Column_material.072']: THREE.MeshStandardMaterial
    ['Column_rect.068']: THREE.MeshStandardMaterial
    ['Column_material.073']: THREE.MeshStandardMaterial
    ['Column_material.074']: THREE.MeshStandardMaterial
    ['Column_rect.069']: THREE.MeshStandardMaterial
    ['Column_material.075']: THREE.MeshStandardMaterial
    ['Column_rect.070']: THREE.MeshStandardMaterial
    ['Column_material.076']: THREE.MeshStandardMaterial
    ['Column_rect.071']: THREE.MeshStandardMaterial
    ['Column_material.077']: THREE.MeshStandardMaterial
    ['Column_rect.072']: THREE.MeshStandardMaterial
    ['Column_material.078']: THREE.MeshStandardMaterial
    ['Column_material.079']: THREE.MeshStandardMaterial
    ['Column_rect.073']: THREE.MeshStandardMaterial
    ['Column_material.080']: THREE.MeshStandardMaterial
    ['Column_rect.074']: THREE.MeshStandardMaterial
    ['Column_material.081']: THREE.MeshStandardMaterial
    ['Column_rect.075']: THREE.MeshStandardMaterial
    ['Column_material.082']: THREE.MeshStandardMaterial
    ['Column_rect.076']: THREE.MeshStandardMaterial
    ['Column_material.083']: THREE.MeshStandardMaterial
    ['Column_rect.077']: THREE.MeshStandardMaterial
    ['Column_material.084']: THREE.MeshStandardMaterial
    ['Column_rect.078']: THREE.MeshStandardMaterial
    ['Column_material.085']: THREE.MeshStandardMaterial
    ['Column_rect.079']: THREE.MeshStandardMaterial
    ['Column_material.086']: THREE.MeshStandardMaterial
    ['Column_material.087']: THREE.MeshStandardMaterial
    ['Column_material.088']: THREE.MeshStandardMaterial
    ['Column_material.089']: THREE.MeshStandardMaterial
    ['Column_material.090']: THREE.MeshStandardMaterial
    ['Column_material.091']: THREE.MeshStandardMaterial
    ['Column_material.092']: THREE.MeshStandardMaterial
    ['Column_material.093']: THREE.MeshStandardMaterial
    ['Column_material.094']: THREE.MeshStandardMaterial
    ['Column_material.095']: THREE.MeshStandardMaterial
    ['Column_material.096']: THREE.MeshStandardMaterial
    ['Column_material.097']: THREE.MeshStandardMaterial
    ['Column_material.098']: THREE.MeshStandardMaterial
    ['Column_material.099']: THREE.MeshStandardMaterial
    ['Column_material.100']: THREE.MeshStandardMaterial
    ['Column_material.101']: THREE.MeshStandardMaterial
    ['Material.048']: THREE.MeshStandardMaterial
    ['Column_material.102']: THREE.MeshStandardMaterial
    ['Column_material.103']: THREE.MeshStandardMaterial
    ['Column_material.104']: THREE.MeshStandardMaterial
    Material: THREE.MeshStandardMaterial
    ['Material.064']: THREE.MeshStandardMaterial
    ['Material.067']: THREE.MeshStandardMaterial
    ['Material.097']: THREE.MeshStandardMaterial
  }
  animations: GLTFAction[]
}

export function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/poc2.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <group position={[-73.665, 0, -107.622]}>
        <mesh geometry={nodes.DoorFrame.geometry} material={materials.Door_material} position={[-0.22, 0, 0.46]} rotation={[0, Math.PI / 2, 0]} scale={[1.757, 1.487, 1]}>
          <mesh geometry={nodes.Door.geometry} material={materials.Door_material} position={[0.418, 1.05, 0.022]}>
            <mesh geometry={nodes.Handle_Back.geometry} material={materials.Handle_material} position={[-0.764, 0, -0.005]} />
            <mesh geometry={nodes.Handle_Front.geometry} material={materials.Handle_material} position={[-0.764, 0, -0.029]} rotation={[-Math.PI, 0, 0]} />
          </mesh>
        </mesh>
      </group>
      <group position={[-90.222, 0, -87.969]}>
        <mesh geometry={nodes.DoorFrame001.geometry} material={materials.Door_material} position={[0.13, 0, -0.73]} scale={[1.503, 1.176, 1]}>
          <mesh geometry={nodes.Door001.geometry} material={materials.Door_material} position={[0.418, 1.05, 0.022]}>
            <mesh geometry={nodes.Handle_Back001.geometry} material={materials.Handle_material} position={[-0.764, 0, -0.005]} />
            <mesh geometry={nodes.Handle_Front001.geometry} material={materials.Handle_material} position={[-0.764, 0, -0.029]} rotation={[-Math.PI, 0, 0]} />
          </mesh>
        </mesh>
      </group>
      <group position={[31.249, 0, -107.456]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, 0.001]}>
            <group position={[-204.219, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
              <mesh geometry={nodes.wall_pillar_thing_Material001_0001.geometry} material={materials['Material.020']} position={[-41.463, 8.453, 0]} scale={[1.585, 1.636, 2.03]} />
            </group>
          </group>
        </group>
      </group>
      <group position={[31.249, 0, -110.941]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[-204.219, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_thing_Material001_0002.geometry} material={materials['Material.021']} position={[-48.599, 9.477, 0]} scale={[1.585, 1.636, 2.03]} />
          </group>
        </group>
      </group>
      <group position={[31.249, 0, -115.306]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, 0.001]}>
            <group position={[-204.219, 0, -413.62]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
              <mesh geometry={nodes.wall_pillar_thing_Material001_0003.geometry} material={materials['Material.022']} position={[-41.463, 8.453, 0]} scale={[1.585, 1.636, 2.03]} />
            </group>
          </group>
        </group>
      </group>
      <group position={[31.249, 0, -100.059]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[-204.219, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_thing_Material001_0004.geometry} material={materials['Material.023']} position={[-41.463, 8.453, 0]} scale={[1.585, 1.636, 2.03]} />
          </group>
        </group>
      </group>
      <group position={[44.895, 0, -101.319]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[-204.219, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_thing_Material001_0005.geometry} material={materials['Material.024']} position={[-48.47, 10.578, 0]} scale={[1.585, 1.636, 2.03]} />
          </group>
        </group>
      </group>
      <group position={[31.249, 0, -110.941]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[-204.219, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_thing_Material001_0006.geometry} material={materials['Material.025']} position={[-48.599, 9.477, 0]} scale={[1.585, 1.636, 2.03]} />
          </group>
        </group>
      </group>
      <group position={[44.895, 0, -109.585]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[-204.219, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_thing_Material001_0007.geometry} material={materials['Material.026']} position={[-48.47, 10.578, 0]} scale={[1.585, 1.636, 2.03]} />
          </group>
        </group>
      </group>
      <group position={[-2.712, 0, -101.319]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_Material001_0001.geometry} material={materials['Material.029']} position={[0.42, 1.428, 0]} scale={[1, 1, 1.942]} />
          </group>
        </group>
      </group>
      <group position={[0.051, 0, -104.36]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -413.622]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_Material001_0002.geometry} material={materials['Material.030']} position={[0.42, 1.428, 0]} scale={[1, 1, 1.942]} />
          </group>
        </group>
      </group>
      <group position={[-2.709, 0, -107.045]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, 0.001]}>
            <group position={[0, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
              <mesh geometry={nodes.wall_pillar_Material001_0003.geometry} material={materials['Material.031']} position={[0.42, 1.428, 0]} scale={[1, 1, 1.942]} />
            </group>
          </group>
        </group>
      </group>
      <group position={[-0.272, 0, -109.366]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_Material001_0004.geometry} material={materials['Material.032']} position={[0.42, 1.428, 0]} scale={[1, 1, 1.942]} />
          </group>
        </group>
      </group>
      <group position={[-2.905, 0, -111.942]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_Material001_0005.geometry} material={materials['Material.033']} position={[0.42, 1.428, 0]} scale={[1, 1, 1.942]} />
          </group>
        </group>
      </group>
      <group position={[-0.66, 0, -114.123]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_Material001_0006.geometry} material={materials['Material.034']} position={[0.42, 1.428, 0]} scale={[1, 1, 1.942]} />
          </group>
        </group>
      </group>
      <group position={[-3.066, 0, -114.123]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_Material001_0007.geometry} material={materials['Material.035']} position={[0.42, 4.105, 0]} scale={[1, 1, 1.942]} />
          </group>
        </group>
      </group>
      <group position={[31.249, 0, -101.319]} rotation={[Math.PI / 2, 0, 0]} scale={[-3.751, -1, -1]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[333.755, 0, 95.557]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_3_Material001_0001.geometry} material={materials['Material.044']} position={[1.87, -56.091, 0]} scale={[0.709, 17.535, 2.001]} />
          </group>
        </group>
      </group>
      <group position={[26.685, 0, -101.319]} rotation={[Math.PI / 2, 0, 0]} scale={[-3.751, -1, -1]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[333.755, 0, 95.557]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_3_Material001_0002.geometry} material={materials['Material.045']} position={[2.063, -23.803, 0]} scale={[0.709, 4.01, 2.001]} />
          </group>
        </group>
      </group>
      <group position={[19.737, 0, -101.319]} rotation={[Math.PI / 2, 0, 0]} scale={[-3.751, -1, -1]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[333.755, 0, 95.557]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_3_Material001_0003.geometry} material={materials['Material.046']} position={[1.87, -30.161, 0]} scale={[0.709, 4.302, 2.001]} />
          </group>
        </group>
      </group>
      <group position={[31.249, 0, -101.319]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <mesh geometry={nodes.wall_pillar_Material001_0008.geometry} material={materials['Material.049']} position={[0, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100} />
        </group>
      </group>
      <group position={[2.598, 0, -78.836]} rotation={[-Math.PI / 2, 0, 0]} scale={[0.398, 0.402, 1]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -0.002]}>
            <group position={[0, 0, -413.623]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
              <mesh geometry={nodes.wall_pillar_Material001_0009.geometry} material={materials['Material.050']} position={[-1.158, 1.428, 0]} scale={[1, 1, 1.942]} />
            </group>
          </group>
        </group>
      </group>
      <group position={[4.775, 0, -78.836]} rotation={[-Math.PI / 2, 0, 0]} scale={[0.398, 0.402, 1]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -0.002]}>
            <group position={[0, 0, -413.623]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
              <mesh geometry={nodes.wall_pillar_Material001_0010.geometry} material={materials['Material.051']} position={[-1.158, 1.428, 0]} scale={[1, 1, 1.942]} />
            </group>
          </group>
        </group>
      </group>
      <group position={[4.775, 0, -83.275]} rotation={[-Math.PI / 2, 0, 0]} scale={[0.398, 0.402, 1]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_Material001_0011.geometry} material={materials['Material.052']} position={[-1.158, 1.428, 0]} scale={[1, 1, 1.942]} />
          </group>
        </group>
      </group>
      <group position={[2.433, 0, -83.275]} rotation={[-Math.PI / 2, 0, 0]} scale={[0.398, 0.402, 1]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_Material001_0012.geometry} material={materials['Material.053']} position={[-1.158, 1.428, 0]} scale={[1, 1, 1.942]} />
          </group>
        </group>
      </group>
      <group position={[4.775, 0, -75.345]} rotation={[-Math.PI / 2, 0, 0]} scale={[0.398, 0.402, 1]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_Material001_0013.geometry} material={materials['Material.054']} position={[-1.158, 1.428, 0]} scale={[1, 1, 1.942]} />
          </group>
        </group>
      </group>
      <group position={[4.775, 0, -71.886]} rotation={[-Math.PI / 2, 0, 0]} scale={[0.398, 0.402, 1]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_Material001_0014.geometry} material={materials['Material.055']} position={[-1.158, 1.428, 0]} scale={[1, 1, 1.942]} />
          </group>
        </group>
      </group>
      <group position={[4.775, 0, -68.342]} rotation={[-Math.PI / 2, 0, 0]} scale={[0.398, 0.402, 1]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -413.623]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_Material001_0015.geometry} material={materials['Material.056']} position={[-1.158, 1.428, 0]} scale={[1, 1, 1.942]} />
          </group>
        </group>
      </group>
      <group position={[4.775, 0, -64.713]} rotation={[-Math.PI / 2, 0, 0]} scale={[0.398, 0.402, 1]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_Material001_0016.geometry} material={materials['Material.057']} position={[-1.158, 1.428, 0]} scale={[1, 1, 1.942]} />
          </group>
        </group>
      </group>
      <group position={[4.775, 0, -61.226]} rotation={[-Math.PI / 2, 0, 0]} scale={[0.398, 0.402, 1]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -0.001]}>
            <group position={[0, 0, -413.622]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
              <mesh geometry={nodes.wall_pillar_Material001_0017.geometry} material={materials['Material.058']} position={[-1.158, 1.428, 0]} scale={[1, 1, 1.942]} />
            </group>
          </group>
        </group>
      </group>
      <group position={[2.598, 0, -75.012]} rotation={[-Math.PI / 2, 0, 0]} scale={[0.398, 0.402, 1]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_Material001_0018.geometry} material={materials['Material.059']} position={[-1.158, 1.428, 0]} scale={[1, 1, 1.942]} />
          </group>
        </group>
      </group>
      <group position={[2.598, 0, -71.653]} rotation={[-Math.PI / 2, 0, 0]} scale={[0.398, 0.402, 1]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -0.002]}>
            <group position={[0, 0, -413.623]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
              <mesh geometry={nodes.wall_pillar_Material001_0019.geometry} material={materials['Material.060']} position={[-1.158, 1.671, 0]} scale={[1, 1, 1.942]} />
            </group>
          </group>
        </group>
      </group>
      <group position={[2.598, 0, -68.477]} rotation={[-Math.PI / 2, 0, 0]} scale={[0.398, 0.402, 1]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -0.002]}>
            <group position={[0, 0, -413.623]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
              <mesh geometry={nodes.wall_pillar_Material001_0020.geometry} material={materials['Material.061']} position={[-1.158, 1.671, 0]} scale={[1, 1, 1.942]} />
            </group>
          </group>
        </group>
      </group>
      <group position={[2.598, 0, -64.705]} rotation={[-Math.PI / 2, 0, 0]} scale={[0.398, 0.402, 1]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -0.002]}>
            <group position={[0, 0, -413.623]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
              <mesh geometry={nodes.wall_pillar_Material001_0021.geometry} material={materials['Material.062']} position={[-1.158, 1.671, 0]} scale={[1, 1, 1.942]} />
            </group>
          </group>
        </group>
      </group>
      <group position={[2.598, 0, -61.156]} rotation={[-Math.PI / 2, 0, 0]} scale={[0.398, 0.402, 1]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -413.622]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_Material001_0022.geometry} material={materials['Material.063']} position={[-1.158, 1.671, 0]} scale={[1, 1, 1.942]} />
          </group>
        </group>
      </group>
      <group position={[-3.129, 0, -61.156]} rotation={[-Math.PI / 2, 0, 0]} scale={[0.398, 0.402, 1]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -413.622]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_Material001_0023.geometry} material={materials['Material.071']} position={[-1.158, 1.671, 0]} scale={[1, 1, 1.942]} />
          </group>
        </group>
      </group>
      <group position={[44.895, 0, -31.88]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[-204.219, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_thing_Material001_0008.geometry} material={materials['Material.082']} position={[-36.733, 8.856, 0]} scale={[1.585, 1.636, 2.03]} />
          </group>
        </group>
      </group>
      <group position={[44.895, 0, -25.802]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[-204.219, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_thing_Material001_0009.geometry} material={materials['Material.083']} position={[-36.733, 2.187, 0]} scale={[1.585, 1.636, 2.03]} />
          </group>
        </group>
      </group>
      <group position={[44.895, 0, -25.802]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[-204.219, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_thing_Material001_0010.geometry} material={materials['Material.084']} position={[-36.733, 8.856, 0]} scale={[1.585, 1.636, 2.03]} />
          </group>
        </group>
      </group>
      <group position={[44.895, 0, -19.786]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, 0]}>
            <group position={[-204.219, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
              <mesh geometry={nodes.wall_pillar_thing_Material001_0011.geometry} material={materials['Material.085']} position={[-36.733, 2.187, 0]} scale={[1.585, 1.636, 2.03]} />
            </group>
          </group>
        </group>
      </group>
      <group position={[26.685, 0, -51.135]} rotation={[Math.PI / 2, 0, 0]} scale={[-3.751, -1, -1]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[333.755, 0, 95.557]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_3_Material001_0004.geometry} material={materials['Material.086']} position={[3.386, -27.738, 0]} scale={[0.709, 4.836, 2.001]} />
          </group>
        </group>
      </group>
      <group position={[26.685, 0, -69.386]} rotation={[Math.PI / 2, 0, 0]} scale={[-3.751, -1, -1]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[333.755, 0, 95.557]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_3_Material001_0005.geometry} material={materials['Material.090']} position={[3.386, -22.127, 0]} scale={[0.709, 1.782, 2.001]} />
          </group>
        </group>
      </group>
      <group position={[-10.243, 0, -84.934]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, 0.001]}>
            <group position={[-204.22, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
              <mesh geometry={nodes.wall_pillar_thing_Material001_0012.geometry} material={materials['Material.134']} position={[-48.599, 11.16, 0]} scale={[1.585, 1.636, 2.03]} />
            </group>
          </group>
        </group>
      </group>
      <group position={[-10.243, 0, -78.91]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[-204.22, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_thing_Material001_0013.geometry} material={materials['Material.135']} position={[-48.599, 11.16, 0]} scale={[1.585, 1.636, 2.03]} />
          </group>
        </group>
      </group>
      <group position={[-10.243, 0, -72.948]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[-204.22, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_thing_Material001_0014.geometry} material={materials['Material.136']} position={[-54.711, 11.16, 0]} scale={[1.585, 1.636, 2.03]} />
          </group>
        </group>
      </group>
      <group position={[-10.243, 0, -72.948]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[-204.22, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_thing_Material001_0015.geometry} material={materials['Material.137']} position={[-48.599, 11.16, 0]} scale={[1.585, 1.636, 2.03]} />
          </group>
        </group>
      </group>
      <group position={[-10.243, 0, -78.956]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[-204.22, 0, -413.622]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_thing_Material001_0016.geometry} material={materials['Material.138']} position={[-54.711, 11.16, 0]} scale={[1.585, 1.636, 2.03]} />
          </group>
        </group>
      </group>
      <group position={[-16.263, 0, -78.956]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[-204.22, 0, -413.622]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_thing_Material001_0017.geometry} material={materials['Material.139']} position={[-54.711, 11.16, 0]} scale={[1.585, 1.636, 2.03]} />
          </group>
        </group>
      </group>
      <group position={[-16.263, 0, -84.878]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[-204.22, 0, -413.622]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_thing_Material001_0018.geometry} material={materials['Material.140']} position={[-54.711, 11.16, 0]} scale={[1.585, 1.636, 2.03]} />
          </group>
        </group>
      </group>
      <group position={[-10.457, 0, -84.878]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[-204.22, 0, -413.622]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_thing_Material001_0019.geometry} material={materials['Material.141']} position={[-54.711, 11.16, 0]} scale={[1.585, 1.636, 2.03]} />
          </group>
        </group>
      </group>
      <group position={[-22.197, 0, -84.878]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[-204.22, 0, -413.622]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_thing_Material001_0020.geometry} material={materials['Material.142']} position={[-54.711, 11.16, 0]} scale={[1.585, 1.636, 2.03]} />
          </group>
        </group>
      </group>
      <group position={[-22.197, 0, -79.176]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, 0]}>
            <group position={[-204.22, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
              <mesh geometry={nodes.wall_pillar_thing_Material001_0021.geometry} material={materials['Material.143']} position={[-54.711, 11.16, 0]} scale={[1.585, 1.636, 2.03]} />
            </group>
          </group>
        </group>
      </group>
      <group position={[-15.968, 0, -72.553]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[-204.22, 0, -413.622]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_thing_Material001_0023.geometry} material={materials['Material.145']} position={[-54.711, 11.16, 0]} scale={[1.585, 1.636, 2.03]} />
          </group>
        </group>
      </group>
      <group position={[-45.991, 0, -75.035]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_Material001_0024.geometry} material={materials['Material.149']} position={[-0.209, 4.105, 0]} scale={[1, 1, 1.942]} />
          </group>
        </group>
      </group>
      <group position={[-45.991, 0, -75.035]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_Material001_0025.geometry} material={materials['Material.150']} position={[-0.23, 7.028, 0]} scale={[1, 1, 1.942]} />
          </group>
        </group>
      </group>
      <group position={[-44.648, 0, -78.14]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_Material001_0026.geometry} material={materials['Material.151']} position={[1.317, 7.028, 0]} scale={[1, 1, 1.942]} />
          </group>
        </group>
      </group>
      <group position={[-42.783, 0, -81.298]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -413.622]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_Material001_0027.geometry} material={materials['Material.152']} position={[2.025, 7.028, 0]} scale={[1, 1, 1.942]} />
          </group>
        </group>
      </group>
      <group position={[-42.783, 0, -84.313]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_Material001_0028.geometry} material={materials['Material.153']} position={[2.025, 7.028, 0]} scale={[1, 1, 1.942]} />
          </group>
        </group>
      </group>
      <group position={[-45.386, 0, -84.313]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_Material001_0029.geometry} material={materials['Material.154']} position={[2.025, 7.028, 0]} scale={[1, 1, 1.942]} />
          </group>
        </group>
      </group>
      <group position={[-48.134, 0, -84.313]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_Material001_0030.geometry} material={materials['Material.155']} position={[2.025, 7.028, 0]} scale={[1, 1, 1.942]} />
          </group>
        </group>
      </group>
      <group position={[12.862, 0, -78.956]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[-204.22, 0, -413.622]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_thing_Material001_0022.geometry} material={materials['Material.156']} position={[-54.711, 16.968, 0]} scale={[1.585, 1.636, 2.03]} />
          </group>
        </group>
      </group>
      <group position={[-45.378, 0, -81.298]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -413.622]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_Material001_0031.geometry} material={materials['Material.157']} position={[2.025, 7.028, 0]} scale={[1, 1, 1.942]} />
          </group>
        </group>
      </group>
      <group position={[-48.198, 0, -81.298]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -413.622]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_Material001_0032.geometry} material={materials['Material.158']} position={[2.025, 7.028, 0]} scale={[1, 1, 1.942]} />
          </group>
        </group>
      </group>
      <group position={[-48.185, 0, -78.14]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_Material001_0033.geometry} material={materials['Material.159']} position={[2.025, 7.028, 0]} scale={[1, 1, 1.942]} />
          </group>
        </group>
      </group>
      <group position={[-43.055, 0, -75.035]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_Material001_0034.geometry} material={materials['Material.160']} position={[-0.23, 7.028, 0]} scale={[1, 1, 1.942]} />
          </group>
        </group>
      </group>
      <group position={[-35.218, 0, -75.035]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_Material001_0035.geometry} material={materials['Material.165']} position={[-0.23, 7.028, 0]} scale={[1, 1, 1.942]} />
          </group>
        </group>
      </group>
      <group position={[-36.223, 0, -66.737]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_Material001_0036.geometry} material={materials['Material.166']} position={[-0.23, 7.028, 0]} scale={[1, 1, 1.942]} />
          </group>
        </group>
      </group>
      <group position={[-22.197, 0, -113.343]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -0.001]}>
            <group position={[-204.22, 0, -413.622]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
              <mesh geometry={nodes.wall_pillar_thing_Material001_0024.geometry} material={materials['Material.168']} position={[-89.739, 11.16, 0]} scale={[1.585, 1.636, 2.03]} />
            </group>
          </group>
        </group>
      </group>
      <group position={[-22.197, 0, -113.343]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -0.001]}>
            <group position={[-204.22, 0, -413.622]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
              <mesh geometry={nodes.wall_pillar_thing_Material001_0025.geometry} material={materials['Material.169']} position={[-89.739, 11.16, 0]} scale={[1.585, 1.636, 2.03]} />
            </group>
          </group>
        </group>
      </group>
      <group position={[-47.918, 0, -113.343]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -0.001]}>
            <group position={[-204.22, 0, -413.622]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
              <mesh geometry={nodes.wall_pillar_thing_Material001_0026.geometry} material={materials['Material.170']} position={[-89.739, 9.785, 0]} scale={[1.585, 1.636, 2.03]} />
            </group>
          </group>
        </group>
      </group>
      <mesh geometry={nodes.Plane.geometry} material={nodes.Plane.material} position={[-46.804, 0, -60.777]} scale={114.921} />
      <mesh geometry={nodes.Cube.geometry} material={nodes.Cube.material} position={[-92.052, 1.909, -69.77]} scale={[0.15, 2.01, 19]} />
      <mesh geometry={nodes.Cube001.geometry} material={nodes.Cube001.material} position={[-83.541, 1.909, -89.393]} scale={[0.15, 2.01, 0.816]} />
      <mesh geometry={nodes.Cube003.geometry} material={nodes.Cube003.material} position={[-85.778, 1.909, -88.673]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.369]} />
      <mesh geometry={nodes.Cube004.geometry} material={nodes.Cube004.material} position={[-83.541, 1.909, -93.715]} scale={[0.15, 2.01, 1.078]} />
      <mesh geometry={nodes.Cube005.geometry} material={nodes.Cube005.material} position={[-82.913, 1.911, -90.095]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 0.622]} />
      <mesh geometry={nodes.Cube006.geometry} material={nodes.Cube006.material} position={[-78.795, 1.909, -91.228]} scale={[0.24, 2.01, 1.23]} />
      <mesh geometry={nodes.Cube007.geometry} material={nodes.Cube007.material} position={[-81.134, 1.911, -92.55]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.568]} />
      <mesh geometry={nodes.Cube008.geometry} material={nodes.Cube008.material} position={[-86.948, 1.911, -94.79]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 3.556]} />
      <mesh geometry={nodes.Column.geometry} material={materials.Column_material} position={[-89.647, 0.023, -91.275]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_bottom.geometry} material={materials.Column_rect} position={[0, -0.05, 0]} />
        <mesh geometry={nodes.Column_box_top.geometry} material={materials.Column_rect} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Cube009.geometry} material={nodes.Cube009.material} position={[-90.33, 1.909, -97.178]} scale={[0.15, 2.01, 2.538]} />
      <mesh geometry={nodes.Cube010.geometry} material={nodes.Cube010.material} position={[-89.269, 1.911, -99.637]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 1.089]} />
      <mesh geometry={nodes.Cube011.geometry} material={materials['Material.001']} position={[-88.045, 1.909, -104.846]} scale={[0.15, 2.01, 5.241]} />
      <mesh geometry={nodes.Cube012.geometry} material={materials['Material.001']} position={[-77.853, 1.911, -104.328]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 4.201]} />
      <mesh geometry={nodes.Cube013.geometry} material={nodes.Cube013.material} position={[-85.096, 1.911, -109.953]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 3.127]} />
      <mesh geometry={nodes.Cube014.geometry} material={nodes.Cube014.material} position={[-82.101, 1.911, -107.143]} scale={[0.15, 2.01, 2.995]} />
      <mesh geometry={nodes.Cube015.geometry} material={nodes.Cube015.material} position={[-73.782, 1.911, -105.206]} scale={[0.15, 2.01, 1.035]} />
      <mesh geometry={nodes.Cube016.geometry} material={nodes.Cube016.material} position={[-75.971, 1.911, -109.941]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.35]} />
      <mesh geometry={nodes.Cube017.geometry} material={nodes.Cube017.material} position={[-84.678, 1.911, -122.531]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 6.425]} />
      <mesh geometry={nodes.Cube018.geometry} material={nodes.Cube018.material} position={[-78.16, 1.911, -116.232]} scale={[0.15, 2.01, 6.425]} />
      <mesh geometry={nodes.Cube019.geometry} material={nodes.Cube019.material} position={[-91.042, 1.909, -123.636]} scale={[0.15, 2.01, 1.121]} />
      <mesh geometry={nodes.Cube020.geometry} material={nodes.Cube020.material} position={[-94.525, 1.911, -124.558]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 3.556]} />
      <mesh geometry={nodes.Cube021.geometry} material={nodes.Cube021.material} position={[-95.464, 1.827, -88.62]} rotation={[1.603, -1.565, 1.571]} scale={[0.15, 2.01, 3.556]} />
      <mesh geometry={nodes.Cube022.geometry} material={nodes.Cube022.material} position={[-101.277, 1.866, -90.86]} rotation={[1.603, -1.565, 1.571]} scale={[0.15, 2.01, 2.568]} />
      <mesh geometry={nodes.Cube023.geometry} material={nodes.Cube023.material} position={[-103.617, 1.894, -92.182]} rotation={[-3.109, 0, 3.136]} scale={[0.24, 2.01, 1.23]} />
      <mesh geometry={nodes.Cube024.geometry} material={nodes.Cube024.material} position={[-101.277, 1.945, -93.313]} rotation={[1.603, -1.565, 1.571]} scale={[0.15, 2.01, 2.568]} />
      <mesh geometry={nodes.Cube025.geometry} material={nodes.Cube025.material} position={[-98.871, 1.841, -89.695]} rotation={[-3.109, 0, 3.136]} scale={[0.15, 2.01, 1.078]} />
      <mesh geometry={nodes.Cube026.geometry} material={nodes.Cube026.material} position={[-97.646, 2.016, -94.734]} rotation={[1.603, -1.565, 1.571]} scale={[0.15, 2.01, 1.389]} />
      <mesh geometry={nodes.Cube027.geometry} material={nodes.Cube027.material} position={[-98.871, 1.98, -94.015]} rotation={[-3.109, 0, 3.136]} scale={[0.15, 2.01, 0.816]} />
      <mesh geometry={nodes.Cube028.geometry} material={nodes.Cube028.material} position={[-96.41, 1.909, -97.178]} scale={[0.15, 2.01, 2.538]} />
      <mesh geometry={nodes.Cube029.geometry} material={nodes.Cube029.material} position={[-99.051, 1.911, -99.637]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.778]} />
      <mesh geometry={nodes.Cube030.geometry} material={nodes.Cube030.material} position={[-101.586, 1.909, -102.812]} scale={[0.15, 2.01, 3.327]} />
      <mesh geometry={nodes.Cube031.geometry} material={nodes.Cube031.material} position={[-102.361, 2.016, -113.183]} rotation={[1.603, -1.565, 1.571]} scale={[0.15, 2.01, 0.709]} />
      <mesh geometry={nodes.Cube032.geometry} material={nodes.Cube032.material} position={[-103.139, 2.016, -114.021]} scale={[0.15, 2.01, 0.777]} />
      <mesh geometry={nodes.Cube033.geometry} material={nodes.Cube033.material} position={[-102.58, 2.016, -114.973]} rotation={[1.603, -1.565, 1.571]} scale={[0.15, 2.01, 0.709]} />
      <mesh geometry={nodes.Cube034.geometry} material={nodes.Cube034.material} position={[-102.015, 1.909, -118.095]} rotation={[0, 0, Math.PI]} scale={[0.15, 2.01, 3.231]} />
      <mesh geometry={nodes.Cube035.geometry} material={nodes.Cube035.material} position={[-91.601, 1.909, -107.654]} scale={[0.15, 2.01, 2.649]} />
      <mesh geometry={nodes.Cube036.geometry} material={nodes.Cube036.material} position={[-97.708, 1.909, -107.654]} scale={[0.15, 2.01, 2.649]} />
      <mesh geometry={nodes.Cube037.geometry} material={nodes.Cube037.material} position={[-94.615, 1.909, -104.993]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 3.001]} />
      <mesh geometry={nodes.Cube038.geometry} material={nodes.Cube038.material} position={[-98.291, 2.016, -110.275]} rotation={[1.603, -1.565, 1.571]} scale={[0.15, 2.01, 0.709]} />
      <mesh geometry={nodes.Cube039.geometry} material={nodes.Cube039.material} position={[-94.108, 1.909, -111.099]} scale={[0.15, 2.01, 1.058]} />
      <mesh geometry={nodes.Cube040.geometry} material={nodes.Cube040.material} position={[-92.832, 1.909, -110.177]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 1.149]} />
      <mesh geometry={nodes.Cube041.geometry} material={nodes.Cube041.material} position={[-96.558, 1.909, -112.025]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.455]} />
      <mesh geometry={nodes.Cube042.geometry} material={nodes.Cube042.material} position={[-98.865, 2.016, -111.037]} scale={[0.15, 2.01, 0.8]} />
      <mesh geometry={nodes.Cube043.geometry} material={nodes.Cube043.material} position={[-102.374, 2.016, -107.994]} rotation={[1.603, -1.565, 1.571]} scale={[0.15, 2.01, 0.709]} />
      <mesh geometry={nodes.Cube044.geometry} material={nodes.Cube044.material} position={[-102.934, 2.016, -107.041]} scale={[0.15, 2.01, 0.777]} />
      <mesh geometry={nodes.Cube045.geometry} material={nodes.Cube045.material} position={[-102.155, 2.016, -106.204]} rotation={[1.603, -1.565, 1.571]} scale={[0.15, 2.01, 0.709]} />
      <mesh geometry={nodes.Cube046.geometry} material={nodes.Cube046.material} position={[-101.715, 1.909, -110.454]} scale={[0.15, 2.01, 2.711]} />
      <mesh geometry={nodes.Cube047.geometry} material={nodes.Cube047.material} position={[-97.936, 1.909, -122.904]} scale={[0.15, 2.01, 1.76]} />
      <mesh geometry={nodes.Cube048.geometry} material={nodes.Cube048.material} position={[-99.966, 1.911, -121.183]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.053]} />
      <mesh geometry={nodes.Cube049.geometry} material={nodes.Cube049.material} position={[-83.431, 1.909, -113.609]} rotation={[0, -1.564, 0]} scale={[0.15, 2.01, 2.248]} />
      <mesh geometry={nodes.Cube050.geometry} material={nodes.Cube050.material} position={[-84.653, 1.909, -118.803]} rotation={[0, -1.564, 0]} scale={[0.15, 2.01, 3.285]} />
      <mesh geometry={nodes.Cube051.geometry} material={nodes.Cube051.material} position={[-81.308, 1.909, -116.162]} rotation={[Math.PI, -0.006, Math.PI]} scale={[0.15, 2.01, 2.649]} />
      <mesh geometry={nodes.Cube052.geometry} material={nodes.Cube052.material} position={[-85.509, 1.909, -114.698]} rotation={[Math.PI, -0.006, Math.PI]} scale={[0.15, 2.01, 1.175]} />
      <mesh geometry={nodes.Cube053.geometry} material={nodes.Cube053.material} position={[-86.559, 1.909, -115.667]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 1.175]} />
      <mesh geometry={nodes.Cube054.geometry} material={nodes.Cube054.material} position={[-87.781, 1.909, -117.175]} rotation={[Math.PI, -0.006, Math.PI]} scale={[0.15, 2.01, 1.6]} />
      <mesh geometry={nodes.Cube055.geometry} material={nodes.Cube055.material} position={[-96.244, 1.909, -114.882]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.455]} />
      <mesh geometry={nodes.Cube056.geometry} material={nodes.Cube056.material} position={[-93.968, 2.016, -115.371]} scale={[0.15, 2.01, 0.655]} />
      <mesh geometry={nodes.Cube057.geometry} material={nodes.Cube057.material} position={[-91.965, 1.909, -115.855]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.123]} />
      <mesh geometry={nodes.Cube058.geometry} material={nodes.Cube058.material} position={[-89.908, 2.016, -116.439]} scale={[0.15, 2.01, 0.655]} />
      <mesh geometry={nodes.Cube059.geometry} material={nodes.Cube059.material} position={[-94.259, 1.827, -117.121]} rotation={[1.603, -1.565, 1.571]} scale={[0.15, 2.01, 4.48]} />
      <mesh geometry={nodes.Cube060.geometry} material={nodes.Cube060.material} position={[-98.594, 2.016, -115.936]} scale={[0.15, 2.01, 1.081]} />
      <mesh geometry={nodes.Column001.geometry} material={materials['Column_material.001']} position={[-79.301, 0.023, -109.846]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_bottom001.geometry} material={materials['Column_rect.001']} position={[0, -0.05, 0]} />
        <mesh geometry={nodes.Column_box_top001.geometry} material={materials['Column_rect.001']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Cube061.geometry} material={nodes.Cube061.material} position={[-73.782, 1.911, -109.075]} scale={[0.15, 2.01, 1.066]} />
      <mesh geometry={nodes.Cube062.geometry} material={nodes.Cube062.material} position={[-69.425, 1.911, -106.057]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 4.137]} />
      <mesh geometry={nodes.Cube063.geometry} material={nodes.Cube063.material} position={[-66.515, 1.911, -108.149]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 7.207]} />
      <mesh geometry={nodes.Cube064.geometry} material={nodes.Cube064.material} position={[-53.846, 3.027, -114.726]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 3.071, 5.612]} />
      <mesh geometry={nodes.Cube065.geometry} material={nodes.Cube065.material} position={[-59.401, 2.998, -111.485]} scale={[0.15, 3.121, 3.371]} />
      <mesh geometry={nodes.Cube067.geometry} material={nodes.Cube067.material} position={[-53.657, 0.363, -104.441]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 0.364, 5.612]} />
      <mesh geometry={nodes.Cube068.geometry} material={nodes.Cube068.material} position={[-53.846, -7.045, -100.522]} rotation={[Math.PI / 2, 0, -Math.PI / 2]} scale={[0.255, 0.371, 13.373]} />
      <mesh geometry={nodes.Cube070.geometry} material={nodes.Cube070.material} position={[-57.749, 2.998, -111.485]} scale={[0.15, 3.121, 3.371]} />
      <mesh geometry={nodes.Cube071.geometry} material={nodes.Cube071.material} position={[-56.168, 2.998, -111.485]} scale={[0.15, 3.121, 3.371]} />
      <mesh geometry={nodes.Cube072.geometry} material={nodes.Cube072.material} position={[-54.536, 2.998, -111.485]} scale={[0.15, 3.121, 3.371]} />
      <mesh geometry={nodes.Cube073.geometry} material={nodes.Cube073.material} position={[-52.934, 2.998, -111.485]} scale={[0.15, 3.121, 3.371]} />
      <mesh geometry={nodes.Cube074.geometry} material={nodes.Cube074.material} position={[-51.295, 2.998, -111.485]} scale={[0.15, 3.121, 3.371]} />
      <mesh geometry={nodes.Cube075.geometry} material={nodes.Cube075.material} position={[-49.677, 2.998, -111.485]} scale={[0.15, 3.121, 3.371]} />
      <mesh geometry={nodes.Cube076.geometry} material={nodes.Cube076.material} position={[-48.133, 2.998, -111.485]} scale={[0.15, 3.121, 3.371]} />
      <mesh geometry={nodes.Cube077.geometry} material={nodes.Cube077.material} position={[-47.888, -7.299, -100.336]} scale={[0.15, 13.45, 4.228]} />
      <mesh geometry={nodes.Cube078.geometry} material={nodes.Cube078.material} position={[-53.763, 3.051, -96.018]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 3.104, 5.948]} />
      <mesh geometry={nodes.Plane001.geometry} material={nodes.Plane001.material} position={[-53.8, 6.119, -105.505]} scale={[5.797, 1, 9.371]} />
      <mesh geometry={nodes.Cube069.geometry} material={nodes.Cube069.material} position={[-53.763, -2.949, -96.018]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 3.104, 5.948]} />
      <mesh geometry={nodes.Cube079.geometry} material={nodes.Cube079.material} position={[-53.763, -8.949, -96.018]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 3.104, 5.948]} />
      <mesh geometry={nodes.Cube080.geometry} material={nodes.Cube080.material} position={[-53.763, -13.949, -96.018]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 3.104, 5.948]} />
      <mesh geometry={nodes.Cube081.geometry} material={nodes.Cube081.material} position={[-53.483, -20.538, -99.769]} rotation={[1.561, Math.PI / 2, 0]} scale={[0.15, 4.393, 6.236]} />
      <mesh geometry={nodes.Cube082.geometry} material={nodes.Cube082.material} position={[-53.763, -19.933, -96.018]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 3.104, 5.948]} />
      <mesh geometry={nodes.Cube066.geometry} material={nodes.Cube066.material} position={[-59.355, -7.299, -101.182]} scale={[0.15, 13.45, 4.892]} />
      <mesh geometry={nodes.Cube083.geometry} material={materials['Material.002']} position={[-43.564, 1.911, -104.413]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 4.201]} />
      <mesh geometry={nodes.Cube084.geometry} material={materials['Material.003']} position={[-41.79, 1.911, -108.229]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 6.424]} />
      <mesh geometry={nodes.Cube085.geometry} material={nodes.Cube085.material} position={[-39.537, 1.909, -97.903]} scale={[0.24, 2.01, 6.691]} />
      <mesh geometry={nodes.Cube086.geometry} material={nodes.Cube086.material} position={[-35.624, 1.909, -101.762]} scale={[0.24, 2.01, 6.669]} />
      <mesh geometry={nodes.Cube087.geometry} material={materials['Material.004']} position={[-30.342, 1.911, -91.283]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 3.505]} />
      <mesh geometry={nodes.Cube088.geometry} material={materials['Material.005']} position={[-35.03, 1.911, -95.26]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 0.67]} />
      <mesh geometry={nodes.Cube089.geometry} material={nodes.Cube089.material} position={[-26.092, 4.446, -86.369]} scale={[0.24, 4.6, 4.961]} />
      <mesh geometry={nodes.Cube090.geometry} material={nodes.Cube090.material} position={[-26.092, 4.446, -100.202]} scale={[0.24, 4.6, 4.961]} />
      <mesh geometry={nodes.Cube091.geometry} material={nodes.Cube091.material} position={[-4.63, 4.446, -93.051]} scale={[0.24, 4.6, 11.653]} />
      <mesh geometry={nodes.Cube092.geometry} material={nodes.Cube092.material} position={[-15.317, 4.446, -104.908]} rotation={[0, Math.PI / 2, 0]} scale={[0.24, 4.6, 11.008]} />
      <mesh geometry={nodes.Cube093.geometry} material={nodes.Cube093.material} position={[-8.406, 4.446, -81.53]} rotation={[0, Math.PI / 2, 0]} scale={[0.24, 4.6, 3.718]} />
      <mesh geometry={nodes.Cube094.geometry} material={nodes.Cube094.material} position={[-22.483, 4.446, -81.53]} rotation={[0, Math.PI / 2, 0]} scale={[0.24, 4.6, 3.832]} />
      <mesh geometry={nodes.Cube095.geometry} material={nodes.Cube095.material} />
      <mesh geometry={nodes.Cube096.geometry} material={nodes.Cube096.material} position={[-7.644, 10.361, -107.498]} rotation={[Math.PI / 2, 0, -Math.PI / 2]} scale={[0.255, 0.371, 2.371]} />
      <mesh geometry={nodes.Cube097.geometry} material={nodes.Cube097.material} position={[-11.628, 10.361, -107.498]} rotation={[Math.PI / 2, 0, -Math.PI / 2]} scale={[0.255, 0.371, 2.371]} />
      <mesh geometry={nodes.Cube098.geometry} material={nodes.Cube098.material} position={[-15.786, 10.361, -107.498]} rotation={[Math.PI / 2, 0, -Math.PI / 2]} scale={[0.255, 0.371, 2.371]} />
      <mesh geometry={nodes.Cube099.geometry} material={nodes.Cube099.material} position={[-19.86, 10.361, -107.498]} rotation={[Math.PI / 2, 0, -Math.PI / 2]} scale={[0.255, 0.371, 2.371]} />
      <mesh geometry={nodes.Cube100.geometry} material={nodes.Cube100.material} position={[-24.292, 10.361, -107.498]} rotation={[Math.PI / 2, 0, -Math.PI / 2]} scale={[0.255, 0.371, 2.371]} />
      <mesh geometry={nodes.Cube101.geometry} material={nodes.Cube101.material} position={[-28.243, 10.361, -103.066]} rotation={[Math.PI / 2, 0, -Math.PI / 2]} scale={[0.255, 0.371, 2.371]} />
      <mesh geometry={nodes.Cube102.geometry} material={nodes.Cube102.material} position={[-28.243, 10.361, -98.014]} rotation={[Math.PI / 2, 0, -Math.PI / 2]} scale={[0.255, 0.371, 2.371]} />
      <mesh geometry={nodes.Cube103.geometry} material={nodes.Cube103.material} position={[-28.243, 10.361, -88.989]} rotation={[Math.PI / 2, 0, -Math.PI / 2]} scale={[0.255, 0.371, 2.371]} />
      <mesh geometry={nodes.Cube104.geometry} material={nodes.Cube104.material} position={[-28.243, 10.361, -83.302]} rotation={[Math.PI / 2, 0, -Math.PI / 2]} scale={[0.255, 0.371, 2.371]} />
      <mesh geometry={nodes.Cube105.geometry} material={nodes.Cube105.material} position={[-2.525, 10.361, -103.066]} rotation={[Math.PI / 2, 0, -Math.PI / 2]} scale={[0.255, 0.371, 2.371]} />
      <mesh geometry={nodes.Cube106.geometry} material={nodes.Cube106.material} position={[-2.525, 10.361, -98.533]} rotation={[Math.PI / 2, 0, -Math.PI / 2]} scale={[0.255, 0.371, 2.371]} />
      <mesh geometry={nodes.Cube107.geometry} material={nodes.Cube107.material} position={[-2.525, 10.361, -93.112]} rotation={[Math.PI / 2, 0, -Math.PI / 2]} scale={[0.255, 0.371, 2.371]} />
      <mesh geometry={nodes.Cube108.geometry} material={nodes.Cube108.material} position={[-2.525, 10.361, -87.688]} rotation={[Math.PI / 2, 0, -Math.PI / 2]} scale={[0.255, 0.371, 2.371]} />
      <mesh geometry={nodes.Cube109.geometry} material={nodes.Cube109.material} position={[-2.525, 10.361, -82.533]} rotation={[Math.PI / 2, 0, -Math.PI / 2]} scale={[0.255, 0.371, 2.371]} />
      <mesh geometry={nodes.Plane002.geometry} material={nodes.Plane002.material} position={[-12.721, 12.616, -96.588]} scale={[18.656, 1, 15.169]} />
      <mesh geometry={nodes.Cube110.geometry} material={nodes.Cube110.material} position={[-11.994, 1.909, -62.683]} scale={[0.15, 2.01, 19]} />
      <mesh geometry={nodes.Cube111.geometry} material={nodes.Cube111.material} position={[-18.895, 1.909, -62.683]} scale={[0.15, 2.01, 19]} />
      <mesh geometry={nodes.Cube112.geometry} material={nodes.Cube112.material} position={[-23.208, 1.447, -43.79]} scale={[4.213, 1.594, 0.052]} />
      <mesh geometry={nodes.Cube113.geometry} material={nodes.Cube113.material} position={[-11.711, 1.94, -43.79]} scale={[4.213, 1.923, 0.052]} />
      <mesh geometry={nodes.Baseboard.geometry} material={materials.Baseboard_material} />
      <mesh geometry={nodes.Baseboard001.geometry} material={materials.Baseboard_material} />
      <mesh geometry={nodes.Cube002.geometry} material={materials['Material.008']} position={[-25.442, 1.193, -72.603]} scale={[0.15, 1.343, 8.562]} />
      <mesh geometry={nodes.Cube114.geometry} material={materials['Material.007']} position={[-41.79, 1.911, -114.503]} scale={[0.15, 2.01, 6.424]} />
      <mesh geometry={nodes.Cube115.geometry} material={materials['Material.009']} position={[-45.82, 1.911, -114.503]} scale={[0.15, 2.01, 6.424]} />
      <mesh geometry={nodes.Cube116.geometry} material={materials['Material.010']} position={[-70.474, 1.911, -114.503]} scale={[0.15, 2.01, 6.424]} />
      <mesh geometry={nodes.Cube117.geometry} material={materials['Material.011']} position={[-67.651, 1.911, -114.503]} scale={[0.15, 2.01, 6.424]} />
      <mesh geometry={nodes.Cube118.geometry} material={materials['Material.012']} position={[-56.875, 1.911, -120.963]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 10.816]} />
      <mesh geometry={nodes.Cube119.geometry} material={materials['Material.013']} position={[-53, 1.911, -125.904]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 20.007]} />
      <mesh geometry={nodes.Cube120.geometry} material={nodes.Cube120.material} position={[-37.493, 1.911, -119.182]} scale={[0.15, 2.01, 2.113]} />
      <mesh geometry={nodes.Cube121.geometry} material={nodes.Cube121.material} position={[-39.673, 1.911, -121.184]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.285]} />
      <mesh geometry={nodes.Cube122.geometry} material={nodes.Cube122.material} position={[-31.299, 1.911, -119.182]} scale={[0.15, 2.01, 2.113]} />
      <mesh geometry={nodes.Cube123.geometry} material={nodes.Cube123.material} position={[-34.493, 1.911, -116.493]} scale={[0.15, 2.01, 2.113]} />
      <mesh geometry={nodes.Cube124.geometry} material={nodes.Cube124.material} position={[-29.225, 1.911, -118.41]} scale={[0.15, 2.01, 2.113]} />
      <mesh geometry={nodes.Cube126.geometry} material={nodes.Cube126.material} position={[-38.431, 1.911, -109.966]} scale={[0.15, 2.01, 2.113]} />
      <mesh geometry={nodes.Cube127.geometry} material={nodes.Cube127.material} position={[-35.087, 1.911, -114.462]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 0.689]} />
      <mesh geometry={nodes.Cube128.geometry} material={nodes.Cube128.material} position={[-33.762, 1.911, -108.048]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 0.672]} />
      <mesh geometry={nodes.Cube129.geometry} material={nodes.Cube129.material} position={[-30.018, 1.911, -109.599]} scale={[0.15, 2.01, 3.289]} />
      <mesh geometry={nodes.Cube130.geometry} material={nodes.Cube130.material} position={[-27.461, 1.911, -109.966]} scale={[0.15, 2.01, 5.071]} />
      <mesh geometry={nodes.Cube131.geometry} material={nodes.Cube131.material} position={[-34.489, 1.911, -101.769]} scale={[0.15, 2.01, 6.451]} />
      <mesh geometry={nodes.Cube132.geometry} material={nodes.Cube132.material} position={[-33.053, 1.911, -109.966]} scale={[0.15, 2.01, 2.113]} />
      <mesh geometry={nodes.Cube133.geometry} material={materials['Material.014']} position={[-31.541, 1.911, -112.009]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 1.518]} />
      <mesh geometry={nodes.Cube134.geometry} material={materials['Material.015']} position={[-32.923, 1.911, -117.224]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 1.518]} />
      <mesh geometry={nodes.Cube125.geometry} material={materials['Material.016']} position={[-27.85, 1.911, -120.456]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 1.518]} />
      <mesh geometry={nodes.Cube135.geometry} material={materials['Material.017']} position={[-26.216, 1.911, -114.946]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 1.518]} />
      <mesh geometry={nodes.Cube136.geometry} material={nodes.Cube136.material} position={[-24.789, 1.911, -113.305]} scale={[0.15, 2.01, 1.713]} />
      <mesh geometry={nodes.Cube137.geometry} material={nodes.Cube137.material} position={[-33.196, 1.911, -127.851]} scale={[0.15, 2.01, 2.113]} />
      <mesh geometry={nodes.Cube138.geometry} material={nodes.Cube138.material} position={[-28.979, 1.911, -122.73]} scale={[0.15, 2.01, 2.113]} />
      <mesh geometry={nodes.Cube139.geometry} material={materials['Material.018']} position={[-17.214, 1.911, -129.771]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 15.986]} />
      <mesh geometry={nodes.Cube140.geometry} material={nodes.Cube140.material} position={[-1.16, 1.911, -126.508]} scale={[0.15, 2.01, 3.414]} />
      <mesh geometry={nodes.Cube141.geometry} material={materials['Material.027']} position={[0.418, 1.911, -123.247]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 1.518]} />
      <mesh geometry={nodes.Cube142.geometry} material={nodes.Cube142.material} position={[1.852, 1.911, -128.622]} scale={[0.15, 2.01, 5.444]} />
      <mesh geometry={nodes.Cube143.geometry} material={materials['Material.028']} position={[3.801, 1.911, -133.924]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 1.981]} />
      <mesh geometry={nodes.Cube144.geometry} material={nodes.Cube144.material} position={[5.565, 1.911, -128.622]} scale={[0.15, 2.01, 5.444]} />
      <mesh geometry={nodes.Cube145.geometry} material={nodes.Cube145.material} position={[1.852, 1.911, -106.174]} scale={[0.15, 2.01, 5.444]} />
      <mesh geometry={nodes.Cube146.geometry} material={materials['Material.036']} position={[3.72, 1.911, -100.873]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 1.981]} />
      <mesh geometry={nodes.Cube147.geometry} material={nodes.Cube147.material} position={[5.544, 1.911, -98.535]} scale={[0.15, 2.01, 2.487]} />
      <mesh geometry={nodes.Cube148.geometry} material={materials['Material.037']} position={[2.926, 1.911, -96.186]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.593]} />
      <mesh geometry={nodes.Cube149.geometry} material={materials['Material.038']} position={[3.247, 1.911, -91.844]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.939]} />
      <mesh geometry={nodes.Cube150.geometry} material={materials['Material.039']} position={[7.04, 1.911, -123.247]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 1.518]} />
      <mesh geometry={nodes.Cube151.geometry} material={nodes.Cube151.material} position={[8.48, 1.911, -117.84]} scale={[0.15, 2.01, 5.444]} />
      <mesh geometry={nodes.Cube152.geometry} material={materials['Material.040']} position={[7.04, 1.911, -112.554]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 1.518]} />
      <mesh geometry={nodes.Cube153.geometry} material={nodes.Cube153.material} position={[5.836, 1.911, -109.442]} scale={[0.15, 2.01, 3.189]} />
      <mesh geometry={nodes.Cube154.geometry} material={materials['Material.041']} position={[7.694, 1.911, -100.901]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 1.981]} />
      <mesh geometry={nodes.Cube155.geometry} material={materials['Material.042']} position={[10.631, 1.911, -106.386]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 4.915]} />
      <mesh geometry={nodes.Cube156.geometry} material={nodes.Cube156.material} position={[15.383, 1.911, -101.013]} scale={[0.15, 2.01, 5.444]} />
      <mesh geometry={nodes.Cube157.geometry} material={materials['Material.043']} position={[13.44, 1.911, -95.772]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 1.981]} />
      <mesh geometry={nodes.Cube158.geometry} material={nodes.Cube158.material} position={[12.986, 1.911, -98.191]} scale={[0.15, 2.01, 2.487]} />
      <mesh geometry={nodes.Cube159.geometry} material={nodes.Cube159.material} position={[11.633, 1.911, -93.272]} scale={[0.15, 2.01, 2.487]} />
      <mesh geometry={nodes.Cube160.geometry} material={materials['Material.047']} position={[10.631, 1.911, -106.386]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 4.915]} />
      <mesh geometry={nodes.Cube161.geometry} material={materials['Material.065']} position={[-1.607, 1.911, -58.848]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 1.981]} />
      <mesh geometry={nodes.Cube162.geometry} material={materials['Material.066']} position={[-3.449, 1.911, -56.905]} rotation={[0, -0.02, 0]} scale={[0.15, 2.01, 1.981]} />
      <mesh geometry={nodes.Cube164.geometry} material={materials['Material.068']} position={[-7.187, 1.911, -54.573]} rotation={[0, -0.018, 0]} scale={[0.15, 2.01, 1.981]} />
      <mesh geometry={nodes.Cube163.geometry} material={materials['Material.069']} position={[-7.022, 1.911, -61.706]} rotation={[0, -0.02, 0]} scale={[0.15, 2.01, 1.981]} />
      <mesh geometry={nodes.Cube165.geometry} material={materials['Material.070']} position={[-5.879, 1.911, -66.842]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 6.193]} />
      <mesh geometry={nodes.Cube166.geometry} material={materials['Material.072']} position={[-7.187, 1.911, -48.338]} rotation={[0, -0.018, 0]} scale={[0.15, 2.01, 1.981]} />
      <mesh geometry={nodes.Cube167.geometry} material={materials['Material.073']} position={[-9.543, 1.911, -59.889]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.517]} />
      <mesh geometry={nodes.Cube168.geometry} material={materials['Material.074']} position={[-9.543, 1.911, -56.389]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.517]} />
      <mesh geometry={nodes.Cube169.geometry} material={materials['Material.075']} position={[8.975, 1.911, -62.014]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.939]} />
      <mesh geometry={nodes.Cube170.geometry} material={materials['Material.076']} position={[7.81, 1.911, -66.003]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 1.332]} />
      <mesh geometry={nodes.Cube171.geometry} material={materials['Material.077']} position={[2.129, 1.911, -58.848]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 1.981]} />
      <mesh geometry={nodes.Cube172.geometry} material={materials['Material.078']} position={[3.943, 1.911, -56.905]} rotation={[0, -0.02, 0]} scale={[0.15, 2.01, 1.981]} />
      <mesh geometry={nodes.Cube173.geometry} material={materials['Material.079']} position={[7.495, 1.911, -60.12]} rotation={[0, -0.02, 0]} scale={[0.15, 2.01, 1.981]} />
      <mesh geometry={nodes.Cube174.geometry} material={materials['Material.080']} position={[2.129, 1.911, -55.023]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 1.981]} />
      <mesh geometry={nodes.Cube175.geometry} material={materials['Material.081']} position={[2.129, 1.911, -51.095]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 1.981]} />
      <mesh geometry={nodes.Cube176.geometry} material={materials['Material.087']} position={[8.919, 1.911, -20.499]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.939]} />
      <mesh geometry={nodes.Cube177.geometry} material={materials['Material.088']} position={[4.404, 1.911, -15.466]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.939]} />
      <mesh geometry={nodes.Cube178.geometry} material={materials['Material.089']} position={[8.919, 1.911, -10.462]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.939]} />
      <mesh geometry={nodes.Cube179.geometry} material={materials['Material.091']} position={[-15.162, 1.911, -16.226]} rotation={[0, -0.012, 0]} scale={[0.15, 2.01, 2.939]} />
      <mesh geometry={nodes.Cube180.geometry} material={materials['Material.092']} position={[-11.545, 1.911, -16.226]} rotation={[0, -0.012, 0]} scale={[0.15, 2.01, 2.939]} />
      <mesh geometry={nodes.Cube181.geometry} material={materials['Material.093']} position={[-7.119, 1.911, -15.466]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 4.458]} />
      <mesh geometry={nodes.Cube182.geometry} material={materials['Material.094']} position={[-2.849, 1.911, -16.226]} rotation={[0, -0.012, 0]} scale={[0.15, 2.01, 2.939]} />
      <mesh geometry={nodes.Cube183.geometry} material={materials['Material.095']} position={[-1.273, 1.911, -9.58]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.939]} />
      <mesh geometry={nodes.Cube184.geometry} material={materials['Material.096']} position={[-13.623, 1.911, 2.528]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 25.415]} />
      <mesh geometry={nodes.Cube185.geometry} material={nodes.Cube185.material} position={[-18.895, 1.909, -62.683]} scale={[0.15, 2.01, 19]} />
      <mesh geometry={nodes.Cube186.geometry} material={nodes.Cube186.material} position={[-87.951, 1.909, -69.77]} scale={[0.15, 2.01, 19]} />
      <mesh geometry={nodes.Cube187.geometry} material={materials['Material.098']} position={[-97.657, 2.2, -19.878]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.247, 3.373]} />
      <mesh geometry={nodes.Cube188.geometry} material={materials['Material.099']} position={[-98.018, 2.2, -17.195]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.247, 11.937]} />
      <mesh geometry={nodes.Cube189.geometry} material={materials['Material.100']} position={[-94.369, 1.909, -25.183]} scale={[0.15, 2.01, 5.241]} />
      <mesh geometry={nodes.Cube190.geometry} material={materials['Material.101']} position={[-94.369, 1.909, -35.568]} scale={[0.15, 2.01, 1.697]} />
      <mesh geometry={nodes.Cube191.geometry} material={materials['Material.102']} position={[-92.727, 1.909, -30.241]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 1.697]} />
      <mesh geometry={nodes.Cube192.geometry} material={materials['Material.103']} position={[-91.153, 1.909, -28.636]} scale={[0.15, 2.01, 1.697]} />
      <mesh geometry={nodes.Cube193.geometry} material={materials['Material.104']} position={[-86.349, 1.909, -20.699]} scale={[0.15, 2.01, 3.525]} />
      <mesh geometry={nodes.Cube194.geometry} material={materials['Material.105']} position={[-85.821, 1.909, -24.069]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 0.404]} />
      <mesh geometry={nodes.Cube195.geometry} material={materials['Material.106']} position={[-86.834, 1.909, -27.237]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 1.338]} />
      <mesh geometry={nodes.Cube196.geometry} material={materials['Material.107']} position={[-88.395, 1.909, -33.549]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.675]} />
      <mesh geometry={nodes.Cube197.geometry} material={materials['Material.108']} position={[-80.665, 1.909, -52.166]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.675]} />
      <mesh geometry={nodes.Cube198.geometry} material={materials['Material.109']} position={[-80.743, 1.909, -50.248]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.675]} />
      <mesh geometry={nodes.Cube199.geometry} material={materials['Material.110']} position={[-80.629, 1.909, -55]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.675]} />
      <mesh geometry={nodes.Cube200.geometry} material={materials['Material.111']} position={[-80.548, 1.909, -56.939]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.675]} />
      <mesh geometry={nodes.Cube201.geometry} material={materials['Material.112']} position={[-80.555, 1.909, -59.666]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.675]} />
      <mesh geometry={nodes.Cube202.geometry} material={materials['Material.113']} position={[-80.446, 1.909, -61.695]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.675]} />
      <mesh geometry={nodes.Cube203.geometry} material={materials['Material.114']} position={[-80.464, 1.909, -64.526]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.675]} />
      <mesh geometry={nodes.Cube204.geometry} material={materials['Material.115']} position={[-80.398, 1.909, -66.549]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.675]} />
      <mesh geometry={nodes.Cube205.geometry} material={materials['Material.116']} position={[-82.723, 1.909, -69.183]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 5.05]} />
      <mesh geometry={nodes.Cube206.geometry} material={materials['Material.117']} position={[-80.351, 1.909, -70.987]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.675]} />
      <mesh geometry={nodes.Cube207.geometry} material={materials['Material.118']} position={[-82.737, 1.909, -73.709]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 5.234]} />
      <mesh geometry={nodes.Cube208.geometry} material={materials['Material.119']} position={[-80.888, 1.909, -75.853]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 3.419]} />
      <mesh geometry={nodes.Cube209.geometry} material={materials['Material.120']} position={[-80.743, 1.909, -50.248]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.675]} />
      <mesh geometry={nodes.Cube210.geometry} material={materials['Material.121']} position={[-72.59, 1.909, -50.248]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.675]} />
      <mesh geometry={nodes.Cube211.geometry} material={materials['Material.122']} position={[-67.341, 1.909, -75.769]} rotation={[0, Math.PI / 2, 0]} scale={[0.151, 2.01, 7.463]} />
      <mesh geometry={nodes.Cube212.geometry} material={materials['Material.123']} position={[-72.09, 1.909, -73.709]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.675]} />
      <mesh geometry={nodes.Cube213.geometry} material={materials['Material.124']} position={[-72.223, 1.909, -70.987]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.675]} />
      <mesh geometry={nodes.Cube214.geometry} material={materials['Material.125']} position={[-72.255, 1.909, -69.183]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.675]} />
      <mesh geometry={nodes.Cube215.geometry} material={materials['Material.126']} position={[-72.32, 1.909, -66.549]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.675]} />
      <mesh geometry={nodes.Cube216.geometry} material={materials['Material.127']} position={[-72.356, 1.909, -64.526]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.675]} />
      <mesh geometry={nodes.Cube217.geometry} material={materials['Material.128']} position={[-72.386, 1.909, -61.695]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.675]} />
      <mesh geometry={nodes.Cube218.geometry} material={materials['Material.129']} position={[-72.415, 1.909, -59.666]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.675]} />
      <mesh geometry={nodes.Cube219.geometry} material={materials['Material.130']} position={[-72.455, 1.909, -56.939]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.675]} />
      <mesh geometry={nodes.Cube220.geometry} material={materials['Material.131']} position={[-72.46, 1.909, -55]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.675]} />
      <mesh geometry={nodes.Cube221.geometry} material={materials['Material.132']} position={[-72.512, 1.909, -52.166]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.675]} />
      <mesh geometry={nodes.Cube222.geometry} material={nodes.Cube222.material} position={[-84.134, 1.911, -78.517]} scale={[0.15, 2.01, 2.568]} />
      <mesh geometry={nodes.Cube223.geometry} material={nodes.Cube223.material} position={[-82.513, 1.909, -87.975]} scale={[0.193, 2.01, 2.089]} />
      <mesh geometry={nodes.Cube224.geometry} material={nodes.Cube224.material} position={[-61.1, 1.911, -106.057]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 1.854]} />
      <mesh geometry={nodes.Cube225.geometry} material={nodes.Cube225.material} position={[-75.775, 1.911, -80.891]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 8.441]} />
      <mesh geometry={nodes.Cube226.geometry} material={nodes.Cube226.material} position={[-76.373, 1.911, -90.147]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.568]} />
      <mesh geometry={nodes.Cube227.geometry} material={materials['Material.133']} position={[-65.586, 1.909, -100.855]} scale={[0.15, 2.01, 5.241]} />
      <mesh geometry={nodes.Cube228.geometry} material={nodes.Cube228.material} position={[-55.543, 1.911, -80.891]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 8.441]} />
      <mesh geometry={nodes.Cube229.geometry} material={materials['Material.146']} position={[-59.725, 1.909, -73.643]} scale={[0.15, 2.01, 2.189]} />
      <mesh geometry={nodes.Cube230.geometry} material={materials['Material.147']} position={[-56.648, 1.909, -73.959]} scale={[0.15, 2.01, 2.675]} />
      <mesh geometry={nodes.Cube231.geometry} material={materials['Material.148']} position={[-49.263, 1.909, -76.416]} rotation={[0, Math.PI / 2, 0]} scale={[0.151, 2.01, 7.463]} />
      <mesh geometry={nodes.Cube232.geometry} material={materials['Material.161']} position={[-38.272, 1.911, -91.283]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 1.337]} />
      <mesh geometry={nodes.Cube233.geometry} material={materials['Material.162']} position={[-39.683, 1.909, -89.091]} scale={[0.15, 2.01, 2.34]} />
      <mesh geometry={nodes.Cube234.geometry} material={materials['Material.163']} position={[-30.051, 1.909, -74.245]} rotation={[0, Math.PI / 2, 0]} scale={[0.151, 2.01, 4.557]} />
      <mesh geometry={nodes.Cube235.geometry} material={materials['Material.164']} position={[-37.841, 1.909, -82.473]} rotation={[0, Math.PI / 2, 0]} scale={[0.151, 2.01, 4.557]} />
      <mesh geometry={nodes.Cube236.geometry} material={materials['Material.167']} position={[-72.935, 1.911, -130.443]} scale={[0.15, 2.01, 4.542]} />
      <mesh geometry={nodes.Cube237.geometry} material={nodes.Cube237.material} position={[-79.179, 1.911, -134.877]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 6.425]} />
      <mesh geometry={nodes.Cube238.geometry} material={nodes.Cube238.material} position={[-83.099, 1.911, -129.308]} rotation={[0, Math.PI / 2, 0]} scale={[0.195, 2.01, 6.425]} />
      <mesh geometry={nodes.Cube239.geometry} material={nodes.Cube239.material} position={[-72.423, 1.911, -121.116]} rotation={[0, Math.PI / 2, 0]} scale={[0.195, 2.01, 2.111]} />
      <mesh geometry={nodes.Cube240.geometry} material={nodes.Cube240.material} position={[-85.92, 1.909, -127.846]} rotation={[Math.PI, -0.006, Math.PI]} scale={[0.15, 2.01, 1.6]} />
      <mesh geometry={nodes.Cube241.geometry} material={nodes.Cube241.material} position={[-80.728, 1.909, -124.196]} rotation={[Math.PI, -0.006, Math.PI]} scale={[0.15, 2.01, 1.6]} />
      <mesh geometry={nodes.Cube242.geometry} material={nodes.Cube242.material} position={[-108.523, 1.911, -134.877]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 33.064]} />
      <mesh geometry={nodes.Cube243.geometry} material={nodes.Cube243.material} position={[-134.072, 1.911, -129.308]} rotation={[0, Math.PI / 2, 0]} scale={[0.195, 2.01, 6.425]} />
      <mesh geometry={nodes.Cube244.geometry} material={nodes.Cube244.material} position={[-127.838, 1.909, -126.185]} scale={[0.15, 2.01, 3.231]} />
      <mesh geometry={nodes.Cube245.geometry} material={nodes.Cube245.material} position={[-125.06, 1.909, -126.246]} scale={[0.15, 2.01, 3.231]} />
      <mesh geometry={nodes.Cube246.geometry} material={nodes.Cube246.material} position={[-116.94, 1.827, -130.843]} rotation={[1.603, -1.565, 1.571]} scale={[0.15, 2.01, 4.48]} />
      <mesh geometry={nodes.Cube247.geometry} material={nodes.Cube247.material} position={[-118.925, 1.909, -128.604]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.455]} />
      <mesh geometry={nodes.Cube248.geometry} material={nodes.Cube248.material} position={[-108.917, 1.909, -128.165]} rotation={[Math.PI, -0.006, Math.PI]} scale={[0.15, 2.01, 1.6]} />
      <mesh geometry={nodes.Cube249.geometry} material={nodes.Cube249.material} position={[-102.444, 1.909, -127.152]} rotation={[Math.PI, -0.006, Math.PI]} scale={[0.15, 2.01, 2.649]} />
      <mesh geometry={nodes.Cube250.geometry} material={nodes.Cube250.material} position={[-104.567, 1.909, -124.598]} rotation={[0, -1.564, 0]} scale={[0.15, 2.01, 2.248]} />
      <mesh geometry={nodes.Cube251.geometry} material={nodes.Cube251.material} position={[-107.878, 2.051, -110.454]} rotation={[0, 0, -3.14]} scale={[0.15, 2.01, 2.711]} />
      <mesh geometry={nodes.Cube252.geometry} material={nodes.Cube252.material} position={[-107.438, 1.945, -106.204]} rotation={[-1.597, 1.564, -1.577]} scale={[0.15, 2.01, 0.709]} />
      <mesh geometry={nodes.Cube253.geometry} material={nodes.Cube253.material} position={[-106.659, 1.946, -107.041]} rotation={[0, 0, -3.14]} scale={[0.15, 2.01, 0.777]} />
      <mesh geometry={nodes.Cube254.geometry} material={nodes.Cube254.material} position={[-107.219, 1.945, -107.994]} rotation={[-1.597, 1.564, -1.577]} scale={[0.15, 2.01, 0.709]} />
      <mesh geometry={nodes.Cube255.geometry} material={nodes.Cube255.material} position={[-107.577, 2.052, -118.095]} rotation={[0, 0, -3.14]} scale={[0.15, 2.01, 3.231]} />
      <mesh geometry={nodes.Cube256.geometry} material={nodes.Cube256.material} position={[-107.013, 1.945, -114.973]} rotation={[-1.597, 1.564, -1.577]} scale={[0.15, 2.01, 0.709]} />
      <mesh geometry={nodes.Cube257.geometry} material={nodes.Cube257.material} position={[-106.453, 1.946, -114.021]} rotation={[0, 0, -3.14]} scale={[0.15, 2.01, 0.777]} />
      <mesh geometry={nodes.Cube258.geometry} material={nodes.Cube258.material} position={[-107.232, 1.945, -113.183]} rotation={[-1.597, 1.564, -1.577]} scale={[0.15, 2.01, 0.709]} />
      <mesh geometry={nodes.Cube259.geometry} material={nodes.Cube259.material} position={[-108.007, 2.051, -102.812]} rotation={[0, 0, -3.14]} scale={[0.15, 2.01, 3.327]} />
      <mesh geometry={nodes.Cube260.geometry} material={nodes.Cube260.material} position={[-121.506, 2.051, -102.812]} rotation={[0, 0, -3.14]} scale={[0.15, 2.01, 3.327]} />
      <mesh geometry={nodes.Cube261.geometry} material={nodes.Cube261.material} position={[-120.731, 1.945, -113.183]} rotation={[-1.597, 1.564, -1.577]} scale={[0.15, 2.01, 0.709]} />
      <mesh geometry={nodes.Cube262.geometry} material={nodes.Cube262.material} position={[-119.953, 1.946, -114.021]} rotation={[0, 0, -3.14]} scale={[0.15, 2.01, 0.777]} />
      <mesh geometry={nodes.Cube263.geometry} material={nodes.Cube263.material} position={[-120.513, 1.945, -114.973]} rotation={[-1.597, 1.564, -1.577]} scale={[0.15, 2.01, 0.709]} />
      <mesh geometry={nodes.Cube264.geometry} material={nodes.Cube264.material} position={[-121.077, 2.052, -118.095]} rotation={[0, 0, -3.14]} scale={[0.15, 2.01, 3.231]} />
      <mesh geometry={nodes.Cube265.geometry} material={nodes.Cube265.material} position={[-120.718, 1.945, -107.994]} rotation={[-1.597, 1.564, -1.577]} scale={[0.15, 2.01, 0.709]} />
      <mesh geometry={nodes.Cube266.geometry} material={nodes.Cube266.material} position={[-120.159, 1.946, -107.041]} rotation={[0, 0, -3.14]} scale={[0.15, 2.01, 0.777]} />
      <mesh geometry={nodes.Cube267.geometry} material={nodes.Cube267.material} position={[-120.937, 1.945, -106.204]} rotation={[-1.597, 1.564, -1.577]} scale={[0.15, 2.01, 0.709]} />
      <mesh geometry={nodes.Cube268.geometry} material={nodes.Cube268.material} position={[-121.378, 2.051, -110.454]} rotation={[0, 0, -3.14]} scale={[0.15, 2.01, 2.711]} />
      <mesh geometry={nodes.Cube269.geometry} material={nodes.Cube269.material} position={[-115.272, 1.909, -110.454]} scale={[0.15, 2.01, 2.711]} />
      <mesh geometry={nodes.Cube270.geometry} material={nodes.Cube270.material} position={[-115.713, 2.016, -106.204]} rotation={[1.603, -1.565, 1.571]} scale={[0.15, 2.01, 0.709]} />
      <mesh geometry={nodes.Cube271.geometry} material={nodes.Cube271.material} position={[-115.573, 1.909, -118.095]} rotation={[0, 0, Math.PI]} scale={[0.15, 2.01, 3.231]} />
      <mesh geometry={nodes.Cube272.geometry} material={nodes.Cube272.material} position={[-116.137, 2.016, -114.973]} rotation={[1.603, -1.565, 1.571]} scale={[0.15, 2.01, 0.709]} />
      <mesh geometry={nodes.Cube273.geometry} material={nodes.Cube273.material} position={[-116.697, 2.016, -114.021]} scale={[0.15, 2.01, 0.777]} />
      <mesh geometry={nodes.Cube274.geometry} material={nodes.Cube274.material} position={[-115.918, 2.016, -113.183]} rotation={[1.603, -1.565, 1.571]} scale={[0.15, 2.01, 0.709]} />
      <mesh geometry={nodes.Cube275.geometry} material={nodes.Cube275.material} position={[-115.144, 1.909, -102.812]} scale={[0.15, 2.01, 3.327]} />
      <mesh geometry={nodes.Column002.geometry} material={materials['Column_material.002']} position={[-114.157, 0.023, -119.921]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top002.geometry} material={materials['Column_rect.002']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column003.geometry} material={materials['Column_material.003']} position={[-113.032, 0.023, -119.921]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top003.geometry} material={materials['Column_rect.003']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column004.geometry} material={materials['Column_material.004']} position={[-111.955, 0.023, -119.921]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top004.geometry} material={materials['Column_rect.004']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column005.geometry} material={materials['Column_material.005']} position={[-110.977, 0.023, -119.921]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top005.geometry} material={materials['Column_rect.005']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column006.geometry} material={materials['Column_material.006']} position={[-110.101, 0.023, -119.921]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top006.geometry} material={materials['Column_rect.006']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column007.geometry} material={materials['Column_material.007']} position={[-109.192, 0.023, -119.921]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top007.geometry} material={materials['Column_rect.007']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column008.geometry} material={materials['Column_material.008']} position={[-108.261, 0.023, -119.921]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top008.geometry} material={materials['Column_rect.008']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column009.geometry} material={materials['Column_material.009']} position={[-115.128, 0.023, -119.921]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top009.geometry} material={materials['Column_rect.009']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column010.geometry} material={materials['Column_material.010']} position={[-115.128, 0.023, -119.921]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top010.geometry} material={materials['Column_rect.010']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column011.geometry} material={materials['Column_material.011']} position={[-108.261, 0.023, -119.921]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top011.geometry} material={materials['Column_rect.011']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column012.geometry} material={materials['Column_material.012']} position={[-109.192, 0.023, -119.921]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top012.geometry} material={materials['Column_rect.012']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column013.geometry} material={materials['Column_material.013']} position={[-110.101, 0.023, -119.921]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top013.geometry} material={materials['Column_rect.013']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column014.geometry} material={materials['Column_material.014']} position={[-110.977, 0.023, -119.921]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top014.geometry} material={materials['Column_rect.014']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column015.geometry} material={materials['Column_material.015']} position={[-111.955, 0.023, -119.921]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top015.geometry} material={materials['Column_rect.015']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column016.geometry} material={materials['Column_material.016']} position={[-113.032, 0.023, -119.921]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top016.geometry} material={materials['Column_rect.016']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column017.geometry} material={materials['Column_material.017']} position={[-114.157, 0.023, -119.921]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top017.geometry} material={materials['Column_rect.017']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column018.geometry} material={materials['Column_material.018']} position={[-114.157, 0.023, -119.921]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top018.geometry} material={materials['Column_rect.018']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column019.geometry} material={materials['Column_material.019']} position={[-113.032, 0.023, -119.921]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top019.geometry} material={materials['Column_rect.019']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column020.geometry} material={materials['Column_material.020']} position={[-111.955, 0.023, -119.921]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top020.geometry} material={materials['Column_rect.020']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column021.geometry} material={materials['Column_material.021']} position={[-110.977, 0.023, -119.921]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top021.geometry} material={materials['Column_rect.021']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column022.geometry} material={materials['Column_material.022']} position={[-110.101, 0.023, -119.921]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top022.geometry} material={materials['Column_rect.022']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column023.geometry} material={materials['Column_material.023']} position={[-109.192, 0.023, -119.921]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top023.geometry} material={materials['Column_rect.023']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column024.geometry} material={materials['Column_material.024']} position={[-108.261, 0.023, -119.921]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top024.geometry} material={materials['Column_rect.024']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column025.geometry} material={materials['Column_material.025']} position={[-115.128, 0.023, -119.921]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top025.geometry} material={materials['Column_rect.025']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column026.geometry} material={materials['Column_material.026']} position={[-115.128, 0.023, -117.367]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top026.geometry} material={materials['Column_rect.026']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column027.geometry} material={materials['Column_material.027']} position={[-108.261, 0.023, -117.367]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top027.geometry} material={materials['Column_rect.027']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column028.geometry} material={materials['Column_material.028']} position={[-115.128, 0.023, -117.367]} scale={[1, 1.714, 1]} />
      <mesh geometry={nodes.Column029.geometry} material={materials['Column_material.029']} position={[-108.261, 0.023, -117.367]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top028.geometry} material={materials['Column_rect.028']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column030.geometry} material={materials['Column_material.030']} position={[-109.192, 0.023, -117.367]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top029.geometry} material={materials['Column_rect.029']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column031.geometry} material={materials['Column_material.031']} position={[-110.101, 0.023, -117.367]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top030.geometry} material={materials['Column_rect.030']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column032.geometry} material={materials['Column_material.032']} position={[-110.977, 0.023, -117.367]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top031.geometry} material={materials['Column_rect.031']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column033.geometry} material={materials['Column_material.033']} position={[-111.955, 0.023, -117.367]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top032.geometry} material={materials['Column_rect.032']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column034.geometry} material={materials['Column_material.034']} position={[-113.032, 0.023, -117.367]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top033.geometry} material={materials['Column_rect.033']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column035.geometry} material={materials['Column_material.035']} position={[-114.157, 0.023, -117.367]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top034.geometry} material={materials['Column_rect.034']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column036.geometry} material={materials['Column_material.036']} position={[-114.157, 0.023, -114.786]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top035.geometry} material={materials['Column_rect.035']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column037.geometry} material={materials['Column_material.037']} position={[-113.032, 0.023, -114.786]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top036.geometry} material={materials['Column_rect.036']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column038.geometry} material={materials['Column_material.038']} position={[-111.955, 0.023, -114.786]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top037.geometry} material={materials['Column_rect.037']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column039.geometry} material={materials['Column_material.039']} position={[-110.977, 0.023, -114.786]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top038.geometry} material={materials['Column_rect.038']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column040.geometry} material={materials['Column_material.040']} position={[-110.101, 0.023, -114.786]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top039.geometry} material={materials['Column_rect.039']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column041.geometry} material={materials['Column_material.041']} position={[-109.192, 0.023, -114.786]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top040.geometry} material={materials['Column_rect.040']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column042.geometry} material={materials['Column_material.042']} position={[-108.261, 0.023, -114.786]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top041.geometry} material={materials['Column_rect.041']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column043.geometry} material={materials['Column_material.043']} position={[-115.128, 0.023, -114.786]} scale={[1, 1.714, 1]} />
      <mesh geometry={nodes.Column044.geometry} material={materials['Column_material.044']} position={[-108.261, 0.023, -114.786]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top042.geometry} material={materials['Column_rect.042']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column045.geometry} material={materials['Column_material.045']} position={[-115.128, 0.023, -114.786]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top043.geometry} material={materials['Column_rect.043']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column046.geometry} material={materials['Column_material.046']} position={[-115.128, 0.023, -104.993]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top044.geometry} material={materials['Column_rect.044']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column047.geometry} material={materials['Column_material.047']} position={[-108.261, 0.023, -104.993]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top045.geometry} material={materials['Column_rect.045']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column048.geometry} material={materials['Column_material.048']} position={[-115.128, 0.023, -104.993]} scale={[1, 1.714, 1]} />
      <mesh geometry={nodes.Column049.geometry} material={materials['Column_material.049']} position={[-108.261, 0.023, -104.993]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top046.geometry} material={materials['Column_rect.046']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column050.geometry} material={materials['Column_material.050']} position={[-109.192, 0.023, -104.993]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top047.geometry} material={materials['Column_rect.047']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column051.geometry} material={materials['Column_material.051']} position={[-110.101, 0.023, -104.993]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top048.geometry} material={materials['Column_rect.048']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column052.geometry} material={materials['Column_material.052']} position={[-110.977, 0.023, -104.993]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top049.geometry} material={materials['Column_rect.049']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column053.geometry} material={materials['Column_material.053']} position={[-111.955, 0.023, -104.993]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top050.geometry} material={materials['Column_rect.050']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column054.geometry} material={materials['Column_material.054']} position={[-113.032, 0.023, -104.993]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top051.geometry} material={materials['Column_rect.051']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column055.geometry} material={materials['Column_material.055']} position={[-114.157, 0.023, -104.993]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top052.geometry} material={materials['Column_rect.052']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column056.geometry} material={materials['Column_material.056']} position={[-114.157, 0.023, -103.199]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top053.geometry} material={materials['Column_rect.053']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column057.geometry} material={materials['Column_material.057']} position={[-113.032, 0.023, -103.199]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top054.geometry} material={materials['Column_rect.054']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column058.geometry} material={materials['Column_material.058']} position={[-111.955, 0.023, -103.199]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top055.geometry} material={materials['Column_rect.055']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column059.geometry} material={materials['Column_material.059']} position={[-110.977, 0.023, -103.199]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top056.geometry} material={materials['Column_rect.056']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column060.geometry} material={materials['Column_material.060']} position={[-110.101, 0.023, -103.199]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top057.geometry} material={materials['Column_rect.057']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column061.geometry} material={materials['Column_material.061']} position={[-109.192, 0.023, -103.199]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top058.geometry} material={materials['Column_rect.058']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column062.geometry} material={materials['Column_material.062']} position={[-108.261, 0.023, -103.199]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top059.geometry} material={materials['Column_rect.059']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column063.geometry} material={materials['Column_material.063']} position={[-115.128, 0.023, -103.199]} scale={[1, 1.714, 1]} />
      <mesh geometry={nodes.Column064.geometry} material={materials['Column_material.064']} position={[-108.261, 0.023, -103.199]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top060.geometry} material={materials['Column_rect.060']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column065.geometry} material={materials['Column_material.065']} position={[-115.128, 0.023, -103.199]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top061.geometry} material={materials['Column_rect.061']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column066.geometry} material={materials['Column_material.066']} position={[-114.157, 0.023, -101.294]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top062.geometry} material={materials['Column_rect.062']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column067.geometry} material={materials['Column_material.067']} position={[-113.032, 0.023, -101.294]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top063.geometry} material={materials['Column_rect.063']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column068.geometry} material={materials['Column_material.068']} position={[-111.955, 0.023, -101.294]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top064.geometry} material={materials['Column_rect.064']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column069.geometry} material={materials['Column_material.069']} position={[-110.977, 0.023, -101.294]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top065.geometry} material={materials['Column_rect.065']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column070.geometry} material={materials['Column_material.070']} position={[-110.101, 0.023, -101.294]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top066.geometry} material={materials['Column_rect.066']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column071.geometry} material={materials['Column_material.071']} position={[-109.192, 0.023, -101.294]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top067.geometry} material={materials['Column_rect.067']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column072.geometry} material={materials['Column_material.072']} position={[-108.261, 0.023, -101.294]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top068.geometry} material={materials['Column_rect.068']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column073.geometry} material={materials['Column_material.073']} position={[-115.128, 0.023, -101.294]} scale={[1, 1.714, 1]} />
      <mesh geometry={nodes.Column074.geometry} material={materials['Column_material.074']} position={[-108.261, 0.023, -101.294]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top069.geometry} material={materials['Column_rect.069']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column075.geometry} material={materials['Column_material.075']} position={[-115.128, 0.023, -101.294]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top070.geometry} material={materials['Column_rect.070']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column076.geometry} material={materials['Column_material.076']} position={[-115.128, 0.023, -99.629]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top071.geometry} material={materials['Column_rect.071']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column077.geometry} material={materials['Column_material.077']} position={[-108.261, 0.023, -99.629]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top072.geometry} material={materials['Column_rect.072']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column078.geometry} material={materials['Column_material.078']} position={[-115.128, 0.023, -99.629]} scale={[1, 1.714, 1]} />
      <mesh geometry={nodes.Column079.geometry} material={materials['Column_material.079']} position={[-108.261, 0.023, -99.629]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top073.geometry} material={materials['Column_rect.073']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column080.geometry} material={materials['Column_material.080']} position={[-109.192, 0.023, -99.629]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top074.geometry} material={materials['Column_rect.074']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column081.geometry} material={materials['Column_material.081']} position={[-110.101, 0.023, -99.629]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top075.geometry} material={materials['Column_rect.075']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column082.geometry} material={materials['Column_material.082']} position={[-110.977, 0.023, -99.629]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top076.geometry} material={materials['Column_rect.076']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column083.geometry} material={materials['Column_material.083']} position={[-111.955, 0.023, -99.629]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top077.geometry} material={materials['Column_rect.077']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column084.geometry} material={materials['Column_material.084']} position={[-113.032, 0.023, -99.629]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top078.geometry} material={materials['Column_rect.078']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column085.geometry} material={materials['Column_material.085']} position={[-114.157, 0.023, -99.629]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top079.geometry} material={materials['Column_rect.079']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Cube276.geometry} material={nodes.Cube276.material} position={[-115.849, 1.945, -107.994]} rotation={[-1.597, 1.564, -1.577]} scale={[0.15, 2.01, 0.709]} />
      <mesh geometry={nodes.Cube277.geometry} material={nodes.Cube277.material} position={[-116.536, 1.946, -107.041]} rotation={[0, 0, -3.14]} scale={[0.15, 2.01, 0.777]} />
      <mesh geometry={nodes.Cube278.geometry} material={nodes.Cube278.material} position={[-121.048, 1.909, -121.191]} rotation={[0, -1.564, 0]} scale={[0.15, 2.01, 1.929]} />
      <mesh geometry={nodes.Cube279.geometry} material={nodes.Cube279.material} position={[-121.262, 1.909, -127.209]} rotation={[Math.PI, 0, Math.PI]} scale={[0.15, 2.01, 1.6]} />
      <mesh geometry={nodes.Cube280.geometry} material={nodes.Cube280.material} position={[-98.865, 2.016, -133.717]} scale={[0.15, 2.01, 0.8]} />
      <mesh geometry={nodes.Cube281.geometry} material={nodes.Cube281.material} position={[-96.558, 1.909, -134.705]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.455]} />
      <mesh geometry={nodes.Cube282.geometry} material={nodes.Cube282.material} position={[-92.832, 1.909, -132.856]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 1.149]} />
      <mesh geometry={nodes.Cube283.geometry} material={nodes.Cube283.material} position={[-94.108, 1.909, -133.779]} scale={[0.15, 2.01, 1.058]} />
      <mesh geometry={nodes.Cube284.geometry} material={nodes.Cube284.material} position={[-97.708, 1.909, -130.334]} scale={[0.15, 2.01, 2.649]} />
      <mesh geometry={nodes.Cube285.geometry} material={nodes.Cube285.material} position={[-91.601, 1.909, -130.334]} scale={[0.15, 2.01, 2.649]} />
      <mesh geometry={nodes.Cube286.geometry} material={nodes.Cube286.material} position={[-142.004, 2.105, -125.113]} rotation={[Math.PI, -1.535, Math.PI]} scale={[0.15, 2.01, 1.6]} />
      <mesh geometry={nodes.Cube287.geometry} material={nodes.Cube287.material} position={[-143.298, 2.105, -127.507]} rotation={[-Math.PI, 0.042, -Math.PI]} scale={[0.15, 2.01, 2.455]} />
      <mesh geometry={nodes.Column086.geometry} material={materials['Column_material.086']} position={[-142.861, 0.023, -133.508]} scale={[2.202, 1.714, 2.374]} />
      <mesh geometry={nodes.Column087.geometry} material={materials['Column_material.087']} position={[-141.861, 0.023, -133.508]} rotation={[0.424, 0, 0]} scale={[2.202, 1.714, 2.374]} />
      <mesh geometry={nodes.Column088.geometry} material={materials['Column_material.088']} position={[-141.861, 0.023, -133.508]} rotation={[0.337, -0.263, -0.638]} scale={[2.202, 1.714, 2.374]} />
      <mesh geometry={nodes.Column089.geometry} material={materials['Column_material.089']} position={[-141.861, 0.023, -133.508]} rotation={[-0.326, -0.263, -0.638]} scale={[2.202, 1.714, 2.374]} />
      <mesh geometry={nodes.Column090.geometry} material={materials['Column_material.090']} position={[-141.861, 0.023, -133.508]} rotation={[1.32, -0.263, -0.638]} scale={[2.202, 1.714, 2.374]} />
      <mesh geometry={nodes.Column091.geometry} material={materials['Column_material.091']} position={[-142.861, 0.023, -133.508]} rotation={[1.337, 0, 0]} scale={[2.202, 1.714, 2.374]} />
      <mesh geometry={nodes.Column092.geometry} material={materials['Column_material.092']} position={[-142.861, 2.023, -133.508]} rotation={[1.936, 0, 0]} scale={[2.202, 1.714, 2.374]} />
      <mesh geometry={nodes.Column093.geometry} material={materials['Column_material.093']} position={[-142.861, 2.023, -133.508]} rotation={[1.141, 0, 0]} scale={[2.202, 1.714, 2.374]} />
      <mesh geometry={nodes.Column094.geometry} material={materials['Column_material.094']} position={[-142.861, 2.023, -133.508]} rotation={[-2.114, 0, 0]} scale={[2.202, 1.714, 2.374]} />
      <mesh geometry={nodes.Cube288.geometry} material={nodes.Cube288.material} position={[-146.298, 2.105, -135.507]} rotation={[Math.PI, 0, Math.PI]} scale={[0.15, 2.01, 2.455]} />
      <mesh geometry={nodes.Cube289.geometry} material={nodes.Cube289.material} position={[-146.004, 2.105, -131.113]} rotation={[Math.PI, -1.535, Math.PI]} scale={[2.024, 2.01, 1.701]} />
      <mesh geometry={nodes.Cube290.geometry} material={nodes.Cube290.material} position={[-144.298, 2.105, -135.507]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.455]} />
      <mesh geometry={nodes.Cube291.geometry} material={nodes.Cube291.material} position={[-112.485, 1.841, -89.427]} rotation={[-0.724, 1.522, 0.718]} scale={[0.15, 2.01, 1.078]} />
      <mesh geometry={nodes.Cube292.geometry} material={nodes.Cube292.material} position={[-109.827, 1.894, -94.079]} rotation={[-0.724, 1.522, 0.718]} scale={[0.24, 2.01, 1.23]} />
      <mesh geometry={nodes.Cube293.geometry} material={nodes.Cube293.material} position={[-111.233, 1.866, -91.789]} rotation={[3.136, 0.037, 3.11]} scale={[0.15, 2.01, 2.568]} />
      <mesh geometry={nodes.Cube294.geometry} material={nodes.Cube294.material} position={[-113.684, 1.827, -86.061]} rotation={[3.136, 0.037, 3.11]} scale={[0.15, 2.01, 3.556]} />
      <mesh geometry={nodes.Cube295.geometry} material={nodes.Cube295.material} position={[-110.684, 1.827, -81.061]} rotation={[3.136, 0.037, 3.11]} scale={[0.15, 2.01, 3.556]} />
      <mesh geometry={nodes.Cube296.geometry} material={nodes.Cube296.material} position={[-108.233, 1.866, -86.789]} rotation={[3.136, 0.037, 3.11]} scale={[0.15, 2.01, 2.568]} />
      <mesh geometry={nodes.Cube297.geometry} material={nodes.Cube297.material} position={[-106.827, 1.894, -89.079]} rotation={[-0.724, 1.522, 0.718]} scale={[0.24, 2.01, 1.23]} />
      <mesh geometry={nodes.Cube298.geometry} material={nodes.Cube298.material} position={[-109.485, 1.841, -84.427]} rotation={[-0.724, 1.522, 0.718]} scale={[0.15, 2.01, 1.078]} />
      <mesh geometry={nodes.Cube299.geometry} material={nodes.Cube299.material} position={[-97.173, 1.841, -66.282]} rotation={[-1.252, -1.537, -1.258]} scale={[0.15, 2.01, 1.078]} />
      <mesh geometry={nodes.Cube300.geometry} material={nodes.Cube300.material} position={[-99.609, 1.894, -61.51]} rotation={[-1.252, -1.537, -1.258]} scale={[0.24, 2.01, 1.23]} />
      <mesh geometry={nodes.Cube301.geometry} material={nodes.Cube301.material} position={[-98.312, 1.866, -63.863]} rotation={[0.006, 0.01, -0.032]} scale={[0.15, 2.01, 2.568]} />
      <mesh geometry={nodes.Cube302.geometry} material={nodes.Cube302.material} position={[-96.134, 1.827, -69.701]} rotation={[0.006, 0.01, -0.032]} scale={[0.15, 2.01, 3.556]} />
      <mesh geometry={nodes.Cube303.geometry} material={nodes.Cube303.material} position={[-101.004, 2.105, -83.113]} rotation={[Math.PI, -1.535, Math.PI]} scale={[2.024, 2.01, 1.701]} />
      <mesh geometry={nodes.Cube304.geometry} material={nodes.Cube304.material} position={[-101.004, 2.105, -75.113]} rotation={[Math.PI, -1.535, Math.PI]} scale={[2.024, 2.01, 1.701]} />
      <mesh geometry={nodes.Cube305.geometry} material={nodes.Cube305.material} position={[-109.004, 2.105, -75.113]} rotation={[Math.PI, -1.535, Math.PI]} scale={[2.024, 2.01, 1.701]} />
      <mesh geometry={nodes.Cube306.geometry} material={nodes.Cube306.material} position={[-109.004, 2.105, -68.113]} rotation={[Math.PI, -1.535, Math.PI]} scale={[2.024, 2.01, 1.701]} />
      <mesh geometry={nodes.Cube307.geometry} material={nodes.Cube307.material} position={[-101.004, 4.105, -68.113]} rotation={[2.58, -1.535, Math.PI]} scale={[2.024, 2.01, 1.701]} />
      <mesh geometry={nodes.Cube308.geometry} material={nodes.Cube308.material} position={[-129.684, 1.827, -82.061]} rotation={[3.136, 0.037, 3.11]} scale={[0.15, 2.01, 3.556]} />
      <mesh geometry={nodes.Cube309.geometry} material={nodes.Cube309.material} position={[-126.684, 1.827, -85.061]} rotation={[3.136, 0.037, 3.11]} scale={[0.15, 2.01, 1.064]} />
      <mesh geometry={nodes.Cube310.geometry} material={nodes.Cube310.material} position={[-126.684, 1.827, -81.061]} rotation={[3.136, 0.037, 3.11]} scale={[0.15, 2.01, 1.064]} />
      <mesh geometry={nodes.Cube311.geometry} material={nodes.Cube311.material} position={[-115.881, 1.827, -85.221]} rotation={[0.006, 0.006, -0.032]} scale={[0.15, 2.01, 4.48]} />
      <mesh geometry={nodes.Cube312.geometry} material={nodes.Cube312.material} position={[-117.626, 1.909, -94.816]} rotation={[0, 0.013, 0]} scale={[0.15, 2.01, 3.285]} />
      <mesh geometry={nodes.Cube314.geometry} material={nodes.Cube314.material} position={[-123.315, 1.911, -84.906]} rotation={[Math.PI, -0.007, Math.PI]} scale={[0.15, 2.01, 3.556]} />
      <mesh geometry={nodes.Cube315.geometry} material={nodes.Cube315.material} position={[-121.354, 1.911, -94.766]} rotation={[Math.PI, -0.007, Math.PI]} scale={[0.15, 2.01, 6.425]} />
      <mesh geometry={nodes.Column095.geometry} material={materials['Column_material.095']} position={[-121.229, 0.023, -93.508]} rotation={[0, 0, -Math.PI / 2]} scale={[2.202, 1.589, 2.374]} />
      <mesh geometry={nodes.Column096.geometry} material={materials['Column_material.096']} position={[-121.229, 1.582, -93.508]} rotation={[0, 0, -Math.PI / 2]} scale={[2.202, 1.589, 2.374]} />
      <mesh geometry={nodes.Column097.geometry} material={materials['Column_material.097']} position={[-116.051, 1.582, -83.774]} rotation={[0, 0, -Math.PI / 2]} scale={[2.202, 0.955, 2.374]} />
      <mesh geometry={nodes.Column098.geometry} material={materials['Column_material.098']} position={[-117.081, -0.091, -84.056]} scale={[2.202, 1.589, 2.374]} />
      <mesh geometry={nodes.Column099.geometry} material={materials['Column_material.099']} position={[-118.548, -0.091, -84.056]} scale={[2.202, 1.589, 2.374]} />
      <mesh geometry={nodes.Column100.geometry} material={materials['Column_material.100']} position={[-120.2, -0.091, -84.056]} scale={[2.202, 1.589, 2.374]} />
      <mesh geometry={nodes.Column101.geometry} material={materials['Column_material.101']} position={[-117.081, -0.091, -85.852]} scale={[2.202, 1.589, 2.374]} />
      <mesh geometry={nodes.Cube313.geometry} material={materials['Material.048']} position={[-118.857, 1.909, -29.673]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 6.476]} />
      <mesh geometry={nodes.Column102.geometry} material={materials['Column_material.102']} position={[-124.684, 1.254, -33.68]} rotation={[0, 0, -1.578]} scale={[2.202, 1.589, 2.374]} />
      <mesh geometry={nodes.Cube316.geometry} material={nodes.Cube316.material} position={[-127.329, 1.841, -46.922]} rotation={[-0.724, 1.522, 0.718]} scale={[0.15, 2.01, 1.078]} />
      <mesh geometry={nodes.Cube317.geometry} material={nodes.Cube317.material} position={[-124.671, 1.894, -51.574]} rotation={[-0.724, 1.522, 0.718]} scale={[0.24, 2.01, 1.23]} />
      <mesh geometry={nodes.Cube318.geometry} material={nodes.Cube318.material} position={[-126.077, 1.866, -49.284]} rotation={[3.136, 0.037, 3.11]} scale={[0.15, 2.01, 2.568]} />
      <mesh geometry={nodes.Cube319.geometry} material={nodes.Cube319.material} position={[-128.528, 1.827, -43.556]} rotation={[3.136, 0.037, 3.11]} scale={[0.15, 2.01, 3.556]} />
      <mesh geometry={nodes.Cube320.geometry} material={nodes.Cube320.material} position={[-126.764, 1.894, -40.238]} rotation={[-0.724, 1.522, 0.718]} scale={[0.24, 2.012, 2.048]} />
      <mesh geometry={nodes.Column103.geometry} material={materials['Column_material.103']} position={[-116.051, 0.703, -83.774]} rotation={[0, 0, -Math.PI / 2]} scale={[2.202, 0.955, 2.374]} />
      <mesh geometry={nodes.Column104.geometry} material={materials['Column_material.104']} position={[-116.051, 2.443, -83.774]} rotation={[0, 0, -Math.PI / 2]} scale={[2.202, 0.955, 2.374]} />
      <mesh geometry={nodes.Cube321.geometry} material={nodes.Cube321.material} position={[-41.378, -0.721, -79.916]} scale={[0.075, 1, 1]} />
      <mesh geometry={nodes.Cube322.geometry} material={materials.Material} position={[-56.767, 6.133, -107.157]} rotation={[0, 1.535, 0]} scale={[-0.433, -0.081, -1.147]} />
      <mesh geometry={nodes.Cube323.geometry} material={materials['Material.064']} position={[-51.408, 6.133, -106.934]} rotation={[0, 1.535, 0]} scale={[-0.433, -0.081, -1.147]} />
      <mesh geometry={nodes.Cube324.geometry} material={materials['Material.067']} position={[-51.408, 6.133, -99.852]} rotation={[0, 1.535, 0]} scale={[-0.433, -0.081, -1.147]} />
      <mesh geometry={nodes.Cube325.geometry} material={materials['Material.097']} position={[-57.012, 6.133, -99.852]} rotation={[0, 1.535, 0]} scale={[-0.433, -0.081, -1.147]} />
    </group>
  )
}

useGLTF.preload('/poc2.glb')

```

`/home/suhas/Desktop/pune/blockroomsv2/client/tailwind.config.js`:

```js
/** @type {import('tailwindcss').Config} */
export default {
  darkMode: ["class"],
  content: [
    "./pages/**/*.{ts,tsx}",
    "./components/**/*.{ts,tsx}",
    "./app/**/*.{ts,tsx}",
    "./src/**/*.{ts,tsx}",
    "./index.html",
    "*.{js,ts,jsx,tsx,mdx}",
  ],
  theme: {
    container: {
      center: true,
      padding: "2rem",
      screens: {
        "2xl": "1400px",
      },
    },
    extend: {
      colors: {
        border: "hsl(var(--border))",
        input: "hsl(var(--input))",
        ring: "hsl(var(--ring))",
        background: "hsl(var(--background))",
        foreground: "hsl(var(--foreground))",
        primary: {
          DEFAULT: "hsl(var(--primary))",
          foreground: "hsl(var(--primary-foreground))",
        },
        secondary: {
          DEFAULT: "hsl(var(--secondary))",
          foreground: "hsl(var(--secondary-foreground))",
        },
        destructive: {
          DEFAULT: "hsl(var(--destructive))",
          foreground: "hsl(var(--destructive-foreground))",
        },
        muted: {
          DEFAULT: "hsl(var(--muted))",
          foreground: "hsl(var(--muted-foreground))",
        },
        accent: {
          DEFAULT: "hsl(var(--accent))",
          foreground: "hsl(var(--accent-foreground))",
        },
        popover: {
          DEFAULT: "hsl(var(--popover))",
          foreground: "hsl(var(--popover-foreground))",
        },
        card: {
          DEFAULT: "hsl(var(--card))",
          foreground: "hsl(var(--card-foreground))",
        },
      },
      borderRadius: {
        lg: "var(--radius)",
        md: "calc(var(--radius) - 2px)",
        sm: "calc(var(--radius) - 4px)",
      },
      keyframes: {
        "accordion-down": {
          from: { height: "0" },
          to: { height: "var(--radix-accordion-content-height)" },
        },
        "accordion-up": {
          from: { height: "var(--radix-accordion-content-height)" },
          to: { height: "0" },
        },
      },
      animation: {
        "accordion-down": "accordion-down 0.2s ease-out",
        "accordion-up": "accordion-up 0.2s ease-out",
      },
    },
  },
  plugins: [],
}

```

`/home/suhas/Desktop/pune/blockroomsv2/client/eslint.config.js`:

```js
import js from "@eslint/js";
import reactHooks from "eslint-plugin-react-hooks";
import reactRefresh from "eslint-plugin-react-refresh";
import globals from "globals";
import tseslint from "typescript-eslint";

export default tseslint.config(
    { ignores: ["dist"] },
    {
        extends: [js.configs.recommended, ...tseslint.configs.recommended],
        files: ["**/*.{ts,tsx}"],
        languageOptions: {
            ecmaVersion: 2020,
            globals: globals.browser,
        },
        plugins: {
            "react-hooks": reactHooks,
            "react-refresh": reactRefresh,
        },
        rules: {
            ...reactHooks.configs.recommended.rules,
            "react-refresh/only-export-components": [
                "warn",
                { allowConstantExport: true },
            ],
        },
    }
);

```

`/home/suhas/Desktop/pune/blockroomsv2/client/src/app/App.tsx`:

```tsx
import { useState, useCallback, useEffect } from "react";
import { Canvas } from "@react-three/fiber";
import { PointerLockControls } from "@react-three/drei";
import { Vector3 } from "three";
import * as THREE from "three";

import { useAppStore } from "../zustand/store";

import { WarningDialog } from "../components/ui/WarningDialog";

import { Crosshair } from "../components/ui/Crosshair";
// import { Instructions } from "../components/ui/Instructions";
import { MapTracker } from "../components/systems/MapTracker";
import { Gun } from "../components/game/Gun";

import { BloodEffect } from "../components/game/BloodEffect";
import { BulletHole } from "../components/game/BulletHole";
import { AudioManager } from "../components/systems/AudioManager";

import { FirstPersonControls } from "../components/systems/FirstPersonControls";
import { Model } from "../models/Poc2";

// Import types
import {
  BloodEffect as BloodEffectType,
  BulletHole as BulletHoleType,
} from "../types/game";

const App = (): JSX.Element => {
  // Get game session state, UI state, and player state from Zustand store
  const { 
    gameStarted, 
    showWarning, 
    showGun,
    showCrosshair,
    showMapTracker,
    position: playerPosition,
    rotation: playerRotation,
    startGame, 
    hideWarning,
    updatePosition,
    updateRotation
  } = useAppStore();

  // Initialize player position at map center on component mount
  useEffect(() => {
    const mapCenterPosition = new Vector3(400, 1.5, 400);
    updatePosition(mapCenterPosition);
  }, [updatePosition]);

  // Keep local state for things that don't need global state management
  const [bulletHoles, setBulletHoles] = useState<BulletHoleType[]>([]);
  const [bloodEffects, setBloodEffects] = useState<BloodEffectType[]>([]);

  // These handlers now update the Zustand store
  const handlePositionUpdate = (position: Vector3): void => {
    updatePosition(position);
  };

  const handleRotationUpdate = (rotation: number): void => {
    updateRotation(rotation);
  };

  const handleWarningAccept = (): void => {
    hideWarning();
    startGame();
  };

  // Handle shooting hits
  const handleShoot = (
    hit: THREE.Intersection,
    cameraPosition: Vector3
  ): void => {
    const hitObject = hit.object;
    const hitPoint = hit.point;
    const hitNormal = hit.face?.normal;

    // Check if enemy was hit
    if (hitObject.userData?.isEntity) {
      console.log("Enemy hit!");

      // Add blood effect
      const bloodId = Date.now() + Math.random();
      setBloodEffects((prev: BloodEffectType[]) => [
        ...prev,
        {
          id: bloodId,
          position: hitPoint.clone(),
        },
      ]);

      // Damage the enemy
      if (hitObject.userData.takeDamage) {
        hitObject.userData.takeDamage(100); // One shot kill
      }
    } else if (hitNormal) {
      // Add bullet hole for wall hits
      console.log("Wall hit at:", hitPoint);
      const holeId = Date.now() + Math.random();
      const offsetPosition = hitPoint
        .clone()
        .add(hitNormal.clone().multiplyScalar(0.01));
      setBulletHoles((prev: BulletHoleType[]) => [
        ...prev,
        {
          id: holeId,
          position: offsetPosition,
          normal: hitNormal.clone(),
          cameraPosition: cameraPosition.clone(),
        },
      ]);
    }
  };

  // Remove blood effect
  const removeBloodEffect = (id: number): void => {
    setBloodEffects((prev: BloodEffectType[]) =>
      prev.filter((effect: BloodEffectType) => effect.id !== id)
    );
  };

  // Remove bullet hole
  const removeBulletHole = (id: number): void => {
    setBulletHoles((prev: BulletHoleType[]) =>
      prev.filter((hole: BulletHoleType) => hole.id !== id)
    );
  };

  return (
    <div style={{ width: "100vw", height: "100vh", position: "relative" }}>
      {/* Warning Dialog */}
      {showWarning && <WarningDialog onAccept={handleWarningAccept} />}

      {/* Silent audio manager - no UI */}
      <AudioManager />

      {/* Instructions */}
      {/* {gameStarted && <Instructions />} */}

      {/* Crosshair */}
      {gameStarted && showCrosshair && <Crosshair />}

      {/* Map Tracker - Updated with new coordinate system */}
      {gameStarted && showMapTracker && (
        <MapTracker
          playerPosition={playerPosition}
          playerRotation={playerRotation}
          mapScale={30} // Adjust this based on your game world scale
          size={250} // Size of the tracker in pixels
        />
      )}

      <Canvas
        camera={{
          fov: 75,
          position: [400, 1.5, 400], // Start at map center coordinates
          rotation: [0, 0, 0],
          near: 0.1,
          far: 1000,
        }}
        onCreated={({ camera }) => {
          camera.rotation.set(0, 0, 0);
          camera.lookAt(400, 1.5, 399); // Look forward from the starting position
        }}
      >
        {/* Enhanced atmospheric lighting for better texture visibility at map center */}
        <ambientLight intensity={0.3} color="#fff8dc" />
        <directionalLight
          position={[420, 20, 420]} // Positioned above and offset from map center
          intensity={0.8}
          color="#fff8dc"
          castShadow
          shadow-mapSize-width={2048}
          shadow-mapSize-height={2048}
          shadow-camera-far={100}
          shadow-camera-left={-50}
          shadow-camera-right={50}
          shadow-camera-top={50}
          shadow-camera-bottom={-50}
        />
        <directionalLight
          position={[380, 15, 380]} // Secondary light from opposite direction
          intensity={0.4}
          color="#f4e4bc"
        />
        <pointLight
          position={[400, 10, 400]} // Central point light at map center
          intensity={0.5}
          color="#fff8dc"
          distance={100}
        />

        {/* Pointer lock controls for first person view */}
        <PointerLockControls />

        {/* First person movement controller with rotation tracking */}
        <FirstPersonControls 
          onPositionUpdate={handlePositionUpdate}
          onRotationUpdate={handleRotationUpdate}
        />

        {/* The backrooms model */}
        <Model />

        {/* The gun model */}
        {gameStarted && showGun && <Gun isVisible={showGun} onShoot={handleShoot} />}

        {/* Blood effects */}
        {bloodEffects.map((effect: BloodEffectType) => (
          <BloodEffect
            key={effect.id}
            position={effect.position}
            onComplete={() => removeBloodEffect(effect.id)}
          />
        ))}

        {/* Bullet holes */}
        {bulletHoles.map((hole: BulletHoleType) => (
          <BulletHole
            key={hole.id}
            position={hole.position}
            normal={hole.normal}
            cameraPosition={hole.cameraPosition}
            onComplete={() => removeBulletHole(hole.id)}
          />
        ))}
      </Canvas>
    </div>
  );
};

export default App;
```

`/home/suhas/Desktop/pune/blockroomsv2/client/src/zustand/store.ts`:

```ts
import { create } from 'zustand';

// Import all Dojo hooks
import {
  // Player and game state hooks
  usePlayer,
  useGameConfig,
  useGameSession,
  usePlayerStats,
  
  // World model hooks
  useRoom,
  useEntity,
  useDoor,
  useDoorway,
  useEntityState,
  useShardLocation,
  useTurnExecution,
  useGridBounds,
  usePosition,
  
  // Action hooks
  useInitializePlayer,
  useStartGame,
  useEndGame,
  useRespawnPlayer,
  useMovePlayer,
  useAttackEntity,
  useCollectShard,
  useOpenDoor,
  useExecuteTurn,
  useValidateActions,
  
  // Query hooks
  useGetPlayerState,
  useGetRoomState,
  useGetEntitiesInLocation,
  useGetAvailableDoorways,
  useGetGameStatus,
  useGetTurnHistory,
  
  // Event hooks
  useActionExecuted,
  useGameCompleted,
  useGameStarted,
  useNumberedShardCollected,
  usePlayerDeath,
  useRoomCleared,
  useTurnExecuted,
  useVictoryAchieved,
  
  // Enum utility hooks
  useAlertLevel,
  useEntityType,
  useNumberedShard,
  useActionType,
  useGameResult,
  
  // Legacy hooks
  useSpawnPlayer,
  useTrainAction,
  useMineAction,
  useRestAction,
  useStarknetConnect,
} from '../dojo/hooks';

interface GameSessionState {
  gameStarted: boolean;
  showWarning: boolean;
  startGame: () => void;
  hideWarning: () => void;
}

interface UIState {
  showGun: boolean;
  showCrosshair: boolean;
  showMapTracker: boolean;
  toggleGun: () => void;
  toggleCrosshair: () => void;
  toggleMapTracker: () => void;
  setGunVisibility: (visible: boolean) => void;
}

interface DojoGameState {
  // Player state
  player: any;
  playerStats: any;
  gameConfig: any;
  gameSession: any;
  
  // World state
  currentRoom: any;
  entities: any[];
  doors: any[];
  doorways: any[];
  shardLocations: any[];
  
  // Game state
  gameStatus: any;
  turnHistory: any[];
  availableDoorways: any[];
  
  // Events
  recentEvents: {
    actionExecuted: any[];
    gameCompleted: any[];
    gameStarted: any[];
    numberedShardCollected: any[];
    playerDeath: any[];
    roomCleared: any[];
    turnExecuted: any[];
    victoryAchieved: any[];
  };
  
  // Loading states
  isLoading: {
    player: boolean;
    gameConfig: boolean;
    room: boolean;
    entities: boolean;
    doors: boolean;
  };
  
  // Error states
  errors: {
    player: string | null;
    gameConfig: string | null;
    room: string | null;
    entities: string | null;
    doors: string | null;
  };
}

interface AppState extends GameSessionState, UIState, DojoGameState {}

export const useAppStore = create<AppState>((set, get) => ({
  // Game Session State
  gameStarted: false,
  showWarning: true,
  
  // UI State
  showGun: true,
  showCrosshair: true,
  showMapTracker: true,
  
  // Dojo Game State - Initialize with empty values
  player: null,
  playerStats: null,
  gameConfig: null,
  gameSession: null,
  currentRoom: null,
  entities: [],
  doors: [],
  doorways: [],
  shardLocations: [],
  gameStatus: null,
  turnHistory: [],
  availableDoorways: [],
  recentEvents: {
    actionExecuted: [],
    gameCompleted: [],
    gameStarted: [],
    numberedShardCollected: [],
    playerDeath: [],
    roomCleared: [],
    turnExecuted: [],
    victoryAchieved: [],
  },
  isLoading: {
    player: false,
    gameConfig: false,
    room: false,
    entities: false,
    doors: false,
  },
  errors: {
    player: null,
    gameConfig: null,
    room: null,
    entities: null,
    doors: null,
  },
  
  // Game Session Actions
  startGame: () => set({ gameStarted: true }),
  hideWarning: () => set({ showWarning: false }),
  
  // UI Actions
  toggleGun: () => set((state) => ({ showGun: !state.showGun })),
  toggleCrosshair: () => set((state) => ({ showCrosshair: !state.showCrosshair })),
  toggleMapTracker: () => set((state) => ({ showMapTracker: !state.showMapTracker })),
  setGunVisibility: (visible) => set({ showGun: visible }),
}));

// Export all hooks for use in components
export {
  // Player and game state hooks
  usePlayer,
  useGameConfig,
  useGameSession,
  usePlayerStats,
  
  // World model hooks
  useRoom,
  useEntity,
  useDoor,
  useDoorway,
  useEntityState,
  useShardLocation,
  useTurnExecution,
  useGridBounds,
  usePosition,
  
  // Action hooks
  useInitializePlayer,
  useStartGame,
  useEndGame,
  useRespawnPlayer,
  useMovePlayer,
  useAttackEntity,
  useCollectShard,
  useOpenDoor,
  useExecuteTurn,
  useValidateActions,
  
  // Query hooks
  useGetPlayerState,
  useGetRoomState,
  useGetEntitiesInLocation,
  useGetAvailableDoorways,
  useGetGameStatus,
  useGetTurnHistory,
  
  // Event hooks
  useActionExecuted,
  useGameCompleted,
  useGameStarted,
  useNumberedShardCollected,
  usePlayerDeath,
  useRoomCleared,
  useTurnExecuted,
  useVictoryAchieved,
  
  // Enum utility hooks
  useAlertLevel,
  useEntityType,
  useNumberedShard,
  useActionType,
  useGameResult,
  
  // Legacy hooks
  useSpawnPlayer,
  useTrainAction,
  useMineAction,
  useRestAction,
  useStarknetConnect,
};
```

`/home/suhas/Desktop/pune/blockroomsv2/client/src/zustand/storeOld.ts`:

```ts
import { create } from 'zustand';
import { persist } from 'zustand/middleware';

// Interface matching your bindings
export interface Player {
  owner: string;          
  experience: number;
  health: number;
  coins: number;
  creation_day: number;
}

// Application state
interface AppState {
  // Player data
  player: Player | null;
  
  // UI state
  isLoading: boolean;
  error: string | null;
  
  // Game state
  gameStarted: boolean;
}

// Store actions
interface AppActions {
  // Player actions
  setPlayer: (player: Player | null) => void;
  updatePlayerCoins: (coins: number) => void;
  updatePlayerExperience: (experience: number) => void;
  updatePlayerHealth: (health: number) => void;
  
  // UI actions
  setLoading: (loading: boolean) => void;
  setError: (error: string | null) => void;
  
  // Game actions
  startGame: () => void;
  endGame: () => void;
  
  // Utility actions
  resetStore: () => void;
}

// Combine state and actions
type AppStore = AppState & AppActions;

// Initial state
const initialState: AppState = {
  player: null,
  isLoading: false,
  error: null,
  gameStarted: false,
};

// Create the store
const useAppStore = create<AppStore>()(
  persist(
    (set) => ({
      // Initial state
      ...initialState,

      // Player actions
      setPlayer: (player) => set({ player }),
      
      updatePlayerCoins: (coins) => set((state) => ({
        player: state.player ? { ...state.player, coins } : null
      })),
      
      updatePlayerExperience: (experience) => set((state) => ({
        player: state.player ? { ...state.player, experience } : null
      })),

      updatePlayerHealth: (health) => set((state) => ({
        player: state.player ? { ...state.player, health } : null
      })),

      // UI actions
      setLoading: (isLoading) => set({ isLoading }),
      setError: (error) => set({ error }),

      // Game actions
      startGame: () => set({ gameStarted: true }),
      endGame: () => set({ gameStarted: false }),

      // Utility actions
      resetStore: () => set(initialState),
    }),
    {
      name: 'dojo-starter-store',
      partialize: (state) => ({
        player: state.player,
        gameStarted: state.gameStarted,
      }),
    }
  )
);

export default useAppStore;
```

`/home/suhas/Desktop/pune/blockroomsv2/client/src/models/index.ts`:

```ts
// 3D Models
export { Model as HallModel } from "./Poc2";
export { Model as GunModel } from "./Gun1";
```

`/home/suhas/Desktop/pune/blockroomsv2/client/src/models/Poc2.tsx`:

```tsx
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 poc2.glb --draw --types 
*/

import * as THREE from 'three'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    DoorFrame: THREE.Mesh
    Door: THREE.Mesh
    Handle_Back: THREE.Mesh
    Handle_Front: THREE.Mesh
    DoorFrame001: THREE.Mesh
    Door001: THREE.Mesh
    Handle_Back001: THREE.Mesh
    Handle_Front001: THREE.Mesh
    wall_pillar_thing_Material001_0001: THREE.Mesh
    wall_pillar_thing_Material001_0002: THREE.Mesh
    wall_pillar_thing_Material001_0003: THREE.Mesh
    wall_pillar_thing_Material001_0004: THREE.Mesh
    wall_pillar_thing_Material001_0005: THREE.Mesh
    wall_pillar_thing_Material001_0006: THREE.Mesh
    wall_pillar_thing_Material001_0007: THREE.Mesh
    wall_pillar_Material001_0001: THREE.Mesh
    wall_pillar_Material001_0002: THREE.Mesh
    wall_pillar_Material001_0003: THREE.Mesh
    wall_pillar_Material001_0004: THREE.Mesh
    wall_pillar_Material001_0005: THREE.Mesh
    wall_pillar_Material001_0006: THREE.Mesh
    wall_pillar_Material001_0007: THREE.Mesh
    wall_3_Material001_0001: THREE.Mesh
    wall_3_Material001_0002: THREE.Mesh
    wall_3_Material001_0003: THREE.Mesh
    wall_pillar_Material001_0008: THREE.Mesh
    wall_pillar_Material001_0009: THREE.Mesh
    wall_pillar_Material001_0010: THREE.Mesh
    wall_pillar_Material001_0011: THREE.Mesh
    wall_pillar_Material001_0012: THREE.Mesh
    wall_pillar_Material001_0013: THREE.Mesh
    wall_pillar_Material001_0014: THREE.Mesh
    wall_pillar_Material001_0015: THREE.Mesh
    wall_pillar_Material001_0016: THREE.Mesh
    wall_pillar_Material001_0017: THREE.Mesh
    wall_pillar_Material001_0018: THREE.Mesh
    wall_pillar_Material001_0019: THREE.Mesh
    wall_pillar_Material001_0020: THREE.Mesh
    wall_pillar_Material001_0021: THREE.Mesh
    wall_pillar_Material001_0022: THREE.Mesh
    wall_pillar_Material001_0023: THREE.Mesh
    wall_pillar_thing_Material001_0008: THREE.Mesh
    wall_pillar_thing_Material001_0009: THREE.Mesh
    wall_pillar_thing_Material001_0010: THREE.Mesh
    wall_pillar_thing_Material001_0011: THREE.Mesh
    wall_3_Material001_0004: THREE.Mesh
    wall_3_Material001_0005: THREE.Mesh
    wall_pillar_thing_Material001_0012: THREE.Mesh
    wall_pillar_thing_Material001_0013: THREE.Mesh
    wall_pillar_thing_Material001_0014: THREE.Mesh
    wall_pillar_thing_Material001_0015: THREE.Mesh
    wall_pillar_thing_Material001_0016: THREE.Mesh
    wall_pillar_thing_Material001_0017: THREE.Mesh
    wall_pillar_thing_Material001_0018: THREE.Mesh
    wall_pillar_thing_Material001_0019: THREE.Mesh
    wall_pillar_thing_Material001_0020: THREE.Mesh
    wall_pillar_thing_Material001_0021: THREE.Mesh
    wall_pillar_thing_Material001_0023: THREE.Mesh
    wall_pillar_Material001_0024: THREE.Mesh
    wall_pillar_Material001_0025: THREE.Mesh
    wall_pillar_Material001_0026: THREE.Mesh
    wall_pillar_Material001_0027: THREE.Mesh
    wall_pillar_Material001_0028: THREE.Mesh
    wall_pillar_Material001_0029: THREE.Mesh
    wall_pillar_Material001_0030: THREE.Mesh
    wall_pillar_thing_Material001_0022: THREE.Mesh
    wall_pillar_Material001_0031: THREE.Mesh
    wall_pillar_Material001_0032: THREE.Mesh
    wall_pillar_Material001_0033: THREE.Mesh
    wall_pillar_Material001_0034: THREE.Mesh
    wall_pillar_Material001_0035: THREE.Mesh
    wall_pillar_Material001_0036: THREE.Mesh
    wall_pillar_thing_Material001_0024: THREE.Mesh
    wall_pillar_thing_Material001_0025: THREE.Mesh
    wall_pillar_thing_Material001_0026: THREE.Mesh
    Plane: THREE.Mesh
    Cube: THREE.Mesh
    Cube001: THREE.Mesh
    Cube003: THREE.Mesh
    Cube004: THREE.Mesh
    Cube005: THREE.Mesh
    Cube006: THREE.Mesh
    Cube007: THREE.Mesh
    Cube008: THREE.Mesh
    Column: THREE.Mesh
    Column_box_bottom: THREE.Mesh
    Column_box_top: THREE.Mesh
    Cube009: THREE.Mesh
    Cube010: THREE.Mesh
    Cube011: THREE.Mesh
    Cube012: THREE.Mesh
    Cube013: THREE.Mesh
    Cube014: THREE.Mesh
    Cube015: THREE.Mesh
    Cube016: THREE.Mesh
    Cube017: THREE.Mesh
    Cube018: THREE.Mesh
    Cube019: THREE.Mesh
    Cube020: THREE.Mesh
    Cube021: THREE.Mesh
    Cube022: THREE.Mesh
    Cube023: THREE.Mesh
    Cube024: THREE.Mesh
    Cube025: THREE.Mesh
    Cube026: THREE.Mesh
    Cube027: THREE.Mesh
    Cube028: THREE.Mesh
    Cube029: THREE.Mesh
    Cube030: THREE.Mesh
    Cube031: THREE.Mesh
    Cube032: THREE.Mesh
    Cube033: THREE.Mesh
    Cube034: THREE.Mesh
    Cube035: THREE.Mesh
    Cube036: THREE.Mesh
    Cube037: THREE.Mesh
    Cube038: THREE.Mesh
    Cube039: THREE.Mesh
    Cube040: THREE.Mesh
    Cube041: THREE.Mesh
    Cube042: THREE.Mesh
    Cube043: THREE.Mesh
    Cube044: THREE.Mesh
    Cube045: THREE.Mesh
    Cube046: THREE.Mesh
    Cube047: THREE.Mesh
    Cube048: THREE.Mesh
    Cube049: THREE.Mesh
    Cube050: THREE.Mesh
    Cube051: THREE.Mesh
    Cube052: THREE.Mesh
    Cube053: THREE.Mesh
    Cube054: THREE.Mesh
    Cube055: THREE.Mesh
    Cube056: THREE.Mesh
    Cube057: THREE.Mesh
    Cube058: THREE.Mesh
    Cube059: THREE.Mesh
    Cube060: THREE.Mesh
    Column001: THREE.Mesh
    Column_box_bottom001: THREE.Mesh
    Column_box_top001: THREE.Mesh
    Cube061: THREE.Mesh
    Cube062: THREE.Mesh
    Cube063: THREE.Mesh
    Cube064: THREE.Mesh
    Cube065: THREE.Mesh
    Cube067: THREE.Mesh
    Cube068: THREE.Mesh
    Cube070: THREE.Mesh
    Cube071: THREE.Mesh
    Cube072: THREE.Mesh
    Cube073: THREE.Mesh
    Cube074: THREE.Mesh
    Cube075: THREE.Mesh
    Cube076: THREE.Mesh
    Cube077: THREE.Mesh
    Cube078: THREE.Mesh
    Plane001: THREE.Mesh
    Cube069: THREE.Mesh
    Cube079: THREE.Mesh
    Cube080: THREE.Mesh
    Cube081: THREE.Mesh
    Cube082: THREE.Mesh
    Cube066: THREE.Mesh
    Cube083: THREE.Mesh
    Cube084: THREE.Mesh
    Cube085: THREE.Mesh
    Cube086: THREE.Mesh
    Cube087: THREE.Mesh
    Cube088: THREE.Mesh
    Cube089: THREE.Mesh
    Cube090: THREE.Mesh
    Cube091: THREE.Mesh
    Cube092: THREE.Mesh
    Cube093: THREE.Mesh
    Cube094: THREE.Mesh
    Cube095: THREE.Mesh
    Cube096: THREE.Mesh
    Cube097: THREE.Mesh
    Cube098: THREE.Mesh
    Cube099: THREE.Mesh
    Cube100: THREE.Mesh
    Cube101: THREE.Mesh
    Cube102: THREE.Mesh
    Cube103: THREE.Mesh
    Cube104: THREE.Mesh
    Cube105: THREE.Mesh
    Cube106: THREE.Mesh
    Cube107: THREE.Mesh
    Cube108: THREE.Mesh
    Cube109: THREE.Mesh
    Plane002: THREE.Mesh
    Cube110: THREE.Mesh
    Cube111: THREE.Mesh
    Cube112: THREE.Mesh
    Cube113: THREE.Mesh
    Baseboard: THREE.Mesh
    Baseboard001: THREE.Mesh
    Cube002: THREE.Mesh
    Cube114: THREE.Mesh
    Cube115: THREE.Mesh
    Cube116: THREE.Mesh
    Cube117: THREE.Mesh
    Cube118: THREE.Mesh
    Cube119: THREE.Mesh
    Cube120: THREE.Mesh
    Cube121: THREE.Mesh
    Cube122: THREE.Mesh
    Cube123: THREE.Mesh
    Cube124: THREE.Mesh
    Cube126: THREE.Mesh
    Cube127: THREE.Mesh
    Cube128: THREE.Mesh
    Cube129: THREE.Mesh
    Cube130: THREE.Mesh
    Cube131: THREE.Mesh
    Cube132: THREE.Mesh
    Cube133: THREE.Mesh
    Cube134: THREE.Mesh
    Cube125: THREE.Mesh
    Cube135: THREE.Mesh
    Cube136: THREE.Mesh
    Cube137: THREE.Mesh
    Cube138: THREE.Mesh
    Cube139: THREE.Mesh
    Cube140: THREE.Mesh
    Cube141: THREE.Mesh
    Cube142: THREE.Mesh
    Cube143: THREE.Mesh
    Cube144: THREE.Mesh
    Cube145: THREE.Mesh
    Cube146: THREE.Mesh
    Cube147: THREE.Mesh
    Cube148: THREE.Mesh
    Cube149: THREE.Mesh
    Cube150: THREE.Mesh
    Cube151: THREE.Mesh
    Cube152: THREE.Mesh
    Cube153: THREE.Mesh
    Cube154: THREE.Mesh
    Cube155: THREE.Mesh
    Cube156: THREE.Mesh
    Cube157: THREE.Mesh
    Cube158: THREE.Mesh
    Cube159: THREE.Mesh
    Cube160: THREE.Mesh
    Cube161: THREE.Mesh
    Cube162: THREE.Mesh
    Cube164: THREE.Mesh
    Cube163: THREE.Mesh
    Cube165: THREE.Mesh
    Cube166: THREE.Mesh
    Cube167: THREE.Mesh
    Cube168: THREE.Mesh
    Cube169: THREE.Mesh
    Cube170: THREE.Mesh
    Cube171: THREE.Mesh
    Cube172: THREE.Mesh
    Cube173: THREE.Mesh
    Cube174: THREE.Mesh
    Cube175: THREE.Mesh
    Cube176: THREE.Mesh
    Cube177: THREE.Mesh
    Cube178: THREE.Mesh
    Cube179: THREE.Mesh
    Cube180: THREE.Mesh
    Cube181: THREE.Mesh
    Cube182: THREE.Mesh
    Cube183: THREE.Mesh
    Cube184: THREE.Mesh
    Cube185: THREE.Mesh
    Cube186: THREE.Mesh
    Cube187: THREE.Mesh
    Cube188: THREE.Mesh
    Cube189: THREE.Mesh
    Cube190: THREE.Mesh
    Cube191: THREE.Mesh
    Cube192: THREE.Mesh
    Cube193: THREE.Mesh
    Cube194: THREE.Mesh
    Cube195: THREE.Mesh
    Cube196: THREE.Mesh
    Cube197: THREE.Mesh
    Cube198: THREE.Mesh
    Cube199: THREE.Mesh
    Cube200: THREE.Mesh
    Cube201: THREE.Mesh
    Cube202: THREE.Mesh
    Cube203: THREE.Mesh
    Cube204: THREE.Mesh
    Cube205: THREE.Mesh
    Cube206: THREE.Mesh
    Cube207: THREE.Mesh
    Cube208: THREE.Mesh
    Cube209: THREE.Mesh
    Cube210: THREE.Mesh
    Cube211: THREE.Mesh
    Cube212: THREE.Mesh
    Cube213: THREE.Mesh
    Cube214: THREE.Mesh
    Cube215: THREE.Mesh
    Cube216: THREE.Mesh
    Cube217: THREE.Mesh
    Cube218: THREE.Mesh
    Cube219: THREE.Mesh
    Cube220: THREE.Mesh
    Cube221: THREE.Mesh
    Cube222: THREE.Mesh
    Cube223: THREE.Mesh
    Cube224: THREE.Mesh
    Cube225: THREE.Mesh
    Cube226: THREE.Mesh
    Cube227: THREE.Mesh
    Cube228: THREE.Mesh
    Cube229: THREE.Mesh
    Cube230: THREE.Mesh
    Cube231: THREE.Mesh
    Cube232: THREE.Mesh
    Cube233: THREE.Mesh
    Cube234: THREE.Mesh
    Cube235: THREE.Mesh
    Cube236: THREE.Mesh
    Cube237: THREE.Mesh
    Cube238: THREE.Mesh
    Cube239: THREE.Mesh
    Cube240: THREE.Mesh
    Cube241: THREE.Mesh
    Cube242: THREE.Mesh
    Cube243: THREE.Mesh
    Cube244: THREE.Mesh
    Cube245: THREE.Mesh
    Cube246: THREE.Mesh
    Cube247: THREE.Mesh
    Cube248: THREE.Mesh
    Cube249: THREE.Mesh
    Cube250: THREE.Mesh
    Cube251: THREE.Mesh
    Cube252: THREE.Mesh
    Cube253: THREE.Mesh
    Cube254: THREE.Mesh
    Cube255: THREE.Mesh
    Cube256: THREE.Mesh
    Cube257: THREE.Mesh
    Cube258: THREE.Mesh
    Cube259: THREE.Mesh
    Cube260: THREE.Mesh
    Cube261: THREE.Mesh
    Cube262: THREE.Mesh
    Cube263: THREE.Mesh
    Cube264: THREE.Mesh
    Cube265: THREE.Mesh
    Cube266: THREE.Mesh
    Cube267: THREE.Mesh
    Cube268: THREE.Mesh
    Cube269: THREE.Mesh
    Cube270: THREE.Mesh
    Cube271: THREE.Mesh
    Cube272: THREE.Mesh
    Cube273: THREE.Mesh
    Cube274: THREE.Mesh
    Cube275: THREE.Mesh
    Column002: THREE.Mesh
    Column_box_top002: THREE.Mesh
    Column003: THREE.Mesh
    Column_box_top003: THREE.Mesh
    Column004: THREE.Mesh
    Column_box_top004: THREE.Mesh
    Column005: THREE.Mesh
    Column_box_top005: THREE.Mesh
    Column006: THREE.Mesh
    Column_box_top006: THREE.Mesh
    Column007: THREE.Mesh
    Column_box_top007: THREE.Mesh
    Column008: THREE.Mesh
    Column_box_top008: THREE.Mesh
    Column009: THREE.Mesh
    Column_box_top009: THREE.Mesh
    Column010: THREE.Mesh
    Column_box_top010: THREE.Mesh
    Column011: THREE.Mesh
    Column_box_top011: THREE.Mesh
    Column012: THREE.Mesh
    Column_box_top012: THREE.Mesh
    Column013: THREE.Mesh
    Column_box_top013: THREE.Mesh
    Column014: THREE.Mesh
    Column_box_top014: THREE.Mesh
    Column015: THREE.Mesh
    Column_box_top015: THREE.Mesh
    Column016: THREE.Mesh
    Column_box_top016: THREE.Mesh
    Column017: THREE.Mesh
    Column_box_top017: THREE.Mesh
    Column018: THREE.Mesh
    Column_box_top018: THREE.Mesh
    Column019: THREE.Mesh
    Column_box_top019: THREE.Mesh
    Column020: THREE.Mesh
    Column_box_top020: THREE.Mesh
    Column021: THREE.Mesh
    Column_box_top021: THREE.Mesh
    Column022: THREE.Mesh
    Column_box_top022: THREE.Mesh
    Column023: THREE.Mesh
    Column_box_top023: THREE.Mesh
    Column024: THREE.Mesh
    Column_box_top024: THREE.Mesh
    Column025: THREE.Mesh
    Column_box_top025: THREE.Mesh
    Column026: THREE.Mesh
    Column_box_top026: THREE.Mesh
    Column027: THREE.Mesh
    Column_box_top027: THREE.Mesh
    Column028: THREE.Mesh
    Column029: THREE.Mesh
    Column_box_top028: THREE.Mesh
    Column030: THREE.Mesh
    Column_box_top029: THREE.Mesh
    Column031: THREE.Mesh
    Column_box_top030: THREE.Mesh
    Column032: THREE.Mesh
    Column_box_top031: THREE.Mesh
    Column033: THREE.Mesh
    Column_box_top032: THREE.Mesh
    Column034: THREE.Mesh
    Column_box_top033: THREE.Mesh
    Column035: THREE.Mesh
    Column_box_top034: THREE.Mesh
    Column036: THREE.Mesh
    Column_box_top035: THREE.Mesh
    Column037: THREE.Mesh
    Column_box_top036: THREE.Mesh
    Column038: THREE.Mesh
    Column_box_top037: THREE.Mesh
    Column039: THREE.Mesh
    Column_box_top038: THREE.Mesh
    Column040: THREE.Mesh
    Column_box_top039: THREE.Mesh
    Column041: THREE.Mesh
    Column_box_top040: THREE.Mesh
    Column042: THREE.Mesh
    Column_box_top041: THREE.Mesh
    Column043: THREE.Mesh
    Column044: THREE.Mesh
    Column_box_top042: THREE.Mesh
    Column045: THREE.Mesh
    Column_box_top043: THREE.Mesh
    Column046: THREE.Mesh
    Column_box_top044: THREE.Mesh
    Column047: THREE.Mesh
    Column_box_top045: THREE.Mesh
    Column048: THREE.Mesh
    Column049: THREE.Mesh
    Column_box_top046: THREE.Mesh
    Column050: THREE.Mesh
    Column_box_top047: THREE.Mesh
    Column051: THREE.Mesh
    Column_box_top048: THREE.Mesh
    Column052: THREE.Mesh
    Column_box_top049: THREE.Mesh
    Column053: THREE.Mesh
    Column_box_top050: THREE.Mesh
    Column054: THREE.Mesh
    Column_box_top051: THREE.Mesh
    Column055: THREE.Mesh
    Column_box_top052: THREE.Mesh
    Column056: THREE.Mesh
    Column_box_top053: THREE.Mesh
    Column057: THREE.Mesh
    Column_box_top054: THREE.Mesh
    Column058: THREE.Mesh
    Column_box_top055: THREE.Mesh
    Column059: THREE.Mesh
    Column_box_top056: THREE.Mesh
    Column060: THREE.Mesh
    Column_box_top057: THREE.Mesh
    Column061: THREE.Mesh
    Column_box_top058: THREE.Mesh
    Column062: THREE.Mesh
    Column_box_top059: THREE.Mesh
    Column063: THREE.Mesh
    Column064: THREE.Mesh
    Column_box_top060: THREE.Mesh
    Column065: THREE.Mesh
    Column_box_top061: THREE.Mesh
    Column066: THREE.Mesh
    Column_box_top062: THREE.Mesh
    Column067: THREE.Mesh
    Column_box_top063: THREE.Mesh
    Column068: THREE.Mesh
    Column_box_top064: THREE.Mesh
    Column069: THREE.Mesh
    Column_box_top065: THREE.Mesh
    Column070: THREE.Mesh
    Column_box_top066: THREE.Mesh
    Column071: THREE.Mesh
    Column_box_top067: THREE.Mesh
    Column072: THREE.Mesh
    Column_box_top068: THREE.Mesh
    Column073: THREE.Mesh
    Column074: THREE.Mesh
    Column_box_top069: THREE.Mesh
    Column075: THREE.Mesh
    Column_box_top070: THREE.Mesh
    Column076: THREE.Mesh
    Column_box_top071: THREE.Mesh
    Column077: THREE.Mesh
    Column_box_top072: THREE.Mesh
    Column078: THREE.Mesh
    Column079: THREE.Mesh
    Column_box_top073: THREE.Mesh
    Column080: THREE.Mesh
    Column_box_top074: THREE.Mesh
    Column081: THREE.Mesh
    Column_box_top075: THREE.Mesh
    Column082: THREE.Mesh
    Column_box_top076: THREE.Mesh
    Column083: THREE.Mesh
    Column_box_top077: THREE.Mesh
    Column084: THREE.Mesh
    Column_box_top078: THREE.Mesh
    Column085: THREE.Mesh
    Column_box_top079: THREE.Mesh
    Cube276: THREE.Mesh
    Cube277: THREE.Mesh
    Cube278: THREE.Mesh
    Cube279: THREE.Mesh
    Cube280: THREE.Mesh
    Cube281: THREE.Mesh
    Cube282: THREE.Mesh
    Cube283: THREE.Mesh
    Cube284: THREE.Mesh
    Cube285: THREE.Mesh
    Cube286: THREE.Mesh
    Cube287: THREE.Mesh
    Column086: THREE.Mesh
    Column087: THREE.Mesh
    Column088: THREE.Mesh
    Column089: THREE.Mesh
    Column090: THREE.Mesh
    Column091: THREE.Mesh
    Column092: THREE.Mesh
    Column093: THREE.Mesh
    Column094: THREE.Mesh
    Cube288: THREE.Mesh
    Cube289: THREE.Mesh
    Cube290: THREE.Mesh
    Cube291: THREE.Mesh
    Cube292: THREE.Mesh
    Cube293: THREE.Mesh
    Cube294: THREE.Mesh
    Cube295: THREE.Mesh
    Cube296: THREE.Mesh
    Cube297: THREE.Mesh
    Cube298: THREE.Mesh
    Cube299: THREE.Mesh
    Cube300: THREE.Mesh
    Cube301: THREE.Mesh
    Cube302: THREE.Mesh
    Cube303: THREE.Mesh
    Cube304: THREE.Mesh
    Cube305: THREE.Mesh
    Cube306: THREE.Mesh
    Cube307: THREE.Mesh
    Cube308: THREE.Mesh
    Cube309: THREE.Mesh
    Cube310: THREE.Mesh
    Cube311: THREE.Mesh
    Cube312: THREE.Mesh
    Cube314: THREE.Mesh
    Cube315: THREE.Mesh
    Column095: THREE.Mesh
    Column096: THREE.Mesh
    Column097: THREE.Mesh
    Column098: THREE.Mesh
    Column099: THREE.Mesh
    Column100: THREE.Mesh
    Column101: THREE.Mesh
    Cube313: THREE.Mesh
    Column102: THREE.Mesh
    Cube316: THREE.Mesh
    Cube317: THREE.Mesh
    Cube318: THREE.Mesh
    Cube319: THREE.Mesh
    Cube320: THREE.Mesh
    Column103: THREE.Mesh
    Column104: THREE.Mesh
    Cube321: THREE.Mesh
    Cube322: THREE.Mesh
    Cube323: THREE.Mesh
    Cube324: THREE.Mesh
    Cube325: THREE.Mesh
  }
  materials: {
    Door_material: THREE.MeshStandardMaterial
    Handle_material: THREE.MeshStandardMaterial
    ['Material.020']: THREE.MeshStandardMaterial
    ['Material.021']: THREE.MeshStandardMaterial
    ['Material.022']: THREE.MeshStandardMaterial
    ['Material.023']: THREE.MeshStandardMaterial
    ['Material.024']: THREE.MeshStandardMaterial
    ['Material.025']: THREE.MeshStandardMaterial
    ['Material.026']: THREE.MeshStandardMaterial
    ['Material.029']: THREE.MeshStandardMaterial
    ['Material.030']: THREE.MeshStandardMaterial
    ['Material.031']: THREE.MeshStandardMaterial
    ['Material.032']: THREE.MeshStandardMaterial
    ['Material.033']: THREE.MeshStandardMaterial
    ['Material.034']: THREE.MeshStandardMaterial
    ['Material.035']: THREE.MeshStandardMaterial
    ['Material.044']: THREE.MeshStandardMaterial
    ['Material.045']: THREE.MeshStandardMaterial
    ['Material.046']: THREE.MeshStandardMaterial
    ['Material.049']: THREE.MeshStandardMaterial
    ['Material.050']: THREE.MeshStandardMaterial
    ['Material.051']: THREE.MeshStandardMaterial
    ['Material.052']: THREE.MeshStandardMaterial
    ['Material.053']: THREE.MeshStandardMaterial
    ['Material.054']: THREE.MeshStandardMaterial
    ['Material.055']: THREE.MeshStandardMaterial
    ['Material.056']: THREE.MeshStandardMaterial
    ['Material.057']: THREE.MeshStandardMaterial
    ['Material.058']: THREE.MeshStandardMaterial
    ['Material.059']: THREE.MeshStandardMaterial
    ['Material.060']: THREE.MeshStandardMaterial
    ['Material.061']: THREE.MeshStandardMaterial
    ['Material.062']: THREE.MeshStandardMaterial
    ['Material.063']: THREE.MeshStandardMaterial
    ['Material.071']: THREE.MeshStandardMaterial
    ['Material.082']: THREE.MeshStandardMaterial
    ['Material.083']: THREE.MeshStandardMaterial
    ['Material.084']: THREE.MeshStandardMaterial
    ['Material.085']: THREE.MeshStandardMaterial
    ['Material.086']: THREE.MeshStandardMaterial
    ['Material.090']: THREE.MeshStandardMaterial
    ['Material.134']: THREE.MeshStandardMaterial
    ['Material.135']: THREE.MeshStandardMaterial
    ['Material.136']: THREE.MeshStandardMaterial
    ['Material.137']: THREE.MeshStandardMaterial
    ['Material.138']: THREE.MeshStandardMaterial
    ['Material.139']: THREE.MeshStandardMaterial
    ['Material.140']: THREE.MeshStandardMaterial
    ['Material.141']: THREE.MeshStandardMaterial
    ['Material.142']: THREE.MeshStandardMaterial
    ['Material.143']: THREE.MeshStandardMaterial
    ['Material.145']: THREE.MeshStandardMaterial
    ['Material.149']: THREE.MeshStandardMaterial
    ['Material.150']: THREE.MeshStandardMaterial
    ['Material.151']: THREE.MeshStandardMaterial
    ['Material.152']: THREE.MeshStandardMaterial
    ['Material.153']: THREE.MeshStandardMaterial
    ['Material.154']: THREE.MeshStandardMaterial
    ['Material.155']: THREE.MeshStandardMaterial
    ['Material.156']: THREE.MeshStandardMaterial
    ['Material.157']: THREE.MeshStandardMaterial
    ['Material.158']: THREE.MeshStandardMaterial
    ['Material.159']: THREE.MeshStandardMaterial
    ['Material.160']: THREE.MeshStandardMaterial
    ['Material.165']: THREE.MeshStandardMaterial
    ['Material.166']: THREE.MeshStandardMaterial
    ['Material.168']: THREE.MeshStandardMaterial
    ['Material.169']: THREE.MeshStandardMaterial
    ['Material.170']: THREE.MeshStandardMaterial
    Column_material: THREE.MeshStandardMaterial
    Column_rect: THREE.MeshStandardMaterial
    ['Material.001']: THREE.MeshStandardMaterial
    ['Column_material.001']: THREE.MeshStandardMaterial
    ['Column_rect.001']: THREE.MeshStandardMaterial
    ['Material.002']: THREE.MeshStandardMaterial
    ['Material.003']: THREE.MeshStandardMaterial
    ['Material.004']: THREE.MeshStandardMaterial
    ['Material.005']: THREE.MeshStandardMaterial
    Baseboard_material: THREE.MeshStandardMaterial
    ['Material.008']: THREE.MeshStandardMaterial
    ['Material.007']: THREE.MeshStandardMaterial
    ['Material.009']: THREE.MeshStandardMaterial
    ['Material.010']: THREE.MeshStandardMaterial
    ['Material.011']: THREE.MeshStandardMaterial
    ['Material.012']: THREE.MeshStandardMaterial
    ['Material.013']: THREE.MeshStandardMaterial
    ['Material.014']: THREE.MeshStandardMaterial
    ['Material.015']: THREE.MeshStandardMaterial
    ['Material.016']: THREE.MeshStandardMaterial
    ['Material.017']: THREE.MeshStandardMaterial
    ['Material.018']: THREE.MeshStandardMaterial
    ['Material.027']: THREE.MeshStandardMaterial
    ['Material.028']: THREE.MeshStandardMaterial
    ['Material.036']: THREE.MeshStandardMaterial
    ['Material.037']: THREE.MeshStandardMaterial
    ['Material.038']: THREE.MeshStandardMaterial
    ['Material.039']: THREE.MeshStandardMaterial
    ['Material.040']: THREE.MeshStandardMaterial
    ['Material.041']: THREE.MeshStandardMaterial
    ['Material.042']: THREE.MeshStandardMaterial
    ['Material.043']: THREE.MeshStandardMaterial
    ['Material.047']: THREE.MeshStandardMaterial
    ['Material.065']: THREE.MeshStandardMaterial
    ['Material.066']: THREE.MeshStandardMaterial
    ['Material.068']: THREE.MeshStandardMaterial
    ['Material.069']: THREE.MeshStandardMaterial
    ['Material.070']: THREE.MeshStandardMaterial
    ['Material.072']: THREE.MeshStandardMaterial
    ['Material.073']: THREE.MeshStandardMaterial
    ['Material.074']: THREE.MeshStandardMaterial
    ['Material.075']: THREE.MeshStandardMaterial
    ['Material.076']: THREE.MeshStandardMaterial
    ['Material.077']: THREE.MeshStandardMaterial
    ['Material.078']: THREE.MeshStandardMaterial
    ['Material.079']: THREE.MeshStandardMaterial
    ['Material.080']: THREE.MeshStandardMaterial
    ['Material.081']: THREE.MeshStandardMaterial
    ['Material.087']: THREE.MeshStandardMaterial
    ['Material.088']: THREE.MeshStandardMaterial
    ['Material.089']: THREE.MeshStandardMaterial
    ['Material.091']: THREE.MeshStandardMaterial
    ['Material.092']: THREE.MeshStandardMaterial
    ['Material.093']: THREE.MeshStandardMaterial
    ['Material.094']: THREE.MeshStandardMaterial
    ['Material.095']: THREE.MeshStandardMaterial
    ['Material.096']: THREE.MeshStandardMaterial
    ['Material.098']: THREE.MeshStandardMaterial
    ['Material.099']: THREE.MeshStandardMaterial
    ['Material.100']: THREE.MeshStandardMaterial
    ['Material.101']: THREE.MeshStandardMaterial
    ['Material.102']: THREE.MeshStandardMaterial
    ['Material.103']: THREE.MeshStandardMaterial
    ['Material.104']: THREE.MeshStandardMaterial
    ['Material.105']: THREE.MeshStandardMaterial
    ['Material.106']: THREE.MeshStandardMaterial
    ['Material.107']: THREE.MeshStandardMaterial
    ['Material.108']: THREE.MeshStandardMaterial
    ['Material.109']: THREE.MeshStandardMaterial
    ['Material.110']: THREE.MeshStandardMaterial
    ['Material.111']: THREE.MeshStandardMaterial
    ['Material.112']: THREE.MeshStandardMaterial
    ['Material.113']: THREE.MeshStandardMaterial
    ['Material.114']: THREE.MeshStandardMaterial
    ['Material.115']: THREE.MeshStandardMaterial
    ['Material.116']: THREE.MeshStandardMaterial
    ['Material.117']: THREE.MeshStandardMaterial
    ['Material.118']: THREE.MeshStandardMaterial
    ['Material.119']: THREE.MeshStandardMaterial
    ['Material.120']: THREE.MeshStandardMaterial
    ['Material.121']: THREE.MeshStandardMaterial
    ['Material.122']: THREE.MeshStandardMaterial
    ['Material.123']: THREE.MeshStandardMaterial
    ['Material.124']: THREE.MeshStandardMaterial
    ['Material.125']: THREE.MeshStandardMaterial
    ['Material.126']: THREE.MeshStandardMaterial
    ['Material.127']: THREE.MeshStandardMaterial
    ['Material.128']: THREE.MeshStandardMaterial
    ['Material.129']: THREE.MeshStandardMaterial
    ['Material.130']: THREE.MeshStandardMaterial
    ['Material.131']: THREE.MeshStandardMaterial
    ['Material.132']: THREE.MeshStandardMaterial
    ['Material.133']: THREE.MeshStandardMaterial
    ['Material.146']: THREE.MeshStandardMaterial
    ['Material.147']: THREE.MeshStandardMaterial
    ['Material.148']: THREE.MeshStandardMaterial
    ['Material.161']: THREE.MeshStandardMaterial
    ['Material.162']: THREE.MeshStandardMaterial
    ['Material.163']: THREE.MeshStandardMaterial
    ['Material.164']: THREE.MeshStandardMaterial
    ['Material.167']: THREE.MeshStandardMaterial
    ['Column_material.002']: THREE.MeshStandardMaterial
    ['Column_rect.002']: THREE.MeshStandardMaterial
    ['Column_material.003']: THREE.MeshStandardMaterial
    ['Column_rect.003']: THREE.MeshStandardMaterial
    ['Column_material.004']: THREE.MeshStandardMaterial
    ['Column_rect.004']: THREE.MeshStandardMaterial
    ['Column_material.005']: THREE.MeshStandardMaterial
    ['Column_rect.005']: THREE.MeshStandardMaterial
    ['Column_material.006']: THREE.MeshStandardMaterial
    ['Column_rect.006']: THREE.MeshStandardMaterial
    ['Column_material.007']: THREE.MeshStandardMaterial
    ['Column_rect.007']: THREE.MeshStandardMaterial
    ['Column_material.008']: THREE.MeshStandardMaterial
    ['Column_rect.008']: THREE.MeshStandardMaterial
    ['Column_material.009']: THREE.MeshStandardMaterial
    ['Column_rect.009']: THREE.MeshStandardMaterial
    ['Column_material.010']: THREE.MeshStandardMaterial
    ['Column_rect.010']: THREE.MeshStandardMaterial
    ['Column_material.011']: THREE.MeshStandardMaterial
    ['Column_rect.011']: THREE.MeshStandardMaterial
    ['Column_material.012']: THREE.MeshStandardMaterial
    ['Column_rect.012']: THREE.MeshStandardMaterial
    ['Column_material.013']: THREE.MeshStandardMaterial
    ['Column_rect.013']: THREE.MeshStandardMaterial
    ['Column_material.014']: THREE.MeshStandardMaterial
    ['Column_rect.014']: THREE.MeshStandardMaterial
    ['Column_material.015']: THREE.MeshStandardMaterial
    ['Column_rect.015']: THREE.MeshStandardMaterial
    ['Column_material.016']: THREE.MeshStandardMaterial
    ['Column_rect.016']: THREE.MeshStandardMaterial
    ['Column_material.017']: THREE.MeshStandardMaterial
    ['Column_rect.017']: THREE.MeshStandardMaterial
    ['Column_material.018']: THREE.MeshStandardMaterial
    ['Column_rect.018']: THREE.MeshStandardMaterial
    ['Column_material.019']: THREE.MeshStandardMaterial
    ['Column_rect.019']: THREE.MeshStandardMaterial
    ['Column_material.020']: THREE.MeshStandardMaterial
    ['Column_rect.020']: THREE.MeshStandardMaterial
    ['Column_material.021']: THREE.MeshStandardMaterial
    ['Column_rect.021']: THREE.MeshStandardMaterial
    ['Column_material.022']: THREE.MeshStandardMaterial
    ['Column_rect.022']: THREE.MeshStandardMaterial
    ['Column_material.023']: THREE.MeshStandardMaterial
    ['Column_rect.023']: THREE.MeshStandardMaterial
    ['Column_material.024']: THREE.MeshStandardMaterial
    ['Column_rect.024']: THREE.MeshStandardMaterial
    ['Column_material.025']: THREE.MeshStandardMaterial
    ['Column_rect.025']: THREE.MeshStandardMaterial
    ['Column_material.026']: THREE.MeshStandardMaterial
    ['Column_rect.026']: THREE.MeshStandardMaterial
    ['Column_material.027']: THREE.MeshStandardMaterial
    ['Column_rect.027']: THREE.MeshStandardMaterial
    ['Column_material.028']: THREE.MeshStandardMaterial
    ['Column_material.029']: THREE.MeshStandardMaterial
    ['Column_rect.028']: THREE.MeshStandardMaterial
    ['Column_material.030']: THREE.MeshStandardMaterial
    ['Column_rect.029']: THREE.MeshStandardMaterial
    ['Column_material.031']: THREE.MeshStandardMaterial
    ['Column_rect.030']: THREE.MeshStandardMaterial
    ['Column_material.032']: THREE.MeshStandardMaterial
    ['Column_rect.031']: THREE.MeshStandardMaterial
    ['Column_material.033']: THREE.MeshStandardMaterial
    ['Column_rect.032']: THREE.MeshStandardMaterial
    ['Column_material.034']: THREE.MeshStandardMaterial
    ['Column_rect.033']: THREE.MeshStandardMaterial
    ['Column_material.035']: THREE.MeshStandardMaterial
    ['Column_rect.034']: THREE.MeshStandardMaterial
    ['Column_material.036']: THREE.MeshStandardMaterial
    ['Column_rect.035']: THREE.MeshStandardMaterial
    ['Column_material.037']: THREE.MeshStandardMaterial
    ['Column_rect.036']: THREE.MeshStandardMaterial
    ['Column_material.038']: THREE.MeshStandardMaterial
    ['Column_rect.037']: THREE.MeshStandardMaterial
    ['Column_material.039']: THREE.MeshStandardMaterial
    ['Column_rect.038']: THREE.MeshStandardMaterial
    ['Column_material.040']: THREE.MeshStandardMaterial
    ['Column_rect.039']: THREE.MeshStandardMaterial
    ['Column_material.041']: THREE.MeshStandardMaterial
    ['Column_rect.040']: THREE.MeshStandardMaterial
    ['Column_material.042']: THREE.MeshStandardMaterial
    ['Column_rect.041']: THREE.MeshStandardMaterial
    ['Column_material.043']: THREE.MeshStandardMaterial
    ['Column_material.044']: THREE.MeshStandardMaterial
    ['Column_rect.042']: THREE.MeshStandardMaterial
    ['Column_material.045']: THREE.MeshStandardMaterial
    ['Column_rect.043']: THREE.MeshStandardMaterial
    ['Column_material.046']: THREE.MeshStandardMaterial
    ['Column_rect.044']: THREE.MeshStandardMaterial
    ['Column_material.047']: THREE.MeshStandardMaterial
    ['Column_rect.045']: THREE.MeshStandardMaterial
    ['Column_material.048']: THREE.MeshStandardMaterial
    ['Column_material.049']: THREE.MeshStandardMaterial
    ['Column_rect.046']: THREE.MeshStandardMaterial
    ['Column_material.050']: THREE.MeshStandardMaterial
    ['Column_rect.047']: THREE.MeshStandardMaterial
    ['Column_material.051']: THREE.MeshStandardMaterial
    ['Column_rect.048']: THREE.MeshStandardMaterial
    ['Column_material.052']: THREE.MeshStandardMaterial
    ['Column_rect.049']: THREE.MeshStandardMaterial
    ['Column_material.053']: THREE.MeshStandardMaterial
    ['Column_rect.050']: THREE.MeshStandardMaterial
    ['Column_material.054']: THREE.MeshStandardMaterial
    ['Column_rect.051']: THREE.MeshStandardMaterial
    ['Column_material.055']: THREE.MeshStandardMaterial
    ['Column_rect.052']: THREE.MeshStandardMaterial
    ['Column_material.056']: THREE.MeshStandardMaterial
    ['Column_rect.053']: THREE.MeshStandardMaterial
    ['Column_material.057']: THREE.MeshStandardMaterial
    ['Column_rect.054']: THREE.MeshStandardMaterial
    ['Column_material.058']: THREE.MeshStandardMaterial
    ['Column_rect.055']: THREE.MeshStandardMaterial
    ['Column_material.059']: THREE.MeshStandardMaterial
    ['Column_rect.056']: THREE.MeshStandardMaterial
    ['Column_material.060']: THREE.MeshStandardMaterial
    ['Column_rect.057']: THREE.MeshStandardMaterial
    ['Column_material.061']: THREE.MeshStandardMaterial
    ['Column_rect.058']: THREE.MeshStandardMaterial
    ['Column_material.062']: THREE.MeshStandardMaterial
    ['Column_rect.059']: THREE.MeshStandardMaterial
    ['Column_material.063']: THREE.MeshStandardMaterial
    ['Column_material.064']: THREE.MeshStandardMaterial
    ['Column_rect.060']: THREE.MeshStandardMaterial
    ['Column_material.065']: THREE.MeshStandardMaterial
    ['Column_rect.061']: THREE.MeshStandardMaterial
    ['Column_material.066']: THREE.MeshStandardMaterial
    ['Column_rect.062']: THREE.MeshStandardMaterial
    ['Column_material.067']: THREE.MeshStandardMaterial
    ['Column_rect.063']: THREE.MeshStandardMaterial
    ['Column_material.068']: THREE.MeshStandardMaterial
    ['Column_rect.064']: THREE.MeshStandardMaterial
    ['Column_material.069']: THREE.MeshStandardMaterial
    ['Column_rect.065']: THREE.MeshStandardMaterial
    ['Column_material.070']: THREE.MeshStandardMaterial
    ['Column_rect.066']: THREE.MeshStandardMaterial
    ['Column_material.071']: THREE.MeshStandardMaterial
    ['Column_rect.067']: THREE.MeshStandardMaterial
    ['Column_material.072']: THREE.MeshStandardMaterial
    ['Column_rect.068']: THREE.MeshStandardMaterial
    ['Column_material.073']: THREE.MeshStandardMaterial
    ['Column_material.074']: THREE.MeshStandardMaterial
    ['Column_rect.069']: THREE.MeshStandardMaterial
    ['Column_material.075']: THREE.MeshStandardMaterial
    ['Column_rect.070']: THREE.MeshStandardMaterial
    ['Column_material.076']: THREE.MeshStandardMaterial
    ['Column_rect.071']: THREE.MeshStandardMaterial
    ['Column_material.077']: THREE.MeshStandardMaterial
    ['Column_rect.072']: THREE.MeshStandardMaterial
    ['Column_material.078']: THREE.MeshStandardMaterial
    ['Column_material.079']: THREE.MeshStandardMaterial
    ['Column_rect.073']: THREE.MeshStandardMaterial
    ['Column_material.080']: THREE.MeshStandardMaterial
    ['Column_rect.074']: THREE.MeshStandardMaterial
    ['Column_material.081']: THREE.MeshStandardMaterial
    ['Column_rect.075']: THREE.MeshStandardMaterial
    ['Column_material.082']: THREE.MeshStandardMaterial
    ['Column_rect.076']: THREE.MeshStandardMaterial
    ['Column_material.083']: THREE.MeshStandardMaterial
    ['Column_rect.077']: THREE.MeshStandardMaterial
    ['Column_material.084']: THREE.MeshStandardMaterial
    ['Column_rect.078']: THREE.MeshStandardMaterial
    ['Column_material.085']: THREE.MeshStandardMaterial
    ['Column_rect.079']: THREE.MeshStandardMaterial
    ['Column_material.086']: THREE.MeshStandardMaterial
    ['Column_material.087']: THREE.MeshStandardMaterial
    ['Column_material.088']: THREE.MeshStandardMaterial
    ['Column_material.089']: THREE.MeshStandardMaterial
    ['Column_material.090']: THREE.MeshStandardMaterial
    ['Column_material.091']: THREE.MeshStandardMaterial
    ['Column_material.092']: THREE.MeshStandardMaterial
    ['Column_material.093']: THREE.MeshStandardMaterial
    ['Column_material.094']: THREE.MeshStandardMaterial
    ['Column_material.095']: THREE.MeshStandardMaterial
    ['Column_material.096']: THREE.MeshStandardMaterial
    ['Column_material.097']: THREE.MeshStandardMaterial
    ['Column_material.098']: THREE.MeshStandardMaterial
    ['Column_material.099']: THREE.MeshStandardMaterial
    ['Column_material.100']: THREE.MeshStandardMaterial
    ['Column_material.101']: THREE.MeshStandardMaterial
    ['Material.048']: THREE.MeshStandardMaterial
    ['Column_material.102']: THREE.MeshStandardMaterial
    ['Column_material.103']: THREE.MeshStandardMaterial
    ['Column_material.104']: THREE.MeshStandardMaterial
    Material: THREE.MeshStandardMaterial
    ['Material.064']: THREE.MeshStandardMaterial
    ['Material.067']: THREE.MeshStandardMaterial
    ['Material.097']: THREE.MeshStandardMaterial
  }
}

export function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/poc2.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <group position={[400, 0, 400]}>
      <group position={[-73.665, 0, -107.622]}>
        <mesh geometry={nodes.DoorFrame.geometry} material={materials.Door_material} position={[-0.22, 0, 0.46]} rotation={[0, Math.PI / 2, 0]} scale={[1.757, 1.487, 1]}>
          <mesh geometry={nodes.Door.geometry} material={materials.Door_material} position={[0.418, 1.05, 0.022]}>
            <mesh geometry={nodes.Handle_Back.geometry} material={materials.Handle_material} position={[-0.764, 0, -0.005]} />
            <mesh geometry={nodes.Handle_Front.geometry} material={materials.Handle_material} position={[-0.764, 0, -0.029]} rotation={[-Math.PI, 0, 0]} />
          </mesh>
        </mesh>
      </group>
      <group position={[-90.222, 0, -87.969]}>
        <mesh geometry={nodes.DoorFrame001.geometry} material={materials.Door_material} position={[0.13, 0, -0.73]} scale={[1.503, 1.176, 1]}>
          <mesh geometry={nodes.Door001.geometry} material={materials.Door_material} position={[0.418, 1.05, 0.022]}>
            <mesh geometry={nodes.Handle_Back001.geometry} material={materials.Handle_material} position={[-0.764, 0, -0.005]} />
            <mesh geometry={nodes.Handle_Front001.geometry} material={materials.Handle_material} position={[-0.764, 0, -0.029]} rotation={[-Math.PI, 0, 0]} />
          </mesh>
        </mesh>
      </group>
      <group position={[31.249, 0, -107.456]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, 0.001]}>
            <group position={[-204.219, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
              <mesh geometry={nodes.wall_pillar_thing_Material001_0001.geometry} material={materials['Material.020']} position={[-41.463, 8.453, 0]} scale={[1.585, 1.636, 2.03]} />
            </group>
          </group>
        </group>
      </group>
      <group position={[31.249, 0, -110.941]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[-204.219, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_thing_Material001_0002.geometry} material={materials['Material.021']} position={[-48.599, 9.477, 0]} scale={[1.585, 1.636, 2.03]} />
          </group>
        </group>
      </group>
      <group position={[31.249, 0, -115.306]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, 0.001]}>
            <group position={[-204.219, 0, -413.62]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
              <mesh geometry={nodes.wall_pillar_thing_Material001_0003.geometry} material={materials['Material.022']} position={[-41.463, 8.453, 0]} scale={[1.585, 1.636, 2.03]} />
            </group>
          </group>
        </group>
      </group>
      <group position={[31.249, 0, -100.059]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[-204.219, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_thing_Material001_0004.geometry} material={materials['Material.023']} position={[-41.463, 8.453, 0]} scale={[1.585, 1.636, 2.03]} />
          </group>
        </group>
      </group>
      <group position={[44.895, 0, -101.319]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[-204.219, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_thing_Material001_0005.geometry} material={materials['Material.024']} position={[-48.47, 10.578, 0]} scale={[1.585, 1.636, 2.03]} />
          </group>
        </group>
      </group>
      <group position={[31.249, 0, -110.941]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[-204.219, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_thing_Material001_0006.geometry} material={materials['Material.025']} position={[-48.599, 9.477, 0]} scale={[1.585, 1.636, 2.03]} />
          </group>
        </group>
      </group>
      <group position={[44.895, 0, -109.585]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[-204.219, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_thing_Material001_0007.geometry} material={materials['Material.026']} position={[-48.47, 10.578, 0]} scale={[1.585, 1.636, 2.03]} />
          </group>
        </group>
      </group>
      <group position={[-2.712, 0, -101.319]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_Material001_0001.geometry} material={materials['Material.029']} position={[0.42, 1.428, 0]} scale={[1, 1, 1.942]} />
          </group>
        </group>
      </group>
      <group position={[0.051, 0, -104.36]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -413.622]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_Material001_0002.geometry} material={materials['Material.030']} position={[0.42, 1.428, 0]} scale={[1, 1, 1.942]} />
          </group>
        </group>
      </group>
      <group position={[-2.709, 0, -107.045]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, 0.001]}>
            <group position={[0, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
              <mesh geometry={nodes.wall_pillar_Material001_0003.geometry} material={materials['Material.031']} position={[0.42, 1.428, 0]} scale={[1, 1, 1.942]} />
            </group>
          </group>
        </group>
      </group>
      <group position={[-0.272, 0, -109.366]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_Material001_0004.geometry} material={materials['Material.032']} position={[0.42, 1.428, 0]} scale={[1, 1, 1.942]} />
          </group>
        </group>
      </group>
      <group position={[-2.905, 0, -111.942]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_Material001_0005.geometry} material={materials['Material.033']} position={[0.42, 1.428, 0]} scale={[1, 1, 1.942]} />
          </group>
        </group>
      </group>
      <group position={[-0.66, 0, -114.123]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_Material001_0006.geometry} material={materials['Material.034']} position={[0.42, 1.428, 0]} scale={[1, 1, 1.942]} />
          </group>
        </group>
      </group>
      <group position={[-3.066, 0, -114.123]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_Material001_0007.geometry} material={materials['Material.035']} position={[0.42, 4.105, 0]} scale={[1, 1, 1.942]} />
          </group>
        </group>
      </group>
      <group position={[31.249, 0, -101.319]} rotation={[Math.PI / 2, 0, 0]} scale={[-3.751, -1, -1]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[333.755, 0, 95.557]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_3_Material001_0001.geometry} material={materials['Material.044']} position={[1.87, -56.091, 0]} scale={[0.709, 17.535, 2.001]} />
          </group>
        </group>
      </group>
      <group position={[26.685, 0, -101.319]} rotation={[Math.PI / 2, 0, 0]} scale={[-3.751, -1, -1]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[333.755, 0, 95.557]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_3_Material001_0002.geometry} material={materials['Material.045']} position={[2.063, -23.803, 0]} scale={[0.709, 4.01, 2.001]} />
          </group>
        </group>
      </group>
      <group position={[19.737, 0, -101.319]} rotation={[Math.PI / 2, 0, 0]} scale={[-3.751, -1, -1]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[333.755, 0, 95.557]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_3_Material001_0003.geometry} material={materials['Material.046']} position={[1.87, -30.161, 0]} scale={[0.709, 4.302, 2.001]} />
          </group>
        </group>
      </group>
      <group position={[31.249, 0, -101.319]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <mesh geometry={nodes.wall_pillar_Material001_0008.geometry} material={materials['Material.049']} position={[0, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100} />
        </group>
      </group>
      <group position={[2.598, 0, -78.836]} rotation={[-Math.PI / 2, 0, 0]} scale={[0.398, 0.402, 1]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -0.002]}>
            <group position={[0, 0, -413.623]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
              <mesh geometry={nodes.wall_pillar_Material001_0009.geometry} material={materials['Material.050']} position={[-1.158, 1.428, 0]} scale={[1, 1, 1.942]} />
            </group>
          </group>
        </group>
      </group>
      <group position={[4.775, 0, -78.836]} rotation={[-Math.PI / 2, 0, 0]} scale={[0.398, 0.402, 1]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -0.002]}>
            <group position={[0, 0, -413.623]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
              <mesh geometry={nodes.wall_pillar_Material001_0010.geometry} material={materials['Material.051']} position={[-1.158, 1.428, 0]} scale={[1, 1, 1.942]} />
            </group>
          </group>
        </group>
      </group>
      <group position={[4.775, 0, -83.275]} rotation={[-Math.PI / 2, 0, 0]} scale={[0.398, 0.402, 1]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_Material001_0011.geometry} material={materials['Material.052']} position={[-1.158, 1.428, 0]} scale={[1, 1, 1.942]} />
          </group>
        </group>
      </group>
      <group position={[2.433, 0, -83.275]} rotation={[-Math.PI / 2, 0, 0]} scale={[0.398, 0.402, 1]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_Material001_0012.geometry} material={materials['Material.053']} position={[-1.158, 1.428, 0]} scale={[1, 1, 1.942]} />
          </group>
        </group>
      </group>
      <group position={[4.775, 0, -75.345]} rotation={[-Math.PI / 2, 0, 0]} scale={[0.398, 0.402, 1]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_Material001_0013.geometry} material={materials['Material.054']} position={[-1.158, 1.428, 0]} scale={[1, 1, 1.942]} />
          </group>
        </group>
      </group>
      <group position={[4.775, 0, -71.886]} rotation={[-Math.PI / 2, 0, 0]} scale={[0.398, 0.402, 1]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_Material001_0014.geometry} material={materials['Material.055']} position={[-1.158, 1.428, 0]} scale={[1, 1, 1.942]} />
          </group>
        </group>
      </group>
      <group position={[4.775, 0, -68.342]} rotation={[-Math.PI / 2, 0, 0]} scale={[0.398, 0.402, 1]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -413.623]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_Material001_0015.geometry} material={materials['Material.056']} position={[-1.158, 1.428, 0]} scale={[1, 1, 1.942]} />
          </group>
        </group>
      </group>
      <group position={[4.775, 0, -64.713]} rotation={[-Math.PI / 2, 0, 0]} scale={[0.398, 0.402, 1]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_Material001_0016.geometry} material={materials['Material.057']} position={[-1.158, 1.428, 0]} scale={[1, 1, 1.942]} />
          </group>
        </group>
      </group>
      <group position={[4.775, 0, -61.226]} rotation={[-Math.PI / 2, 0, 0]} scale={[0.398, 0.402, 1]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -0.001]}>
            <group position={[0, 0, -413.622]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
              <mesh geometry={nodes.wall_pillar_Material001_0017.geometry} material={materials['Material.058']} position={[-1.158, 1.428, 0]} scale={[1, 1, 1.942]} />
            </group>
          </group>
        </group>
      </group>
      <group position={[2.598, 0, -75.012]} rotation={[-Math.PI / 2, 0, 0]} scale={[0.398, 0.402, 1]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_Material001_0018.geometry} material={materials['Material.059']} position={[-1.158, 1.428, 0]} scale={[1, 1, 1.942]} />
          </group>
        </group>
      </group>
      <group position={[2.598, 0, -71.653]} rotation={[-Math.PI / 2, 0, 0]} scale={[0.398, 0.402, 1]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -0.002]}>
            <group position={[0, 0, -413.623]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
              <mesh geometry={nodes.wall_pillar_Material001_0019.geometry} material={materials['Material.060']} position={[-1.158, 1.671, 0]} scale={[1, 1, 1.942]} />
            </group>
          </group>
        </group>
      </group>
      <group position={[2.598, 0, -68.477]} rotation={[-Math.PI / 2, 0, 0]} scale={[0.398, 0.402, 1]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -0.002]}>
            <group position={[0, 0, -413.623]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
              <mesh geometry={nodes.wall_pillar_Material001_0020.geometry} material={materials['Material.061']} position={[-1.158, 1.671, 0]} scale={[1, 1, 1.942]} />
            </group>
          </group>
        </group>
      </group>
      <group position={[2.598, 0, -64.705]} rotation={[-Math.PI / 2, 0, 0]} scale={[0.398, 0.402, 1]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -0.002]}>
            <group position={[0, 0, -413.623]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
              <mesh geometry={nodes.wall_pillar_Material001_0021.geometry} material={materials['Material.062']} position={[-1.158, 1.671, 0]} scale={[1, 1, 1.942]} />
            </group>
          </group>
        </group>
      </group>
      <group position={[2.598, 0, -61.156]} rotation={[-Math.PI / 2, 0, 0]} scale={[0.398, 0.402, 1]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -413.622]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_Material001_0022.geometry} material={materials['Material.063']} position={[-1.158, 1.671, 0]} scale={[1, 1, 1.942]} />
          </group>
        </group>
      </group>
      <group position={[-3.129, 0, -61.156]} rotation={[-Math.PI / 2, 0, 0]} scale={[0.398, 0.402, 1]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -413.622]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_Material001_0023.geometry} material={materials['Material.071']} position={[-1.158, 1.671, 0]} scale={[1, 1, 1.942]} />
          </group>
        </group>
      </group>
      <group position={[44.895, 0, -31.88]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[-204.219, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_thing_Material001_0008.geometry} material={materials['Material.082']} position={[-36.733, 8.856, 0]} scale={[1.585, 1.636, 2.03]} />
          </group>
        </group>
      </group>
      <group position={[44.895, 0, -25.802]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[-204.219, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_thing_Material001_0009.geometry} material={materials['Material.083']} position={[-36.733, 2.187, 0]} scale={[1.585, 1.636, 2.03]} />
          </group>
        </group>
      </group>
      <group position={[44.895, 0, -25.802]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[-204.219, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_thing_Material001_0010.geometry} material={materials['Material.084']} position={[-36.733, 8.856, 0]} scale={[1.585, 1.636, 2.03]} />
          </group>
        </group>
      </group>
      <group position={[44.895, 0, -19.786]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, 0]}>
            <group position={[-204.219, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
              <mesh geometry={nodes.wall_pillar_thing_Material001_0011.geometry} material={materials['Material.085']} position={[-36.733, 2.187, 0]} scale={[1.585, 1.636, 2.03]} />
            </group>
          </group>
        </group>
      </group>
      <group position={[26.685, 0, -51.135]} rotation={[Math.PI / 2, 0, 0]} scale={[-3.751, -1, -1]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[333.755, 0, 95.557]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_3_Material001_0004.geometry} material={materials['Material.086']} position={[3.386, -27.738, 0]} scale={[0.709, 4.836, 2.001]} />
          </group>
        </group>
      </group>
      <group position={[26.685, 0, -69.386]} rotation={[Math.PI / 2, 0, 0]} scale={[-3.751, -1, -1]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[333.755, 0, 95.557]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_3_Material001_0005.geometry} material={materials['Material.090']} position={[3.386, -22.127, 0]} scale={[0.709, 1.782, 2.001]} />
          </group>
        </group>
      </group>
      <group position={[-10.243, 0, -84.934]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, 0.001]}>
            <group position={[-204.22, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
              <mesh geometry={nodes.wall_pillar_thing_Material001_0012.geometry} material={materials['Material.134']} position={[-48.599, 11.16, 0]} scale={[1.585, 1.636, 2.03]} />
            </group>
          </group>
        </group>
      </group>
      <group position={[-10.243, 0, -78.91]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[-204.22, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_thing_Material001_0013.geometry} material={materials['Material.135']} position={[-48.599, 11.16, 0]} scale={[1.585, 1.636, 2.03]} />
          </group>
        </group>
      </group>
      <group position={[-10.243, 0, -72.948]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[-204.22, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_thing_Material001_0014.geometry} material={materials['Material.136']} position={[-54.711, 11.16, 0]} scale={[1.585, 1.636, 2.03]} />
          </group>
        </group>
      </group>
      <group position={[-10.243, 0, -72.948]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[-204.22, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_thing_Material001_0015.geometry} material={materials['Material.137']} position={[-48.599, 11.16, 0]} scale={[1.585, 1.636, 2.03]} />
          </group>
        </group>
      </group>
      <group position={[-10.243, 0, -78.956]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[-204.22, 0, -413.622]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_thing_Material001_0016.geometry} material={materials['Material.138']} position={[-54.711, 11.16, 0]} scale={[1.585, 1.636, 2.03]} />
          </group>
        </group>
      </group>
      <group position={[-16.263, 0, -78.956]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[-204.22, 0, -413.622]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_thing_Material001_0017.geometry} material={materials['Material.139']} position={[-54.711, 11.16, 0]} scale={[1.585, 1.636, 2.03]} />
          </group>
        </group>
      </group>
      <group position={[-16.263, 0, -84.878]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[-204.22, 0, -413.622]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_thing_Material001_0018.geometry} material={materials['Material.140']} position={[-54.711, 11.16, 0]} scale={[1.585, 1.636, 2.03]} />
          </group>
        </group>
      </group>
      <group position={[-10.457, 0, -84.878]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[-204.22, 0, -413.622]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_thing_Material001_0019.geometry} material={materials['Material.141']} position={[-54.711, 11.16, 0]} scale={[1.585, 1.636, 2.03]} />
          </group>
        </group>
      </group>
      <group position={[-22.197, 0, -84.878]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[-204.22, 0, -413.622]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_thing_Material001_0020.geometry} material={materials['Material.142']} position={[-54.711, 11.16, 0]} scale={[1.585, 1.636, 2.03]} />
          </group>
        </group>
      </group>
      <group position={[-22.197, 0, -79.176]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, 0]}>
            <group position={[-204.22, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
              <mesh geometry={nodes.wall_pillar_thing_Material001_0021.geometry} material={materials['Material.143']} position={[-54.711, 11.16, 0]} scale={[1.585, 1.636, 2.03]} />
            </group>
          </group>
        </group>
      </group>
      <group position={[-15.968, 0, -72.553]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[-204.22, 0, -413.622]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_thing_Material001_0023.geometry} material={materials['Material.145']} position={[-54.711, 11.16, 0]} scale={[1.585, 1.636, 2.03]} />
          </group>
        </group>
      </group>
      <group position={[-45.991, 0, -75.035]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_Material001_0024.geometry} material={materials['Material.149']} position={[-0.209, 4.105, 0]} scale={[1, 1, 1.942]} />
          </group>
        </group>
      </group>
      <group position={[-45.991, 0, -75.035]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_Material001_0025.geometry} material={materials['Material.150']} position={[-0.23, 7.028, 0]} scale={[1, 1, 1.942]} />
          </group>
        </group>
      </group>
      <group position={[-44.648, 0, -78.14]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_Material001_0026.geometry} material={materials['Material.151']} position={[1.317, 7.028, 0]} scale={[1, 1, 1.942]} />
          </group>
        </group>
      </group>
      <group position={[-42.783, 0, -81.298]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -413.622]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_Material001_0027.geometry} material={materials['Material.152']} position={[2.025, 7.028, 0]} scale={[1, 1, 1.942]} />
          </group>
        </group>
      </group>
      <group position={[-42.783, 0, -84.313]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_Material001_0028.geometry} material={materials['Material.153']} position={[2.025, 7.028, 0]} scale={[1, 1, 1.942]} />
          </group>
        </group>
      </group>
      <group position={[-45.386, 0, -84.313]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_Material001_0029.geometry} material={materials['Material.154']} position={[2.025, 7.028, 0]} scale={[1, 1, 1.942]} />
          </group>
        </group>
      </group>
      <group position={[-48.134, 0, -84.313]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_Material001_0030.geometry} material={materials['Material.155']} position={[2.025, 7.028, 0]} scale={[1, 1, 1.942]} />
          </group>
        </group>
      </group>
      <group position={[12.862, 0, -78.956]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[-204.22, 0, -413.622]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_thing_Material001_0022.geometry} material={materials['Material.156']} position={[-54.711, 16.968, 0]} scale={[1.585, 1.636, 2.03]} />
          </group>
        </group>
      </group>
      <group position={[-45.378, 0, -81.298]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -413.622]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_Material001_0031.geometry} material={materials['Material.157']} position={[2.025, 7.028, 0]} scale={[1, 1, 1.942]} />
          </group>
        </group>
      </group>
      <group position={[-48.198, 0, -81.298]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -413.622]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_Material001_0032.geometry} material={materials['Material.158']} position={[2.025, 7.028, 0]} scale={[1, 1, 1.942]} />
          </group>
        </group>
      </group>
      <group position={[-48.185, 0, -78.14]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_Material001_0033.geometry} material={materials['Material.159']} position={[2.025, 7.028, 0]} scale={[1, 1, 1.942]} />
          </group>
        </group>
      </group>
      <group position={[-43.055, 0, -75.035]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_Material001_0034.geometry} material={materials['Material.160']} position={[-0.23, 7.028, 0]} scale={[1, 1, 1.942]} />
          </group>
        </group>
      </group>
      <group position={[-35.218, 0, -75.035]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_Material001_0035.geometry} material={materials['Material.165']} position={[-0.23, 7.028, 0]} scale={[1, 1, 1.942]} />
          </group>
        </group>
      </group>
      <group position={[-36.223, 0, -66.737]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_Material001_0036.geometry} material={materials['Material.166']} position={[-0.23, 7.028, 0]} scale={[1, 1, 1.942]} />
          </group>
        </group>
      </group>
      <group position={[-22.197, 0, -113.343]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -0.001]}>
            <group position={[-204.22, 0, -413.622]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
              <mesh geometry={nodes.wall_pillar_thing_Material001_0024.geometry} material={materials['Material.168']} position={[-89.739, 11.16, 0]} scale={[1.585, 1.636, 2.03]} />
            </group>
          </group>
        </group>
      </group>
      <group position={[-22.197, 0, -113.343]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -0.001]}>
            <group position={[-204.22, 0, -413.622]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
              <mesh geometry={nodes.wall_pillar_thing_Material001_0025.geometry} material={materials['Material.169']} position={[-89.739, 11.16, 0]} scale={[1.585, 1.636, 2.03]} />
            </group>
          </group>
        </group>
      </group>
      <group position={[-47.918, 0, -113.343]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -0.001]}>
            <group position={[-204.22, 0, -413.622]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
              <mesh geometry={nodes.wall_pillar_thing_Material001_0026.geometry} material={materials['Material.170']} position={[-89.739, 9.785, 0]} scale={[1.585, 1.636, 2.03]} />
            </group>
          </group>
        </group>
      </group>
      <mesh geometry={nodes.Plane.geometry} material={nodes.Plane.material} position={[-46.804, 0, -60.777]} scale={114.921} />
      <mesh geometry={nodes.Cube.geometry} material={nodes.Cube.material} position={[-92.052, 1.909, -69.77]} scale={[0.15, 2.01, 19]} />
      <mesh geometry={nodes.Cube001.geometry} material={nodes.Cube001.material} position={[-83.541, 1.909, -89.393]} scale={[0.15, 2.01, 0.816]} />
      <mesh geometry={nodes.Cube003.geometry} material={nodes.Cube003.material} position={[-85.778, 1.909, -88.673]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.369]} />
      <mesh geometry={nodes.Cube004.geometry} material={nodes.Cube004.material} position={[-83.541, 1.909, -93.715]} scale={[0.15, 2.01, 1.078]} />
      <mesh geometry={nodes.Cube005.geometry} material={nodes.Cube005.material} position={[-82.913, 1.911, -90.095]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 0.622]} />
      <mesh geometry={nodes.Cube006.geometry} material={nodes.Cube006.material} position={[-78.795, 1.909, -91.228]} scale={[0.24, 2.01, 1.23]} />
      <mesh geometry={nodes.Cube007.geometry} material={nodes.Cube007.material} position={[-81.134, 1.911, -92.55]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.568]} />
      <mesh geometry={nodes.Cube008.geometry} material={nodes.Cube008.material} position={[-86.948, 1.911, -94.79]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 3.556]} />
      <mesh geometry={nodes.Column.geometry} material={materials.Column_material} position={[-89.647, 0.023, -91.275]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_bottom.geometry} material={materials.Column_rect} position={[0, -0.05, 0]} />
        <mesh geometry={nodes.Column_box_top.geometry} material={materials.Column_rect} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Cube009.geometry} material={nodes.Cube009.material} position={[-90.33, 1.909, -97.178]} scale={[0.15, 2.01, 2.538]} />
      <mesh geometry={nodes.Cube010.geometry} material={nodes.Cube010.material} position={[-89.269, 1.911, -99.637]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 1.089]} />
      <mesh geometry={nodes.Cube011.geometry} material={materials['Material.001']} position={[-88.045, 1.909, -104.846]} scale={[0.15, 2.01, 5.241]} />
      <mesh geometry={nodes.Cube012.geometry} material={materials['Material.001']} position={[-77.853, 1.911, -104.328]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 4.201]} />
      <mesh geometry={nodes.Cube013.geometry} material={nodes.Cube013.material} position={[-85.096, 1.911, -109.953]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 3.127]} />
      <mesh geometry={nodes.Cube014.geometry} material={nodes.Cube014.material} position={[-82.101, 1.911, -107.143]} scale={[0.15, 2.01, 2.995]} />
      <mesh geometry={nodes.Cube015.geometry} material={nodes.Cube015.material} position={[-73.782, 1.911, -105.206]} scale={[0.15, 2.01, 1.035]} />
      <mesh geometry={nodes.Cube016.geometry} material={nodes.Cube016.material} position={[-75.971, 1.911, -109.941]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.35]} />
      <mesh geometry={nodes.Cube017.geometry} material={nodes.Cube017.material} position={[-84.678, 1.911, -122.531]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 6.425]} />
      <mesh geometry={nodes.Cube018.geometry} material={nodes.Cube018.material} position={[-78.16, 1.911, -116.232]} scale={[0.15, 2.01, 6.425]} />
      <mesh geometry={nodes.Cube019.geometry} material={nodes.Cube019.material} position={[-91.042, 1.909, -123.636]} scale={[0.15, 2.01, 1.121]} />
      <mesh geometry={nodes.Cube020.geometry} material={nodes.Cube020.material} position={[-94.525, 1.911, -124.558]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 3.556]} />
      <mesh geometry={nodes.Cube021.geometry} material={nodes.Cube021.material} position={[-95.464, 1.827, -88.62]} rotation={[1.603, -1.565, 1.571]} scale={[0.15, 2.01, 3.556]} />
      <mesh geometry={nodes.Cube022.geometry} material={nodes.Cube022.material} position={[-101.277, 1.866, -90.86]} rotation={[1.603, -1.565, 1.571]} scale={[0.15, 2.01, 2.568]} />
      <mesh geometry={nodes.Cube023.geometry} material={nodes.Cube023.material} position={[-103.617, 1.894, -92.182]} rotation={[-3.109, 0, 3.136]} scale={[0.24, 2.01, 1.23]} />
      <mesh geometry={nodes.Cube024.geometry} material={nodes.Cube024.material} position={[-101.277, 1.945, -93.313]} rotation={[1.603, -1.565, 1.571]} scale={[0.15, 2.01, 2.568]} />
      <mesh geometry={nodes.Cube025.geometry} material={nodes.Cube025.material} position={[-98.871, 1.841, -89.695]} rotation={[-3.109, 0, 3.136]} scale={[0.15, 2.01, 1.078]} />
      <mesh geometry={nodes.Cube026.geometry} material={nodes.Cube026.material} position={[-97.646, 2.016, -94.734]} rotation={[1.603, -1.565, 1.571]} scale={[0.15, 2.01, 1.389]} />
      <mesh geometry={nodes.Cube027.geometry} material={nodes.Cube027.material} position={[-98.871, 1.98, -94.015]} rotation={[-3.109, 0, 3.136]} scale={[0.15, 2.01, 0.816]} />
      <mesh geometry={nodes.Cube028.geometry} material={nodes.Cube028.material} position={[-96.41, 1.909, -97.178]} scale={[0.15, 2.01, 2.538]} />
      <mesh geometry={nodes.Cube029.geometry} material={nodes.Cube029.material} position={[-99.051, 1.911, -99.637]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.778]} />
      <mesh geometry={nodes.Cube030.geometry} material={nodes.Cube030.material} position={[-101.586, 1.909, -102.812]} scale={[0.15, 2.01, 3.327]} />
      <mesh geometry={nodes.Cube031.geometry} material={nodes.Cube031.material} position={[-102.361, 2.016, -113.183]} rotation={[1.603, -1.565, 1.571]} scale={[0.15, 2.01, 0.709]} />
      <mesh geometry={nodes.Cube032.geometry} material={nodes.Cube032.material} position={[-103.139, 2.016, -114.021]} scale={[0.15, 2.01, 0.777]} />
      <mesh geometry={nodes.Cube033.geometry} material={nodes.Cube033.material} position={[-102.58, 2.016, -114.973]} rotation={[1.603, -1.565, 1.571]} scale={[0.15, 2.01, 0.709]} />
      <mesh geometry={nodes.Cube034.geometry} material={nodes.Cube034.material} position={[-102.015, 1.909, -118.095]} rotation={[0, 0, Math.PI]} scale={[0.15, 2.01, 3.231]} />
      <mesh geometry={nodes.Cube035.geometry} material={nodes.Cube035.material} position={[-91.601, 1.909, -107.654]} scale={[0.15, 2.01, 2.649]} />
      <mesh geometry={nodes.Cube036.geometry} material={nodes.Cube036.material} position={[-97.708, 1.909, -107.654]} scale={[0.15, 2.01, 2.649]} />
      <mesh geometry={nodes.Cube037.geometry} material={nodes.Cube037.material} position={[-94.615, 1.909, -104.993]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 3.001]} />
      <mesh geometry={nodes.Cube038.geometry} material={nodes.Cube038.material} position={[-98.291, 2.016, -110.275]} rotation={[1.603, -1.565, 1.571]} scale={[0.15, 2.01, 0.709]} />
      <mesh geometry={nodes.Cube039.geometry} material={nodes.Cube039.material} position={[-94.108, 1.909, -111.099]} scale={[0.15, 2.01, 1.058]} />
      <mesh geometry={nodes.Cube040.geometry} material={nodes.Cube040.material} position={[-92.832, 1.909, -110.177]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 1.149]} />
      <mesh geometry={nodes.Cube041.geometry} material={nodes.Cube041.material} position={[-96.558, 1.909, -112.025]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.455]} />
      <mesh geometry={nodes.Cube042.geometry} material={nodes.Cube042.material} position={[-98.865, 2.016, -111.037]} scale={[0.15, 2.01, 0.8]} />
      <mesh geometry={nodes.Cube043.geometry} material={nodes.Cube043.material} position={[-102.374, 2.016, -107.994]} rotation={[1.603, -1.565, 1.571]} scale={[0.15, 2.01, 0.709]} />
      <mesh geometry={nodes.Cube044.geometry} material={nodes.Cube044.material} position={[-102.934, 2.016, -107.041]} scale={[0.15, 2.01, 0.777]} />
      <mesh geometry={nodes.Cube045.geometry} material={nodes.Cube045.material} position={[-102.155, 2.016, -106.204]} rotation={[1.603, -1.565, 1.571]} scale={[0.15, 2.01, 0.709]} />
      <mesh geometry={nodes.Cube046.geometry} material={nodes.Cube046.material} position={[-101.715, 1.909, -110.454]} scale={[0.15, 2.01, 2.711]} />
      <mesh geometry={nodes.Cube047.geometry} material={nodes.Cube047.material} position={[-97.936, 1.909, -122.904]} scale={[0.15, 2.01, 1.76]} />
      <mesh geometry={nodes.Cube048.geometry} material={nodes.Cube048.material} position={[-99.966, 1.911, -121.183]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.053]} />
      <mesh geometry={nodes.Cube049.geometry} material={nodes.Cube049.material} position={[-83.431, 1.909, -113.609]} rotation={[0, -1.564, 0]} scale={[0.15, 2.01, 2.248]} />
      <mesh geometry={nodes.Cube050.geometry} material={nodes.Cube050.material} position={[-84.653, 1.909, -118.803]} rotation={[0, -1.564, 0]} scale={[0.15, 2.01, 3.285]} />
      <mesh geometry={nodes.Cube051.geometry} material={nodes.Cube051.material} position={[-81.308, 1.909, -116.162]} rotation={[Math.PI, -0.006, Math.PI]} scale={[0.15, 2.01, 2.649]} />
      <mesh geometry={nodes.Cube052.geometry} material={nodes.Cube052.material} position={[-85.509, 1.909, -114.698]} rotation={[Math.PI, -0.006, Math.PI]} scale={[0.15, 2.01, 1.175]} />
      <mesh geometry={nodes.Cube053.geometry} material={nodes.Cube053.material} position={[-86.559, 1.909, -115.667]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 1.175]} />
      <mesh geometry={nodes.Cube054.geometry} material={nodes.Cube054.material} position={[-87.781, 1.909, -117.175]} rotation={[Math.PI, -0.006, Math.PI]} scale={[0.15, 2.01, 1.6]} />
      <mesh geometry={nodes.Cube055.geometry} material={nodes.Cube055.material} position={[-96.244, 1.909, -114.882]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.455]} />
      <mesh geometry={nodes.Cube056.geometry} material={nodes.Cube056.material} position={[-93.968, 2.016, -115.371]} scale={[0.15, 2.01, 0.655]} />
      <mesh geometry={nodes.Cube057.geometry} material={nodes.Cube057.material} position={[-91.965, 1.909, -115.855]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.123]} />
      <mesh geometry={nodes.Cube058.geometry} material={nodes.Cube058.material} position={[-89.908, 2.016, -116.439]} scale={[0.15, 2.01, 0.655]} />
      <mesh geometry={nodes.Cube059.geometry} material={nodes.Cube059.material} position={[-94.259, 1.827, -117.121]} rotation={[1.603, -1.565, 1.571]} scale={[0.15, 2.01, 4.48]} />
      <mesh geometry={nodes.Cube060.geometry} material={nodes.Cube060.material} position={[-98.594, 2.016, -115.936]} scale={[0.15, 2.01, 1.081]} />
      <mesh geometry={nodes.Column001.geometry} material={materials['Column_material.001']} position={[-79.301, 0.023, -109.846]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_bottom001.geometry} material={materials['Column_rect.001']} position={[0, -0.05, 0]} />
        <mesh geometry={nodes.Column_box_top001.geometry} material={materials['Column_rect.001']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Cube061.geometry} material={nodes.Cube061.material} position={[-73.782, 1.911, -109.075]} scale={[0.15, 2.01, 1.066]} />
      <mesh geometry={nodes.Cube062.geometry} material={nodes.Cube062.material} position={[-69.425, 1.911, -106.057]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 4.137]} />
      <mesh geometry={nodes.Cube063.geometry} material={nodes.Cube063.material} position={[-66.515, 1.911, -108.149]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 7.207]} />
      <mesh geometry={nodes.Cube064.geometry} material={nodes.Cube064.material} position={[-53.846, 3.027, -114.726]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 3.071, 5.612]} />
      <mesh geometry={nodes.Cube065.geometry} material={nodes.Cube065.material} position={[-59.401, 2.998, -111.485]} scale={[0.15, 3.121, 3.371]} />
      <mesh geometry={nodes.Cube067.geometry} material={nodes.Cube067.material} position={[-53.657, 0.363, -104.441]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 0.364, 5.612]} />
      <mesh geometry={nodes.Cube068.geometry} material={nodes.Cube068.material} position={[-53.846, -7.045, -100.522]} rotation={[Math.PI / 2, 0, -Math.PI / 2]} scale={[0.255, 0.371, 13.373]} />
      <mesh geometry={nodes.Cube070.geometry} material={nodes.Cube070.material} position={[-57.749, 2.998, -111.485]} scale={[0.15, 3.121, 3.371]} />
      <mesh geometry={nodes.Cube071.geometry} material={nodes.Cube071.material} position={[-56.168, 2.998, -111.485]} scale={[0.15, 3.121, 3.371]} />
      <mesh geometry={nodes.Cube072.geometry} material={nodes.Cube072.material} position={[-54.536, 2.998, -111.485]} scale={[0.15, 3.121, 3.371]} />
      <mesh geometry={nodes.Cube073.geometry} material={nodes.Cube073.material} position={[-52.934, 2.998, -111.485]} scale={[0.15, 3.121, 3.371]} />
      <mesh geometry={nodes.Cube074.geometry} material={nodes.Cube074.material} position={[-51.295, 2.998, -111.485]} scale={[0.15, 3.121, 3.371]} />
      <mesh geometry={nodes.Cube075.geometry} material={nodes.Cube075.material} position={[-49.677, 2.998, -111.485]} scale={[0.15, 3.121, 3.371]} />
      <mesh geometry={nodes.Cube076.geometry} material={nodes.Cube076.material} position={[-48.133, 2.998, -111.485]} scale={[0.15, 3.121, 3.371]} />
      <mesh geometry={nodes.Cube077.geometry} material={nodes.Cube077.material} position={[-47.888, -7.299, -100.336]} scale={[0.15, 13.45, 4.228]} />
      <mesh geometry={nodes.Cube078.geometry} material={nodes.Cube078.material} position={[-53.763, 3.051, -96.018]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 3.104, 5.948]} />
      <mesh geometry={nodes.Plane001.geometry} material={nodes.Plane001.material} position={[-53.8, 6.119, -105.505]} scale={[5.797, 1, 9.371]} />
      <mesh geometry={nodes.Cube069.geometry} material={nodes.Cube069.material} position={[-53.763, -2.949, -96.018]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 3.104, 5.948]} />
      <mesh geometry={nodes.Cube079.geometry} material={nodes.Cube079.material} position={[-53.763, -8.949, -96.018]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 3.104, 5.948]} />
      <mesh geometry={nodes.Cube080.geometry} material={nodes.Cube080.material} position={[-53.763, -13.949, -96.018]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 3.104, 5.948]} />
      <mesh geometry={nodes.Cube081.geometry} material={nodes.Cube081.material} position={[-53.483, -20.538, -99.769]} rotation={[1.561, Math.PI / 2, 0]} scale={[0.15, 4.393, 6.236]} />
      <mesh geometry={nodes.Cube082.geometry} material={nodes.Cube082.material} position={[-53.763, -19.933, -96.018]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 3.104, 5.948]} />
      <mesh geometry={nodes.Cube066.geometry} material={nodes.Cube066.material} position={[-59.355, -7.299, -101.182]} scale={[0.15, 13.45, 4.892]} />
      <mesh geometry={nodes.Cube083.geometry} material={materials['Material.002']} position={[-43.564, 1.911, -104.413]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 4.201]} />
      <mesh geometry={nodes.Cube084.geometry} material={materials['Material.003']} position={[-41.79, 1.911, -108.229]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 6.424]} />
      <mesh geometry={nodes.Cube085.geometry} material={nodes.Cube085.material} position={[-39.537, 1.909, -97.903]} scale={[0.24, 2.01, 6.691]} />
      <mesh geometry={nodes.Cube086.geometry} material={nodes.Cube086.material} position={[-35.624, 1.909, -101.762]} scale={[0.24, 2.01, 6.669]} />
      <mesh geometry={nodes.Cube087.geometry} material={materials['Material.004']} position={[-30.342, 1.911, -91.283]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 3.505]} />
      <mesh geometry={nodes.Cube088.geometry} material={materials['Material.005']} position={[-35.03, 1.911, -95.26]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 0.67]} />
      <mesh geometry={nodes.Cube089.geometry} material={nodes.Cube089.material} position={[-26.092, 4.446, -86.369]} scale={[0.24, 4.6, 4.961]} />
      <mesh geometry={nodes.Cube090.geometry} material={nodes.Cube090.material} position={[-26.092, 4.446, -100.202]} scale={[0.24, 4.6, 4.961]} />
      <mesh geometry={nodes.Cube091.geometry} material={nodes.Cube091.material} position={[-4.63, 4.446, -93.051]} scale={[0.24, 4.6, 11.653]} />
      <mesh geometry={nodes.Cube092.geometry} material={nodes.Cube092.material} position={[-15.317, 4.446, -104.908]} rotation={[0, Math.PI / 2, 0]} scale={[0.24, 4.6, 11.008]} />
      <mesh geometry={nodes.Cube093.geometry} material={nodes.Cube093.material} position={[-8.406, 4.446, -81.53]} rotation={[0, Math.PI / 2, 0]} scale={[0.24, 4.6, 3.718]} />
      <mesh geometry={nodes.Cube094.geometry} material={nodes.Cube094.material} position={[-22.483, 4.446, -81.53]} rotation={[0, Math.PI / 2, 0]} scale={[0.24, 4.6, 3.832]} />
      <mesh geometry={nodes.Cube095.geometry} material={nodes.Cube095.material} />
      <mesh geometry={nodes.Cube096.geometry} material={nodes.Cube096.material} position={[-7.644, 10.361, -107.498]} rotation={[Math.PI / 2, 0, -Math.PI / 2]} scale={[0.255, 0.371, 2.371]} />
      <mesh geometry={nodes.Cube097.geometry} material={nodes.Cube097.material} position={[-11.628, 10.361, -107.498]} rotation={[Math.PI / 2, 0, -Math.PI / 2]} scale={[0.255, 0.371, 2.371]} />
      <mesh geometry={nodes.Cube098.geometry} material={nodes.Cube098.material} position={[-15.786, 10.361, -107.498]} rotation={[Math.PI / 2, 0, -Math.PI / 2]} scale={[0.255, 0.371, 2.371]} />
      <mesh geometry={nodes.Cube099.geometry} material={nodes.Cube099.material} position={[-19.86, 10.361, -107.498]} rotation={[Math.PI / 2, 0, -Math.PI / 2]} scale={[0.255, 0.371, 2.371]} />
      <mesh geometry={nodes.Cube100.geometry} material={nodes.Cube100.material} position={[-24.292, 10.361, -107.498]} rotation={[Math.PI / 2, 0, -Math.PI / 2]} scale={[0.255, 0.371, 2.371]} />
      <mesh geometry={nodes.Cube101.geometry} material={nodes.Cube101.material} position={[-28.243, 10.361, -103.066]} rotation={[Math.PI / 2, 0, -Math.PI / 2]} scale={[0.255, 0.371, 2.371]} />
      <mesh geometry={nodes.Cube102.geometry} material={nodes.Cube102.material} position={[-28.243, 10.361, -98.014]} rotation={[Math.PI / 2, 0, -Math.PI / 2]} scale={[0.255, 0.371, 2.371]} />
      <mesh geometry={nodes.Cube103.geometry} material={nodes.Cube103.material} position={[-28.243, 10.361, -88.989]} rotation={[Math.PI / 2, 0, -Math.PI / 2]} scale={[0.255, 0.371, 2.371]} />
      <mesh geometry={nodes.Cube104.geometry} material={nodes.Cube104.material} position={[-28.243, 10.361, -83.302]} rotation={[Math.PI / 2, 0, -Math.PI / 2]} scale={[0.255, 0.371, 2.371]} />
      <mesh geometry={nodes.Cube105.geometry} material={nodes.Cube105.material} position={[-2.525, 10.361, -103.066]} rotation={[Math.PI / 2, 0, -Math.PI / 2]} scale={[0.255, 0.371, 2.371]} />
      <mesh geometry={nodes.Cube106.geometry} material={nodes.Cube106.material} position={[-2.525, 10.361, -98.533]} rotation={[Math.PI / 2, 0, -Math.PI / 2]} scale={[0.255, 0.371, 2.371]} />
      <mesh geometry={nodes.Cube107.geometry} material={nodes.Cube107.material} position={[-2.525, 10.361, -93.112]} rotation={[Math.PI / 2, 0, -Math.PI / 2]} scale={[0.255, 0.371, 2.371]} />
      <mesh geometry={nodes.Cube108.geometry} material={nodes.Cube108.material} position={[-2.525, 10.361, -87.688]} rotation={[Math.PI / 2, 0, -Math.PI / 2]} scale={[0.255, 0.371, 2.371]} />
      <mesh geometry={nodes.Cube109.geometry} material={nodes.Cube109.material} position={[-2.525, 10.361, -82.533]} rotation={[Math.PI / 2, 0, -Math.PI / 2]} scale={[0.255, 0.371, 2.371]} />
      <mesh geometry={nodes.Plane002.geometry} material={nodes.Plane002.material} position={[-12.721, 12.616, -96.588]} scale={[18.656, 1, 15.169]} />
      <mesh geometry={nodes.Cube110.geometry} material={nodes.Cube110.material} position={[-11.994, 1.909, -62.683]} scale={[0.15, 2.01, 19]} />
      <mesh geometry={nodes.Cube111.geometry} material={nodes.Cube111.material} position={[-18.895, 1.909, -62.683]} scale={[0.15, 2.01, 19]} />
      <mesh geometry={nodes.Cube112.geometry} material={nodes.Cube112.material} position={[-23.208, 1.447, -43.79]} scale={[4.213, 1.594, 0.052]} />
      <mesh geometry={nodes.Cube113.geometry} material={nodes.Cube113.material} position={[-11.711, 1.94, -43.79]} scale={[4.213, 1.923, 0.052]} />
      <mesh geometry={nodes.Baseboard.geometry} material={materials.Baseboard_material} />
      <mesh geometry={nodes.Baseboard001.geometry} material={materials.Baseboard_material} />
      <mesh geometry={nodes.Cube002.geometry} material={materials['Material.008']} position={[-25.442, 1.193, -72.603]} scale={[0.15, 1.343, 8.562]} />
      <mesh geometry={nodes.Cube114.geometry} material={materials['Material.007']} position={[-41.79, 1.911, -114.503]} scale={[0.15, 2.01, 6.424]} />
      <mesh geometry={nodes.Cube115.geometry} material={materials['Material.009']} position={[-45.82, 1.911, -114.503]} scale={[0.15, 2.01, 6.424]} />
      <mesh geometry={nodes.Cube116.geometry} material={materials['Material.010']} position={[-70.474, 1.911, -114.503]} scale={[0.15, 2.01, 6.424]} />
      <mesh geometry={nodes.Cube117.geometry} material={materials['Material.011']} position={[-67.651, 1.911, -114.503]} scale={[0.15, 2.01, 6.424]} />
      <mesh geometry={nodes.Cube118.geometry} material={materials['Material.012']} position={[-56.875, 1.911, -120.963]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 10.816]} />
      <mesh geometry={nodes.Cube119.geometry} material={materials['Material.013']} position={[-53, 1.911, -125.904]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 20.007]} />
      <mesh geometry={nodes.Cube120.geometry} material={nodes.Cube120.material} position={[-37.493, 1.911, -119.182]} scale={[0.15, 2.01, 2.113]} />
      <mesh geometry={nodes.Cube121.geometry} material={nodes.Cube121.material} position={[-39.673, 1.911, -121.184]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.285]} />
      <mesh geometry={nodes.Cube122.geometry} material={nodes.Cube122.material} position={[-31.299, 1.911, -119.182]} scale={[0.15, 2.01, 2.113]} />
      <mesh geometry={nodes.Cube123.geometry} material={nodes.Cube123.material} position={[-34.493, 1.911, -116.493]} scale={[0.15, 2.01, 2.113]} />
      <mesh geometry={nodes.Cube124.geometry} material={nodes.Cube124.material} position={[-29.225, 1.911, -118.41]} scale={[0.15, 2.01, 2.113]} />
      <mesh geometry={nodes.Cube126.geometry} material={nodes.Cube126.material} position={[-38.431, 1.911, -109.966]} scale={[0.15, 2.01, 2.113]} />
      <mesh geometry={nodes.Cube127.geometry} material={nodes.Cube127.material} position={[-35.087, 1.911, -114.462]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 0.689]} />
      <mesh geometry={nodes.Cube128.geometry} material={nodes.Cube128.material} position={[-33.762, 1.911, -108.048]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 0.672]} />
      <mesh geometry={nodes.Cube129.geometry} material={nodes.Cube129.material} position={[-30.018, 1.911, -109.599]} scale={[0.15, 2.01, 3.289]} />
      <mesh geometry={nodes.Cube130.geometry} material={nodes.Cube130.material} position={[-27.461, 1.911, -109.966]} scale={[0.15, 2.01, 5.071]} />
      <mesh geometry={nodes.Cube131.geometry} material={nodes.Cube131.material} position={[-34.489, 1.911, -101.769]} scale={[0.15, 2.01, 6.451]} />
      <mesh geometry={nodes.Cube132.geometry} material={nodes.Cube132.material} position={[-33.053, 1.911, -109.966]} scale={[0.15, 2.01, 2.113]} />
      <mesh geometry={nodes.Cube133.geometry} material={materials['Material.014']} position={[-31.541, 1.911, -112.009]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 1.518]} />
      <mesh geometry={nodes.Cube134.geometry} material={materials['Material.015']} position={[-32.923, 1.911, -117.224]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 1.518]} />
      <mesh geometry={nodes.Cube125.geometry} material={materials['Material.016']} position={[-27.85, 1.911, -120.456]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 1.518]} />
      <mesh geometry={nodes.Cube135.geometry} material={materials['Material.017']} position={[-26.216, 1.911, -114.946]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 1.518]} />
      <mesh geometry={nodes.Cube136.geometry} material={nodes.Cube136.material} position={[-24.789, 1.911, -113.305]} scale={[0.15, 2.01, 1.713]} />
      <mesh geometry={nodes.Cube137.geometry} material={nodes.Cube137.material} position={[-33.196, 1.911, -127.851]} scale={[0.15, 2.01, 2.113]} />
      <mesh geometry={nodes.Cube138.geometry} material={nodes.Cube138.material} position={[-28.979, 1.911, -122.73]} scale={[0.15, 2.01, 2.113]} />
      <mesh geometry={nodes.Cube139.geometry} material={materials['Material.018']} position={[-17.214, 1.911, -129.771]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 15.986]} />
      <mesh geometry={nodes.Cube140.geometry} material={nodes.Cube140.material} position={[-1.16, 1.911, -126.508]} scale={[0.15, 2.01, 3.414]} />
      <mesh geometry={nodes.Cube141.geometry} material={materials['Material.027']} position={[0.418, 1.911, -123.247]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 1.518]} />
      <mesh geometry={nodes.Cube142.geometry} material={nodes.Cube142.material} position={[1.852, 1.911, -128.622]} scale={[0.15, 2.01, 5.444]} />
      <mesh geometry={nodes.Cube143.geometry} material={materials['Material.028']} position={[3.801, 1.911, -133.924]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 1.981]} />
      <mesh geometry={nodes.Cube144.geometry} material={nodes.Cube144.material} position={[5.565, 1.911, -128.622]} scale={[0.15, 2.01, 5.444]} />
      <mesh geometry={nodes.Cube145.geometry} material={nodes.Cube145.material} position={[1.852, 1.911, -106.174]} scale={[0.15, 2.01, 5.444]} />
      <mesh geometry={nodes.Cube146.geometry} material={materials['Material.036']} position={[3.72, 1.911, -100.873]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 1.981]} />
      <mesh geometry={nodes.Cube147.geometry} material={nodes.Cube147.material} position={[5.544, 1.911, -98.535]} scale={[0.15, 2.01, 2.487]} />
      <mesh geometry={nodes.Cube148.geometry} material={materials['Material.037']} position={[2.926, 1.911, -96.186]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.593]} />
      <mesh geometry={nodes.Cube149.geometry} material={materials['Material.038']} position={[3.247, 1.911, -91.844]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.939]} />
      <mesh geometry={nodes.Cube150.geometry} material={materials['Material.039']} position={[7.04, 1.911, -123.247]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 1.518]} />
      <mesh geometry={nodes.Cube151.geometry} material={nodes.Cube151.material} position={[8.48, 1.911, -117.84]} scale={[0.15, 2.01, 5.444]} />
      <mesh geometry={nodes.Cube152.geometry} material={materials['Material.040']} position={[7.04, 1.911, -112.554]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 1.518]} />
      <mesh geometry={nodes.Cube153.geometry} material={nodes.Cube153.material} position={[5.836, 1.911, -109.442]} scale={[0.15, 2.01, 3.189]} />
      <mesh geometry={nodes.Cube154.geometry} material={materials['Material.041']} position={[7.694, 1.911, -100.901]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 1.981]} />
      <mesh geometry={nodes.Cube155.geometry} material={materials['Material.042']} position={[10.631, 1.911, -106.386]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 4.915]} />
      <mesh geometry={nodes.Cube156.geometry} material={nodes.Cube156.material} position={[15.383, 1.911, -101.013]} scale={[0.15, 2.01, 5.444]} />
      <mesh geometry={nodes.Cube157.geometry} material={materials['Material.043']} position={[13.44, 1.911, -95.772]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 1.981]} />
      <mesh geometry={nodes.Cube158.geometry} material={nodes.Cube158.material} position={[12.986, 1.911, -98.191]} scale={[0.15, 2.01, 2.487]} />
      <mesh geometry={nodes.Cube159.geometry} material={nodes.Cube159.material} position={[11.633, 1.911, -93.272]} scale={[0.15, 2.01, 2.487]} />
      <mesh geometry={nodes.Cube160.geometry} material={materials['Material.047']} position={[10.631, 1.911, -106.386]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 4.915]} />
      <mesh geometry={nodes.Cube161.geometry} material={materials['Material.065']} position={[-1.607, 1.911, -58.848]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 1.981]} />
      <mesh geometry={nodes.Cube162.geometry} material={materials['Material.066']} position={[-3.449, 1.911, -56.905]} rotation={[0, -0.02, 0]} scale={[0.15, 2.01, 1.981]} />
      <mesh geometry={nodes.Cube164.geometry} material={materials['Material.068']} position={[-7.187, 1.911, -54.573]} rotation={[0, -0.018, 0]} scale={[0.15, 2.01, 1.981]} />
      <mesh geometry={nodes.Cube163.geometry} material={materials['Material.069']} position={[-7.022, 1.911, -61.706]} rotation={[0, -0.02, 0]} scale={[0.15, 2.01, 1.981]} />
      <mesh geometry={nodes.Cube165.geometry} material={materials['Material.070']} position={[-5.879, 1.911, -66.842]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 6.193]} />
      <mesh geometry={nodes.Cube166.geometry} material={materials['Material.072']} position={[-7.187, 1.911, -48.338]} rotation={[0, -0.018, 0]} scale={[0.15, 2.01, 1.981]} />
      <mesh geometry={nodes.Cube167.geometry} material={materials['Material.073']} position={[-9.543, 1.911, -59.889]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.517]} />
      <mesh geometry={nodes.Cube168.geometry} material={materials['Material.074']} position={[-9.543, 1.911, -56.389]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.517]} />
      <mesh geometry={nodes.Cube169.geometry} material={materials['Material.075']} position={[8.975, 1.911, -62.014]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.939]} />
      <mesh geometry={nodes.Cube170.geometry} material={materials['Material.076']} position={[7.81, 1.911, -66.003]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 1.332]} />
      <mesh geometry={nodes.Cube171.geometry} material={materials['Material.077']} position={[2.129, 1.911, -58.848]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 1.981]} />
      <mesh geometry={nodes.Cube172.geometry} material={materials['Material.078']} position={[3.943, 1.911, -56.905]} rotation={[0, -0.02, 0]} scale={[0.15, 2.01, 1.981]} />
      <mesh geometry={nodes.Cube173.geometry} material={materials['Material.079']} position={[7.495, 1.911, -60.12]} rotation={[0, -0.02, 0]} scale={[0.15, 2.01, 1.981]} />
      <mesh geometry={nodes.Cube174.geometry} material={materials['Material.080']} position={[2.129, 1.911, -55.023]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 1.981]} />
      <mesh geometry={nodes.Cube175.geometry} material={materials['Material.081']} position={[2.129, 1.911, -51.095]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 1.981]} />
      <mesh geometry={nodes.Cube176.geometry} material={materials['Material.087']} position={[8.919, 1.911, -20.499]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.939]} />
      <mesh geometry={nodes.Cube177.geometry} material={materials['Material.088']} position={[4.404, 1.911, -15.466]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.939]} />
      <mesh geometry={nodes.Cube178.geometry} material={materials['Material.089']} position={[8.919, 1.911, -10.462]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.939]} />
      <mesh geometry={nodes.Cube179.geometry} material={materials['Material.091']} position={[-15.162, 1.911, -16.226]} rotation={[0, -0.012, 0]} scale={[0.15, 2.01, 2.939]} />
      <mesh geometry={nodes.Cube180.geometry} material={materials['Material.092']} position={[-11.545, 1.911, -16.226]} rotation={[0, -0.012, 0]} scale={[0.15, 2.01, 2.939]} />
      <mesh geometry={nodes.Cube181.geometry} material={materials['Material.093']} position={[-7.119, 1.911, -15.466]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 4.458]} />
      <mesh geometry={nodes.Cube182.geometry} material={materials['Material.094']} position={[-2.849, 1.911, -16.226]} rotation={[0, -0.012, 0]} scale={[0.15, 2.01, 2.939]} />
      <mesh geometry={nodes.Cube183.geometry} material={materials['Material.095']} position={[-1.273, 1.911, -9.58]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.939]} />
      <mesh geometry={nodes.Cube184.geometry} material={materials['Material.096']} position={[-13.623, 1.911, 2.528]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 25.415]} />
      <mesh geometry={nodes.Cube185.geometry} material={nodes.Cube185.material} position={[-18.895, 1.909, -62.683]} scale={[0.15, 2.01, 19]} />
      <mesh geometry={nodes.Cube186.geometry} material={nodes.Cube186.material} position={[-87.951, 1.909, -69.77]} scale={[0.15, 2.01, 19]} />
      <mesh geometry={nodes.Cube187.geometry} material={materials['Material.098']} position={[-97.657, 2.2, -19.878]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.247, 3.373]} />
      <mesh geometry={nodes.Cube188.geometry} material={materials['Material.099']} position={[-98.018, 2.2, -17.195]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.247, 11.937]} />
      <mesh geometry={nodes.Cube189.geometry} material={materials['Material.100']} position={[-94.369, 1.909, -25.183]} scale={[0.15, 2.01, 5.241]} />
      <mesh geometry={nodes.Cube190.geometry} material={materials['Material.101']} position={[-94.369, 1.909, -35.568]} scale={[0.15, 2.01, 1.697]} />
      <mesh geometry={nodes.Cube191.geometry} material={materials['Material.102']} position={[-92.727, 1.909, -30.241]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 1.697]} />
      <mesh geometry={nodes.Cube192.geometry} material={materials['Material.103']} position={[-91.153, 1.909, -28.636]} scale={[0.15, 2.01, 1.697]} />
      <mesh geometry={nodes.Cube193.geometry} material={materials['Material.104']} position={[-86.349, 1.909, -20.699]} scale={[0.15, 2.01, 3.525]} />
      <mesh geometry={nodes.Cube194.geometry} material={materials['Material.105']} position={[-85.821, 1.909, -24.069]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 0.404]} />
      <mesh geometry={nodes.Cube195.geometry} material={materials['Material.106']} position={[-86.834, 1.909, -27.237]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 1.338]} />
      <mesh geometry={nodes.Cube196.geometry} material={materials['Material.107']} position={[-88.395, 1.909, -33.549]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.675]} />
      <mesh geometry={nodes.Cube197.geometry} material={materials['Material.108']} position={[-80.665, 1.909, -52.166]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.675]} />
      <mesh geometry={nodes.Cube198.geometry} material={materials['Material.109']} position={[-80.743, 1.909, -50.248]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.675]} />
      <mesh geometry={nodes.Cube199.geometry} material={materials['Material.110']} position={[-80.629, 1.909, -55]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.675]} />
      <mesh geometry={nodes.Cube200.geometry} material={materials['Material.111']} position={[-80.548, 1.909, -56.939]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.675]} />
      <mesh geometry={nodes.Cube201.geometry} material={materials['Material.112']} position={[-80.555, 1.909, -59.666]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.675]} />
      <mesh geometry={nodes.Cube202.geometry} material={materials['Material.113']} position={[-80.446, 1.909, -61.695]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.675]} />
      <mesh geometry={nodes.Cube203.geometry} material={materials['Material.114']} position={[-80.464, 1.909, -64.526]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.675]} />
      <mesh geometry={nodes.Cube204.geometry} material={materials['Material.115']} position={[-80.398, 1.909, -66.549]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.675]} />
      <mesh geometry={nodes.Cube205.geometry} material={materials['Material.116']} position={[-82.723, 1.909, -69.183]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 5.05]} />
      <mesh geometry={nodes.Cube206.geometry} material={materials['Material.117']} position={[-80.351, 1.909, -70.987]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.675]} />
      <mesh geometry={nodes.Cube207.geometry} material={materials['Material.118']} position={[-82.737, 1.909, -73.709]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 5.234]} />
      <mesh geometry={nodes.Cube208.geometry} material={materials['Material.119']} position={[-80.888, 1.909, -75.853]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 3.419]} />
      <mesh geometry={nodes.Cube209.geometry} material={materials['Material.120']} position={[-80.743, 1.909, -50.248]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.675]} />
      <mesh geometry={nodes.Cube210.geometry} material={materials['Material.121']} position={[-72.59, 1.909, -50.248]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.675]} />
      <mesh geometry={nodes.Cube211.geometry} material={materials['Material.122']} position={[-67.341, 1.909, -75.769]} rotation={[0, Math.PI / 2, 0]} scale={[0.151, 2.01, 7.463]} />
      <mesh geometry={nodes.Cube212.geometry} material={materials['Material.123']} position={[-72.09, 1.909, -73.709]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.675]} />
      <mesh geometry={nodes.Cube213.geometry} material={materials['Material.124']} position={[-72.223, 1.909, -70.987]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.675]} />
      <mesh geometry={nodes.Cube214.geometry} material={materials['Material.125']} position={[-72.255, 1.909, -69.183]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.675]} />
      <mesh geometry={nodes.Cube215.geometry} material={materials['Material.126']} position={[-72.32, 1.909, -66.549]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.675]} />
      <mesh geometry={nodes.Cube216.geometry} material={materials['Material.127']} position={[-72.356, 1.909, -64.526]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.675]} />
      <mesh geometry={nodes.Cube217.geometry} material={materials['Material.128']} position={[-72.386, 1.909, -61.695]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.675]} />
      <mesh geometry={nodes.Cube218.geometry} material={materials['Material.129']} position={[-72.415, 1.909, -59.666]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.675]} />
      <mesh geometry={nodes.Cube219.geometry} material={materials['Material.130']} position={[-72.455, 1.909, -56.939]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.675]} />
      <mesh geometry={nodes.Cube220.geometry} material={materials['Material.131']} position={[-72.46, 1.909, -55]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.675]} />
      <mesh geometry={nodes.Cube221.geometry} material={materials['Material.132']} position={[-72.512, 1.909, -52.166]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.675]} />
      <mesh geometry={nodes.Cube222.geometry} material={nodes.Cube222.material} position={[-84.134, 1.911, -78.517]} scale={[0.15, 2.01, 2.568]} />
      <mesh geometry={nodes.Cube223.geometry} material={nodes.Cube223.material} position={[-82.513, 1.909, -87.975]} scale={[0.193, 2.01, 2.089]} />
      <mesh geometry={nodes.Cube224.geometry} material={nodes.Cube224.material} position={[-61.1, 1.911, -106.057]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 1.854]} />
      <mesh geometry={nodes.Cube225.geometry} material={nodes.Cube225.material} position={[-75.775, 1.911, -80.891]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 8.441]} />
      <mesh geometry={nodes.Cube226.geometry} material={nodes.Cube226.material} position={[-76.373, 1.911, -90.147]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.568]} />
      <mesh geometry={nodes.Cube227.geometry} material={materials['Material.133']} position={[-65.586, 1.909, -100.855]} scale={[0.15, 2.01, 5.241]} />
      <mesh geometry={nodes.Cube228.geometry} material={nodes.Cube228.material} position={[-55.543, 1.911, -80.891]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 8.441]} />
      <mesh geometry={nodes.Cube229.geometry} material={materials['Material.146']} position={[-59.725, 1.909, -73.643]} scale={[0.15, 2.01, 2.189]} />
      <mesh geometry={nodes.Cube230.geometry} material={materials['Material.147']} position={[-56.648, 1.909, -73.959]} scale={[0.15, 2.01, 2.675]} />
      <mesh geometry={nodes.Cube231.geometry} material={materials['Material.148']} position={[-49.263, 1.909, -76.416]} rotation={[0, Math.PI / 2, 0]} scale={[0.151, 2.01, 7.463]} />
      <mesh geometry={nodes.Cube232.geometry} material={materials['Material.161']} position={[-38.272, 1.911, -91.283]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 1.337]} />
      <mesh geometry={nodes.Cube233.geometry} material={materials['Material.162']} position={[-39.683, 1.909, -89.091]} scale={[0.15, 2.01, 2.34]} />
      <mesh geometry={nodes.Cube234.geometry} material={materials['Material.163']} position={[-30.051, 1.909, -74.245]} rotation={[0, Math.PI / 2, 0]} scale={[0.151, 2.01, 4.557]} />
      <mesh geometry={nodes.Cube235.geometry} material={materials['Material.164']} position={[-37.841, 1.909, -82.473]} rotation={[0, Math.PI / 2, 0]} scale={[0.151, 2.01, 4.557]} />
      <mesh geometry={nodes.Cube236.geometry} material={materials['Material.167']} position={[-72.935, 1.911, -130.443]} scale={[0.15, 2.01, 4.542]} />
      <mesh geometry={nodes.Cube237.geometry} material={nodes.Cube237.material} position={[-79.179, 1.911, -134.877]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 6.425]} />
      <mesh geometry={nodes.Cube238.geometry} material={nodes.Cube238.material} position={[-83.099, 1.911, -129.308]} rotation={[0, Math.PI / 2, 0]} scale={[0.195, 2.01, 6.425]} />
      <mesh geometry={nodes.Cube239.geometry} material={nodes.Cube239.material} position={[-72.423, 1.911, -121.116]} rotation={[0, Math.PI / 2, 0]} scale={[0.195, 2.01, 2.111]} />
      <mesh geometry={nodes.Cube240.geometry} material={nodes.Cube240.material} position={[-85.92, 1.909, -127.846]} rotation={[Math.PI, -0.006, Math.PI]} scale={[0.15, 2.01, 1.6]} />
      <mesh geometry={nodes.Cube241.geometry} material={nodes.Cube241.material} position={[-80.728, 1.909, -124.196]} rotation={[Math.PI, -0.006, Math.PI]} scale={[0.15, 2.01, 1.6]} />
      <mesh geometry={nodes.Cube242.geometry} material={nodes.Cube242.material} position={[-108.523, 1.911, -134.877]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 33.064]} />
      <mesh geometry={nodes.Cube243.geometry} material={nodes.Cube243.material} position={[-134.072, 1.911, -129.308]} rotation={[0, Math.PI / 2, 0]} scale={[0.195, 2.01, 6.425]} />
      <mesh geometry={nodes.Cube244.geometry} material={nodes.Cube244.material} position={[-127.838, 1.909, -126.185]} scale={[0.15, 2.01, 3.231]} />
      <mesh geometry={nodes.Cube245.geometry} material={nodes.Cube245.material} position={[-125.06, 1.909, -126.246]} scale={[0.15, 2.01, 3.231]} />
      <mesh geometry={nodes.Cube246.geometry} material={nodes.Cube246.material} position={[-116.94, 1.827, -130.843]} rotation={[1.603, -1.565, 1.571]} scale={[0.15, 2.01, 4.48]} />
      <mesh geometry={nodes.Cube247.geometry} material={nodes.Cube247.material} position={[-118.925, 1.909, -128.604]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.455]} />
      <mesh geometry={nodes.Cube248.geometry} material={nodes.Cube248.material} position={[-108.917, 1.909, -128.165]} rotation={[Math.PI, -0.006, Math.PI]} scale={[0.15, 2.01, 1.6]} />
      <mesh geometry={nodes.Cube249.geometry} material={nodes.Cube249.material} position={[-102.444, 1.909, -127.152]} rotation={[Math.PI, -0.006, Math.PI]} scale={[0.15, 2.01, 2.649]} />
      <mesh geometry={nodes.Cube250.geometry} material={nodes.Cube250.material} position={[-104.567, 1.909, -124.598]} rotation={[0, -1.564, 0]} scale={[0.15, 2.01, 2.248]} />
      <mesh geometry={nodes.Cube251.geometry} material={nodes.Cube251.material} position={[-107.878, 2.051, -110.454]} rotation={[0, 0, -3.14]} scale={[0.15, 2.01, 2.711]} />
      <mesh geometry={nodes.Cube252.geometry} material={nodes.Cube252.material} position={[-107.438, 1.945, -106.204]} rotation={[-1.597, 1.564, -1.577]} scale={[0.15, 2.01, 0.709]} />
      <mesh geometry={nodes.Cube253.geometry} material={nodes.Cube253.material} position={[-106.659, 1.946, -107.041]} rotation={[0, 0, -3.14]} scale={[0.15, 2.01, 0.777]} />
      <mesh geometry={nodes.Cube254.geometry} material={nodes.Cube254.material} position={[-107.219, 1.945, -107.994]} rotation={[-1.597, 1.564, -1.577]} scale={[0.15, 2.01, 0.709]} />
      <mesh geometry={nodes.Cube255.geometry} material={nodes.Cube255.material} position={[-107.577, 2.052, -118.095]} rotation={[0, 0, -3.14]} scale={[0.15, 2.01, 3.231]} />
      <mesh geometry={nodes.Cube256.geometry} material={nodes.Cube256.material} position={[-107.013, 1.945, -114.973]} rotation={[-1.597, 1.564, -1.577]} scale={[0.15, 2.01, 0.709]} />
      <mesh geometry={nodes.Cube257.geometry} material={nodes.Cube257.material} position={[-106.453, 1.946, -114.021]} rotation={[0, 0, -3.14]} scale={[0.15, 2.01, 0.777]} />
      <mesh geometry={nodes.Cube258.geometry} material={nodes.Cube258.material} position={[-107.232, 1.945, -113.183]} rotation={[-1.597, 1.564, -1.577]} scale={[0.15, 2.01, 0.709]} />
      <mesh geometry={nodes.Cube259.geometry} material={nodes.Cube259.material} position={[-108.007, 2.051, -102.812]} rotation={[0, 0, -3.14]} scale={[0.15, 2.01, 3.327]} />
      <mesh geometry={nodes.Cube260.geometry} material={nodes.Cube260.material} position={[-121.506, 2.051, -102.812]} rotation={[0, 0, -3.14]} scale={[0.15, 2.01, 3.327]} />
      <mesh geometry={nodes.Cube261.geometry} material={nodes.Cube261.material} position={[-120.731, 1.945, -113.183]} rotation={[-1.597, 1.564, -1.577]} scale={[0.15, 2.01, 0.709]} />
      <mesh geometry={nodes.Cube262.geometry} material={nodes.Cube262.material} position={[-119.953, 1.946, -114.021]} rotation={[0, 0, -3.14]} scale={[0.15, 2.01, 0.777]} />
      <mesh geometry={nodes.Cube263.geometry} material={nodes.Cube263.material} position={[-120.513, 1.945, -114.973]} rotation={[-1.597, 1.564, -1.577]} scale={[0.15, 2.01, 0.709]} />
      <mesh geometry={nodes.Cube264.geometry} material={nodes.Cube264.material} position={[-121.077, 2.052, -118.095]} rotation={[0, 0, -3.14]} scale={[0.15, 2.01, 3.231]} />
      <mesh geometry={nodes.Cube265.geometry} material={nodes.Cube265.material} position={[-120.718, 1.945, -107.994]} rotation={[-1.597, 1.564, -1.577]} scale={[0.15, 2.01, 0.709]} />
      <mesh geometry={nodes.Cube266.geometry} material={nodes.Cube266.material} position={[-120.159, 1.946, -107.041]} rotation={[0, 0, -3.14]} scale={[0.15, 2.01, 0.777]} />
      <mesh geometry={nodes.Cube267.geometry} material={nodes.Cube267.material} position={[-120.937, 1.945, -106.204]} rotation={[-1.597, 1.564, -1.577]} scale={[0.15, 2.01, 0.709]} />
      <mesh geometry={nodes.Cube268.geometry} material={nodes.Cube268.material} position={[-121.378, 2.051, -110.454]} rotation={[0, 0, -3.14]} scale={[0.15, 2.01, 2.711]} />
      <mesh geometry={nodes.Cube269.geometry} material={nodes.Cube269.material} position={[-115.272, 1.909, -110.454]} scale={[0.15, 2.01, 2.711]} />
      <mesh geometry={nodes.Cube270.geometry} material={nodes.Cube270.material} position={[-115.713, 2.016, -106.204]} rotation={[1.603, -1.565, 1.571]} scale={[0.15, 2.01, 0.709]} />
      <mesh geometry={nodes.Cube271.geometry} material={nodes.Cube271.material} position={[-115.573, 1.909, -118.095]} rotation={[0, 0, Math.PI]} scale={[0.15, 2.01, 3.231]} />
      <mesh geometry={nodes.Cube272.geometry} material={nodes.Cube272.material} position={[-116.137, 2.016, -114.973]} rotation={[1.603, -1.565, 1.571]} scale={[0.15, 2.01, 0.709]} />
      <mesh geometry={nodes.Cube273.geometry} material={nodes.Cube273.material} position={[-116.697, 2.016, -114.021]} scale={[0.15, 2.01, 0.777]} />
      <mesh geometry={nodes.Cube274.geometry} material={nodes.Cube274.material} position={[-115.918, 2.016, -113.183]} rotation={[1.603, -1.565, 1.571]} scale={[0.15, 2.01, 0.709]} />
      <mesh geometry={nodes.Cube275.geometry} material={nodes.Cube275.material} position={[-115.144, 1.909, -102.812]} scale={[0.15, 2.01, 3.327]} />
      <mesh geometry={nodes.Column002.geometry} material={materials['Column_material.002']} position={[-114.157, 0.023, -119.921]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top002.geometry} material={materials['Column_rect.002']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column003.geometry} material={materials['Column_material.003']} position={[-113.032, 0.023, -119.921]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top003.geometry} material={materials['Column_rect.003']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column004.geometry} material={materials['Column_material.004']} position={[-111.955, 0.023, -119.921]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top004.geometry} material={materials['Column_rect.004']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column005.geometry} material={materials['Column_material.005']} position={[-110.977, 0.023, -119.921]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top005.geometry} material={materials['Column_rect.005']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column006.geometry} material={materials['Column_material.006']} position={[-110.101, 0.023, -119.921]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top006.geometry} material={materials['Column_rect.006']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column007.geometry} material={materials['Column_material.007']} position={[-109.192, 0.023, -119.921]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top007.geometry} material={materials['Column_rect.007']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column008.geometry} material={materials['Column_material.008']} position={[-108.261, 0.023, -119.921]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top008.geometry} material={materials['Column_rect.008']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column009.geometry} material={materials['Column_material.009']} position={[-115.128, 0.023, -119.921]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top009.geometry} material={materials['Column_rect.009']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column010.geometry} material={materials['Column_material.010']} position={[-115.128, 0.023, -119.921]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top010.geometry} material={materials['Column_rect.010']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column011.geometry} material={materials['Column_material.011']} position={[-108.261, 0.023, -119.921]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top011.geometry} material={materials['Column_rect.011']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column012.geometry} material={materials['Column_material.012']} position={[-109.192, 0.023, -119.921]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top012.geometry} material={materials['Column_rect.012']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column013.geometry} material={materials['Column_material.013']} position={[-110.101, 0.023, -119.921]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top013.geometry} material={materials['Column_rect.013']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column014.geometry} material={materials['Column_material.014']} position={[-110.977, 0.023, -119.921]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top014.geometry} material={materials['Column_rect.014']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column015.geometry} material={materials['Column_material.015']} position={[-111.955, 0.023, -119.921]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top015.geometry} material={materials['Column_rect.015']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column016.geometry} material={materials['Column_material.016']} position={[-113.032, 0.023, -119.921]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top016.geometry} material={materials['Column_rect.016']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column017.geometry} material={materials['Column_material.017']} position={[-114.157, 0.023, -119.921]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top017.geometry} material={materials['Column_rect.017']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column018.geometry} material={materials['Column_material.018']} position={[-114.157, 0.023, -119.921]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top018.geometry} material={materials['Column_rect.018']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column019.geometry} material={materials['Column_material.019']} position={[-113.032, 0.023, -119.921]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top019.geometry} material={materials['Column_rect.019']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column020.geometry} material={materials['Column_material.020']} position={[-111.955, 0.023, -119.921]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top020.geometry} material={materials['Column_rect.020']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column021.geometry} material={materials['Column_material.021']} position={[-110.977, 0.023, -119.921]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top021.geometry} material={materials['Column_rect.021']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column022.geometry} material={materials['Column_material.022']} position={[-110.101, 0.023, -119.921]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top022.geometry} material={materials['Column_rect.022']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column023.geometry} material={materials['Column_material.023']} position={[-109.192, 0.023, -119.921]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top023.geometry} material={materials['Column_rect.023']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column024.geometry} material={materials['Column_material.024']} position={[-108.261, 0.023, -119.921]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top024.geometry} material={materials['Column_rect.024']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column025.geometry} material={materials['Column_material.025']} position={[-115.128, 0.023, -119.921]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top025.geometry} material={materials['Column_rect.025']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column026.geometry} material={materials['Column_material.026']} position={[-115.128, 0.023, -117.367]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top026.geometry} material={materials['Column_rect.026']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column027.geometry} material={materials['Column_material.027']} position={[-108.261, 0.023, -117.367]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top027.geometry} material={materials['Column_rect.027']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column028.geometry} material={materials['Column_material.028']} position={[-115.128, 0.023, -117.367]} scale={[1, 1.714, 1]} />
      <mesh geometry={nodes.Column029.geometry} material={materials['Column_material.029']} position={[-108.261, 0.023, -117.367]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top028.geometry} material={materials['Column_rect.028']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column030.geometry} material={materials['Column_material.030']} position={[-109.192, 0.023, -117.367]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top029.geometry} material={materials['Column_rect.029']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column031.geometry} material={materials['Column_material.031']} position={[-110.101, 0.023, -117.367]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top030.geometry} material={materials['Column_rect.030']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column032.geometry} material={materials['Column_material.032']} position={[-110.977, 0.023, -117.367]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top031.geometry} material={materials['Column_rect.031']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column033.geometry} material={materials['Column_material.033']} position={[-111.955, 0.023, -117.367]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top032.geometry} material={materials['Column_rect.032']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column034.geometry} material={materials['Column_material.034']} position={[-113.032, 0.023, -117.367]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top033.geometry} material={materials['Column_rect.033']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column035.geometry} material={materials['Column_material.035']} position={[-114.157, 0.023, -117.367]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top034.geometry} material={materials['Column_rect.034']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column036.geometry} material={materials['Column_material.036']} position={[-114.157, 0.023, -114.786]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top035.geometry} material={materials['Column_rect.035']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column037.geometry} material={materials['Column_material.037']} position={[-113.032, 0.023, -114.786]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top036.geometry} material={materials['Column_rect.036']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column038.geometry} material={materials['Column_material.038']} position={[-111.955, 0.023, -114.786]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top037.geometry} material={materials['Column_rect.037']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column039.geometry} material={materials['Column_material.039']} position={[-110.977, 0.023, -114.786]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top038.geometry} material={materials['Column_rect.038']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column040.geometry} material={materials['Column_material.040']} position={[-110.101, 0.023, -114.786]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top039.geometry} material={materials['Column_rect.039']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column041.geometry} material={materials['Column_material.041']} position={[-109.192, 0.023, -114.786]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top040.geometry} material={materials['Column_rect.040']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column042.geometry} material={materials['Column_material.042']} position={[-108.261, 0.023, -114.786]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top041.geometry} material={materials['Column_rect.041']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column043.geometry} material={materials['Column_material.043']} position={[-115.128, 0.023, -114.786]} scale={[1, 1.714, 1]} />
      <mesh geometry={nodes.Column044.geometry} material={materials['Column_material.044']} position={[-108.261, 0.023, -114.786]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top042.geometry} material={materials['Column_rect.042']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column045.geometry} material={materials['Column_material.045']} position={[-115.128, 0.023, -114.786]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top043.geometry} material={materials['Column_rect.043']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column046.geometry} material={materials['Column_material.046']} position={[-115.128, 0.023, -104.993]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top044.geometry} material={materials['Column_rect.044']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column047.geometry} material={materials['Column_material.047']} position={[-108.261, 0.023, -104.993]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top045.geometry} material={materials['Column_rect.045']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column048.geometry} material={materials['Column_material.048']} position={[-115.128, 0.023, -104.993]} scale={[1, 1.714, 1]} />
      <mesh geometry={nodes.Column049.geometry} material={materials['Column_material.049']} position={[-108.261, 0.023, -104.993]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top046.geometry} material={materials['Column_rect.046']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column050.geometry} material={materials['Column_material.050']} position={[-109.192, 0.023, -104.993]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top047.geometry} material={materials['Column_rect.047']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column051.geometry} material={materials['Column_material.051']} position={[-110.101, 0.023, -104.993]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top048.geometry} material={materials['Column_rect.048']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column052.geometry} material={materials['Column_material.052']} position={[-110.977, 0.023, -104.993]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top049.geometry} material={materials['Column_rect.049']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column053.geometry} material={materials['Column_material.053']} position={[-111.955, 0.023, -104.993]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top050.geometry} material={materials['Column_rect.050']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column054.geometry} material={materials['Column_material.054']} position={[-113.032, 0.023, -104.993]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top051.geometry} material={materials['Column_rect.051']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column055.geometry} material={materials['Column_material.055']} position={[-114.157, 0.023, -104.993]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top052.geometry} material={materials['Column_rect.052']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column056.geometry} material={materials['Column_material.056']} position={[-114.157, 0.023, -103.199]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top053.geometry} material={materials['Column_rect.053']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column057.geometry} material={materials['Column_material.057']} position={[-113.032, 0.023, -103.199]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top054.geometry} material={materials['Column_rect.054']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column058.geometry} material={materials['Column_material.058']} position={[-111.955, 0.023, -103.199]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top055.geometry} material={materials['Column_rect.055']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column059.geometry} material={materials['Column_material.059']} position={[-110.977, 0.023, -103.199]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top056.geometry} material={materials['Column_rect.056']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column060.geometry} material={materials['Column_material.060']} position={[-110.101, 0.023, -103.199]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top057.geometry} material={materials['Column_rect.057']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column061.geometry} material={materials['Column_material.061']} position={[-109.192, 0.023, -103.199]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top058.geometry} material={materials['Column_rect.058']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column062.geometry} material={materials['Column_material.062']} position={[-108.261, 0.023, -103.199]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top059.geometry} material={materials['Column_rect.059']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column063.geometry} material={materials['Column_material.063']} position={[-115.128, 0.023, -103.199]} scale={[1, 1.714, 1]} />
      <mesh geometry={nodes.Column064.geometry} material={materials['Column_material.064']} position={[-108.261, 0.023, -103.199]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top060.geometry} material={materials['Column_rect.060']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column065.geometry} material={materials['Column_material.065']} position={[-115.128, 0.023, -103.199]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top061.geometry} material={materials['Column_rect.061']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column066.geometry} material={materials['Column_material.066']} position={[-114.157, 0.023, -101.294]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top062.geometry} material={materials['Column_rect.062']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column067.geometry} material={materials['Column_material.067']} position={[-113.032, 0.023, -101.294]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top063.geometry} material={materials['Column_rect.063']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column068.geometry} material={materials['Column_material.068']} position={[-111.955, 0.023, -101.294]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top064.geometry} material={materials['Column_rect.064']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column069.geometry} material={materials['Column_material.069']} position={[-110.977, 0.023, -101.294]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top065.geometry} material={materials['Column_rect.065']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column070.geometry} material={materials['Column_material.070']} position={[-110.101, 0.023, -101.294]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top066.geometry} material={materials['Column_rect.066']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column071.geometry} material={materials['Column_material.071']} position={[-109.192, 0.023, -101.294]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top067.geometry} material={materials['Column_rect.067']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column072.geometry} material={materials['Column_material.072']} position={[-108.261, 0.023, -101.294]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top068.geometry} material={materials['Column_rect.068']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column073.geometry} material={materials['Column_material.073']} position={[-115.128, 0.023, -101.294]} scale={[1, 1.714, 1]} />
      <mesh geometry={nodes.Column074.geometry} material={materials['Column_material.074']} position={[-108.261, 0.023, -101.294]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top069.geometry} material={materials['Column_rect.069']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column075.geometry} material={materials['Column_material.075']} position={[-115.128, 0.023, -101.294]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top070.geometry} material={materials['Column_rect.070']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column076.geometry} material={materials['Column_material.076']} position={[-115.128, 0.023, -99.629]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top071.geometry} material={materials['Column_rect.071']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column077.geometry} material={materials['Column_material.077']} position={[-108.261, 0.023, -99.629]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top072.geometry} material={materials['Column_rect.072']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column078.geometry} material={materials['Column_material.078']} position={[-115.128, 0.023, -99.629]} scale={[1, 1.714, 1]} />
      <mesh geometry={nodes.Column079.geometry} material={materials['Column_material.079']} position={[-108.261, 0.023, -99.629]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top073.geometry} material={materials['Column_rect.073']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column080.geometry} material={materials['Column_material.080']} position={[-109.192, 0.023, -99.629]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top074.geometry} material={materials['Column_rect.074']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column081.geometry} material={materials['Column_material.081']} position={[-110.101, 0.023, -99.629]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top075.geometry} material={materials['Column_rect.075']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column082.geometry} material={materials['Column_material.082']} position={[-110.977, 0.023, -99.629]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top076.geometry} material={materials['Column_rect.076']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column083.geometry} material={materials['Column_material.083']} position={[-111.955, 0.023, -99.629]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top077.geometry} material={materials['Column_rect.077']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column084.geometry} material={materials['Column_material.084']} position={[-113.032, 0.023, -99.629]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top078.geometry} material={materials['Column_rect.078']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column085.geometry} material={materials['Column_material.085']} position={[-114.157, 0.023, -99.629]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top079.geometry} material={materials['Column_rect.079']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Cube276.geometry} material={nodes.Cube276.material} position={[-115.849, 1.945, -107.994]} rotation={[-1.597, 1.564, -1.577]} scale={[0.15, 2.01, 0.709]} />
      <mesh geometry={nodes.Cube277.geometry} material={nodes.Cube277.material} position={[-116.536, 1.946, -107.041]} rotation={[0, 0, -3.14]} scale={[0.15, 2.01, 0.777]} />
      <mesh geometry={nodes.Cube278.geometry} material={nodes.Cube278.material} position={[-121.048, 1.909, -121.191]} rotation={[0, -1.564, 0]} scale={[0.15, 2.01, 1.929]} />
      <mesh geometry={nodes.Cube279.geometry} material={nodes.Cube279.material} position={[-121.262, 1.909, -127.209]} rotation={[Math.PI, 0, Math.PI]} scale={[0.15, 2.01, 1.6]} />
      <mesh geometry={nodes.Cube280.geometry} material={nodes.Cube280.material} position={[-98.865, 2.016, -133.717]} scale={[0.15, 2.01, 0.8]} />
      <mesh geometry={nodes.Cube281.geometry} material={nodes.Cube281.material} position={[-96.558, 1.909, -134.705]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.455]} />
      <mesh geometry={nodes.Cube282.geometry} material={nodes.Cube282.material} position={[-92.832, 1.909, -132.856]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 1.149]} />
      <mesh geometry={nodes.Cube283.geometry} material={nodes.Cube283.material} position={[-94.108, 1.909, -133.779]} scale={[0.15, 2.01, 1.058]} />
      <mesh geometry={nodes.Cube284.geometry} material={nodes.Cube284.material} position={[-97.708, 1.909, -130.334]} scale={[0.15, 2.01, 2.649]} />
      <mesh geometry={nodes.Cube285.geometry} material={nodes.Cube285.material} position={[-91.601, 1.909, -130.334]} scale={[0.15, 2.01, 2.649]} />
      <mesh geometry={nodes.Cube286.geometry} material={nodes.Cube286.material} position={[-142.004, 2.105, -125.113]} rotation={[Math.PI, -1.535, Math.PI]} scale={[0.15, 2.01, 1.6]} />
      <mesh geometry={nodes.Cube287.geometry} material={nodes.Cube287.material} position={[-143.298, 2.105, -127.507]} rotation={[-Math.PI, 0.042, -Math.PI]} scale={[0.15, 2.01, 2.455]} />
      <mesh geometry={nodes.Column086.geometry} material={materials['Column_material.086']} position={[-142.861, 0.023, -133.508]} scale={[2.202, 1.714, 2.374]} />
      <mesh geometry={nodes.Column087.geometry} material={materials['Column_material.087']} position={[-141.861, 0.023, -133.508]} rotation={[0.424, 0, 0]} scale={[2.202, 1.714, 2.374]} />
      <mesh geometry={nodes.Column088.geometry} material={materials['Column_material.088']} position={[-141.861, 0.023, -133.508]} rotation={[0.337, -0.263, -0.638]} scale={[2.202, 1.714, 2.374]} />
      <mesh geometry={nodes.Column089.geometry} material={materials['Column_material.089']} position={[-141.861, 0.023, -133.508]} rotation={[-0.326, -0.263, -0.638]} scale={[2.202, 1.714, 2.374]} />
      <mesh geometry={nodes.Column090.geometry} material={materials['Column_material.090']} position={[-141.861, 0.023, -133.508]} rotation={[1.32, -0.263, -0.638]} scale={[2.202, 1.714, 2.374]} />
      <mesh geometry={nodes.Column091.geometry} material={materials['Column_material.091']} position={[-142.861, 0.023, -133.508]} rotation={[1.337, 0, 0]} scale={[2.202, 1.714, 2.374]} />
      <mesh geometry={nodes.Column092.geometry} material={materials['Column_material.092']} position={[-142.861, 2.023, -133.508]} rotation={[1.936, 0, 0]} scale={[2.202, 1.714, 2.374]} />
      <mesh geometry={nodes.Column093.geometry} material={materials['Column_material.093']} position={[-142.861, 2.023, -133.508]} rotation={[1.141, 0, 0]} scale={[2.202, 1.714, 2.374]} />
      <mesh geometry={nodes.Column094.geometry} material={materials['Column_material.094']} position={[-142.861, 2.023, -133.508]} rotation={[-2.114, 0, 0]} scale={[2.202, 1.714, 2.374]} />
      <mesh geometry={nodes.Cube288.geometry} material={nodes.Cube288.material} position={[-146.298, 2.105, -135.507]} rotation={[Math.PI, 0, Math.PI]} scale={[0.15, 2.01, 2.455]} />
      <mesh geometry={nodes.Cube289.geometry} material={nodes.Cube289.material} position={[-146.004, 2.105, -131.113]} rotation={[Math.PI, -1.535, Math.PI]} scale={[2.024, 2.01, 1.701]} />
      <mesh geometry={nodes.Cube290.geometry} material={nodes.Cube290.material} position={[-144.298, 2.105, -135.507]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.455]} />
      <mesh geometry={nodes.Cube291.geometry} material={nodes.Cube291.material} position={[-112.485, 1.841, -89.427]} rotation={[-0.724, 1.522, 0.718]} scale={[0.15, 2.01, 1.078]} />
      <mesh geometry={nodes.Cube292.geometry} material={nodes.Cube292.material} position={[-109.827, 1.894, -94.079]} rotation={[-0.724, 1.522, 0.718]} scale={[0.24, 2.01, 1.23]} />
      <mesh geometry={nodes.Cube293.geometry} material={nodes.Cube293.material} position={[-111.233, 1.866, -91.789]} rotation={[3.136, 0.037, 3.11]} scale={[0.15, 2.01, 2.568]} />
      <mesh geometry={nodes.Cube294.geometry} material={nodes.Cube294.material} position={[-113.684, 1.827, -86.061]} rotation={[3.136, 0.037, 3.11]} scale={[0.15, 2.01, 3.556]} />
      <mesh geometry={nodes.Cube295.geometry} material={nodes.Cube295.material} position={[-110.684, 1.827, -81.061]} rotation={[3.136, 0.037, 3.11]} scale={[0.15, 2.01, 3.556]} />
      <mesh geometry={nodes.Cube296.geometry} material={nodes.Cube296.material} position={[-108.233, 1.866, -86.789]} rotation={[3.136, 0.037, 3.11]} scale={[0.15, 2.01, 2.568]} />
      <mesh geometry={nodes.Cube297.geometry} material={nodes.Cube297.material} position={[-106.827, 1.894, -89.079]} rotation={[-0.724, 1.522, 0.718]} scale={[0.24, 2.01, 1.23]} />
      <mesh geometry={nodes.Cube298.geometry} material={nodes.Cube298.material} position={[-109.485, 1.841, -84.427]} rotation={[-0.724, 1.522, 0.718]} scale={[0.15, 2.01, 1.078]} />
      <mesh geometry={nodes.Cube299.geometry} material={nodes.Cube299.material} position={[-97.173, 1.841, -66.282]} rotation={[-1.252, -1.537, -1.258]} scale={[0.15, 2.01, 1.078]} />
      <mesh geometry={nodes.Cube300.geometry} material={nodes.Cube300.material} position={[-99.609, 1.894, -61.51]} rotation={[-1.252, -1.537, -1.258]} scale={[0.24, 2.01, 1.23]} />
      <mesh geometry={nodes.Cube301.geometry} material={nodes.Cube301.material} position={[-98.312, 1.866, -63.863]} rotation={[0.006, 0.01, -0.032]} scale={[0.15, 2.01, 2.568]} />
      <mesh geometry={nodes.Cube302.geometry} material={nodes.Cube302.material} position={[-96.134, 1.827, -69.701]} rotation={[0.006, 0.01, -0.032]} scale={[0.15, 2.01, 3.556]} />
      <mesh geometry={nodes.Cube303.geometry} material={nodes.Cube303.material} position={[-101.004, 2.105, -83.113]} rotation={[Math.PI, -1.535, Math.PI]} scale={[2.024, 2.01, 1.701]} />
      <mesh geometry={nodes.Cube304.geometry} material={nodes.Cube304.material} position={[-101.004, 2.105, -75.113]} rotation={[Math.PI, -1.535, Math.PI]} scale={[2.024, 2.01, 1.701]} />
      <mesh geometry={nodes.Cube305.geometry} material={nodes.Cube305.material} position={[-109.004, 2.105, -75.113]} rotation={[Math.PI, -1.535, Math.PI]} scale={[2.024, 2.01, 1.701]} />
      <mesh geometry={nodes.Cube306.geometry} material={nodes.Cube306.material} position={[-109.004, 2.105, -68.113]} rotation={[Math.PI, -1.535, Math.PI]} scale={[2.024, 2.01, 1.701]} />
      <mesh geometry={nodes.Cube307.geometry} material={nodes.Cube307.material} position={[-101.004, 4.105, -68.113]} rotation={[2.58, -1.535, Math.PI]} scale={[2.024, 2.01, 1.701]} />
      <mesh geometry={nodes.Cube308.geometry} material={nodes.Cube308.material} position={[-129.684, 1.827, -82.061]} rotation={[3.136, 0.037, 3.11]} scale={[0.15, 2.01, 3.556]} />
      <mesh geometry={nodes.Cube309.geometry} material={nodes.Cube309.material} position={[-126.684, 1.827, -85.061]} rotation={[3.136, 0.037, 3.11]} scale={[0.15, 2.01, 1.064]} />
      <mesh geometry={nodes.Cube310.geometry} material={nodes.Cube310.material} position={[-126.684, 1.827, -81.061]} rotation={[3.136, 0.037, 3.11]} scale={[0.15, 2.01, 1.064]} />
      <mesh geometry={nodes.Cube311.geometry} material={nodes.Cube311.material} position={[-115.881, 1.827, -85.221]} rotation={[0.006, 0.006, -0.032]} scale={[0.15, 2.01, 4.48]} />
      <mesh geometry={nodes.Cube312.geometry} material={nodes.Cube312.material} position={[-117.626, 1.909, -94.816]} rotation={[0, 0.013, 0]} scale={[0.15, 2.01, 3.285]} />
      <mesh geometry={nodes.Cube314.geometry} material={nodes.Cube314.material} position={[-123.315, 1.911, -84.906]} rotation={[Math.PI, -0.007, Math.PI]} scale={[0.15, 2.01, 3.556]} />
      <mesh geometry={nodes.Cube315.geometry} material={nodes.Cube315.material} position={[-121.354, 1.911, -94.766]} rotation={[Math.PI, -0.007, Math.PI]} scale={[0.15, 2.01, 6.425]} />
      <mesh geometry={nodes.Column095.geometry} material={materials['Column_material.095']} position={[-121.229, 0.023, -93.508]} rotation={[0, 0, -Math.PI / 2]} scale={[2.202, 1.589, 2.374]} />
      <mesh geometry={nodes.Column096.geometry} material={materials['Column_material.096']} position={[-121.229, 1.582, -93.508]} rotation={[0, 0, -Math.PI / 2]} scale={[2.202, 1.589, 2.374]} />
      <mesh geometry={nodes.Column097.geometry} material={materials['Column_material.097']} position={[-116.051, 1.582, -83.774]} rotation={[0, 0, -Math.PI / 2]} scale={[2.202, 0.955, 2.374]} />
      <mesh geometry={nodes.Column098.geometry} material={materials['Column_material.098']} position={[-117.081, -0.091, -84.056]} scale={[2.202, 1.589, 2.374]} />
      <mesh geometry={nodes.Column099.geometry} material={materials['Column_material.099']} position={[-118.548, -0.091, -84.056]} scale={[2.202, 1.589, 2.374]} />
      <mesh geometry={nodes.Column100.geometry} material={materials['Column_material.100']} position={[-120.2, -0.091, -84.056]} scale={[2.202, 1.589, 2.374]} />
      <mesh geometry={nodes.Column101.geometry} material={materials['Column_material.101']} position={[-117.081, -0.091, -85.852]} scale={[2.202, 1.589, 2.374]} />
      <mesh geometry={nodes.Cube313.geometry} material={materials['Material.048']} position={[-118.857, 1.909, -29.673]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 6.476]} />
      <mesh geometry={nodes.Column102.geometry} material={materials['Column_material.102']} position={[-124.684, 1.254, -33.68]} rotation={[0, 0, -1.578]} scale={[2.202, 1.589, 2.374]} />
      <mesh geometry={nodes.Cube316.geometry} material={nodes.Cube316.material} position={[-127.329, 1.841, -46.922]} rotation={[-0.724, 1.522, 0.718]} scale={[0.15, 2.01, 1.078]} />
      <mesh geometry={nodes.Cube317.geometry} material={nodes.Cube317.material} position={[-124.671, 1.894, -51.574]} rotation={[-0.724, 1.522, 0.718]} scale={[0.24, 2.01, 1.23]} />
      <mesh geometry={nodes.Cube318.geometry} material={nodes.Cube318.material} position={[-126.077, 1.866, -49.284]} rotation={[3.136, 0.037, 3.11]} scale={[0.15, 2.01, 2.568]} />
      <mesh geometry={nodes.Cube319.geometry} material={nodes.Cube319.material} position={[-128.528, 1.827, -43.556]} rotation={[3.136, 0.037, 3.11]} scale={[0.15, 2.01, 3.556]} />
      <mesh geometry={nodes.Cube320.geometry} material={nodes.Cube320.material} position={[-126.764, 1.894, -40.238]} rotation={[-0.724, 1.522, 0.718]} scale={[0.24, 2.012, 2.048]} />
      <mesh geometry={nodes.Column103.geometry} material={materials['Column_material.103']} position={[-116.051, 0.703, -83.774]} rotation={[0, 0, -Math.PI / 2]} scale={[2.202, 0.955, 2.374]} />
      <mesh geometry={nodes.Column104.geometry} material={materials['Column_material.104']} position={[-116.051, 2.443, -83.774]} rotation={[0, 0, -Math.PI / 2]} scale={[2.202, 0.955, 2.374]} />
      <mesh geometry={nodes.Cube321.geometry} material={nodes.Cube321.material} position={[-41.378, -0.721, -79.916]} scale={[0.075, 1, 1]} />
      <mesh geometry={nodes.Cube322.geometry} material={materials.Material} position={[-56.767, 6.133, -107.157]} rotation={[0, 1.535, 0]} scale={[-0.433, -0.081, -1.147]} />
      <mesh geometry={nodes.Cube323.geometry} material={materials['Material.064']} position={[-51.408, 6.133, -106.934]} rotation={[0, 1.535, 0]} scale={[-0.433, -0.081, -1.147]} />
      <mesh geometry={nodes.Cube324.geometry} material={materials['Material.067']} position={[-51.408, 6.133, -99.852]} rotation={[0, 1.535, 0]} scale={[-0.433, -0.081, -1.147]} />
      <mesh geometry={nodes.Cube325.geometry} material={materials['Material.097']} position={[-57.012, 6.133, -99.852]} rotation={[0, 1.535, 0]} scale={[-0.433, -0.081, -1.147]} />
      </group>
    </group>
  )
}

useGLTF.preload('/poc2.glb')

```

`/home/suhas/Desktop/pune/blockroomsv2/client/src/models/Hall3.tsx`:

```tsx
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 ./public/hall3.glb 
Modified for Backrooms experience with wall textures
Converted to TypeScript
*/

import { useGLTF, useTexture } from "@react-three/drei";
import * as THREE from "three";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    [key: string]: THREE.Mesh;
  };
  materials: {
    [key: string]: THREE.Material;
    "Material.002": THREE.Material;
    pillars: THREE.Material;
  };
};

interface ModelProps {
  [key: string]: any;
}

export function Model(props: ModelProps): JSX.Element {
  const { nodes, materials } = useGLTF("/hall3.glb") as GLTFResult;
  const wallTexture: THREE.Texture = useTexture("./walls.png");

  // Configure wall texture for Backrooms aesthetic
  wallTexture.wrapS = wallTexture.wrapT = THREE.RepeatWrapping;
  wallTexture.repeat.set(10, 26);
  wallTexture.minFilter = THREE.LinearFilter;
  wallTexture.magFilter = THREE.LinearFilter;

  // Create enhanced materials with the wall texture
  const wallMaterial: THREE.MeshLambertMaterial = new THREE.MeshLambertMaterial(
    {
      map: wallTexture,
      color: "#f7f3d0",
    }
  );

  const ceilingMaterial: THREE.MeshLambertMaterial =
    new THREE.MeshLambertMaterial({
      map: wallTexture,
      color: "#f0ead6",
    });

  const floorMaterial: THREE.MeshLambertMaterial =
    new THREE.MeshLambertMaterial({
      map: wallTexture,
      color: "#e8dcc0",
    });

  return (
    <group {...props} dispose={null}>
      {/* Point lights with adjusted intensity for Backrooms atmosphere */}
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[-3.139, 12.505, -79.602]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[5.003, 12.505, -79.602]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[5.003, 12.505, -60.007]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[5.003, 12.505, -40.04]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[5.003, 12.505, -20.151]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[5.003, 12.505, -0.312]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[5.003, 12.505, 19.728]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[5.003, 12.505, 39.533]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[5.003, 12.505, 59.538]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[5.003, 12.505, 59.538]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[5.003, 12.505, 79.66]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[-3.139, 12.505, -79.602]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[-3.139, 12.505, -60.233]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[-3.139, 12.505, -40.098]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[-3.139, 12.505, -20.173]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[-3.139, 12.505, -0.264]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[-3.139, 12.505, 19.886]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[-3.139, 12.505, 39.57]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[-3.139, 12.505, 59.748]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[-3.139, 12.505, 79.364]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[-18.952, 12.505, 87.671]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[-18.952, 12.505, 67.987]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[-18.952, 12.505, 49.531]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[-18.952, 12.505, 14.278]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[-18.952, 12.505, 5.475]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[-18.952, 12.505, -6.82]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[-18.952, 12.505, -13.816]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[-18.952, 12.505, -29.367]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[-18.952, 12.505, -69.714]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[-18.952, 12.505, -89.601]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[20.903, 12.505, -89.601]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[20.903, 12.505, -68.719]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[20.903, 12.505, -47.839]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[20.903, 12.505, -28.703]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[20.903, 12.505, -13.531]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[20.903, 12.505, -4.959]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[20.903, 13.521, 28.253]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[20.903, 13.521, 49.072]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[20.903, 13.521, 69.322]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[20.903, 13.521, 88.235]}
        rotation={[-Math.PI / 2, 0, 0]}
      />

      {/* Wall meshes with textured materials */}
      <mesh
        geometry={nodes.Cube002.geometry}
        material={wallMaterial}
        position={[-16.537, 6.099, 100]}
        scale={[13.573, 6, 0.235]}
      />
      <mesh
        geometry={nodes.Cube004.geometry}
        material={wallMaterial}
        position={[19.977, 6.099, 80]}
        scale={[10, 6, 0.235]}
      />
      <mesh
        geometry={nodes.Cube005.geometry}
        material={wallMaterial}
        position={[-16.537, 6.099, -100]}
        scale={[13.573, 6, 0.235]}
      />
      <mesh
        geometry={nodes.Cube007.geometry}
        material={ceilingMaterial}
        position={[-0.02, 10.724, -100]}
        scale={[3.163, 1.4, 0.235]}
      />
      <mesh
        geometry={nodes.Cube006.geometry}
        material={ceilingMaterial}
        position={[-0.02, 10.724, 100]}
        scale={[3.163, 1.4, 0.235]}
      />
      <mesh
        geometry={nodes.Cube019.geometry}
        material={wallMaterial}
        position={[16.539, 6.099, 100]}
        scale={[13.573, 6, 0.235]}
      />
      <mesh
        geometry={nodes.Cube001.geometry}
        material={wallMaterial}
        position={[-29.901, 6.099, -0.054]}
        rotation={[0, Math.PI / 2, 0]}
        scale={[100.51, 6, 0.235]}
      />
      <mesh
        geometry={nodes.Cube003.geometry}
        material={wallMaterial}
        position={[16.539, 6.099, -100]}
        scale={[13.573, 6, 0.235]}
      />
      <mesh
        geometry={nodes.Cube009.geometry}
        material={wallMaterial}
        position={[10.213, 6.099, -95.317]}
        rotation={[Math.PI, -Math.PI / 2, 0]}
        scale={[-4.334, -6, -0.235]}
      />
      <mesh
        geometry={nodes.Cube010.geometry}
        material={wallMaterial}
        position={[19.977, 6.099, -80]}
        scale={[10, 6, 0.235]}
      />
      <mesh
        geometry={nodes.Cube011.geometry}
        material={wallMaterial}
        position={[19.977, 6.099, -60]}
        scale={[10, 6, 0.235]}
      />
      <mesh
        geometry={nodes.Cube012.geometry}
        material={wallMaterial}
        position={[19.977, 6.099, -40]}
        scale={[10, 6, 0.235]}
      />
      <mesh
        geometry={nodes.Cube013.geometry}
        material={wallMaterial}
        position={[19.977, 6.099, -20]}
        scale={[10, 6, 0.235]}
      />
      <mesh
        geometry={nodes.Cube014.geometry}
        material={wallMaterial}
        position={[19.977, 6.099, 0]}
        scale={[10, 6, 0.235]}
      />
      <mesh
        geometry={nodes.Cube015.geometry}
        material={wallMaterial}
        position={[19.977, 6.099, 20]}
        scale={[10, 6, 0.235]}
      />
      <mesh
        geometry={nodes.Cube016.geometry}
        material={wallMaterial}
        position={[19.977, 6.099, 40]}
        scale={[10, 6, 0.235]}
      />
      <mesh
        geometry={nodes.Cube017.geometry}
        material={wallMaterial}
        position={[19.977, 6.099, 60]}
        scale={[10, 6, 0.235]}
      />
      <mesh
        geometry={nodes.Cube018.geometry}
        material={wallMaterial}
        position={[-20.195, 6.099, -80]}
        scale={[10, 6, 0.235]}
      />
      <mesh
        geometry={nodes.Cube020.geometry}
        material={wallMaterial}
        position={[-20.195, 6.099, 80]}
        scale={[10, 6, 0.235]}
      />
      <mesh
        geometry={nodes.Cube021.geometry}
        material={wallMaterial}
        position={[-20.195, 6.099, 60]}
        scale={[10, 6, 0.235]}
      />
      <mesh
        geometry={nodes.Cube022.geometry}
        material={wallMaterial}
        position={[-20.195, 6.099, 40]}
        scale={[10, 6, 0.235]}
      />
      <mesh
        geometry={nodes.Cube023.geometry}
        material={wallMaterial}
        position={[-20.195, 6.099, 20]}
        scale={[10, 6, 0.235]}
      />
      <mesh
        geometry={nodes.Cube024.geometry}
        material={wallMaterial}
        position={[-20.195, 6.099, 0]}
        scale={[10, 6, 0.235]}
      />
      <mesh
        geometry={nodes.Cube025.geometry}
        material={wallMaterial}
        position={[-20.195, 6.099, -20]}
        scale={[10, 6, 0.235]}
      />
      <mesh
        geometry={nodes.Cube026.geometry}
        material={wallMaterial}
        position={[-20.195, 6.099, -40]}
        scale={[10, 6, 0.235]}
      />
      <mesh
        geometry={nodes.Cube027.geometry}
        material={wallMaterial}
        position={[-20.195, 6.099, -60]}
        scale={[10, 6, 0.235]}
      />
      <mesh
        geometry={nodes.Cube008.geometry}
        material={wallMaterial}
        position={[29.859, 6.099, -0.054]}
        rotation={[0, Math.PI / 2, 0]}
        scale={[100.51, 6, 0.235]}
      />

      {/* Keep the rest of the original meshes with original materials for pillars, floors, etc. */}
      <mesh
        geometry={nodes.Cube029.geometry}
        material={materials["Material.002"]}
        position={[10.213, 6.099, -82.171]}
        rotation={[Math.PI, -Math.PI / 2, 0]}
        scale={[-2.35, -6, -0.235]}
      />
      <mesh
        geometry={nodes.Cube030.geometry}
        material={materials["Material.002"]}
        position={[10.213, 6.099, -73.341]}
        rotation={[Math.PI, -Math.PI / 2, 0]}
        scale={[-6.626, -6, -0.235]}
      />
      <mesh
        geometry={nodes.Cube031.geometry}
        material={materials["Material.002"]}
        position={[10.213, 6.099, -45.107]}
        rotation={[Math.PI, -Math.PI / 2, 0]}
        scale={[-5.243, -6, -0.235]}
      />
      <mesh
        geometry={nodes.Cube032.geometry}
        material={materials["Material.002"]}
        position={[10.213, 6.099, -57.706]}
        rotation={[Math.PI, -Math.PI / 2, 0]}
        scale={[-2.052, -6, -0.235]}
      />
      <mesh
        geometry={nodes.Cube033.geometry}
        material={materials["Material.002"]}
        position={[10.213, 6.099, -35.052]}
        rotation={[Math.PI, -Math.PI / 2, 0]}
        scale={[-5.243, -6, -0.235]}
      />
      <mesh
        geometry={nodes.Cube034.geometry}
        material={materials["Material.002"]}
        position={[10.213, 6.099, -22.542]}
        rotation={[Math.PI, -Math.PI / 2, 0]}
        scale={[-2.61, -6, -0.235]}
      />
      <mesh
        geometry={nodes.Cube035.geometry}
        material={materials["Material.002"]}
        position={[-9.947, 6.099, -15.573]}
        rotation={[Math.PI, -Math.PI / 2, 0]}
        scale={[-4.527, -6, -0.235]}
      />
      <mesh
        geometry={nodes.Cube036.geometry}
        material={materials["Material.002"]}
        position={[10.213, 6.099, -3.34]}
        rotation={[Math.PI, -Math.PI / 2, 0]}
        scale={[-3.121, -6, -0.235]}
      />
      <mesh
        geometry={nodes.Cube037.geometry}
        material={materials.pillars}
        position={[10.63, 6.099, 25.058]}
        rotation={[0, Math.PI / 2, 0]}
        scale={[0.604, 6, 0.665]}
      />
      <mesh
        geometry={nodes.Cube038.geometry}
        material={materials.pillars}
        position={[10.63, 6.099, 35.009]}
        rotation={[0, Math.PI / 2, 0]}
        scale={[0.604, 6, 0.665]}
      />
      <mesh
        geometry={nodes.Cube039.geometry}
        material={materials.pillars}
        position={[10.63, 6.099, 30.115]}
        rotation={[0, Math.PI / 2, 0]}
        scale={[0.604, 6, 0.665]}
      />
      <mesh
        geometry={nodes.Cube041.geometry}
        material={materials.pillars}
        position={[-10.815, 6.099, -4.49]}
        rotation={[0, Math.PI / 2, 0]}
        scale={[0.604, 6, 0.665]}
      />
      <mesh
        geometry={nodes.Cube042.geometry}
        material={materials["Material.002"]}
        position={[10.213, 6.099, 2.964]}
        rotation={[Math.PI, -Math.PI / 2, 0]}
        scale={[-3.121, -6, -0.235]}
      />
      <mesh
        geometry={nodes.Cube043.geometry}
        material={materials.pillars}
        position={[10.63, 6.099, 13.228]}
        rotation={[0, Math.PI / 2, 0]}
        scale={[0.604, 6, 0.665]}
      />
      <mesh
        geometry={nodes.Cube045.geometry}
        material={materials["Material.002"]}
        position={[10.213, 6.099, 63.142]}
        rotation={[Math.PI, -Math.PI / 2, 0]}
        scale={[-3.159, -6, -0.235]}
      />
      <mesh
        geometry={nodes.Cube044.geometry}
        material={materials["Material.002"]}
        position={[10.213, 6.099, 81.847]}
        rotation={[Math.PI, -Math.PI / 2, 0]}
        scale={[-1.757, -6, -0.235]}
      />
      <mesh
        geometry={nodes.Cube046.geometry}
        material={materials["Material.002"]}
        position={[10.213, 6.099, 46.488]}
        rotation={[Math.PI, -Math.PI / 2, 0]}
        scale={[-6.71, -6, -0.235]}
      />
      <mesh
        geometry={nodes.Cube047.geometry}
        material={materials["Material.002"]}
        position={[10.213, 6.099, 94.992]}
        rotation={[Math.PI, -Math.PI / 2, 0]}
        scale={[-5.274, -6, -0.235]}
      />
      <mesh
        geometry={nodes.Cube048.geometry}
        material={materials["Material.002"]}
        position={[10.213, 6.099, 77.005]}
        rotation={[Math.PI, -Math.PI / 2, 0]}
        scale={[-3.159, -6, -0.235]}
      />
      <mesh
        geometry={nodes.Cube049.geometry}
        material={materials.pillars}
        position={[10.63, 6.099, -16.504]}
        rotation={[0, Math.PI / 2, 0]}
        scale={[0.604, 6, 0.665]}
      />
      <mesh
        geometry={nodes.Cube050.geometry}
        material={materials["Material.002"]}
        position={[-10.285, 6.099, 20.679]}
        rotation={[Math.PI, -Math.PI / 2, 0]}
        scale={[-4.527, -6, -0.235]}
      />
      <mesh
        geometry={nodes.Cube051.geometry}
        material={materials["Material.002"]}
        position={[-10.298, 6.099, 4.328]}
        rotation={[Math.PI, -Math.PI / 2, 0]}
        scale={[-4.527, -6, -0.235]}
      />
      <mesh
        geometry={nodes.Cube052.geometry}
        material={materials["Material.002"]}
        position={[-9.947, 6.099, -22.958]}
        rotation={[Math.PI, -Math.PI / 2, 0]}
        scale={[-4.527, -6, -0.235]}
      />
      <mesh
        geometry={nodes.Cube053.geometry}
        material={materials["Material.002"]}
        position={[-9.947, 6.099, -37.705]}
        rotation={[Math.PI, -Math.PI / 2, 0]}
        scale={[-4.527, -6, -0.235]}
      />
      <mesh
        geometry={nodes.Cube054.geometry}
        material={materials.pillars}
        position={[-10.815, 6.099, -50.89]}
        rotation={[0, Math.PI / 2, 0]}
        scale={[0.604, 6, 0.665]}
      />
      <mesh
        geometry={nodes.Cube055.geometry}
        material={materials.pillars}
        position={[-10.815, 6.099, -83.914]}
        rotation={[0, Math.PI / 2, 0]}
        scale={[0.604, 6, 0.665]}
      />
      <mesh
        geometry={nodes.Cube056.geometry}
        material={materials["Material.002"]}
        position={[-9.947, 6.099, -62.992]}
        rotation={[Math.PI, -Math.PI / 2, 0]}
        scale={[-5.248, -6, -0.235]}
      />
      <mesh
        geometry={nodes.Cube057.geometry}
        material={materials["Material.002"]}
        position={[-9.947, 6.099, -77.2]}
        rotation={[Math.PI, -Math.PI / 2, 0]}
        scale={[-2.95, -6, -0.235]}
      />
      <mesh
        geometry={nodes.Cube058.geometry}
        material={materials["Material.002"]}
        position={[-9.947, 6.099, -94.854]}
        rotation={[Math.PI, -Math.PI / 2, 0]}
        scale={[-5.248, -6, -0.235]}
      />
      <mesh
        geometry={nodes.Cube059.geometry}
        material={materials["Material.002"]}
        position={[-10.285, 6.099, 37.565]}
        rotation={[Math.PI, -Math.PI / 2, 0]}
        scale={[-4.527, -6, -0.235]}
      />
      <mesh
        geometry={nodes.Cube060.geometry}
        material={materials.pillars}
        position={[-10.815, 6.099, 55.39]}
        rotation={[0, Math.PI / 2, 0]}
        scale={[0.604, 6, 0.665]}
      />
      <mesh
        geometry={nodes.Cube061.geometry}
        material={materials.pillars}
        position={[-10.815, 6.099, 48.562]}
        rotation={[0, Math.PI / 2, 0]}
        scale={[0.604, 6, 0.665]}
      />
      <mesh
        geometry={nodes.Cube062.geometry}
        material={materials["Material.002"]}
        position={[-10.285, 6.099, 84.655]}
        rotation={[Math.PI, -Math.PI / 2, 0]}
        scale={[-4.527, -6, -0.235]}
      />
      <mesh
        geometry={nodes.Cube063.geometry}
        material={materials["Material.002"]}
        position={[-10.285, 6.099, 76.414]}
        rotation={[Math.PI, -Math.PI / 2, 0]}
        scale={[-3.827, -6, -0.235]}
      />
      <mesh
        geometry={nodes.Cube064.geometry}
        material={materials["Material.002"]}
        position={[-10.285, 6.099, 63.681]}
        rotation={[Math.PI, -Math.PI / 2, 0]}
        scale={[-3.827, -6, -0.235]}
      />
      <mesh
        geometry={nodes.Cube065.geometry}
        material={materials["Material.002"]}
        position={[-10.285, 6.099, 97.116]}
        rotation={[Math.PI, -Math.PI / 2, 0]}
        scale={[-2.997, -6, -0.235]}
      />

      {/* Floor and ceiling planes with textures */}
      <mesh
        geometry={nodes.Plane.geometry}
        material={ceilingMaterial}
        position={[1.445, 12.15, -0.259]}
        scale={[200, 500, 70]}
      />
      <mesh
        geometry={nodes.Plane001.geometry}
        material={floorMaterial}
        position={[-3.284, 0.234, -8.813]}
        scale={[43.453, 122.615, 122.615]}
      />

      {/* Keep original lighting fixtures */}
      <mesh
        geometry={nodes.Cube028.geometry}
        material={nodes.Cube028.material}
        position={[20.624, 12.144, -5.065]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube040.geometry}
        material={nodes.Cube040.material}
        position={[20.624, 12.144, -13.541]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube066.geometry}
        material={nodes.Cube066.material}
        position={[20.624, 12.144, -28.423]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube067.geometry}
        material={nodes.Cube067.material}
        position={[20.624, 12.144, -48.004]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube068.geometry}
        material={nodes.Cube068.material}
        position={[20.624, 12.144, -68.621]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube069.geometry}
        material={nodes.Cube069.material}
        position={[20.624, 12.144, -89.564]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube070.geometry}
        material={nodes.Cube070.material}
        position={[-19.155, 12.144, -89.564]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube071.geometry}
        material={nodes.Cube071.material}
        position={[-19.155, 12.144, -69.903]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube072.geometry}
        material={nodes.Cube072.material}
        position={[-19.155, 12.144, -29.465]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube073.geometry}
        material={nodes.Cube073.material}
        position={[-19.155, 12.144, -6.896]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube074.geometry}
        material={nodes.Cube074.material}
        position={[-19.155, 12.144, -13.661]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube075.geometry}
        material={nodes.Cube075.material}
        position={[-19.155, 12.144, 14.312]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube076.geometry}
        material={nodes.Cube076.material}
        position={[-19.155, 12.144, 5.523]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube077.geometry}
        material={nodes.Cube077.material}
        position={[-19.155, 12.144, 5.523]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube078.geometry}
        material={nodes.Cube078.material}
        position={[-19.155, 12.144, 5.523]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube079.geometry}
        material={nodes.Cube079.material}
        position={[20.063, 12.144, 28.409]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube080.geometry}
        material={nodes.Cube080.material}
        position={[-19.155, 12.144, 49.468]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube081.geometry}
        material={nodes.Cube081.material}
        position={[19.798, 12.144, 49.468]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube082.geometry}
        material={nodes.Cube082.material}
        position={[19.798, 12.144, 69.6]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube083.geometry}
        material={nodes.Cube083.material}
        position={[19.798, 12.144, 69.6]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube084.geometry}
        material={nodes.Cube084.material}
        position={[-19.155, 12.144, 67.845]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube085.geometry}
        material={nodes.Cube085.material}
        position={[-19.155, 12.144, 87.498]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube086.geometry}
        material={nodes.Cube086.material}
        position={[19.798, 12.144, 88.939]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Plane002.geometry}
        material={floorMaterial}
        position={[-3.284, 0.233, -0.259]}
        scale={[43.453, 122.615, 122.615]}
      />
      {/* <mesh
        geometry={nodes.Plane003.geometry}
        material={floorMaterial}
        position={[-3.284, 0.233, -8.813]}
        scale={[43.453, 122.615, 122.615]}
      /> */}

      {/* More lighting fixtures */}
      <mesh
        geometry={nodes.Cube090.geometry}
        material={nodes.Cube090.material}
        position={[-3.001, 12.144, -79.612]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube091.geometry}
        material={nodes.Cube091.material}
        position={[5.141, 12.144, -79.612]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube092.geometry}
        material={nodes.Cube092.material}
        position={[5.141, 12.144, -60.018]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube093.geometry}
        material={nodes.Cube093.material}
        position={[5.141, 12.144, -40.051]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube094.geometry}
        material={nodes.Cube094.material}
        position={[5.141, 12.144, -20.161]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube095.geometry}
        material={nodes.Cube095.material}
        position={[5.141, 12.144, -0.323]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube096.geometry}
        material={nodes.Cube096.material}
        position={[5.141, 12.144, 19.718]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube097.geometry}
        material={nodes.Cube097.material}
        position={[5.141, 12.144, 39.523]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube098.geometry}
        material={nodes.Cube098.material}
        position={[5.141, 12.144, 59.528]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube099.geometry}
        material={nodes.Cube099.material}
        position={[5.141, 12.144, 59.528]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube100.geometry}
        material={nodes.Cube100.material}
        position={[5.141, 12.144, 79.649]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube101.geometry}
        material={nodes.Cube101.material}
        position={[-3.001, 12.144, -79.612]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube102.geometry}
        material={nodes.Cube102.material}
        position={[-3.001, 12.144, -60.244]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube103.geometry}
        material={nodes.Cube103.material}
        position={[-3.001, 12.144, -40.108]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube104.geometry}
        material={nodes.Cube104.material}
        position={[-3.001, 12.144, -20.184]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube105.geometry}
        material={nodes.Cube105.material}
        position={[-3.001, 12.144, -0.274]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube106.geometry}
        material={nodes.Cube106.material}
        position={[-3.001, 12.144, 19.875]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube107.geometry}
        material={nodes.Cube107.material}
        position={[-3.001, 12.144, 39.559]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube108.geometry}
        material={nodes.Cube108.material}
        position={[-3.001, 12.144, 59.737]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube109.geometry}
        material={nodes.Cube109.material}
        position={[-3.001, 12.144, 79.353]}
        scale={[0.754, 0.112, 0.907]}
      />
    </group>
  );
}

useGLTF.preload("/hall3.glb");

```

`/home/suhas/Desktop/pune/blockroomsv2/client/src/models/Gun1.tsx`:

```tsx
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 ./public/gun1.glb 
Author: DJMaesen (https://sketchfab.com/bumstrum)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/animated-pistol-bd896167e7ca44f19597d3afe6a8d83f
Title: animated pistol
Converted to TypeScript
*/

import React from "react";
import { useGraph } from "@react-three/fiber";
import { useGLTF } from "@react-three/drei";
import { SkeletonUtils } from "three-stdlib";
import * as THREE from "three";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    [key: string]: THREE.Mesh | THREE.Bone | THREE.Object3D;
    stopper_beretta_0: THREE.Mesh;
    bullet_2_2_beretta_0: THREE.Mesh;
    shell_beretta_0: THREE.Mesh;
    bullet_beretta_0: THREE.Mesh;
    shell_1_2_beretta_0: THREE.Mesh;
    mag_beretta_0: THREE.Mesh;
    hammer_beretta_0: THREE.Mesh;
    trigger_beretta_0: THREE.Mesh;
    slide_beretta_0: THREE.Mesh;
    base_beretta_0: THREE.Mesh;
    bullet_2_beretta_0: THREE.Mesh;
    shell_1_beretta_0: THREE.Mesh;
    _rootJoint: THREE.Bone;
    Object_83: THREE.SkinnedMesh;
  };
  materials: {
    [key: string]: THREE.Material;
    beretta: THREE.Material;
    arms: THREE.Material;
  };
};

interface ModelProps {
  [key: string]: any;
}

export function Model(props: ModelProps): JSX.Element {
  const group = React.useRef<THREE.Group>(null);
  const { scene }: GLTF = useGLTF("/gun1.glb");
  const clone: THREE.Object3D = React.useMemo(
    () => SkeletonUtils.clone(scene),
    [scene]
  );
  const { nodes, materials }: GLTFResult = useGraph(clone) as GLTFResult;
  //   const { actions } = useAnimations(animations, group);

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Sketchfab_Scene">
        <group name="Sketchfab_model" rotation={[-Math.PI / 2, 0, 0]}>
          <group
            name="105d2810571c4501ba07ac55c5582245fbx"
            rotation={[Math.PI / 2, 0, 0]}
            scale={0.01}
          >
            <group name="Object_2">
              <group name="RootNode">
                <group name="Root" position={[0, 16.327, -8.923]}>
                  <group name="Object_5">
                    <group name="pistol" position={[0, -12.318, 25.913]}>
                      <group name="stopper" position={[1.26, 5.502, 5.615]}>
                        <mesh
                          name="stopper_beretta_0"
                          geometry={nodes.stopper_beretta_0.geometry}
                          material={materials.beretta}
                        />
                      </group>
                      <group
                        name="mag"
                        position={[0, -0.379, 0.406]}
                        rotation={[0.262, 0, 0]}
                      >
                        <group
                          name="shell"
                          position={[0, 7.4, -0.455]}
                          rotation={[-0.262, 0, 0]}
                        >
                          <group name="bullet_2_2" position={[0, 0, 0.935]}>
                            <mesh
                              name="bullet_2_2_beretta_0"
                              geometry={nodes.bullet_2_2_beretta_0.geometry}
                              material={materials.beretta}
                            />
                          </group>
                          <mesh
                            name="shell_beretta_0"
                            geometry={nodes.shell_beretta_0.geometry}
                            material={materials.beretta}
                          />
                        </group>
                        <group
                          name="shell_1_2"
                          position={[0, 6.293, -0.158]}
                          rotation={[-0.262, 0, 0]}
                        >
                          <group name="bullet" position={[0, 0, 0.935]}>
                            <mesh
                              name="bullet_beretta_0"
                              geometry={nodes.bullet_beretta_0.geometry}
                              material={materials.beretta}
                            />
                          </group>
                          <mesh
                            name="shell_1_2_beretta_0"
                            geometry={nodes.shell_1_2_beretta_0.geometry}
                            material={materials.beretta}
                          />
                        </group>
                        <mesh
                          name="mag_beretta_0"
                          geometry={nodes.mag_beretta_0.geometry}
                          material={materials.beretta}
                        />
                      </group>
                      <group
                        name="hammer"
                        position={[0, 5.573, -1.608]}
                        rotation={[-1.242, 0, 0]}
                      >
                        <mesh
                          name="hammer_beretta_0"
                          geometry={nodes.hammer_beretta_0.geometry}
                          material={materials.beretta}
                        />
                      </group>
                      <group name="trigger" position={[0, 4.404, 6.033]}>
                        <mesh
                          name="trigger_beretta_0"
                          geometry={nodes.trigger_beretta_0.geometry}
                          material={materials.beretta}
                        />
                      </group>
                      <group name="slide" position={[0, 7.341, 3.872]}>
                        <mesh
                          name="slide_beretta_0"
                          geometry={nodes.slide_beretta_0.geometry}
                          material={materials.beretta}
                        />
                      </group>
                      <group name="base">
                        <mesh
                          name="base_beretta_0"
                          geometry={nodes.base_beretta_0.geometry}
                          material={materials.beretta}
                        />
                      </group>
                      <group name="shell_1" position={[0, 7.849, 6.937]}>
                        <group name="bullet_2" position={[0, 0, 0.935]}>
                          <mesh
                            name="bullet_2_beretta_0"
                            geometry={nodes.bullet_2_beretta_0.geometry}
                            material={materials.beretta}
                          />
                        </group>
                        <mesh
                          name="shell_1_beretta_0"
                          geometry={nodes.shell_1_beretta_0.geometry}
                          material={materials.beretta}
                        />
                      </group>
                    </group>
                    <primitive object={nodes._rootJoint} />
                    <group name="Object_82" position={[0, 3.036, -1.334]} />
                    <skinnedMesh
                      name="Object_83"
                      geometry={nodes.Object_83.geometry}
                      material={materials.arms}
                      skeleton={nodes.Object_83.skeleton}
                    />
                  </group>
                </group>
                <group
                  name="armsmesh"
                  position={[0, 3.036, -1.334]}
                  rotation={[-0.002, 0, -0.011]}
                />
              </group>
            </group>
          </group>
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("/gun1.glb");

```

`/home/suhas/Desktop/pune/blockroomsv2/client/src/vite-env.d.ts`:

```ts
/// <reference types="vite/client" />

```

`/home/suhas/Desktop/pune/blockroomsv2/client/src/utils/utils.ts`:

```ts
import { type ClassValue, clsx } from "clsx"
import { twMerge } from "tailwind-merge"

export function cn(...inputs: ClassValue[]) {
  return twMerge(clsx(inputs))
}

```

`/home/suhas/Desktop/pune/blockroomsv2/client/src/dojo/models/index.ts`:

```ts
// 3D Models
export { Model as HallModel } from "./Poc2";
export { Model as GunModel } from "./Gun1";
```

`/home/suhas/Desktop/pune/blockroomsv2/client/src/dojo/models/Poc2.tsx`:

```tsx
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 poc2.glb --draw --types 
*/

import * as THREE from 'three'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    DoorFrame: THREE.Mesh
    Door: THREE.Mesh
    Handle_Back: THREE.Mesh
    Handle_Front: THREE.Mesh
    DoorFrame001: THREE.Mesh
    Door001: THREE.Mesh
    Handle_Back001: THREE.Mesh
    Handle_Front001: THREE.Mesh
    wall_pillar_thing_Material001_0001: THREE.Mesh
    wall_pillar_thing_Material001_0002: THREE.Mesh
    wall_pillar_thing_Material001_0003: THREE.Mesh
    wall_pillar_thing_Material001_0004: THREE.Mesh
    wall_pillar_thing_Material001_0005: THREE.Mesh
    wall_pillar_thing_Material001_0006: THREE.Mesh
    wall_pillar_thing_Material001_0007: THREE.Mesh
    wall_pillar_Material001_0001: THREE.Mesh
    wall_pillar_Material001_0002: THREE.Mesh
    wall_pillar_Material001_0003: THREE.Mesh
    wall_pillar_Material001_0004: THREE.Mesh
    wall_pillar_Material001_0005: THREE.Mesh
    wall_pillar_Material001_0006: THREE.Mesh
    wall_pillar_Material001_0007: THREE.Mesh
    wall_3_Material001_0001: THREE.Mesh
    wall_3_Material001_0002: THREE.Mesh
    wall_3_Material001_0003: THREE.Mesh
    wall_pillar_Material001_0008: THREE.Mesh
    wall_pillar_Material001_0009: THREE.Mesh
    wall_pillar_Material001_0010: THREE.Mesh
    wall_pillar_Material001_0011: THREE.Mesh
    wall_pillar_Material001_0012: THREE.Mesh
    wall_pillar_Material001_0013: THREE.Mesh
    wall_pillar_Material001_0014: THREE.Mesh
    wall_pillar_Material001_0015: THREE.Mesh
    wall_pillar_Material001_0016: THREE.Mesh
    wall_pillar_Material001_0017: THREE.Mesh
    wall_pillar_Material001_0018: THREE.Mesh
    wall_pillar_Material001_0019: THREE.Mesh
    wall_pillar_Material001_0020: THREE.Mesh
    wall_pillar_Material001_0021: THREE.Mesh
    wall_pillar_Material001_0022: THREE.Mesh
    wall_pillar_Material001_0023: THREE.Mesh
    wall_pillar_thing_Material001_0008: THREE.Mesh
    wall_pillar_thing_Material001_0009: THREE.Mesh
    wall_pillar_thing_Material001_0010: THREE.Mesh
    wall_pillar_thing_Material001_0011: THREE.Mesh
    wall_3_Material001_0004: THREE.Mesh
    wall_3_Material001_0005: THREE.Mesh
    wall_pillar_thing_Material001_0012: THREE.Mesh
    wall_pillar_thing_Material001_0013: THREE.Mesh
    wall_pillar_thing_Material001_0014: THREE.Mesh
    wall_pillar_thing_Material001_0015: THREE.Mesh
    wall_pillar_thing_Material001_0016: THREE.Mesh
    wall_pillar_thing_Material001_0017: THREE.Mesh
    wall_pillar_thing_Material001_0018: THREE.Mesh
    wall_pillar_thing_Material001_0019: THREE.Mesh
    wall_pillar_thing_Material001_0020: THREE.Mesh
    wall_pillar_thing_Material001_0021: THREE.Mesh
    wall_pillar_thing_Material001_0023: THREE.Mesh
    wall_pillar_Material001_0024: THREE.Mesh
    wall_pillar_Material001_0025: THREE.Mesh
    wall_pillar_Material001_0026: THREE.Mesh
    wall_pillar_Material001_0027: THREE.Mesh
    wall_pillar_Material001_0028: THREE.Mesh
    wall_pillar_Material001_0029: THREE.Mesh
    wall_pillar_Material001_0030: THREE.Mesh
    wall_pillar_thing_Material001_0022: THREE.Mesh
    wall_pillar_Material001_0031: THREE.Mesh
    wall_pillar_Material001_0032: THREE.Mesh
    wall_pillar_Material001_0033: THREE.Mesh
    wall_pillar_Material001_0034: THREE.Mesh
    wall_pillar_Material001_0035: THREE.Mesh
    wall_pillar_Material001_0036: THREE.Mesh
    wall_pillar_thing_Material001_0024: THREE.Mesh
    wall_pillar_thing_Material001_0025: THREE.Mesh
    wall_pillar_thing_Material001_0026: THREE.Mesh
    Plane: THREE.Mesh
    Cube: THREE.Mesh
    Cube001: THREE.Mesh
    Cube003: THREE.Mesh
    Cube004: THREE.Mesh
    Cube005: THREE.Mesh
    Cube006: THREE.Mesh
    Cube007: THREE.Mesh
    Cube008: THREE.Mesh
    Column: THREE.Mesh
    Column_box_bottom: THREE.Mesh
    Column_box_top: THREE.Mesh
    Cube009: THREE.Mesh
    Cube010: THREE.Mesh
    Cube011: THREE.Mesh
    Cube012: THREE.Mesh
    Cube013: THREE.Mesh
    Cube014: THREE.Mesh
    Cube015: THREE.Mesh
    Cube016: THREE.Mesh
    Cube017: THREE.Mesh
    Cube018: THREE.Mesh
    Cube019: THREE.Mesh
    Cube020: THREE.Mesh
    Cube021: THREE.Mesh
    Cube022: THREE.Mesh
    Cube023: THREE.Mesh
    Cube024: THREE.Mesh
    Cube025: THREE.Mesh
    Cube026: THREE.Mesh
    Cube027: THREE.Mesh
    Cube028: THREE.Mesh
    Cube029: THREE.Mesh
    Cube030: THREE.Mesh
    Cube031: THREE.Mesh
    Cube032: THREE.Mesh
    Cube033: THREE.Mesh
    Cube034: THREE.Mesh
    Cube035: THREE.Mesh
    Cube036: THREE.Mesh
    Cube037: THREE.Mesh
    Cube038: THREE.Mesh
    Cube039: THREE.Mesh
    Cube040: THREE.Mesh
    Cube041: THREE.Mesh
    Cube042: THREE.Mesh
    Cube043: THREE.Mesh
    Cube044: THREE.Mesh
    Cube045: THREE.Mesh
    Cube046: THREE.Mesh
    Cube047: THREE.Mesh
    Cube048: THREE.Mesh
    Cube049: THREE.Mesh
    Cube050: THREE.Mesh
    Cube051: THREE.Mesh
    Cube052: THREE.Mesh
    Cube053: THREE.Mesh
    Cube054: THREE.Mesh
    Cube055: THREE.Mesh
    Cube056: THREE.Mesh
    Cube057: THREE.Mesh
    Cube058: THREE.Mesh
    Cube059: THREE.Mesh
    Cube060: THREE.Mesh
    Column001: THREE.Mesh
    Column_box_bottom001: THREE.Mesh
    Column_box_top001: THREE.Mesh
    Cube061: THREE.Mesh
    Cube062: THREE.Mesh
    Cube063: THREE.Mesh
    Cube064: THREE.Mesh
    Cube065: THREE.Mesh
    Cube067: THREE.Mesh
    Cube068: THREE.Mesh
    Cube070: THREE.Mesh
    Cube071: THREE.Mesh
    Cube072: THREE.Mesh
    Cube073: THREE.Mesh
    Cube074: THREE.Mesh
    Cube075: THREE.Mesh
    Cube076: THREE.Mesh
    Cube077: THREE.Mesh
    Cube078: THREE.Mesh
    Plane001: THREE.Mesh
    Cube069: THREE.Mesh
    Cube079: THREE.Mesh
    Cube080: THREE.Mesh
    Cube081: THREE.Mesh
    Cube082: THREE.Mesh
    Cube066: THREE.Mesh
    Cube083: THREE.Mesh
    Cube084: THREE.Mesh
    Cube085: THREE.Mesh
    Cube086: THREE.Mesh
    Cube087: THREE.Mesh
    Cube088: THREE.Mesh
    Cube089: THREE.Mesh
    Cube090: THREE.Mesh
    Cube091: THREE.Mesh
    Cube092: THREE.Mesh
    Cube093: THREE.Mesh
    Cube094: THREE.Mesh
    Cube095: THREE.Mesh
    Cube096: THREE.Mesh
    Cube097: THREE.Mesh
    Cube098: THREE.Mesh
    Cube099: THREE.Mesh
    Cube100: THREE.Mesh
    Cube101: THREE.Mesh
    Cube102: THREE.Mesh
    Cube103: THREE.Mesh
    Cube104: THREE.Mesh
    Cube105: THREE.Mesh
    Cube106: THREE.Mesh
    Cube107: THREE.Mesh
    Cube108: THREE.Mesh
    Cube109: THREE.Mesh
    Plane002: THREE.Mesh
    Cube110: THREE.Mesh
    Cube111: THREE.Mesh
    Cube112: THREE.Mesh
    Cube113: THREE.Mesh
    Baseboard: THREE.Mesh
    Baseboard001: THREE.Mesh
    Cube002: THREE.Mesh
    Cube114: THREE.Mesh
    Cube115: THREE.Mesh
    Cube116: THREE.Mesh
    Cube117: THREE.Mesh
    Cube118: THREE.Mesh
    Cube119: THREE.Mesh
    Cube120: THREE.Mesh
    Cube121: THREE.Mesh
    Cube122: THREE.Mesh
    Cube123: THREE.Mesh
    Cube124: THREE.Mesh
    Cube126: THREE.Mesh
    Cube127: THREE.Mesh
    Cube128: THREE.Mesh
    Cube129: THREE.Mesh
    Cube130: THREE.Mesh
    Cube131: THREE.Mesh
    Cube132: THREE.Mesh
    Cube133: THREE.Mesh
    Cube134: THREE.Mesh
    Cube125: THREE.Mesh
    Cube135: THREE.Mesh
    Cube136: THREE.Mesh
    Cube137: THREE.Mesh
    Cube138: THREE.Mesh
    Cube139: THREE.Mesh
    Cube140: THREE.Mesh
    Cube141: THREE.Mesh
    Cube142: THREE.Mesh
    Cube143: THREE.Mesh
    Cube144: THREE.Mesh
    Cube145: THREE.Mesh
    Cube146: THREE.Mesh
    Cube147: THREE.Mesh
    Cube148: THREE.Mesh
    Cube149: THREE.Mesh
    Cube150: THREE.Mesh
    Cube151: THREE.Mesh
    Cube152: THREE.Mesh
    Cube153: THREE.Mesh
    Cube154: THREE.Mesh
    Cube155: THREE.Mesh
    Cube156: THREE.Mesh
    Cube157: THREE.Mesh
    Cube158: THREE.Mesh
    Cube159: THREE.Mesh
    Cube160: THREE.Mesh
    Cube161: THREE.Mesh
    Cube162: THREE.Mesh
    Cube164: THREE.Mesh
    Cube163: THREE.Mesh
    Cube165: THREE.Mesh
    Cube166: THREE.Mesh
    Cube167: THREE.Mesh
    Cube168: THREE.Mesh
    Cube169: THREE.Mesh
    Cube170: THREE.Mesh
    Cube171: THREE.Mesh
    Cube172: THREE.Mesh
    Cube173: THREE.Mesh
    Cube174: THREE.Mesh
    Cube175: THREE.Mesh
    Cube176: THREE.Mesh
    Cube177: THREE.Mesh
    Cube178: THREE.Mesh
    Cube179: THREE.Mesh
    Cube180: THREE.Mesh
    Cube181: THREE.Mesh
    Cube182: THREE.Mesh
    Cube183: THREE.Mesh
    Cube184: THREE.Mesh
    Cube185: THREE.Mesh
    Cube186: THREE.Mesh
    Cube187: THREE.Mesh
    Cube188: THREE.Mesh
    Cube189: THREE.Mesh
    Cube190: THREE.Mesh
    Cube191: THREE.Mesh
    Cube192: THREE.Mesh
    Cube193: THREE.Mesh
    Cube194: THREE.Mesh
    Cube195: THREE.Mesh
    Cube196: THREE.Mesh
    Cube197: THREE.Mesh
    Cube198: THREE.Mesh
    Cube199: THREE.Mesh
    Cube200: THREE.Mesh
    Cube201: THREE.Mesh
    Cube202: THREE.Mesh
    Cube203: THREE.Mesh
    Cube204: THREE.Mesh
    Cube205: THREE.Mesh
    Cube206: THREE.Mesh
    Cube207: THREE.Mesh
    Cube208: THREE.Mesh
    Cube209: THREE.Mesh
    Cube210: THREE.Mesh
    Cube211: THREE.Mesh
    Cube212: THREE.Mesh
    Cube213: THREE.Mesh
    Cube214: THREE.Mesh
    Cube215: THREE.Mesh
    Cube216: THREE.Mesh
    Cube217: THREE.Mesh
    Cube218: THREE.Mesh
    Cube219: THREE.Mesh
    Cube220: THREE.Mesh
    Cube221: THREE.Mesh
    Cube222: THREE.Mesh
    Cube223: THREE.Mesh
    Cube224: THREE.Mesh
    Cube225: THREE.Mesh
    Cube226: THREE.Mesh
    Cube227: THREE.Mesh
    Cube228: THREE.Mesh
    Cube229: THREE.Mesh
    Cube230: THREE.Mesh
    Cube231: THREE.Mesh
    Cube232: THREE.Mesh
    Cube233: THREE.Mesh
    Cube234: THREE.Mesh
    Cube235: THREE.Mesh
    Cube236: THREE.Mesh
    Cube237: THREE.Mesh
    Cube238: THREE.Mesh
    Cube239: THREE.Mesh
    Cube240: THREE.Mesh
    Cube241: THREE.Mesh
    Cube242: THREE.Mesh
    Cube243: THREE.Mesh
    Cube244: THREE.Mesh
    Cube245: THREE.Mesh
    Cube246: THREE.Mesh
    Cube247: THREE.Mesh
    Cube248: THREE.Mesh
    Cube249: THREE.Mesh
    Cube250: THREE.Mesh
    Cube251: THREE.Mesh
    Cube252: THREE.Mesh
    Cube253: THREE.Mesh
    Cube254: THREE.Mesh
    Cube255: THREE.Mesh
    Cube256: THREE.Mesh
    Cube257: THREE.Mesh
    Cube258: THREE.Mesh
    Cube259: THREE.Mesh
    Cube260: THREE.Mesh
    Cube261: THREE.Mesh
    Cube262: THREE.Mesh
    Cube263: THREE.Mesh
    Cube264: THREE.Mesh
    Cube265: THREE.Mesh
    Cube266: THREE.Mesh
    Cube267: THREE.Mesh
    Cube268: THREE.Mesh
    Cube269: THREE.Mesh
    Cube270: THREE.Mesh
    Cube271: THREE.Mesh
    Cube272: THREE.Mesh
    Cube273: THREE.Mesh
    Cube274: THREE.Mesh
    Cube275: THREE.Mesh
    Column002: THREE.Mesh
    Column_box_top002: THREE.Mesh
    Column003: THREE.Mesh
    Column_box_top003: THREE.Mesh
    Column004: THREE.Mesh
    Column_box_top004: THREE.Mesh
    Column005: THREE.Mesh
    Column_box_top005: THREE.Mesh
    Column006: THREE.Mesh
    Column_box_top006: THREE.Mesh
    Column007: THREE.Mesh
    Column_box_top007: THREE.Mesh
    Column008: THREE.Mesh
    Column_box_top008: THREE.Mesh
    Column009: THREE.Mesh
    Column_box_top009: THREE.Mesh
    Column010: THREE.Mesh
    Column_box_top010: THREE.Mesh
    Column011: THREE.Mesh
    Column_box_top011: THREE.Mesh
    Column012: THREE.Mesh
    Column_box_top012: THREE.Mesh
    Column013: THREE.Mesh
    Column_box_top013: THREE.Mesh
    Column014: THREE.Mesh
    Column_box_top014: THREE.Mesh
    Column015: THREE.Mesh
    Column_box_top015: THREE.Mesh
    Column016: THREE.Mesh
    Column_box_top016: THREE.Mesh
    Column017: THREE.Mesh
    Column_box_top017: THREE.Mesh
    Column018: THREE.Mesh
    Column_box_top018: THREE.Mesh
    Column019: THREE.Mesh
    Column_box_top019: THREE.Mesh
    Column020: THREE.Mesh
    Column_box_top020: THREE.Mesh
    Column021: THREE.Mesh
    Column_box_top021: THREE.Mesh
    Column022: THREE.Mesh
    Column_box_top022: THREE.Mesh
    Column023: THREE.Mesh
    Column_box_top023: THREE.Mesh
    Column024: THREE.Mesh
    Column_box_top024: THREE.Mesh
    Column025: THREE.Mesh
    Column_box_top025: THREE.Mesh
    Column026: THREE.Mesh
    Column_box_top026: THREE.Mesh
    Column027: THREE.Mesh
    Column_box_top027: THREE.Mesh
    Column028: THREE.Mesh
    Column029: THREE.Mesh
    Column_box_top028: THREE.Mesh
    Column030: THREE.Mesh
    Column_box_top029: THREE.Mesh
    Column031: THREE.Mesh
    Column_box_top030: THREE.Mesh
    Column032: THREE.Mesh
    Column_box_top031: THREE.Mesh
    Column033: THREE.Mesh
    Column_box_top032: THREE.Mesh
    Column034: THREE.Mesh
    Column_box_top033: THREE.Mesh
    Column035: THREE.Mesh
    Column_box_top034: THREE.Mesh
    Column036: THREE.Mesh
    Column_box_top035: THREE.Mesh
    Column037: THREE.Mesh
    Column_box_top036: THREE.Mesh
    Column038: THREE.Mesh
    Column_box_top037: THREE.Mesh
    Column039: THREE.Mesh
    Column_box_top038: THREE.Mesh
    Column040: THREE.Mesh
    Column_box_top039: THREE.Mesh
    Column041: THREE.Mesh
    Column_box_top040: THREE.Mesh
    Column042: THREE.Mesh
    Column_box_top041: THREE.Mesh
    Column043: THREE.Mesh
    Column044: THREE.Mesh
    Column_box_top042: THREE.Mesh
    Column045: THREE.Mesh
    Column_box_top043: THREE.Mesh
    Column046: THREE.Mesh
    Column_box_top044: THREE.Mesh
    Column047: THREE.Mesh
    Column_box_top045: THREE.Mesh
    Column048: THREE.Mesh
    Column049: THREE.Mesh
    Column_box_top046: THREE.Mesh
    Column050: THREE.Mesh
    Column_box_top047: THREE.Mesh
    Column051: THREE.Mesh
    Column_box_top048: THREE.Mesh
    Column052: THREE.Mesh
    Column_box_top049: THREE.Mesh
    Column053: THREE.Mesh
    Column_box_top050: THREE.Mesh
    Column054: THREE.Mesh
    Column_box_top051: THREE.Mesh
    Column055: THREE.Mesh
    Column_box_top052: THREE.Mesh
    Column056: THREE.Mesh
    Column_box_top053: THREE.Mesh
    Column057: THREE.Mesh
    Column_box_top054: THREE.Mesh
    Column058: THREE.Mesh
    Column_box_top055: THREE.Mesh
    Column059: THREE.Mesh
    Column_box_top056: THREE.Mesh
    Column060: THREE.Mesh
    Column_box_top057: THREE.Mesh
    Column061: THREE.Mesh
    Column_box_top058: THREE.Mesh
    Column062: THREE.Mesh
    Column_box_top059: THREE.Mesh
    Column063: THREE.Mesh
    Column064: THREE.Mesh
    Column_box_top060: THREE.Mesh
    Column065: THREE.Mesh
    Column_box_top061: THREE.Mesh
    Column066: THREE.Mesh
    Column_box_top062: THREE.Mesh
    Column067: THREE.Mesh
    Column_box_top063: THREE.Mesh
    Column068: THREE.Mesh
    Column_box_top064: THREE.Mesh
    Column069: THREE.Mesh
    Column_box_top065: THREE.Mesh
    Column070: THREE.Mesh
    Column_box_top066: THREE.Mesh
    Column071: THREE.Mesh
    Column_box_top067: THREE.Mesh
    Column072: THREE.Mesh
    Column_box_top068: THREE.Mesh
    Column073: THREE.Mesh
    Column074: THREE.Mesh
    Column_box_top069: THREE.Mesh
    Column075: THREE.Mesh
    Column_box_top070: THREE.Mesh
    Column076: THREE.Mesh
    Column_box_top071: THREE.Mesh
    Column077: THREE.Mesh
    Column_box_top072: THREE.Mesh
    Column078: THREE.Mesh
    Column079: THREE.Mesh
    Column_box_top073: THREE.Mesh
    Column080: THREE.Mesh
    Column_box_top074: THREE.Mesh
    Column081: THREE.Mesh
    Column_box_top075: THREE.Mesh
    Column082: THREE.Mesh
    Column_box_top076: THREE.Mesh
    Column083: THREE.Mesh
    Column_box_top077: THREE.Mesh
    Column084: THREE.Mesh
    Column_box_top078: THREE.Mesh
    Column085: THREE.Mesh
    Column_box_top079: THREE.Mesh
    Cube276: THREE.Mesh
    Cube277: THREE.Mesh
    Cube278: THREE.Mesh
    Cube279: THREE.Mesh
    Cube280: THREE.Mesh
    Cube281: THREE.Mesh
    Cube282: THREE.Mesh
    Cube283: THREE.Mesh
    Cube284: THREE.Mesh
    Cube285: THREE.Mesh
    Cube286: THREE.Mesh
    Cube287: THREE.Mesh
    Column086: THREE.Mesh
    Column087: THREE.Mesh
    Column088: THREE.Mesh
    Column089: THREE.Mesh
    Column090: THREE.Mesh
    Column091: THREE.Mesh
    Column092: THREE.Mesh
    Column093: THREE.Mesh
    Column094: THREE.Mesh
    Cube288: THREE.Mesh
    Cube289: THREE.Mesh
    Cube290: THREE.Mesh
    Cube291: THREE.Mesh
    Cube292: THREE.Mesh
    Cube293: THREE.Mesh
    Cube294: THREE.Mesh
    Cube295: THREE.Mesh
    Cube296: THREE.Mesh
    Cube297: THREE.Mesh
    Cube298: THREE.Mesh
    Cube299: THREE.Mesh
    Cube300: THREE.Mesh
    Cube301: THREE.Mesh
    Cube302: THREE.Mesh
    Cube303: THREE.Mesh
    Cube304: THREE.Mesh
    Cube305: THREE.Mesh
    Cube306: THREE.Mesh
    Cube307: THREE.Mesh
    Cube308: THREE.Mesh
    Cube309: THREE.Mesh
    Cube310: THREE.Mesh
    Cube311: THREE.Mesh
    Cube312: THREE.Mesh
    Cube314: THREE.Mesh
    Cube315: THREE.Mesh
    Column095: THREE.Mesh
    Column096: THREE.Mesh
    Column097: THREE.Mesh
    Column098: THREE.Mesh
    Column099: THREE.Mesh
    Column100: THREE.Mesh
    Column101: THREE.Mesh
    Cube313: THREE.Mesh
    Column102: THREE.Mesh
    Cube316: THREE.Mesh
    Cube317: THREE.Mesh
    Cube318: THREE.Mesh
    Cube319: THREE.Mesh
    Cube320: THREE.Mesh
    Column103: THREE.Mesh
    Column104: THREE.Mesh
    Cube321: THREE.Mesh
    Cube322: THREE.Mesh
    Cube323: THREE.Mesh
    Cube324: THREE.Mesh
    Cube325: THREE.Mesh
  }
  materials: {
    Door_material: THREE.MeshStandardMaterial
    Handle_material: THREE.MeshStandardMaterial
    ['Material.020']: THREE.MeshStandardMaterial
    ['Material.021']: THREE.MeshStandardMaterial
    ['Material.022']: THREE.MeshStandardMaterial
    ['Material.023']: THREE.MeshStandardMaterial
    ['Material.024']: THREE.MeshStandardMaterial
    ['Material.025']: THREE.MeshStandardMaterial
    ['Material.026']: THREE.MeshStandardMaterial
    ['Material.029']: THREE.MeshStandardMaterial
    ['Material.030']: THREE.MeshStandardMaterial
    ['Material.031']: THREE.MeshStandardMaterial
    ['Material.032']: THREE.MeshStandardMaterial
    ['Material.033']: THREE.MeshStandardMaterial
    ['Material.034']: THREE.MeshStandardMaterial
    ['Material.035']: THREE.MeshStandardMaterial
    ['Material.044']: THREE.MeshStandardMaterial
    ['Material.045']: THREE.MeshStandardMaterial
    ['Material.046']: THREE.MeshStandardMaterial
    ['Material.049']: THREE.MeshStandardMaterial
    ['Material.050']: THREE.MeshStandardMaterial
    ['Material.051']: THREE.MeshStandardMaterial
    ['Material.052']: THREE.MeshStandardMaterial
    ['Material.053']: THREE.MeshStandardMaterial
    ['Material.054']: THREE.MeshStandardMaterial
    ['Material.055']: THREE.MeshStandardMaterial
    ['Material.056']: THREE.MeshStandardMaterial
    ['Material.057']: THREE.MeshStandardMaterial
    ['Material.058']: THREE.MeshStandardMaterial
    ['Material.059']: THREE.MeshStandardMaterial
    ['Material.060']: THREE.MeshStandardMaterial
    ['Material.061']: THREE.MeshStandardMaterial
    ['Material.062']: THREE.MeshStandardMaterial
    ['Material.063']: THREE.MeshStandardMaterial
    ['Material.071']: THREE.MeshStandardMaterial
    ['Material.082']: THREE.MeshStandardMaterial
    ['Material.083']: THREE.MeshStandardMaterial
    ['Material.084']: THREE.MeshStandardMaterial
    ['Material.085']: THREE.MeshStandardMaterial
    ['Material.086']: THREE.MeshStandardMaterial
    ['Material.090']: THREE.MeshStandardMaterial
    ['Material.134']: THREE.MeshStandardMaterial
    ['Material.135']: THREE.MeshStandardMaterial
    ['Material.136']: THREE.MeshStandardMaterial
    ['Material.137']: THREE.MeshStandardMaterial
    ['Material.138']: THREE.MeshStandardMaterial
    ['Material.139']: THREE.MeshStandardMaterial
    ['Material.140']: THREE.MeshStandardMaterial
    ['Material.141']: THREE.MeshStandardMaterial
    ['Material.142']: THREE.MeshStandardMaterial
    ['Material.143']: THREE.MeshStandardMaterial
    ['Material.145']: THREE.MeshStandardMaterial
    ['Material.149']: THREE.MeshStandardMaterial
    ['Material.150']: THREE.MeshStandardMaterial
    ['Material.151']: THREE.MeshStandardMaterial
    ['Material.152']: THREE.MeshStandardMaterial
    ['Material.153']: THREE.MeshStandardMaterial
    ['Material.154']: THREE.MeshStandardMaterial
    ['Material.155']: THREE.MeshStandardMaterial
    ['Material.156']: THREE.MeshStandardMaterial
    ['Material.157']: THREE.MeshStandardMaterial
    ['Material.158']: THREE.MeshStandardMaterial
    ['Material.159']: THREE.MeshStandardMaterial
    ['Material.160']: THREE.MeshStandardMaterial
    ['Material.165']: THREE.MeshStandardMaterial
    ['Material.166']: THREE.MeshStandardMaterial
    ['Material.168']: THREE.MeshStandardMaterial
    ['Material.169']: THREE.MeshStandardMaterial
    ['Material.170']: THREE.MeshStandardMaterial
    Column_material: THREE.MeshStandardMaterial
    Column_rect: THREE.MeshStandardMaterial
    ['Material.001']: THREE.MeshStandardMaterial
    ['Column_material.001']: THREE.MeshStandardMaterial
    ['Column_rect.001']: THREE.MeshStandardMaterial
    ['Material.002']: THREE.MeshStandardMaterial
    ['Material.003']: THREE.MeshStandardMaterial
    ['Material.004']: THREE.MeshStandardMaterial
    ['Material.005']: THREE.MeshStandardMaterial
    Baseboard_material: THREE.MeshStandardMaterial
    ['Material.008']: THREE.MeshStandardMaterial
    ['Material.007']: THREE.MeshStandardMaterial
    ['Material.009']: THREE.MeshStandardMaterial
    ['Material.010']: THREE.MeshStandardMaterial
    ['Material.011']: THREE.MeshStandardMaterial
    ['Material.012']: THREE.MeshStandardMaterial
    ['Material.013']: THREE.MeshStandardMaterial
    ['Material.014']: THREE.MeshStandardMaterial
    ['Material.015']: THREE.MeshStandardMaterial
    ['Material.016']: THREE.MeshStandardMaterial
    ['Material.017']: THREE.MeshStandardMaterial
    ['Material.018']: THREE.MeshStandardMaterial
    ['Material.027']: THREE.MeshStandardMaterial
    ['Material.028']: THREE.MeshStandardMaterial
    ['Material.036']: THREE.MeshStandardMaterial
    ['Material.037']: THREE.MeshStandardMaterial
    ['Material.038']: THREE.MeshStandardMaterial
    ['Material.039']: THREE.MeshStandardMaterial
    ['Material.040']: THREE.MeshStandardMaterial
    ['Material.041']: THREE.MeshStandardMaterial
    ['Material.042']: THREE.MeshStandardMaterial
    ['Material.043']: THREE.MeshStandardMaterial
    ['Material.047']: THREE.MeshStandardMaterial
    ['Material.065']: THREE.MeshStandardMaterial
    ['Material.066']: THREE.MeshStandardMaterial
    ['Material.068']: THREE.MeshStandardMaterial
    ['Material.069']: THREE.MeshStandardMaterial
    ['Material.070']: THREE.MeshStandardMaterial
    ['Material.072']: THREE.MeshStandardMaterial
    ['Material.073']: THREE.MeshStandardMaterial
    ['Material.074']: THREE.MeshStandardMaterial
    ['Material.075']: THREE.MeshStandardMaterial
    ['Material.076']: THREE.MeshStandardMaterial
    ['Material.077']: THREE.MeshStandardMaterial
    ['Material.078']: THREE.MeshStandardMaterial
    ['Material.079']: THREE.MeshStandardMaterial
    ['Material.080']: THREE.MeshStandardMaterial
    ['Material.081']: THREE.MeshStandardMaterial
    ['Material.087']: THREE.MeshStandardMaterial
    ['Material.088']: THREE.MeshStandardMaterial
    ['Material.089']: THREE.MeshStandardMaterial
    ['Material.091']: THREE.MeshStandardMaterial
    ['Material.092']: THREE.MeshStandardMaterial
    ['Material.093']: THREE.MeshStandardMaterial
    ['Material.094']: THREE.MeshStandardMaterial
    ['Material.095']: THREE.MeshStandardMaterial
    ['Material.096']: THREE.MeshStandardMaterial
    ['Material.098']: THREE.MeshStandardMaterial
    ['Material.099']: THREE.MeshStandardMaterial
    ['Material.100']: THREE.MeshStandardMaterial
    ['Material.101']: THREE.MeshStandardMaterial
    ['Material.102']: THREE.MeshStandardMaterial
    ['Material.103']: THREE.MeshStandardMaterial
    ['Material.104']: THREE.MeshStandardMaterial
    ['Material.105']: THREE.MeshStandardMaterial
    ['Material.106']: THREE.MeshStandardMaterial
    ['Material.107']: THREE.MeshStandardMaterial
    ['Material.108']: THREE.MeshStandardMaterial
    ['Material.109']: THREE.MeshStandardMaterial
    ['Material.110']: THREE.MeshStandardMaterial
    ['Material.111']: THREE.MeshStandardMaterial
    ['Material.112']: THREE.MeshStandardMaterial
    ['Material.113']: THREE.MeshStandardMaterial
    ['Material.114']: THREE.MeshStandardMaterial
    ['Material.115']: THREE.MeshStandardMaterial
    ['Material.116']: THREE.MeshStandardMaterial
    ['Material.117']: THREE.MeshStandardMaterial
    ['Material.118']: THREE.MeshStandardMaterial
    ['Material.119']: THREE.MeshStandardMaterial
    ['Material.120']: THREE.MeshStandardMaterial
    ['Material.121']: THREE.MeshStandardMaterial
    ['Material.122']: THREE.MeshStandardMaterial
    ['Material.123']: THREE.MeshStandardMaterial
    ['Material.124']: THREE.MeshStandardMaterial
    ['Material.125']: THREE.MeshStandardMaterial
    ['Material.126']: THREE.MeshStandardMaterial
    ['Material.127']: THREE.MeshStandardMaterial
    ['Material.128']: THREE.MeshStandardMaterial
    ['Material.129']: THREE.MeshStandardMaterial
    ['Material.130']: THREE.MeshStandardMaterial
    ['Material.131']: THREE.MeshStandardMaterial
    ['Material.132']: THREE.MeshStandardMaterial
    ['Material.133']: THREE.MeshStandardMaterial
    ['Material.146']: THREE.MeshStandardMaterial
    ['Material.147']: THREE.MeshStandardMaterial
    ['Material.148']: THREE.MeshStandardMaterial
    ['Material.161']: THREE.MeshStandardMaterial
    ['Material.162']: THREE.MeshStandardMaterial
    ['Material.163']: THREE.MeshStandardMaterial
    ['Material.164']: THREE.MeshStandardMaterial
    ['Material.167']: THREE.MeshStandardMaterial
    ['Column_material.002']: THREE.MeshStandardMaterial
    ['Column_rect.002']: THREE.MeshStandardMaterial
    ['Column_material.003']: THREE.MeshStandardMaterial
    ['Column_rect.003']: THREE.MeshStandardMaterial
    ['Column_material.004']: THREE.MeshStandardMaterial
    ['Column_rect.004']: THREE.MeshStandardMaterial
    ['Column_material.005']: THREE.MeshStandardMaterial
    ['Column_rect.005']: THREE.MeshStandardMaterial
    ['Column_material.006']: THREE.MeshStandardMaterial
    ['Column_rect.006']: THREE.MeshStandardMaterial
    ['Column_material.007']: THREE.MeshStandardMaterial
    ['Column_rect.007']: THREE.MeshStandardMaterial
    ['Column_material.008']: THREE.MeshStandardMaterial
    ['Column_rect.008']: THREE.MeshStandardMaterial
    ['Column_material.009']: THREE.MeshStandardMaterial
    ['Column_rect.009']: THREE.MeshStandardMaterial
    ['Column_material.010']: THREE.MeshStandardMaterial
    ['Column_rect.010']: THREE.MeshStandardMaterial
    ['Column_material.011']: THREE.MeshStandardMaterial
    ['Column_rect.011']: THREE.MeshStandardMaterial
    ['Column_material.012']: THREE.MeshStandardMaterial
    ['Column_rect.012']: THREE.MeshStandardMaterial
    ['Column_material.013']: THREE.MeshStandardMaterial
    ['Column_rect.013']: THREE.MeshStandardMaterial
    ['Column_material.014']: THREE.MeshStandardMaterial
    ['Column_rect.014']: THREE.MeshStandardMaterial
    ['Column_material.015']: THREE.MeshStandardMaterial
    ['Column_rect.015']: THREE.MeshStandardMaterial
    ['Column_material.016']: THREE.MeshStandardMaterial
    ['Column_rect.016']: THREE.MeshStandardMaterial
    ['Column_material.017']: THREE.MeshStandardMaterial
    ['Column_rect.017']: THREE.MeshStandardMaterial
    ['Column_material.018']: THREE.MeshStandardMaterial
    ['Column_rect.018']: THREE.MeshStandardMaterial
    ['Column_material.019']: THREE.MeshStandardMaterial
    ['Column_rect.019']: THREE.MeshStandardMaterial
    ['Column_material.020']: THREE.MeshStandardMaterial
    ['Column_rect.020']: THREE.MeshStandardMaterial
    ['Column_material.021']: THREE.MeshStandardMaterial
    ['Column_rect.021']: THREE.MeshStandardMaterial
    ['Column_material.022']: THREE.MeshStandardMaterial
    ['Column_rect.022']: THREE.MeshStandardMaterial
    ['Column_material.023']: THREE.MeshStandardMaterial
    ['Column_rect.023']: THREE.MeshStandardMaterial
    ['Column_material.024']: THREE.MeshStandardMaterial
    ['Column_rect.024']: THREE.MeshStandardMaterial
    ['Column_material.025']: THREE.MeshStandardMaterial
    ['Column_rect.025']: THREE.MeshStandardMaterial
    ['Column_material.026']: THREE.MeshStandardMaterial
    ['Column_rect.026']: THREE.MeshStandardMaterial
    ['Column_material.027']: THREE.MeshStandardMaterial
    ['Column_rect.027']: THREE.MeshStandardMaterial
    ['Column_material.028']: THREE.MeshStandardMaterial
    ['Column_material.029']: THREE.MeshStandardMaterial
    ['Column_rect.028']: THREE.MeshStandardMaterial
    ['Column_material.030']: THREE.MeshStandardMaterial
    ['Column_rect.029']: THREE.MeshStandardMaterial
    ['Column_material.031']: THREE.MeshStandardMaterial
    ['Column_rect.030']: THREE.MeshStandardMaterial
    ['Column_material.032']: THREE.MeshStandardMaterial
    ['Column_rect.031']: THREE.MeshStandardMaterial
    ['Column_material.033']: THREE.MeshStandardMaterial
    ['Column_rect.032']: THREE.MeshStandardMaterial
    ['Column_material.034']: THREE.MeshStandardMaterial
    ['Column_rect.033']: THREE.MeshStandardMaterial
    ['Column_material.035']: THREE.MeshStandardMaterial
    ['Column_rect.034']: THREE.MeshStandardMaterial
    ['Column_material.036']: THREE.MeshStandardMaterial
    ['Column_rect.035']: THREE.MeshStandardMaterial
    ['Column_material.037']: THREE.MeshStandardMaterial
    ['Column_rect.036']: THREE.MeshStandardMaterial
    ['Column_material.038']: THREE.MeshStandardMaterial
    ['Column_rect.037']: THREE.MeshStandardMaterial
    ['Column_material.039']: THREE.MeshStandardMaterial
    ['Column_rect.038']: THREE.MeshStandardMaterial
    ['Column_material.040']: THREE.MeshStandardMaterial
    ['Column_rect.039']: THREE.MeshStandardMaterial
    ['Column_material.041']: THREE.MeshStandardMaterial
    ['Column_rect.040']: THREE.MeshStandardMaterial
    ['Column_material.042']: THREE.MeshStandardMaterial
    ['Column_rect.041']: THREE.MeshStandardMaterial
    ['Column_material.043']: THREE.MeshStandardMaterial
    ['Column_material.044']: THREE.MeshStandardMaterial
    ['Column_rect.042']: THREE.MeshStandardMaterial
    ['Column_material.045']: THREE.MeshStandardMaterial
    ['Column_rect.043']: THREE.MeshStandardMaterial
    ['Column_material.046']: THREE.MeshStandardMaterial
    ['Column_rect.044']: THREE.MeshStandardMaterial
    ['Column_material.047']: THREE.MeshStandardMaterial
    ['Column_rect.045']: THREE.MeshStandardMaterial
    ['Column_material.048']: THREE.MeshStandardMaterial
    ['Column_material.049']: THREE.MeshStandardMaterial
    ['Column_rect.046']: THREE.MeshStandardMaterial
    ['Column_material.050']: THREE.MeshStandardMaterial
    ['Column_rect.047']: THREE.MeshStandardMaterial
    ['Column_material.051']: THREE.MeshStandardMaterial
    ['Column_rect.048']: THREE.MeshStandardMaterial
    ['Column_material.052']: THREE.MeshStandardMaterial
    ['Column_rect.049']: THREE.MeshStandardMaterial
    ['Column_material.053']: THREE.MeshStandardMaterial
    ['Column_rect.050']: THREE.MeshStandardMaterial
    ['Column_material.054']: THREE.MeshStandardMaterial
    ['Column_rect.051']: THREE.MeshStandardMaterial
    ['Column_material.055']: THREE.MeshStandardMaterial
    ['Column_rect.052']: THREE.MeshStandardMaterial
    ['Column_material.056']: THREE.MeshStandardMaterial
    ['Column_rect.053']: THREE.MeshStandardMaterial
    ['Column_material.057']: THREE.MeshStandardMaterial
    ['Column_rect.054']: THREE.MeshStandardMaterial
    ['Column_material.058']: THREE.MeshStandardMaterial
    ['Column_rect.055']: THREE.MeshStandardMaterial
    ['Column_material.059']: THREE.MeshStandardMaterial
    ['Column_rect.056']: THREE.MeshStandardMaterial
    ['Column_material.060']: THREE.MeshStandardMaterial
    ['Column_rect.057']: THREE.MeshStandardMaterial
    ['Column_material.061']: THREE.MeshStandardMaterial
    ['Column_rect.058']: THREE.MeshStandardMaterial
    ['Column_material.062']: THREE.MeshStandardMaterial
    ['Column_rect.059']: THREE.MeshStandardMaterial
    ['Column_material.063']: THREE.MeshStandardMaterial
    ['Column_material.064']: THREE.MeshStandardMaterial
    ['Column_rect.060']: THREE.MeshStandardMaterial
    ['Column_material.065']: THREE.MeshStandardMaterial
    ['Column_rect.061']: THREE.MeshStandardMaterial
    ['Column_material.066']: THREE.MeshStandardMaterial
    ['Column_rect.062']: THREE.MeshStandardMaterial
    ['Column_material.067']: THREE.MeshStandardMaterial
    ['Column_rect.063']: THREE.MeshStandardMaterial
    ['Column_material.068']: THREE.MeshStandardMaterial
    ['Column_rect.064']: THREE.MeshStandardMaterial
    ['Column_material.069']: THREE.MeshStandardMaterial
    ['Column_rect.065']: THREE.MeshStandardMaterial
    ['Column_material.070']: THREE.MeshStandardMaterial
    ['Column_rect.066']: THREE.MeshStandardMaterial
    ['Column_material.071']: THREE.MeshStandardMaterial
    ['Column_rect.067']: THREE.MeshStandardMaterial
    ['Column_material.072']: THREE.MeshStandardMaterial
    ['Column_rect.068']: THREE.MeshStandardMaterial
    ['Column_material.073']: THREE.MeshStandardMaterial
    ['Column_material.074']: THREE.MeshStandardMaterial
    ['Column_rect.069']: THREE.MeshStandardMaterial
    ['Column_material.075']: THREE.MeshStandardMaterial
    ['Column_rect.070']: THREE.MeshStandardMaterial
    ['Column_material.076']: THREE.MeshStandardMaterial
    ['Column_rect.071']: THREE.MeshStandardMaterial
    ['Column_material.077']: THREE.MeshStandardMaterial
    ['Column_rect.072']: THREE.MeshStandardMaterial
    ['Column_material.078']: THREE.MeshStandardMaterial
    ['Column_material.079']: THREE.MeshStandardMaterial
    ['Column_rect.073']: THREE.MeshStandardMaterial
    ['Column_material.080']: THREE.MeshStandardMaterial
    ['Column_rect.074']: THREE.MeshStandardMaterial
    ['Column_material.081']: THREE.MeshStandardMaterial
    ['Column_rect.075']: THREE.MeshStandardMaterial
    ['Column_material.082']: THREE.MeshStandardMaterial
    ['Column_rect.076']: THREE.MeshStandardMaterial
    ['Column_material.083']: THREE.MeshStandardMaterial
    ['Column_rect.077']: THREE.MeshStandardMaterial
    ['Column_material.084']: THREE.MeshStandardMaterial
    ['Column_rect.078']: THREE.MeshStandardMaterial
    ['Column_material.085']: THREE.MeshStandardMaterial
    ['Column_rect.079']: THREE.MeshStandardMaterial
    ['Column_material.086']: THREE.MeshStandardMaterial
    ['Column_material.087']: THREE.MeshStandardMaterial
    ['Column_material.088']: THREE.MeshStandardMaterial
    ['Column_material.089']: THREE.MeshStandardMaterial
    ['Column_material.090']: THREE.MeshStandardMaterial
    ['Column_material.091']: THREE.MeshStandardMaterial
    ['Column_material.092']: THREE.MeshStandardMaterial
    ['Column_material.093']: THREE.MeshStandardMaterial
    ['Column_material.094']: THREE.MeshStandardMaterial
    ['Column_material.095']: THREE.MeshStandardMaterial
    ['Column_material.096']: THREE.MeshStandardMaterial
    ['Column_material.097']: THREE.MeshStandardMaterial
    ['Column_material.098']: THREE.MeshStandardMaterial
    ['Column_material.099']: THREE.MeshStandardMaterial
    ['Column_material.100']: THREE.MeshStandardMaterial
    ['Column_material.101']: THREE.MeshStandardMaterial
    ['Material.048']: THREE.MeshStandardMaterial
    ['Column_material.102']: THREE.MeshStandardMaterial
    ['Column_material.103']: THREE.MeshStandardMaterial
    ['Column_material.104']: THREE.MeshStandardMaterial
    Material: THREE.MeshStandardMaterial
    ['Material.064']: THREE.MeshStandardMaterial
    ['Material.067']: THREE.MeshStandardMaterial
    ['Material.097']: THREE.MeshStandardMaterial
  }
}

export function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/poc2.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <group position={[-73.665, 0, -107.622]}>
        <mesh geometry={nodes.DoorFrame.geometry} material={materials.Door_material} position={[-0.22, 0, 0.46]} rotation={[0, Math.PI / 2, 0]} scale={[1.757, 1.487, 1]}>
          <mesh geometry={nodes.Door.geometry} material={materials.Door_material} position={[0.418, 1.05, 0.022]}>
            <mesh geometry={nodes.Handle_Back.geometry} material={materials.Handle_material} position={[-0.764, 0, -0.005]} />
            <mesh geometry={nodes.Handle_Front.geometry} material={materials.Handle_material} position={[-0.764, 0, -0.029]} rotation={[-Math.PI, 0, 0]} />
          </mesh>
        </mesh>
      </group>
      <group position={[-90.222, 0, -87.969]}>
        <mesh geometry={nodes.DoorFrame001.geometry} material={materials.Door_material} position={[0.13, 0, -0.73]} scale={[1.503, 1.176, 1]}>
          <mesh geometry={nodes.Door001.geometry} material={materials.Door_material} position={[0.418, 1.05, 0.022]}>
            <mesh geometry={nodes.Handle_Back001.geometry} material={materials.Handle_material} position={[-0.764, 0, -0.005]} />
            <mesh geometry={nodes.Handle_Front001.geometry} material={materials.Handle_material} position={[-0.764, 0, -0.029]} rotation={[-Math.PI, 0, 0]} />
          </mesh>
        </mesh>
      </group>
      <group position={[31.249, 0, -107.456]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, 0.001]}>
            <group position={[-204.219, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
              <mesh geometry={nodes.wall_pillar_thing_Material001_0001.geometry} material={materials['Material.020']} position={[-41.463, 8.453, 0]} scale={[1.585, 1.636, 2.03]} />
            </group>
          </group>
        </group>
      </group>
      <group position={[31.249, 0, -110.941]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[-204.219, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_thing_Material001_0002.geometry} material={materials['Material.021']} position={[-48.599, 9.477, 0]} scale={[1.585, 1.636, 2.03]} />
          </group>
        </group>
      </group>
      <group position={[31.249, 0, -115.306]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, 0.001]}>
            <group position={[-204.219, 0, -413.62]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
              <mesh geometry={nodes.wall_pillar_thing_Material001_0003.geometry} material={materials['Material.022']} position={[-41.463, 8.453, 0]} scale={[1.585, 1.636, 2.03]} />
            </group>
          </group>
        </group>
      </group>
      <group position={[31.249, 0, -100.059]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[-204.219, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_thing_Material001_0004.geometry} material={materials['Material.023']} position={[-41.463, 8.453, 0]} scale={[1.585, 1.636, 2.03]} />
          </group>
        </group>
      </group>
      <group position={[44.895, 0, -101.319]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[-204.219, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_thing_Material001_0005.geometry} material={materials['Material.024']} position={[-48.47, 10.578, 0]} scale={[1.585, 1.636, 2.03]} />
          </group>
        </group>
      </group>
      <group position={[31.249, 0, -110.941]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[-204.219, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_thing_Material001_0006.geometry} material={materials['Material.025']} position={[-48.599, 9.477, 0]} scale={[1.585, 1.636, 2.03]} />
          </group>
        </group>
      </group>
      <group position={[44.895, 0, -109.585]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[-204.219, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_thing_Material001_0007.geometry} material={materials['Material.026']} position={[-48.47, 10.578, 0]} scale={[1.585, 1.636, 2.03]} />
          </group>
        </group>
      </group>
      <group position={[-2.712, 0, -101.319]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_Material001_0001.geometry} material={materials['Material.029']} position={[0.42, 1.428, 0]} scale={[1, 1, 1.942]} />
          </group>
        </group>
      </group>
      <group position={[0.051, 0, -104.36]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -413.622]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_Material001_0002.geometry} material={materials['Material.030']} position={[0.42, 1.428, 0]} scale={[1, 1, 1.942]} />
          </group>
        </group>
      </group>
      <group position={[-2.709, 0, -107.045]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, 0.001]}>
            <group position={[0, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
              <mesh geometry={nodes.wall_pillar_Material001_0003.geometry} material={materials['Material.031']} position={[0.42, 1.428, 0]} scale={[1, 1, 1.942]} />
            </group>
          </group>
        </group>
      </group>
      <group position={[-0.272, 0, -109.366]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_Material001_0004.geometry} material={materials['Material.032']} position={[0.42, 1.428, 0]} scale={[1, 1, 1.942]} />
          </group>
        </group>
      </group>
      <group position={[-2.905, 0, -111.942]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_Material001_0005.geometry} material={materials['Material.033']} position={[0.42, 1.428, 0]} scale={[1, 1, 1.942]} />
          </group>
        </group>
      </group>
      <group position={[-0.66, 0, -114.123]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_Material001_0006.geometry} material={materials['Material.034']} position={[0.42, 1.428, 0]} scale={[1, 1, 1.942]} />
          </group>
        </group>
      </group>
      <group position={[-3.066, 0, -114.123]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_Material001_0007.geometry} material={materials['Material.035']} position={[0.42, 4.105, 0]} scale={[1, 1, 1.942]} />
          </group>
        </group>
      </group>
      <group position={[31.249, 0, -101.319]} rotation={[Math.PI / 2, 0, 0]} scale={[-3.751, -1, -1]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[333.755, 0, 95.557]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_3_Material001_0001.geometry} material={materials['Material.044']} position={[1.87, -56.091, 0]} scale={[0.709, 17.535, 2.001]} />
          </group>
        </group>
      </group>
      <group position={[26.685, 0, -101.319]} rotation={[Math.PI / 2, 0, 0]} scale={[-3.751, -1, -1]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[333.755, 0, 95.557]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_3_Material001_0002.geometry} material={materials['Material.045']} position={[2.063, -23.803, 0]} scale={[0.709, 4.01, 2.001]} />
          </group>
        </group>
      </group>
      <group position={[19.737, 0, -101.319]} rotation={[Math.PI / 2, 0, 0]} scale={[-3.751, -1, -1]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[333.755, 0, 95.557]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_3_Material001_0003.geometry} material={materials['Material.046']} position={[1.87, -30.161, 0]} scale={[0.709, 4.302, 2.001]} />
          </group>
        </group>
      </group>
      <group position={[31.249, 0, -101.319]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <mesh geometry={nodes.wall_pillar_Material001_0008.geometry} material={materials['Material.049']} position={[0, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100} />
        </group>
      </group>
      <group position={[2.598, 0, -78.836]} rotation={[-Math.PI / 2, 0, 0]} scale={[0.398, 0.402, 1]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -0.002]}>
            <group position={[0, 0, -413.623]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
              <mesh geometry={nodes.wall_pillar_Material001_0009.geometry} material={materials['Material.050']} position={[-1.158, 1.428, 0]} scale={[1, 1, 1.942]} />
            </group>
          </group>
        </group>
      </group>
      <group position={[4.775, 0, -78.836]} rotation={[-Math.PI / 2, 0, 0]} scale={[0.398, 0.402, 1]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -0.002]}>
            <group position={[0, 0, -413.623]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
              <mesh geometry={nodes.wall_pillar_Material001_0010.geometry} material={materials['Material.051']} position={[-1.158, 1.428, 0]} scale={[1, 1, 1.942]} />
            </group>
          </group>
        </group>
      </group>
      <group position={[4.775, 0, -83.275]} rotation={[-Math.PI / 2, 0, 0]} scale={[0.398, 0.402, 1]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_Material001_0011.geometry} material={materials['Material.052']} position={[-1.158, 1.428, 0]} scale={[1, 1, 1.942]} />
          </group>
        </group>
      </group>
      <group position={[2.433, 0, -83.275]} rotation={[-Math.PI / 2, 0, 0]} scale={[0.398, 0.402, 1]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_Material001_0012.geometry} material={materials['Material.053']} position={[-1.158, 1.428, 0]} scale={[1, 1, 1.942]} />
          </group>
        </group>
      </group>
      <group position={[4.775, 0, -75.345]} rotation={[-Math.PI / 2, 0, 0]} scale={[0.398, 0.402, 1]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_Material001_0013.geometry} material={materials['Material.054']} position={[-1.158, 1.428, 0]} scale={[1, 1, 1.942]} />
          </group>
        </group>
      </group>
      <group position={[4.775, 0, -71.886]} rotation={[-Math.PI / 2, 0, 0]} scale={[0.398, 0.402, 1]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_Material001_0014.geometry} material={materials['Material.055']} position={[-1.158, 1.428, 0]} scale={[1, 1, 1.942]} />
          </group>
        </group>
      </group>
      <group position={[4.775, 0, -68.342]} rotation={[-Math.PI / 2, 0, 0]} scale={[0.398, 0.402, 1]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -413.623]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_Material001_0015.geometry} material={materials['Material.056']} position={[-1.158, 1.428, 0]} scale={[1, 1, 1.942]} />
          </group>
        </group>
      </group>
      <group position={[4.775, 0, -64.713]} rotation={[-Math.PI / 2, 0, 0]} scale={[0.398, 0.402, 1]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_Material001_0016.geometry} material={materials['Material.057']} position={[-1.158, 1.428, 0]} scale={[1, 1, 1.942]} />
          </group>
        </group>
      </group>
      <group position={[4.775, 0, -61.226]} rotation={[-Math.PI / 2, 0, 0]} scale={[0.398, 0.402, 1]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -0.001]}>
            <group position={[0, 0, -413.622]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
              <mesh geometry={nodes.wall_pillar_Material001_0017.geometry} material={materials['Material.058']} position={[-1.158, 1.428, 0]} scale={[1, 1, 1.942]} />
            </group>
          </group>
        </group>
      </group>
      <group position={[2.598, 0, -75.012]} rotation={[-Math.PI / 2, 0, 0]} scale={[0.398, 0.402, 1]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_Material001_0018.geometry} material={materials['Material.059']} position={[-1.158, 1.428, 0]} scale={[1, 1, 1.942]} />
          </group>
        </group>
      </group>
      <group position={[2.598, 0, -71.653]} rotation={[-Math.PI / 2, 0, 0]} scale={[0.398, 0.402, 1]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -0.002]}>
            <group position={[0, 0, -413.623]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
              <mesh geometry={nodes.wall_pillar_Material001_0019.geometry} material={materials['Material.060']} position={[-1.158, 1.671, 0]} scale={[1, 1, 1.942]} />
            </group>
          </group>
        </group>
      </group>
      <group position={[2.598, 0, -68.477]} rotation={[-Math.PI / 2, 0, 0]} scale={[0.398, 0.402, 1]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -0.002]}>
            <group position={[0, 0, -413.623]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
              <mesh geometry={nodes.wall_pillar_Material001_0020.geometry} material={materials['Material.061']} position={[-1.158, 1.671, 0]} scale={[1, 1, 1.942]} />
            </group>
          </group>
        </group>
      </group>
      <group position={[2.598, 0, -64.705]} rotation={[-Math.PI / 2, 0, 0]} scale={[0.398, 0.402, 1]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -0.002]}>
            <group position={[0, 0, -413.623]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
              <mesh geometry={nodes.wall_pillar_Material001_0021.geometry} material={materials['Material.062']} position={[-1.158, 1.671, 0]} scale={[1, 1, 1.942]} />
            </group>
          </group>
        </group>
      </group>
      <group position={[2.598, 0, -61.156]} rotation={[-Math.PI / 2, 0, 0]} scale={[0.398, 0.402, 1]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -413.622]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_Material001_0022.geometry} material={materials['Material.063']} position={[-1.158, 1.671, 0]} scale={[1, 1, 1.942]} />
          </group>
        </group>
      </group>
      <group position={[-3.129, 0, -61.156]} rotation={[-Math.PI / 2, 0, 0]} scale={[0.398, 0.402, 1]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -413.622]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_Material001_0023.geometry} material={materials['Material.071']} position={[-1.158, 1.671, 0]} scale={[1, 1, 1.942]} />
          </group>
        </group>
      </group>
      <group position={[44.895, 0, -31.88]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[-204.219, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_thing_Material001_0008.geometry} material={materials['Material.082']} position={[-36.733, 8.856, 0]} scale={[1.585, 1.636, 2.03]} />
          </group>
        </group>
      </group>
      <group position={[44.895, 0, -25.802]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[-204.219, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_thing_Material001_0009.geometry} material={materials['Material.083']} position={[-36.733, 2.187, 0]} scale={[1.585, 1.636, 2.03]} />
          </group>
        </group>
      </group>
      <group position={[44.895, 0, -25.802]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[-204.219, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_thing_Material001_0010.geometry} material={materials['Material.084']} position={[-36.733, 8.856, 0]} scale={[1.585, 1.636, 2.03]} />
          </group>
        </group>
      </group>
      <group position={[44.895, 0, -19.786]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, 0]}>
            <group position={[-204.219, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
              <mesh geometry={nodes.wall_pillar_thing_Material001_0011.geometry} material={materials['Material.085']} position={[-36.733, 2.187, 0]} scale={[1.585, 1.636, 2.03]} />
            </group>
          </group>
        </group>
      </group>
      <group position={[26.685, 0, -51.135]} rotation={[Math.PI / 2, 0, 0]} scale={[-3.751, -1, -1]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[333.755, 0, 95.557]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_3_Material001_0004.geometry} material={materials['Material.086']} position={[3.386, -27.738, 0]} scale={[0.709, 4.836, 2.001]} />
          </group>
        </group>
      </group>
      <group position={[26.685, 0, -69.386]} rotation={[Math.PI / 2, 0, 0]} scale={[-3.751, -1, -1]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[333.755, 0, 95.557]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_3_Material001_0005.geometry} material={materials['Material.090']} position={[3.386, -22.127, 0]} scale={[0.709, 1.782, 2.001]} />
          </group>
        </group>
      </group>
      <group position={[-10.243, 0, -84.934]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, 0.001]}>
            <group position={[-204.22, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
              <mesh geometry={nodes.wall_pillar_thing_Material001_0012.geometry} material={materials['Material.134']} position={[-48.599, 11.16, 0]} scale={[1.585, 1.636, 2.03]} />
            </group>
          </group>
        </group>
      </group>
      <group position={[-10.243, 0, -78.91]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[-204.22, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_thing_Material001_0013.geometry} material={materials['Material.135']} position={[-48.599, 11.16, 0]} scale={[1.585, 1.636, 2.03]} />
          </group>
        </group>
      </group>
      <group position={[-10.243, 0, -72.948]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[-204.22, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_thing_Material001_0014.geometry} material={materials['Material.136']} position={[-54.711, 11.16, 0]} scale={[1.585, 1.636, 2.03]} />
          </group>
        </group>
      </group>
      <group position={[-10.243, 0, -72.948]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[-204.22, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_thing_Material001_0015.geometry} material={materials['Material.137']} position={[-48.599, 11.16, 0]} scale={[1.585, 1.636, 2.03]} />
          </group>
        </group>
      </group>
      <group position={[-10.243, 0, -78.956]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[-204.22, 0, -413.622]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_thing_Material001_0016.geometry} material={materials['Material.138']} position={[-54.711, 11.16, 0]} scale={[1.585, 1.636, 2.03]} />
          </group>
        </group>
      </group>
      <group position={[-16.263, 0, -78.956]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[-204.22, 0, -413.622]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_thing_Material001_0017.geometry} material={materials['Material.139']} position={[-54.711, 11.16, 0]} scale={[1.585, 1.636, 2.03]} />
          </group>
        </group>
      </group>
      <group position={[-16.263, 0, -84.878]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[-204.22, 0, -413.622]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_thing_Material001_0018.geometry} material={materials['Material.140']} position={[-54.711, 11.16, 0]} scale={[1.585, 1.636, 2.03]} />
          </group>
        </group>
      </group>
      <group position={[-10.457, 0, -84.878]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[-204.22, 0, -413.622]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_thing_Material001_0019.geometry} material={materials['Material.141']} position={[-54.711, 11.16, 0]} scale={[1.585, 1.636, 2.03]} />
          </group>
        </group>
      </group>
      <group position={[-22.197, 0, -84.878]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[-204.22, 0, -413.622]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_thing_Material001_0020.geometry} material={materials['Material.142']} position={[-54.711, 11.16, 0]} scale={[1.585, 1.636, 2.03]} />
          </group>
        </group>
      </group>
      <group position={[-22.197, 0, -79.176]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, 0]}>
            <group position={[-204.22, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
              <mesh geometry={nodes.wall_pillar_thing_Material001_0021.geometry} material={materials['Material.143']} position={[-54.711, 11.16, 0]} scale={[1.585, 1.636, 2.03]} />
            </group>
          </group>
        </group>
      </group>
      <group position={[-15.968, 0, -72.553]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[-204.22, 0, -413.622]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_thing_Material001_0023.geometry} material={materials['Material.145']} position={[-54.711, 11.16, 0]} scale={[1.585, 1.636, 2.03]} />
          </group>
        </group>
      </group>
      <group position={[-45.991, 0, -75.035]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_Material001_0024.geometry} material={materials['Material.149']} position={[-0.209, 4.105, 0]} scale={[1, 1, 1.942]} />
          </group>
        </group>
      </group>
      <group position={[-45.991, 0, -75.035]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_Material001_0025.geometry} material={materials['Material.150']} position={[-0.23, 7.028, 0]} scale={[1, 1, 1.942]} />
          </group>
        </group>
      </group>
      <group position={[-44.648, 0, -78.14]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_Material001_0026.geometry} material={materials['Material.151']} position={[1.317, 7.028, 0]} scale={[1, 1, 1.942]} />
          </group>
        </group>
      </group>
      <group position={[-42.783, 0, -81.298]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -413.622]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_Material001_0027.geometry} material={materials['Material.152']} position={[2.025, 7.028, 0]} scale={[1, 1, 1.942]} />
          </group>
        </group>
      </group>
      <group position={[-42.783, 0, -84.313]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_Material001_0028.geometry} material={materials['Material.153']} position={[2.025, 7.028, 0]} scale={[1, 1, 1.942]} />
          </group>
        </group>
      </group>
      <group position={[-45.386, 0, -84.313]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_Material001_0029.geometry} material={materials['Material.154']} position={[2.025, 7.028, 0]} scale={[1, 1, 1.942]} />
          </group>
        </group>
      </group>
      <group position={[-48.134, 0, -84.313]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_Material001_0030.geometry} material={materials['Material.155']} position={[2.025, 7.028, 0]} scale={[1, 1, 1.942]} />
          </group>
        </group>
      </group>
      <group position={[12.862, 0, -78.956]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[-204.22, 0, -413.622]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_thing_Material001_0022.geometry} material={materials['Material.156']} position={[-54.711, 16.968, 0]} scale={[1.585, 1.636, 2.03]} />
          </group>
        </group>
      </group>
      <group position={[-45.378, 0, -81.298]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -413.622]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_Material001_0031.geometry} material={materials['Material.157']} position={[2.025, 7.028, 0]} scale={[1, 1, 1.942]} />
          </group>
        </group>
      </group>
      <group position={[-48.198, 0, -81.298]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -413.622]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_Material001_0032.geometry} material={materials['Material.158']} position={[2.025, 7.028, 0]} scale={[1, 1, 1.942]} />
          </group>
        </group>
      </group>
      <group position={[-48.185, 0, -78.14]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_Material001_0033.geometry} material={materials['Material.159']} position={[2.025, 7.028, 0]} scale={[1, 1, 1.942]} />
          </group>
        </group>
      </group>
      <group position={[-43.055, 0, -75.035]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_Material001_0034.geometry} material={materials['Material.160']} position={[-0.23, 7.028, 0]} scale={[1, 1, 1.942]} />
          </group>
        </group>
      </group>
      <group position={[-35.218, 0, -75.035]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_Material001_0035.geometry} material={materials['Material.165']} position={[-0.23, 7.028, 0]} scale={[1, 1, 1.942]} />
          </group>
        </group>
      </group>
      <group position={[-36.223, 0, -66.737]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -413.621]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.wall_pillar_Material001_0036.geometry} material={materials['Material.166']} position={[-0.23, 7.028, 0]} scale={[1, 1, 1.942]} />
          </group>
        </group>
      </group>
      <group position={[-22.197, 0, -113.343]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -0.001]}>
            <group position={[-204.22, 0, -413.622]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
              <mesh geometry={nodes.wall_pillar_thing_Material001_0024.geometry} material={materials['Material.168']} position={[-89.739, 11.16, 0]} scale={[1.585, 1.636, 2.03]} />
            </group>
          </group>
        </group>
      </group>
      <group position={[-22.197, 0, -113.343]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -0.001]}>
            <group position={[-204.22, 0, -413.622]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
              <mesh geometry={nodes.wall_pillar_thing_Material001_0025.geometry} material={materials['Material.169']} position={[-89.739, 11.16, 0]} scale={[1.585, 1.636, 2.03]} />
            </group>
          </group>
        </group>
      </group>
      <group position={[-47.918, 0, -113.343]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 0, -0.001]}>
            <group position={[-204.22, 0, -413.622]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
              <mesh geometry={nodes.wall_pillar_thing_Material001_0026.geometry} material={materials['Material.170']} position={[-89.739, 9.785, 0]} scale={[1.585, 1.636, 2.03]} />
            </group>
          </group>
        </group>
      </group>
      <mesh geometry={nodes.Plane.geometry} material={nodes.Plane.material} position={[-46.804, 0, -60.777]} scale={114.921} />
      <mesh geometry={nodes.Cube.geometry} material={nodes.Cube.material} position={[-92.052, 1.909, -69.77]} scale={[0.15, 2.01, 19]} />
      <mesh geometry={nodes.Cube001.geometry} material={nodes.Cube001.material} position={[-83.541, 1.909, -89.393]} scale={[0.15, 2.01, 0.816]} />
      <mesh geometry={nodes.Cube003.geometry} material={nodes.Cube003.material} position={[-85.778, 1.909, -88.673]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.369]} />
      <mesh geometry={nodes.Cube004.geometry} material={nodes.Cube004.material} position={[-83.541, 1.909, -93.715]} scale={[0.15, 2.01, 1.078]} />
      <mesh geometry={nodes.Cube005.geometry} material={nodes.Cube005.material} position={[-82.913, 1.911, -90.095]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 0.622]} />
      <mesh geometry={nodes.Cube006.geometry} material={nodes.Cube006.material} position={[-78.795, 1.909, -91.228]} scale={[0.24, 2.01, 1.23]} />
      <mesh geometry={nodes.Cube007.geometry} material={nodes.Cube007.material} position={[-81.134, 1.911, -92.55]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.568]} />
      <mesh geometry={nodes.Cube008.geometry} material={nodes.Cube008.material} position={[-86.948, 1.911, -94.79]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 3.556]} />
      <mesh geometry={nodes.Column.geometry} material={materials.Column_material} position={[-89.647, 0.023, -91.275]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_bottom.geometry} material={materials.Column_rect} position={[0, -0.05, 0]} />
        <mesh geometry={nodes.Column_box_top.geometry} material={materials.Column_rect} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Cube009.geometry} material={nodes.Cube009.material} position={[-90.33, 1.909, -97.178]} scale={[0.15, 2.01, 2.538]} />
      <mesh geometry={nodes.Cube010.geometry} material={nodes.Cube010.material} position={[-89.269, 1.911, -99.637]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 1.089]} />
      <mesh geometry={nodes.Cube011.geometry} material={materials['Material.001']} position={[-88.045, 1.909, -104.846]} scale={[0.15, 2.01, 5.241]} />
      <mesh geometry={nodes.Cube012.geometry} material={materials['Material.001']} position={[-77.853, 1.911, -104.328]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 4.201]} />
      <mesh geometry={nodes.Cube013.geometry} material={nodes.Cube013.material} position={[-85.096, 1.911, -109.953]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 3.127]} />
      <mesh geometry={nodes.Cube014.geometry} material={nodes.Cube014.material} position={[-82.101, 1.911, -107.143]} scale={[0.15, 2.01, 2.995]} />
      <mesh geometry={nodes.Cube015.geometry} material={nodes.Cube015.material} position={[-73.782, 1.911, -105.206]} scale={[0.15, 2.01, 1.035]} />
      <mesh geometry={nodes.Cube016.geometry} material={nodes.Cube016.material} position={[-75.971, 1.911, -109.941]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.35]} />
      <mesh geometry={nodes.Cube017.geometry} material={nodes.Cube017.material} position={[-84.678, 1.911, -122.531]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 6.425]} />
      <mesh geometry={nodes.Cube018.geometry} material={nodes.Cube018.material} position={[-78.16, 1.911, -116.232]} scale={[0.15, 2.01, 6.425]} />
      <mesh geometry={nodes.Cube019.geometry} material={nodes.Cube019.material} position={[-91.042, 1.909, -123.636]} scale={[0.15, 2.01, 1.121]} />
      <mesh geometry={nodes.Cube020.geometry} material={nodes.Cube020.material} position={[-94.525, 1.911, -124.558]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 3.556]} />
      <mesh geometry={nodes.Cube021.geometry} material={nodes.Cube021.material} position={[-95.464, 1.827, -88.62]} rotation={[1.603, -1.565, 1.571]} scale={[0.15, 2.01, 3.556]} />
      <mesh geometry={nodes.Cube022.geometry} material={nodes.Cube022.material} position={[-101.277, 1.866, -90.86]} rotation={[1.603, -1.565, 1.571]} scale={[0.15, 2.01, 2.568]} />
      <mesh geometry={nodes.Cube023.geometry} material={nodes.Cube023.material} position={[-103.617, 1.894, -92.182]} rotation={[-3.109, 0, 3.136]} scale={[0.24, 2.01, 1.23]} />
      <mesh geometry={nodes.Cube024.geometry} material={nodes.Cube024.material} position={[-101.277, 1.945, -93.313]} rotation={[1.603, -1.565, 1.571]} scale={[0.15, 2.01, 2.568]} />
      <mesh geometry={nodes.Cube025.geometry} material={nodes.Cube025.material} position={[-98.871, 1.841, -89.695]} rotation={[-3.109, 0, 3.136]} scale={[0.15, 2.01, 1.078]} />
      <mesh geometry={nodes.Cube026.geometry} material={nodes.Cube026.material} position={[-97.646, 2.016, -94.734]} rotation={[1.603, -1.565, 1.571]} scale={[0.15, 2.01, 1.389]} />
      <mesh geometry={nodes.Cube027.geometry} material={nodes.Cube027.material} position={[-98.871, 1.98, -94.015]} rotation={[-3.109, 0, 3.136]} scale={[0.15, 2.01, 0.816]} />
      <mesh geometry={nodes.Cube028.geometry} material={nodes.Cube028.material} position={[-96.41, 1.909, -97.178]} scale={[0.15, 2.01, 2.538]} />
      <mesh geometry={nodes.Cube029.geometry} material={nodes.Cube029.material} position={[-99.051, 1.911, -99.637]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.778]} />
      <mesh geometry={nodes.Cube030.geometry} material={nodes.Cube030.material} position={[-101.586, 1.909, -102.812]} scale={[0.15, 2.01, 3.327]} />
      <mesh geometry={nodes.Cube031.geometry} material={nodes.Cube031.material} position={[-102.361, 2.016, -113.183]} rotation={[1.603, -1.565, 1.571]} scale={[0.15, 2.01, 0.709]} />
      <mesh geometry={nodes.Cube032.geometry} material={nodes.Cube032.material} position={[-103.139, 2.016, -114.021]} scale={[0.15, 2.01, 0.777]} />
      <mesh geometry={nodes.Cube033.geometry} material={nodes.Cube033.material} position={[-102.58, 2.016, -114.973]} rotation={[1.603, -1.565, 1.571]} scale={[0.15, 2.01, 0.709]} />
      <mesh geometry={nodes.Cube034.geometry} material={nodes.Cube034.material} position={[-102.015, 1.909, -118.095]} rotation={[0, 0, Math.PI]} scale={[0.15, 2.01, 3.231]} />
      <mesh geometry={nodes.Cube035.geometry} material={nodes.Cube035.material} position={[-91.601, 1.909, -107.654]} scale={[0.15, 2.01, 2.649]} />
      <mesh geometry={nodes.Cube036.geometry} material={nodes.Cube036.material} position={[-97.708, 1.909, -107.654]} scale={[0.15, 2.01, 2.649]} />
      <mesh geometry={nodes.Cube037.geometry} material={nodes.Cube037.material} position={[-94.615, 1.909, -104.993]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 3.001]} />
      <mesh geometry={nodes.Cube038.geometry} material={nodes.Cube038.material} position={[-98.291, 2.016, -110.275]} rotation={[1.603, -1.565, 1.571]} scale={[0.15, 2.01, 0.709]} />
      <mesh geometry={nodes.Cube039.geometry} material={nodes.Cube039.material} position={[-94.108, 1.909, -111.099]} scale={[0.15, 2.01, 1.058]} />
      <mesh geometry={nodes.Cube040.geometry} material={nodes.Cube040.material} position={[-92.832, 1.909, -110.177]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 1.149]} />
      <mesh geometry={nodes.Cube041.geometry} material={nodes.Cube041.material} position={[-96.558, 1.909, -112.025]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.455]} />
      <mesh geometry={nodes.Cube042.geometry} material={nodes.Cube042.material} position={[-98.865, 2.016, -111.037]} scale={[0.15, 2.01, 0.8]} />
      <mesh geometry={nodes.Cube043.geometry} material={nodes.Cube043.material} position={[-102.374, 2.016, -107.994]} rotation={[1.603, -1.565, 1.571]} scale={[0.15, 2.01, 0.709]} />
      <mesh geometry={nodes.Cube044.geometry} material={nodes.Cube044.material} position={[-102.934, 2.016, -107.041]} scale={[0.15, 2.01, 0.777]} />
      <mesh geometry={nodes.Cube045.geometry} material={nodes.Cube045.material} position={[-102.155, 2.016, -106.204]} rotation={[1.603, -1.565, 1.571]} scale={[0.15, 2.01, 0.709]} />
      <mesh geometry={nodes.Cube046.geometry} material={nodes.Cube046.material} position={[-101.715, 1.909, -110.454]} scale={[0.15, 2.01, 2.711]} />
      <mesh geometry={nodes.Cube047.geometry} material={nodes.Cube047.material} position={[-97.936, 1.909, -122.904]} scale={[0.15, 2.01, 1.76]} />
      <mesh geometry={nodes.Cube048.geometry} material={nodes.Cube048.material} position={[-99.966, 1.911, -121.183]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.053]} />
      <mesh geometry={nodes.Cube049.geometry} material={nodes.Cube049.material} position={[-83.431, 1.909, -113.609]} rotation={[0, -1.564, 0]} scale={[0.15, 2.01, 2.248]} />
      <mesh geometry={nodes.Cube050.geometry} material={nodes.Cube050.material} position={[-84.653, 1.909, -118.803]} rotation={[0, -1.564, 0]} scale={[0.15, 2.01, 3.285]} />
      <mesh geometry={nodes.Cube051.geometry} material={nodes.Cube051.material} position={[-81.308, 1.909, -116.162]} rotation={[Math.PI, -0.006, Math.PI]} scale={[0.15, 2.01, 2.649]} />
      <mesh geometry={nodes.Cube052.geometry} material={nodes.Cube052.material} position={[-85.509, 1.909, -114.698]} rotation={[Math.PI, -0.006, Math.PI]} scale={[0.15, 2.01, 1.175]} />
      <mesh geometry={nodes.Cube053.geometry} material={nodes.Cube053.material} position={[-86.559, 1.909, -115.667]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 1.175]} />
      <mesh geometry={nodes.Cube054.geometry} material={nodes.Cube054.material} position={[-87.781, 1.909, -117.175]} rotation={[Math.PI, -0.006, Math.PI]} scale={[0.15, 2.01, 1.6]} />
      <mesh geometry={nodes.Cube055.geometry} material={nodes.Cube055.material} position={[-96.244, 1.909, -114.882]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.455]} />
      <mesh geometry={nodes.Cube056.geometry} material={nodes.Cube056.material} position={[-93.968, 2.016, -115.371]} scale={[0.15, 2.01, 0.655]} />
      <mesh geometry={nodes.Cube057.geometry} material={nodes.Cube057.material} position={[-91.965, 1.909, -115.855]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.123]} />
      <mesh geometry={nodes.Cube058.geometry} material={nodes.Cube058.material} position={[-89.908, 2.016, -116.439]} scale={[0.15, 2.01, 0.655]} />
      <mesh geometry={nodes.Cube059.geometry} material={nodes.Cube059.material} position={[-94.259, 1.827, -117.121]} rotation={[1.603, -1.565, 1.571]} scale={[0.15, 2.01, 4.48]} />
      <mesh geometry={nodes.Cube060.geometry} material={nodes.Cube060.material} position={[-98.594, 2.016, -115.936]} scale={[0.15, 2.01, 1.081]} />
      <mesh geometry={nodes.Column001.geometry} material={materials['Column_material.001']} position={[-79.301, 0.023, -109.846]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_bottom001.geometry} material={materials['Column_rect.001']} position={[0, -0.05, 0]} />
        <mesh geometry={nodes.Column_box_top001.geometry} material={materials['Column_rect.001']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Cube061.geometry} material={nodes.Cube061.material} position={[-73.782, 1.911, -109.075]} scale={[0.15, 2.01, 1.066]} />
      <mesh geometry={nodes.Cube062.geometry} material={nodes.Cube062.material} position={[-69.425, 1.911, -106.057]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 4.137]} />
      <mesh geometry={nodes.Cube063.geometry} material={nodes.Cube063.material} position={[-66.515, 1.911, -108.149]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 7.207]} />
      <mesh geometry={nodes.Cube064.geometry} material={nodes.Cube064.material} position={[-53.846, 3.027, -114.726]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 3.071, 5.612]} />
      <mesh geometry={nodes.Cube065.geometry} material={nodes.Cube065.material} position={[-59.401, 2.998, -111.485]} scale={[0.15, 3.121, 3.371]} />
      <mesh geometry={nodes.Cube067.geometry} material={nodes.Cube067.material} position={[-53.657, 0.363, -104.441]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 0.364, 5.612]} />
      <mesh geometry={nodes.Cube068.geometry} material={nodes.Cube068.material} position={[-53.846, -7.045, -100.522]} rotation={[Math.PI / 2, 0, -Math.PI / 2]} scale={[0.255, 0.371, 13.373]} />
      <mesh geometry={nodes.Cube070.geometry} material={nodes.Cube070.material} position={[-57.749, 2.998, -111.485]} scale={[0.15, 3.121, 3.371]} />
      <mesh geometry={nodes.Cube071.geometry} material={nodes.Cube071.material} position={[-56.168, 2.998, -111.485]} scale={[0.15, 3.121, 3.371]} />
      <mesh geometry={nodes.Cube072.geometry} material={nodes.Cube072.material} position={[-54.536, 2.998, -111.485]} scale={[0.15, 3.121, 3.371]} />
      <mesh geometry={nodes.Cube073.geometry} material={nodes.Cube073.material} position={[-52.934, 2.998, -111.485]} scale={[0.15, 3.121, 3.371]} />
      <mesh geometry={nodes.Cube074.geometry} material={nodes.Cube074.material} position={[-51.295, 2.998, -111.485]} scale={[0.15, 3.121, 3.371]} />
      <mesh geometry={nodes.Cube075.geometry} material={nodes.Cube075.material} position={[-49.677, 2.998, -111.485]} scale={[0.15, 3.121, 3.371]} />
      <mesh geometry={nodes.Cube076.geometry} material={nodes.Cube076.material} position={[-48.133, 2.998, -111.485]} scale={[0.15, 3.121, 3.371]} />
      <mesh geometry={nodes.Cube077.geometry} material={nodes.Cube077.material} position={[-47.888, -7.299, -100.336]} scale={[0.15, 13.45, 4.228]} />
      <mesh geometry={nodes.Cube078.geometry} material={nodes.Cube078.material} position={[-53.763, 3.051, -96.018]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 3.104, 5.948]} />
      <mesh geometry={nodes.Plane001.geometry} material={nodes.Plane001.material} position={[-53.8, 6.119, -105.505]} scale={[5.797, 1, 9.371]} />
      <mesh geometry={nodes.Cube069.geometry} material={nodes.Cube069.material} position={[-53.763, -2.949, -96.018]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 3.104, 5.948]} />
      <mesh geometry={nodes.Cube079.geometry} material={nodes.Cube079.material} position={[-53.763, -8.949, -96.018]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 3.104, 5.948]} />
      <mesh geometry={nodes.Cube080.geometry} material={nodes.Cube080.material} position={[-53.763, -13.949, -96.018]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 3.104, 5.948]} />
      <mesh geometry={nodes.Cube081.geometry} material={nodes.Cube081.material} position={[-53.483, -20.538, -99.769]} rotation={[1.561, Math.PI / 2, 0]} scale={[0.15, 4.393, 6.236]} />
      <mesh geometry={nodes.Cube082.geometry} material={nodes.Cube082.material} position={[-53.763, -19.933, -96.018]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 3.104, 5.948]} />
      <mesh geometry={nodes.Cube066.geometry} material={nodes.Cube066.material} position={[-59.355, -7.299, -101.182]} scale={[0.15, 13.45, 4.892]} />
      <mesh geometry={nodes.Cube083.geometry} material={materials['Material.002']} position={[-43.564, 1.911, -104.413]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 4.201]} />
      <mesh geometry={nodes.Cube084.geometry} material={materials['Material.003']} position={[-41.79, 1.911, -108.229]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 6.424]} />
      <mesh geometry={nodes.Cube085.geometry} material={nodes.Cube085.material} position={[-39.537, 1.909, -97.903]} scale={[0.24, 2.01, 6.691]} />
      <mesh geometry={nodes.Cube086.geometry} material={nodes.Cube086.material} position={[-35.624, 1.909, -101.762]} scale={[0.24, 2.01, 6.669]} />
      <mesh geometry={nodes.Cube087.geometry} material={materials['Material.004']} position={[-30.342, 1.911, -91.283]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 3.505]} />
      <mesh geometry={nodes.Cube088.geometry} material={materials['Material.005']} position={[-35.03, 1.911, -95.26]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 0.67]} />
      <mesh geometry={nodes.Cube089.geometry} material={nodes.Cube089.material} position={[-26.092, 4.446, -86.369]} scale={[0.24, 4.6, 4.961]} />
      <mesh geometry={nodes.Cube090.geometry} material={nodes.Cube090.material} position={[-26.092, 4.446, -100.202]} scale={[0.24, 4.6, 4.961]} />
      <mesh geometry={nodes.Cube091.geometry} material={nodes.Cube091.material} position={[-4.63, 4.446, -93.051]} scale={[0.24, 4.6, 11.653]} />
      <mesh geometry={nodes.Cube092.geometry} material={nodes.Cube092.material} position={[-15.317, 4.446, -104.908]} rotation={[0, Math.PI / 2, 0]} scale={[0.24, 4.6, 11.008]} />
      <mesh geometry={nodes.Cube093.geometry} material={nodes.Cube093.material} position={[-8.406, 4.446, -81.53]} rotation={[0, Math.PI / 2, 0]} scale={[0.24, 4.6, 3.718]} />
      <mesh geometry={nodes.Cube094.geometry} material={nodes.Cube094.material} position={[-22.483, 4.446, -81.53]} rotation={[0, Math.PI / 2, 0]} scale={[0.24, 4.6, 3.832]} />
      <mesh geometry={nodes.Cube095.geometry} material={nodes.Cube095.material} />
      <mesh geometry={nodes.Cube096.geometry} material={nodes.Cube096.material} position={[-7.644, 10.361, -107.498]} rotation={[Math.PI / 2, 0, -Math.PI / 2]} scale={[0.255, 0.371, 2.371]} />
      <mesh geometry={nodes.Cube097.geometry} material={nodes.Cube097.material} position={[-11.628, 10.361, -107.498]} rotation={[Math.PI / 2, 0, -Math.PI / 2]} scale={[0.255, 0.371, 2.371]} />
      <mesh geometry={nodes.Cube098.geometry} material={nodes.Cube098.material} position={[-15.786, 10.361, -107.498]} rotation={[Math.PI / 2, 0, -Math.PI / 2]} scale={[0.255, 0.371, 2.371]} />
      <mesh geometry={nodes.Cube099.geometry} material={nodes.Cube099.material} position={[-19.86, 10.361, -107.498]} rotation={[Math.PI / 2, 0, -Math.PI / 2]} scale={[0.255, 0.371, 2.371]} />
      <mesh geometry={nodes.Cube100.geometry} material={nodes.Cube100.material} position={[-24.292, 10.361, -107.498]} rotation={[Math.PI / 2, 0, -Math.PI / 2]} scale={[0.255, 0.371, 2.371]} />
      <mesh geometry={nodes.Cube101.geometry} material={nodes.Cube101.material} position={[-28.243, 10.361, -103.066]} rotation={[Math.PI / 2, 0, -Math.PI / 2]} scale={[0.255, 0.371, 2.371]} />
      <mesh geometry={nodes.Cube102.geometry} material={nodes.Cube102.material} position={[-28.243, 10.361, -98.014]} rotation={[Math.PI / 2, 0, -Math.PI / 2]} scale={[0.255, 0.371, 2.371]} />
      <mesh geometry={nodes.Cube103.geometry} material={nodes.Cube103.material} position={[-28.243, 10.361, -88.989]} rotation={[Math.PI / 2, 0, -Math.PI / 2]} scale={[0.255, 0.371, 2.371]} />
      <mesh geometry={nodes.Cube104.geometry} material={nodes.Cube104.material} position={[-28.243, 10.361, -83.302]} rotation={[Math.PI / 2, 0, -Math.PI / 2]} scale={[0.255, 0.371, 2.371]} />
      <mesh geometry={nodes.Cube105.geometry} material={nodes.Cube105.material} position={[-2.525, 10.361, -103.066]} rotation={[Math.PI / 2, 0, -Math.PI / 2]} scale={[0.255, 0.371, 2.371]} />
      <mesh geometry={nodes.Cube106.geometry} material={nodes.Cube106.material} position={[-2.525, 10.361, -98.533]} rotation={[Math.PI / 2, 0, -Math.PI / 2]} scale={[0.255, 0.371, 2.371]} />
      <mesh geometry={nodes.Cube107.geometry} material={nodes.Cube107.material} position={[-2.525, 10.361, -93.112]} rotation={[Math.PI / 2, 0, -Math.PI / 2]} scale={[0.255, 0.371, 2.371]} />
      <mesh geometry={nodes.Cube108.geometry} material={nodes.Cube108.material} position={[-2.525, 10.361, -87.688]} rotation={[Math.PI / 2, 0, -Math.PI / 2]} scale={[0.255, 0.371, 2.371]} />
      <mesh geometry={nodes.Cube109.geometry} material={nodes.Cube109.material} position={[-2.525, 10.361, -82.533]} rotation={[Math.PI / 2, 0, -Math.PI / 2]} scale={[0.255, 0.371, 2.371]} />
      <mesh geometry={nodes.Plane002.geometry} material={nodes.Plane002.material} position={[-12.721, 12.616, -96.588]} scale={[18.656, 1, 15.169]} />
      <mesh geometry={nodes.Cube110.geometry} material={nodes.Cube110.material} position={[-11.994, 1.909, -62.683]} scale={[0.15, 2.01, 19]} />
      <mesh geometry={nodes.Cube111.geometry} material={nodes.Cube111.material} position={[-18.895, 1.909, -62.683]} scale={[0.15, 2.01, 19]} />
      <mesh geometry={nodes.Cube112.geometry} material={nodes.Cube112.material} position={[-23.208, 1.447, -43.79]} scale={[4.213, 1.594, 0.052]} />
      <mesh geometry={nodes.Cube113.geometry} material={nodes.Cube113.material} position={[-11.711, 1.94, -43.79]} scale={[4.213, 1.923, 0.052]} />
      <mesh geometry={nodes.Baseboard.geometry} material={materials.Baseboard_material} />
      <mesh geometry={nodes.Baseboard001.geometry} material={materials.Baseboard_material} />
      <mesh geometry={nodes.Cube002.geometry} material={materials['Material.008']} position={[-25.442, 1.193, -72.603]} scale={[0.15, 1.343, 8.562]} />
      <mesh geometry={nodes.Cube114.geometry} material={materials['Material.007']} position={[-41.79, 1.911, -114.503]} scale={[0.15, 2.01, 6.424]} />
      <mesh geometry={nodes.Cube115.geometry} material={materials['Material.009']} position={[-45.82, 1.911, -114.503]} scale={[0.15, 2.01, 6.424]} />
      <mesh geometry={nodes.Cube116.geometry} material={materials['Material.010']} position={[-70.474, 1.911, -114.503]} scale={[0.15, 2.01, 6.424]} />
      <mesh geometry={nodes.Cube117.geometry} material={materials['Material.011']} position={[-67.651, 1.911, -114.503]} scale={[0.15, 2.01, 6.424]} />
      <mesh geometry={nodes.Cube118.geometry} material={materials['Material.012']} position={[-56.875, 1.911, -120.963]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 10.816]} />
      <mesh geometry={nodes.Cube119.geometry} material={materials['Material.013']} position={[-53, 1.911, -125.904]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 20.007]} />
      <mesh geometry={nodes.Cube120.geometry} material={nodes.Cube120.material} position={[-37.493, 1.911, -119.182]} scale={[0.15, 2.01, 2.113]} />
      <mesh geometry={nodes.Cube121.geometry} material={nodes.Cube121.material} position={[-39.673, 1.911, -121.184]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.285]} />
      <mesh geometry={nodes.Cube122.geometry} material={nodes.Cube122.material} position={[-31.299, 1.911, -119.182]} scale={[0.15, 2.01, 2.113]} />
      <mesh geometry={nodes.Cube123.geometry} material={nodes.Cube123.material} position={[-34.493, 1.911, -116.493]} scale={[0.15, 2.01, 2.113]} />
      <mesh geometry={nodes.Cube124.geometry} material={nodes.Cube124.material} position={[-29.225, 1.911, -118.41]} scale={[0.15, 2.01, 2.113]} />
      <mesh geometry={nodes.Cube126.geometry} material={nodes.Cube126.material} position={[-38.431, 1.911, -109.966]} scale={[0.15, 2.01, 2.113]} />
      <mesh geometry={nodes.Cube127.geometry} material={nodes.Cube127.material} position={[-35.087, 1.911, -114.462]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 0.689]} />
      <mesh geometry={nodes.Cube128.geometry} material={nodes.Cube128.material} position={[-33.762, 1.911, -108.048]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 0.672]} />
      <mesh geometry={nodes.Cube129.geometry} material={nodes.Cube129.material} position={[-30.018, 1.911, -109.599]} scale={[0.15, 2.01, 3.289]} />
      <mesh geometry={nodes.Cube130.geometry} material={nodes.Cube130.material} position={[-27.461, 1.911, -109.966]} scale={[0.15, 2.01, 5.071]} />
      <mesh geometry={nodes.Cube131.geometry} material={nodes.Cube131.material} position={[-34.489, 1.911, -101.769]} scale={[0.15, 2.01, 6.451]} />
      <mesh geometry={nodes.Cube132.geometry} material={nodes.Cube132.material} position={[-33.053, 1.911, -109.966]} scale={[0.15, 2.01, 2.113]} />
      <mesh geometry={nodes.Cube133.geometry} material={materials['Material.014']} position={[-31.541, 1.911, -112.009]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 1.518]} />
      <mesh geometry={nodes.Cube134.geometry} material={materials['Material.015']} position={[-32.923, 1.911, -117.224]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 1.518]} />
      <mesh geometry={nodes.Cube125.geometry} material={materials['Material.016']} position={[-27.85, 1.911, -120.456]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 1.518]} />
      <mesh geometry={nodes.Cube135.geometry} material={materials['Material.017']} position={[-26.216, 1.911, -114.946]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 1.518]} />
      <mesh geometry={nodes.Cube136.geometry} material={nodes.Cube136.material} position={[-24.789, 1.911, -113.305]} scale={[0.15, 2.01, 1.713]} />
      <mesh geometry={nodes.Cube137.geometry} material={nodes.Cube137.material} position={[-33.196, 1.911, -127.851]} scale={[0.15, 2.01, 2.113]} />
      <mesh geometry={nodes.Cube138.geometry} material={nodes.Cube138.material} position={[-28.979, 1.911, -122.73]} scale={[0.15, 2.01, 2.113]} />
      <mesh geometry={nodes.Cube139.geometry} material={materials['Material.018']} position={[-17.214, 1.911, -129.771]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 15.986]} />
      <mesh geometry={nodes.Cube140.geometry} material={nodes.Cube140.material} position={[-1.16, 1.911, -126.508]} scale={[0.15, 2.01, 3.414]} />
      <mesh geometry={nodes.Cube141.geometry} material={materials['Material.027']} position={[0.418, 1.911, -123.247]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 1.518]} />
      <mesh geometry={nodes.Cube142.geometry} material={nodes.Cube142.material} position={[1.852, 1.911, -128.622]} scale={[0.15, 2.01, 5.444]} />
      <mesh geometry={nodes.Cube143.geometry} material={materials['Material.028']} position={[3.801, 1.911, -133.924]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 1.981]} />
      <mesh geometry={nodes.Cube144.geometry} material={nodes.Cube144.material} position={[5.565, 1.911, -128.622]} scale={[0.15, 2.01, 5.444]} />
      <mesh geometry={nodes.Cube145.geometry} material={nodes.Cube145.material} position={[1.852, 1.911, -106.174]} scale={[0.15, 2.01, 5.444]} />
      <mesh geometry={nodes.Cube146.geometry} material={materials['Material.036']} position={[3.72, 1.911, -100.873]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 1.981]} />
      <mesh geometry={nodes.Cube147.geometry} material={nodes.Cube147.material} position={[5.544, 1.911, -98.535]} scale={[0.15, 2.01, 2.487]} />
      <mesh geometry={nodes.Cube148.geometry} material={materials['Material.037']} position={[2.926, 1.911, -96.186]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.593]} />
      <mesh geometry={nodes.Cube149.geometry} material={materials['Material.038']} position={[3.247, 1.911, -91.844]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.939]} />
      <mesh geometry={nodes.Cube150.geometry} material={materials['Material.039']} position={[7.04, 1.911, -123.247]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 1.518]} />
      <mesh geometry={nodes.Cube151.geometry} material={nodes.Cube151.material} position={[8.48, 1.911, -117.84]} scale={[0.15, 2.01, 5.444]} />
      <mesh geometry={nodes.Cube152.geometry} material={materials['Material.040']} position={[7.04, 1.911, -112.554]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 1.518]} />
      <mesh geometry={nodes.Cube153.geometry} material={nodes.Cube153.material} position={[5.836, 1.911, -109.442]} scale={[0.15, 2.01, 3.189]} />
      <mesh geometry={nodes.Cube154.geometry} material={materials['Material.041']} position={[7.694, 1.911, -100.901]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 1.981]} />
      <mesh geometry={nodes.Cube155.geometry} material={materials['Material.042']} position={[10.631, 1.911, -106.386]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 4.915]} />
      <mesh geometry={nodes.Cube156.geometry} material={nodes.Cube156.material} position={[15.383, 1.911, -101.013]} scale={[0.15, 2.01, 5.444]} />
      <mesh geometry={nodes.Cube157.geometry} material={materials['Material.043']} position={[13.44, 1.911, -95.772]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 1.981]} />
      <mesh geometry={nodes.Cube158.geometry} material={nodes.Cube158.material} position={[12.986, 1.911, -98.191]} scale={[0.15, 2.01, 2.487]} />
      <mesh geometry={nodes.Cube159.geometry} material={nodes.Cube159.material} position={[11.633, 1.911, -93.272]} scale={[0.15, 2.01, 2.487]} />
      <mesh geometry={nodes.Cube160.geometry} material={materials['Material.047']} position={[10.631, 1.911, -106.386]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 4.915]} />
      <mesh geometry={nodes.Cube161.geometry} material={materials['Material.065']} position={[-1.607, 1.911, -58.848]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 1.981]} />
      <mesh geometry={nodes.Cube162.geometry} material={materials['Material.066']} position={[-3.449, 1.911, -56.905]} rotation={[0, -0.02, 0]} scale={[0.15, 2.01, 1.981]} />
      <mesh geometry={nodes.Cube164.geometry} material={materials['Material.068']} position={[-7.187, 1.911, -54.573]} rotation={[0, -0.018, 0]} scale={[0.15, 2.01, 1.981]} />
      <mesh geometry={nodes.Cube163.geometry} material={materials['Material.069']} position={[-7.022, 1.911, -61.706]} rotation={[0, -0.02, 0]} scale={[0.15, 2.01, 1.981]} />
      <mesh geometry={nodes.Cube165.geometry} material={materials['Material.070']} position={[-5.879, 1.911, -66.842]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 6.193]} />
      <mesh geometry={nodes.Cube166.geometry} material={materials['Material.072']} position={[-7.187, 1.911, -48.338]} rotation={[0, -0.018, 0]} scale={[0.15, 2.01, 1.981]} />
      <mesh geometry={nodes.Cube167.geometry} material={materials['Material.073']} position={[-9.543, 1.911, -59.889]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.517]} />
      <mesh geometry={nodes.Cube168.geometry} material={materials['Material.074']} position={[-9.543, 1.911, -56.389]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.517]} />
      <mesh geometry={nodes.Cube169.geometry} material={materials['Material.075']} position={[8.975, 1.911, -62.014]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.939]} />
      <mesh geometry={nodes.Cube170.geometry} material={materials['Material.076']} position={[7.81, 1.911, -66.003]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 1.332]} />
      <mesh geometry={nodes.Cube171.geometry} material={materials['Material.077']} position={[2.129, 1.911, -58.848]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 1.981]} />
      <mesh geometry={nodes.Cube172.geometry} material={materials['Material.078']} position={[3.943, 1.911, -56.905]} rotation={[0, -0.02, 0]} scale={[0.15, 2.01, 1.981]} />
      <mesh geometry={nodes.Cube173.geometry} material={materials['Material.079']} position={[7.495, 1.911, -60.12]} rotation={[0, -0.02, 0]} scale={[0.15, 2.01, 1.981]} />
      <mesh geometry={nodes.Cube174.geometry} material={materials['Material.080']} position={[2.129, 1.911, -55.023]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 1.981]} />
      <mesh geometry={nodes.Cube175.geometry} material={materials['Material.081']} position={[2.129, 1.911, -51.095]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 1.981]} />
      <mesh geometry={nodes.Cube176.geometry} material={materials['Material.087']} position={[8.919, 1.911, -20.499]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.939]} />
      <mesh geometry={nodes.Cube177.geometry} material={materials['Material.088']} position={[4.404, 1.911, -15.466]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.939]} />
      <mesh geometry={nodes.Cube178.geometry} material={materials['Material.089']} position={[8.919, 1.911, -10.462]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.939]} />
      <mesh geometry={nodes.Cube179.geometry} material={materials['Material.091']} position={[-15.162, 1.911, -16.226]} rotation={[0, -0.012, 0]} scale={[0.15, 2.01, 2.939]} />
      <mesh geometry={nodes.Cube180.geometry} material={materials['Material.092']} position={[-11.545, 1.911, -16.226]} rotation={[0, -0.012, 0]} scale={[0.15, 2.01, 2.939]} />
      <mesh geometry={nodes.Cube181.geometry} material={materials['Material.093']} position={[-7.119, 1.911, -15.466]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 4.458]} />
      <mesh geometry={nodes.Cube182.geometry} material={materials['Material.094']} position={[-2.849, 1.911, -16.226]} rotation={[0, -0.012, 0]} scale={[0.15, 2.01, 2.939]} />
      <mesh geometry={nodes.Cube183.geometry} material={materials['Material.095']} position={[-1.273, 1.911, -9.58]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.939]} />
      <mesh geometry={nodes.Cube184.geometry} material={materials['Material.096']} position={[-13.623, 1.911, 2.528]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 25.415]} />
      <mesh geometry={nodes.Cube185.geometry} material={nodes.Cube185.material} position={[-18.895, 1.909, -62.683]} scale={[0.15, 2.01, 19]} />
      <mesh geometry={nodes.Cube186.geometry} material={nodes.Cube186.material} position={[-87.951, 1.909, -69.77]} scale={[0.15, 2.01, 19]} />
      <mesh geometry={nodes.Cube187.geometry} material={materials['Material.098']} position={[-97.657, 2.2, -19.878]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.247, 3.373]} />
      <mesh geometry={nodes.Cube188.geometry} material={materials['Material.099']} position={[-98.018, 2.2, -17.195]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.247, 11.937]} />
      <mesh geometry={nodes.Cube189.geometry} material={materials['Material.100']} position={[-94.369, 1.909, -25.183]} scale={[0.15, 2.01, 5.241]} />
      <mesh geometry={nodes.Cube190.geometry} material={materials['Material.101']} position={[-94.369, 1.909, -35.568]} scale={[0.15, 2.01, 1.697]} />
      <mesh geometry={nodes.Cube191.geometry} material={materials['Material.102']} position={[-92.727, 1.909, -30.241]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 1.697]} />
      <mesh geometry={nodes.Cube192.geometry} material={materials['Material.103']} position={[-91.153, 1.909, -28.636]} scale={[0.15, 2.01, 1.697]} />
      <mesh geometry={nodes.Cube193.geometry} material={materials['Material.104']} position={[-86.349, 1.909, -20.699]} scale={[0.15, 2.01, 3.525]} />
      <mesh geometry={nodes.Cube194.geometry} material={materials['Material.105']} position={[-85.821, 1.909, -24.069]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 0.404]} />
      <mesh geometry={nodes.Cube195.geometry} material={materials['Material.106']} position={[-86.834, 1.909, -27.237]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 1.338]} />
      <mesh geometry={nodes.Cube196.geometry} material={materials['Material.107']} position={[-88.395, 1.909, -33.549]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.675]} />
      <mesh geometry={nodes.Cube197.geometry} material={materials['Material.108']} position={[-80.665, 1.909, -52.166]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.675]} />
      <mesh geometry={nodes.Cube198.geometry} material={materials['Material.109']} position={[-80.743, 1.909, -50.248]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.675]} />
      <mesh geometry={nodes.Cube199.geometry} material={materials['Material.110']} position={[-80.629, 1.909, -55]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.675]} />
      <mesh geometry={nodes.Cube200.geometry} material={materials['Material.111']} position={[-80.548, 1.909, -56.939]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.675]} />
      <mesh geometry={nodes.Cube201.geometry} material={materials['Material.112']} position={[-80.555, 1.909, -59.666]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.675]} />
      <mesh geometry={nodes.Cube202.geometry} material={materials['Material.113']} position={[-80.446, 1.909, -61.695]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.675]} />
      <mesh geometry={nodes.Cube203.geometry} material={materials['Material.114']} position={[-80.464, 1.909, -64.526]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.675]} />
      <mesh geometry={nodes.Cube204.geometry} material={materials['Material.115']} position={[-80.398, 1.909, -66.549]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.675]} />
      <mesh geometry={nodes.Cube205.geometry} material={materials['Material.116']} position={[-82.723, 1.909, -69.183]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 5.05]} />
      <mesh geometry={nodes.Cube206.geometry} material={materials['Material.117']} position={[-80.351, 1.909, -70.987]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.675]} />
      <mesh geometry={nodes.Cube207.geometry} material={materials['Material.118']} position={[-82.737, 1.909, -73.709]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 5.234]} />
      <mesh geometry={nodes.Cube208.geometry} material={materials['Material.119']} position={[-80.888, 1.909, -75.853]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 3.419]} />
      <mesh geometry={nodes.Cube209.geometry} material={materials['Material.120']} position={[-80.743, 1.909, -50.248]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.675]} />
      <mesh geometry={nodes.Cube210.geometry} material={materials['Material.121']} position={[-72.59, 1.909, -50.248]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.675]} />
      <mesh geometry={nodes.Cube211.geometry} material={materials['Material.122']} position={[-67.341, 1.909, -75.769]} rotation={[0, Math.PI / 2, 0]} scale={[0.151, 2.01, 7.463]} />
      <mesh geometry={nodes.Cube212.geometry} material={materials['Material.123']} position={[-72.09, 1.909, -73.709]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.675]} />
      <mesh geometry={nodes.Cube213.geometry} material={materials['Material.124']} position={[-72.223, 1.909, -70.987]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.675]} />
      <mesh geometry={nodes.Cube214.geometry} material={materials['Material.125']} position={[-72.255, 1.909, -69.183]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.675]} />
      <mesh geometry={nodes.Cube215.geometry} material={materials['Material.126']} position={[-72.32, 1.909, -66.549]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.675]} />
      <mesh geometry={nodes.Cube216.geometry} material={materials['Material.127']} position={[-72.356, 1.909, -64.526]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.675]} />
      <mesh geometry={nodes.Cube217.geometry} material={materials['Material.128']} position={[-72.386, 1.909, -61.695]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.675]} />
      <mesh geometry={nodes.Cube218.geometry} material={materials['Material.129']} position={[-72.415, 1.909, -59.666]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.675]} />
      <mesh geometry={nodes.Cube219.geometry} material={materials['Material.130']} position={[-72.455, 1.909, -56.939]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.675]} />
      <mesh geometry={nodes.Cube220.geometry} material={materials['Material.131']} position={[-72.46, 1.909, -55]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.675]} />
      <mesh geometry={nodes.Cube221.geometry} material={materials['Material.132']} position={[-72.512, 1.909, -52.166]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.675]} />
      <mesh geometry={nodes.Cube222.geometry} material={nodes.Cube222.material} position={[-84.134, 1.911, -78.517]} scale={[0.15, 2.01, 2.568]} />
      <mesh geometry={nodes.Cube223.geometry} material={nodes.Cube223.material} position={[-82.513, 1.909, -87.975]} scale={[0.193, 2.01, 2.089]} />
      <mesh geometry={nodes.Cube224.geometry} material={nodes.Cube224.material} position={[-61.1, 1.911, -106.057]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 1.854]} />
      <mesh geometry={nodes.Cube225.geometry} material={nodes.Cube225.material} position={[-75.775, 1.911, -80.891]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 8.441]} />
      <mesh geometry={nodes.Cube226.geometry} material={nodes.Cube226.material} position={[-76.373, 1.911, -90.147]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.568]} />
      <mesh geometry={nodes.Cube227.geometry} material={materials['Material.133']} position={[-65.586, 1.909, -100.855]} scale={[0.15, 2.01, 5.241]} />
      <mesh geometry={nodes.Cube228.geometry} material={nodes.Cube228.material} position={[-55.543, 1.911, -80.891]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 8.441]} />
      <mesh geometry={nodes.Cube229.geometry} material={materials['Material.146']} position={[-59.725, 1.909, -73.643]} scale={[0.15, 2.01, 2.189]} />
      <mesh geometry={nodes.Cube230.geometry} material={materials['Material.147']} position={[-56.648, 1.909, -73.959]} scale={[0.15, 2.01, 2.675]} />
      <mesh geometry={nodes.Cube231.geometry} material={materials['Material.148']} position={[-49.263, 1.909, -76.416]} rotation={[0, Math.PI / 2, 0]} scale={[0.151, 2.01, 7.463]} />
      <mesh geometry={nodes.Cube232.geometry} material={materials['Material.161']} position={[-38.272, 1.911, -91.283]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 1.337]} />
      <mesh geometry={nodes.Cube233.geometry} material={materials['Material.162']} position={[-39.683, 1.909, -89.091]} scale={[0.15, 2.01, 2.34]} />
      <mesh geometry={nodes.Cube234.geometry} material={materials['Material.163']} position={[-30.051, 1.909, -74.245]} rotation={[0, Math.PI / 2, 0]} scale={[0.151, 2.01, 4.557]} />
      <mesh geometry={nodes.Cube235.geometry} material={materials['Material.164']} position={[-37.841, 1.909, -82.473]} rotation={[0, Math.PI / 2, 0]} scale={[0.151, 2.01, 4.557]} />
      <mesh geometry={nodes.Cube236.geometry} material={materials['Material.167']} position={[-72.935, 1.911, -130.443]} scale={[0.15, 2.01, 4.542]} />
      <mesh geometry={nodes.Cube237.geometry} material={nodes.Cube237.material} position={[-79.179, 1.911, -134.877]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 6.425]} />
      <mesh geometry={nodes.Cube238.geometry} material={nodes.Cube238.material} position={[-83.099, 1.911, -129.308]} rotation={[0, Math.PI / 2, 0]} scale={[0.195, 2.01, 6.425]} />
      <mesh geometry={nodes.Cube239.geometry} material={nodes.Cube239.material} position={[-72.423, 1.911, -121.116]} rotation={[0, Math.PI / 2, 0]} scale={[0.195, 2.01, 2.111]} />
      <mesh geometry={nodes.Cube240.geometry} material={nodes.Cube240.material} position={[-85.92, 1.909, -127.846]} rotation={[Math.PI, -0.006, Math.PI]} scale={[0.15, 2.01, 1.6]} />
      <mesh geometry={nodes.Cube241.geometry} material={nodes.Cube241.material} position={[-80.728, 1.909, -124.196]} rotation={[Math.PI, -0.006, Math.PI]} scale={[0.15, 2.01, 1.6]} />
      <mesh geometry={nodes.Cube242.geometry} material={nodes.Cube242.material} position={[-108.523, 1.911, -134.877]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 33.064]} />
      <mesh geometry={nodes.Cube243.geometry} material={nodes.Cube243.material} position={[-134.072, 1.911, -129.308]} rotation={[0, Math.PI / 2, 0]} scale={[0.195, 2.01, 6.425]} />
      <mesh geometry={nodes.Cube244.geometry} material={nodes.Cube244.material} position={[-127.838, 1.909, -126.185]} scale={[0.15, 2.01, 3.231]} />
      <mesh geometry={nodes.Cube245.geometry} material={nodes.Cube245.material} position={[-125.06, 1.909, -126.246]} scale={[0.15, 2.01, 3.231]} />
      <mesh geometry={nodes.Cube246.geometry} material={nodes.Cube246.material} position={[-116.94, 1.827, -130.843]} rotation={[1.603, -1.565, 1.571]} scale={[0.15, 2.01, 4.48]} />
      <mesh geometry={nodes.Cube247.geometry} material={nodes.Cube247.material} position={[-118.925, 1.909, -128.604]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.455]} />
      <mesh geometry={nodes.Cube248.geometry} material={nodes.Cube248.material} position={[-108.917, 1.909, -128.165]} rotation={[Math.PI, -0.006, Math.PI]} scale={[0.15, 2.01, 1.6]} />
      <mesh geometry={nodes.Cube249.geometry} material={nodes.Cube249.material} position={[-102.444, 1.909, -127.152]} rotation={[Math.PI, -0.006, Math.PI]} scale={[0.15, 2.01, 2.649]} />
      <mesh geometry={nodes.Cube250.geometry} material={nodes.Cube250.material} position={[-104.567, 1.909, -124.598]} rotation={[0, -1.564, 0]} scale={[0.15, 2.01, 2.248]} />
      <mesh geometry={nodes.Cube251.geometry} material={nodes.Cube251.material} position={[-107.878, 2.051, -110.454]} rotation={[0, 0, -3.14]} scale={[0.15, 2.01, 2.711]} />
      <mesh geometry={nodes.Cube252.geometry} material={nodes.Cube252.material} position={[-107.438, 1.945, -106.204]} rotation={[-1.597, 1.564, -1.577]} scale={[0.15, 2.01, 0.709]} />
      <mesh geometry={nodes.Cube253.geometry} material={nodes.Cube253.material} position={[-106.659, 1.946, -107.041]} rotation={[0, 0, -3.14]} scale={[0.15, 2.01, 0.777]} />
      <mesh geometry={nodes.Cube254.geometry} material={nodes.Cube254.material} position={[-107.219, 1.945, -107.994]} rotation={[-1.597, 1.564, -1.577]} scale={[0.15, 2.01, 0.709]} />
      <mesh geometry={nodes.Cube255.geometry} material={nodes.Cube255.material} position={[-107.577, 2.052, -118.095]} rotation={[0, 0, -3.14]} scale={[0.15, 2.01, 3.231]} />
      <mesh geometry={nodes.Cube256.geometry} material={nodes.Cube256.material} position={[-107.013, 1.945, -114.973]} rotation={[-1.597, 1.564, -1.577]} scale={[0.15, 2.01, 0.709]} />
      <mesh geometry={nodes.Cube257.geometry} material={nodes.Cube257.material} position={[-106.453, 1.946, -114.021]} rotation={[0, 0, -3.14]} scale={[0.15, 2.01, 0.777]} />
      <mesh geometry={nodes.Cube258.geometry} material={nodes.Cube258.material} position={[-107.232, 1.945, -113.183]} rotation={[-1.597, 1.564, -1.577]} scale={[0.15, 2.01, 0.709]} />
      <mesh geometry={nodes.Cube259.geometry} material={nodes.Cube259.material} position={[-108.007, 2.051, -102.812]} rotation={[0, 0, -3.14]} scale={[0.15, 2.01, 3.327]} />
      <mesh geometry={nodes.Cube260.geometry} material={nodes.Cube260.material} position={[-121.506, 2.051, -102.812]} rotation={[0, 0, -3.14]} scale={[0.15, 2.01, 3.327]} />
      <mesh geometry={nodes.Cube261.geometry} material={nodes.Cube261.material} position={[-120.731, 1.945, -113.183]} rotation={[-1.597, 1.564, -1.577]} scale={[0.15, 2.01, 0.709]} />
      <mesh geometry={nodes.Cube262.geometry} material={nodes.Cube262.material} position={[-119.953, 1.946, -114.021]} rotation={[0, 0, -3.14]} scale={[0.15, 2.01, 0.777]} />
      <mesh geometry={nodes.Cube263.geometry} material={nodes.Cube263.material} position={[-120.513, 1.945, -114.973]} rotation={[-1.597, 1.564, -1.577]} scale={[0.15, 2.01, 0.709]} />
      <mesh geometry={nodes.Cube264.geometry} material={nodes.Cube264.material} position={[-121.077, 2.052, -118.095]} rotation={[0, 0, -3.14]} scale={[0.15, 2.01, 3.231]} />
      <mesh geometry={nodes.Cube265.geometry} material={nodes.Cube265.material} position={[-120.718, 1.945, -107.994]} rotation={[-1.597, 1.564, -1.577]} scale={[0.15, 2.01, 0.709]} />
      <mesh geometry={nodes.Cube266.geometry} material={nodes.Cube266.material} position={[-120.159, 1.946, -107.041]} rotation={[0, 0, -3.14]} scale={[0.15, 2.01, 0.777]} />
      <mesh geometry={nodes.Cube267.geometry} material={nodes.Cube267.material} position={[-120.937, 1.945, -106.204]} rotation={[-1.597, 1.564, -1.577]} scale={[0.15, 2.01, 0.709]} />
      <mesh geometry={nodes.Cube268.geometry} material={nodes.Cube268.material} position={[-121.378, 2.051, -110.454]} rotation={[0, 0, -3.14]} scale={[0.15, 2.01, 2.711]} />
      <mesh geometry={nodes.Cube269.geometry} material={nodes.Cube269.material} position={[-115.272, 1.909, -110.454]} scale={[0.15, 2.01, 2.711]} />
      <mesh geometry={nodes.Cube270.geometry} material={nodes.Cube270.material} position={[-115.713, 2.016, -106.204]} rotation={[1.603, -1.565, 1.571]} scale={[0.15, 2.01, 0.709]} />
      <mesh geometry={nodes.Cube271.geometry} material={nodes.Cube271.material} position={[-115.573, 1.909, -118.095]} rotation={[0, 0, Math.PI]} scale={[0.15, 2.01, 3.231]} />
      <mesh geometry={nodes.Cube272.geometry} material={nodes.Cube272.material} position={[-116.137, 2.016, -114.973]} rotation={[1.603, -1.565, 1.571]} scale={[0.15, 2.01, 0.709]} />
      <mesh geometry={nodes.Cube273.geometry} material={nodes.Cube273.material} position={[-116.697, 2.016, -114.021]} scale={[0.15, 2.01, 0.777]} />
      <mesh geometry={nodes.Cube274.geometry} material={nodes.Cube274.material} position={[-115.918, 2.016, -113.183]} rotation={[1.603, -1.565, 1.571]} scale={[0.15, 2.01, 0.709]} />
      <mesh geometry={nodes.Cube275.geometry} material={nodes.Cube275.material} position={[-115.144, 1.909, -102.812]} scale={[0.15, 2.01, 3.327]} />
      <mesh geometry={nodes.Column002.geometry} material={materials['Column_material.002']} position={[-114.157, 0.023, -119.921]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top002.geometry} material={materials['Column_rect.002']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column003.geometry} material={materials['Column_material.003']} position={[-113.032, 0.023, -119.921]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top003.geometry} material={materials['Column_rect.003']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column004.geometry} material={materials['Column_material.004']} position={[-111.955, 0.023, -119.921]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top004.geometry} material={materials['Column_rect.004']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column005.geometry} material={materials['Column_material.005']} position={[-110.977, 0.023, -119.921]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top005.geometry} material={materials['Column_rect.005']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column006.geometry} material={materials['Column_material.006']} position={[-110.101, 0.023, -119.921]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top006.geometry} material={materials['Column_rect.006']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column007.geometry} material={materials['Column_material.007']} position={[-109.192, 0.023, -119.921]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top007.geometry} material={materials['Column_rect.007']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column008.geometry} material={materials['Column_material.008']} position={[-108.261, 0.023, -119.921]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top008.geometry} material={materials['Column_rect.008']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column009.geometry} material={materials['Column_material.009']} position={[-115.128, 0.023, -119.921]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top009.geometry} material={materials['Column_rect.009']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column010.geometry} material={materials['Column_material.010']} position={[-115.128, 0.023, -119.921]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top010.geometry} material={materials['Column_rect.010']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column011.geometry} material={materials['Column_material.011']} position={[-108.261, 0.023, -119.921]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top011.geometry} material={materials['Column_rect.011']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column012.geometry} material={materials['Column_material.012']} position={[-109.192, 0.023, -119.921]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top012.geometry} material={materials['Column_rect.012']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column013.geometry} material={materials['Column_material.013']} position={[-110.101, 0.023, -119.921]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top013.geometry} material={materials['Column_rect.013']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column014.geometry} material={materials['Column_material.014']} position={[-110.977, 0.023, -119.921]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top014.geometry} material={materials['Column_rect.014']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column015.geometry} material={materials['Column_material.015']} position={[-111.955, 0.023, -119.921]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top015.geometry} material={materials['Column_rect.015']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column016.geometry} material={materials['Column_material.016']} position={[-113.032, 0.023, -119.921]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top016.geometry} material={materials['Column_rect.016']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column017.geometry} material={materials['Column_material.017']} position={[-114.157, 0.023, -119.921]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top017.geometry} material={materials['Column_rect.017']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column018.geometry} material={materials['Column_material.018']} position={[-114.157, 0.023, -119.921]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top018.geometry} material={materials['Column_rect.018']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column019.geometry} material={materials['Column_material.019']} position={[-113.032, 0.023, -119.921]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top019.geometry} material={materials['Column_rect.019']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column020.geometry} material={materials['Column_material.020']} position={[-111.955, 0.023, -119.921]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top020.geometry} material={materials['Column_rect.020']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column021.geometry} material={materials['Column_material.021']} position={[-110.977, 0.023, -119.921]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top021.geometry} material={materials['Column_rect.021']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column022.geometry} material={materials['Column_material.022']} position={[-110.101, 0.023, -119.921]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top022.geometry} material={materials['Column_rect.022']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column023.geometry} material={materials['Column_material.023']} position={[-109.192, 0.023, -119.921]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top023.geometry} material={materials['Column_rect.023']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column024.geometry} material={materials['Column_material.024']} position={[-108.261, 0.023, -119.921]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top024.geometry} material={materials['Column_rect.024']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column025.geometry} material={materials['Column_material.025']} position={[-115.128, 0.023, -119.921]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top025.geometry} material={materials['Column_rect.025']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column026.geometry} material={materials['Column_material.026']} position={[-115.128, 0.023, -117.367]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top026.geometry} material={materials['Column_rect.026']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column027.geometry} material={materials['Column_material.027']} position={[-108.261, 0.023, -117.367]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top027.geometry} material={materials['Column_rect.027']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column028.geometry} material={materials['Column_material.028']} position={[-115.128, 0.023, -117.367]} scale={[1, 1.714, 1]} />
      <mesh geometry={nodes.Column029.geometry} material={materials['Column_material.029']} position={[-108.261, 0.023, -117.367]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top028.geometry} material={materials['Column_rect.028']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column030.geometry} material={materials['Column_material.030']} position={[-109.192, 0.023, -117.367]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top029.geometry} material={materials['Column_rect.029']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column031.geometry} material={materials['Column_material.031']} position={[-110.101, 0.023, -117.367]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top030.geometry} material={materials['Column_rect.030']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column032.geometry} material={materials['Column_material.032']} position={[-110.977, 0.023, -117.367]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top031.geometry} material={materials['Column_rect.031']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column033.geometry} material={materials['Column_material.033']} position={[-111.955, 0.023, -117.367]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top032.geometry} material={materials['Column_rect.032']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column034.geometry} material={materials['Column_material.034']} position={[-113.032, 0.023, -117.367]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top033.geometry} material={materials['Column_rect.033']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column035.geometry} material={materials['Column_material.035']} position={[-114.157, 0.023, -117.367]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top034.geometry} material={materials['Column_rect.034']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column036.geometry} material={materials['Column_material.036']} position={[-114.157, 0.023, -114.786]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top035.geometry} material={materials['Column_rect.035']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column037.geometry} material={materials['Column_material.037']} position={[-113.032, 0.023, -114.786]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top036.geometry} material={materials['Column_rect.036']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column038.geometry} material={materials['Column_material.038']} position={[-111.955, 0.023, -114.786]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top037.geometry} material={materials['Column_rect.037']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column039.geometry} material={materials['Column_material.039']} position={[-110.977, 0.023, -114.786]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top038.geometry} material={materials['Column_rect.038']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column040.geometry} material={materials['Column_material.040']} position={[-110.101, 0.023, -114.786]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top039.geometry} material={materials['Column_rect.039']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column041.geometry} material={materials['Column_material.041']} position={[-109.192, 0.023, -114.786]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top040.geometry} material={materials['Column_rect.040']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column042.geometry} material={materials['Column_material.042']} position={[-108.261, 0.023, -114.786]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top041.geometry} material={materials['Column_rect.041']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column043.geometry} material={materials['Column_material.043']} position={[-115.128, 0.023, -114.786]} scale={[1, 1.714, 1]} />
      <mesh geometry={nodes.Column044.geometry} material={materials['Column_material.044']} position={[-108.261, 0.023, -114.786]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top042.geometry} material={materials['Column_rect.042']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column045.geometry} material={materials['Column_material.045']} position={[-115.128, 0.023, -114.786]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top043.geometry} material={materials['Column_rect.043']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column046.geometry} material={materials['Column_material.046']} position={[-115.128, 0.023, -104.993]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top044.geometry} material={materials['Column_rect.044']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column047.geometry} material={materials['Column_material.047']} position={[-108.261, 0.023, -104.993]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top045.geometry} material={materials['Column_rect.045']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column048.geometry} material={materials['Column_material.048']} position={[-115.128, 0.023, -104.993]} scale={[1, 1.714, 1]} />
      <mesh geometry={nodes.Column049.geometry} material={materials['Column_material.049']} position={[-108.261, 0.023, -104.993]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top046.geometry} material={materials['Column_rect.046']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column050.geometry} material={materials['Column_material.050']} position={[-109.192, 0.023, -104.993]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top047.geometry} material={materials['Column_rect.047']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column051.geometry} material={materials['Column_material.051']} position={[-110.101, 0.023, -104.993]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top048.geometry} material={materials['Column_rect.048']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column052.geometry} material={materials['Column_material.052']} position={[-110.977, 0.023, -104.993]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top049.geometry} material={materials['Column_rect.049']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column053.geometry} material={materials['Column_material.053']} position={[-111.955, 0.023, -104.993]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top050.geometry} material={materials['Column_rect.050']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column054.geometry} material={materials['Column_material.054']} position={[-113.032, 0.023, -104.993]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top051.geometry} material={materials['Column_rect.051']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column055.geometry} material={materials['Column_material.055']} position={[-114.157, 0.023, -104.993]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top052.geometry} material={materials['Column_rect.052']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column056.geometry} material={materials['Column_material.056']} position={[-114.157, 0.023, -103.199]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top053.geometry} material={materials['Column_rect.053']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column057.geometry} material={materials['Column_material.057']} position={[-113.032, 0.023, -103.199]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top054.geometry} material={materials['Column_rect.054']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column058.geometry} material={materials['Column_material.058']} position={[-111.955, 0.023, -103.199]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top055.geometry} material={materials['Column_rect.055']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column059.geometry} material={materials['Column_material.059']} position={[-110.977, 0.023, -103.199]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top056.geometry} material={materials['Column_rect.056']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column060.geometry} material={materials['Column_material.060']} position={[-110.101, 0.023, -103.199]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top057.geometry} material={materials['Column_rect.057']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column061.geometry} material={materials['Column_material.061']} position={[-109.192, 0.023, -103.199]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top058.geometry} material={materials['Column_rect.058']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column062.geometry} material={materials['Column_material.062']} position={[-108.261, 0.023, -103.199]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top059.geometry} material={materials['Column_rect.059']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column063.geometry} material={materials['Column_material.063']} position={[-115.128, 0.023, -103.199]} scale={[1, 1.714, 1]} />
      <mesh geometry={nodes.Column064.geometry} material={materials['Column_material.064']} position={[-108.261, 0.023, -103.199]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top060.geometry} material={materials['Column_rect.060']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column065.geometry} material={materials['Column_material.065']} position={[-115.128, 0.023, -103.199]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top061.geometry} material={materials['Column_rect.061']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column066.geometry} material={materials['Column_material.066']} position={[-114.157, 0.023, -101.294]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top062.geometry} material={materials['Column_rect.062']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column067.geometry} material={materials['Column_material.067']} position={[-113.032, 0.023, -101.294]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top063.geometry} material={materials['Column_rect.063']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column068.geometry} material={materials['Column_material.068']} position={[-111.955, 0.023, -101.294]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top064.geometry} material={materials['Column_rect.064']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column069.geometry} material={materials['Column_material.069']} position={[-110.977, 0.023, -101.294]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top065.geometry} material={materials['Column_rect.065']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column070.geometry} material={materials['Column_material.070']} position={[-110.101, 0.023, -101.294]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top066.geometry} material={materials['Column_rect.066']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column071.geometry} material={materials['Column_material.071']} position={[-109.192, 0.023, -101.294]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top067.geometry} material={materials['Column_rect.067']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column072.geometry} material={materials['Column_material.072']} position={[-108.261, 0.023, -101.294]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top068.geometry} material={materials['Column_rect.068']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column073.geometry} material={materials['Column_material.073']} position={[-115.128, 0.023, -101.294]} scale={[1, 1.714, 1]} />
      <mesh geometry={nodes.Column074.geometry} material={materials['Column_material.074']} position={[-108.261, 0.023, -101.294]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top069.geometry} material={materials['Column_rect.069']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column075.geometry} material={materials['Column_material.075']} position={[-115.128, 0.023, -101.294]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top070.geometry} material={materials['Column_rect.070']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column076.geometry} material={materials['Column_material.076']} position={[-115.128, 0.023, -99.629]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top071.geometry} material={materials['Column_rect.071']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column077.geometry} material={materials['Column_material.077']} position={[-108.261, 0.023, -99.629]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top072.geometry} material={materials['Column_rect.072']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column078.geometry} material={materials['Column_material.078']} position={[-115.128, 0.023, -99.629]} scale={[1, 1.714, 1]} />
      <mesh geometry={nodes.Column079.geometry} material={materials['Column_material.079']} position={[-108.261, 0.023, -99.629]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top073.geometry} material={materials['Column_rect.073']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column080.geometry} material={materials['Column_material.080']} position={[-109.192, 0.023, -99.629]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top074.geometry} material={materials['Column_rect.074']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column081.geometry} material={materials['Column_material.081']} position={[-110.101, 0.023, -99.629]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top075.geometry} material={materials['Column_rect.075']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column082.geometry} material={materials['Column_material.082']} position={[-110.977, 0.023, -99.629]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top076.geometry} material={materials['Column_rect.076']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column083.geometry} material={materials['Column_material.083']} position={[-111.955, 0.023, -99.629]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top077.geometry} material={materials['Column_rect.077']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column084.geometry} material={materials['Column_material.084']} position={[-113.032, 0.023, -99.629]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top078.geometry} material={materials['Column_rect.078']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Column085.geometry} material={materials['Column_material.085']} position={[-114.157, 0.023, -99.629]} scale={[1, 1.714, 1]}>
        <mesh geometry={nodes.Column_box_top079.geometry} material={materials['Column_rect.079']} position={[0, 2.3, 0]} />
      </mesh>
      <mesh geometry={nodes.Cube276.geometry} material={nodes.Cube276.material} position={[-115.849, 1.945, -107.994]} rotation={[-1.597, 1.564, -1.577]} scale={[0.15, 2.01, 0.709]} />
      <mesh geometry={nodes.Cube277.geometry} material={nodes.Cube277.material} position={[-116.536, 1.946, -107.041]} rotation={[0, 0, -3.14]} scale={[0.15, 2.01, 0.777]} />
      <mesh geometry={nodes.Cube278.geometry} material={nodes.Cube278.material} position={[-121.048, 1.909, -121.191]} rotation={[0, -1.564, 0]} scale={[0.15, 2.01, 1.929]} />
      <mesh geometry={nodes.Cube279.geometry} material={nodes.Cube279.material} position={[-121.262, 1.909, -127.209]} rotation={[Math.PI, 0, Math.PI]} scale={[0.15, 2.01, 1.6]} />
      <mesh geometry={nodes.Cube280.geometry} material={nodes.Cube280.material} position={[-98.865, 2.016, -133.717]} scale={[0.15, 2.01, 0.8]} />
      <mesh geometry={nodes.Cube281.geometry} material={nodes.Cube281.material} position={[-96.558, 1.909, -134.705]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.455]} />
      <mesh geometry={nodes.Cube282.geometry} material={nodes.Cube282.material} position={[-92.832, 1.909, -132.856]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 1.149]} />
      <mesh geometry={nodes.Cube283.geometry} material={nodes.Cube283.material} position={[-94.108, 1.909, -133.779]} scale={[0.15, 2.01, 1.058]} />
      <mesh geometry={nodes.Cube284.geometry} material={nodes.Cube284.material} position={[-97.708, 1.909, -130.334]} scale={[0.15, 2.01, 2.649]} />
      <mesh geometry={nodes.Cube285.geometry} material={nodes.Cube285.material} position={[-91.601, 1.909, -130.334]} scale={[0.15, 2.01, 2.649]} />
      <mesh geometry={nodes.Cube286.geometry} material={nodes.Cube286.material} position={[-142.004, 2.105, -125.113]} rotation={[Math.PI, -1.535, Math.PI]} scale={[0.15, 2.01, 1.6]} />
      <mesh geometry={nodes.Cube287.geometry} material={nodes.Cube287.material} position={[-143.298, 2.105, -127.507]} rotation={[-Math.PI, 0.042, -Math.PI]} scale={[0.15, 2.01, 2.455]} />
      <mesh geometry={nodes.Column086.geometry} material={materials['Column_material.086']} position={[-142.861, 0.023, -133.508]} scale={[2.202, 1.714, 2.374]} />
      <mesh geometry={nodes.Column087.geometry} material={materials['Column_material.087']} position={[-141.861, 0.023, -133.508]} rotation={[0.424, 0, 0]} scale={[2.202, 1.714, 2.374]} />
      <mesh geometry={nodes.Column088.geometry} material={materials['Column_material.088']} position={[-141.861, 0.023, -133.508]} rotation={[0.337, -0.263, -0.638]} scale={[2.202, 1.714, 2.374]} />
      <mesh geometry={nodes.Column089.geometry} material={materials['Column_material.089']} position={[-141.861, 0.023, -133.508]} rotation={[-0.326, -0.263, -0.638]} scale={[2.202, 1.714, 2.374]} />
      <mesh geometry={nodes.Column090.geometry} material={materials['Column_material.090']} position={[-141.861, 0.023, -133.508]} rotation={[1.32, -0.263, -0.638]} scale={[2.202, 1.714, 2.374]} />
      <mesh geometry={nodes.Column091.geometry} material={materials['Column_material.091']} position={[-142.861, 0.023, -133.508]} rotation={[1.337, 0, 0]} scale={[2.202, 1.714, 2.374]} />
      <mesh geometry={nodes.Column092.geometry} material={materials['Column_material.092']} position={[-142.861, 2.023, -133.508]} rotation={[1.936, 0, 0]} scale={[2.202, 1.714, 2.374]} />
      <mesh geometry={nodes.Column093.geometry} material={materials['Column_material.093']} position={[-142.861, 2.023, -133.508]} rotation={[1.141, 0, 0]} scale={[2.202, 1.714, 2.374]} />
      <mesh geometry={nodes.Column094.geometry} material={materials['Column_material.094']} position={[-142.861, 2.023, -133.508]} rotation={[-2.114, 0, 0]} scale={[2.202, 1.714, 2.374]} />
      <mesh geometry={nodes.Cube288.geometry} material={nodes.Cube288.material} position={[-146.298, 2.105, -135.507]} rotation={[Math.PI, 0, Math.PI]} scale={[0.15, 2.01, 2.455]} />
      <mesh geometry={nodes.Cube289.geometry} material={nodes.Cube289.material} position={[-146.004, 2.105, -131.113]} rotation={[Math.PI, -1.535, Math.PI]} scale={[2.024, 2.01, 1.701]} />
      <mesh geometry={nodes.Cube290.geometry} material={nodes.Cube290.material} position={[-144.298, 2.105, -135.507]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 2.455]} />
      <mesh geometry={nodes.Cube291.geometry} material={nodes.Cube291.material} position={[-112.485, 1.841, -89.427]} rotation={[-0.724, 1.522, 0.718]} scale={[0.15, 2.01, 1.078]} />
      <mesh geometry={nodes.Cube292.geometry} material={nodes.Cube292.material} position={[-109.827, 1.894, -94.079]} rotation={[-0.724, 1.522, 0.718]} scale={[0.24, 2.01, 1.23]} />
      <mesh geometry={nodes.Cube293.geometry} material={nodes.Cube293.material} position={[-111.233, 1.866, -91.789]} rotation={[3.136, 0.037, 3.11]} scale={[0.15, 2.01, 2.568]} />
      <mesh geometry={nodes.Cube294.geometry} material={nodes.Cube294.material} position={[-113.684, 1.827, -86.061]} rotation={[3.136, 0.037, 3.11]} scale={[0.15, 2.01, 3.556]} />
      <mesh geometry={nodes.Cube295.geometry} material={nodes.Cube295.material} position={[-110.684, 1.827, -81.061]} rotation={[3.136, 0.037, 3.11]} scale={[0.15, 2.01, 3.556]} />
      <mesh geometry={nodes.Cube296.geometry} material={nodes.Cube296.material} position={[-108.233, 1.866, -86.789]} rotation={[3.136, 0.037, 3.11]} scale={[0.15, 2.01, 2.568]} />
      <mesh geometry={nodes.Cube297.geometry} material={nodes.Cube297.material} position={[-106.827, 1.894, -89.079]} rotation={[-0.724, 1.522, 0.718]} scale={[0.24, 2.01, 1.23]} />
      <mesh geometry={nodes.Cube298.geometry} material={nodes.Cube298.material} position={[-109.485, 1.841, -84.427]} rotation={[-0.724, 1.522, 0.718]} scale={[0.15, 2.01, 1.078]} />
      <mesh geometry={nodes.Cube299.geometry} material={nodes.Cube299.material} position={[-97.173, 1.841, -66.282]} rotation={[-1.252, -1.537, -1.258]} scale={[0.15, 2.01, 1.078]} />
      <mesh geometry={nodes.Cube300.geometry} material={nodes.Cube300.material} position={[-99.609, 1.894, -61.51]} rotation={[-1.252, -1.537, -1.258]} scale={[0.24, 2.01, 1.23]} />
      <mesh geometry={nodes.Cube301.geometry} material={nodes.Cube301.material} position={[-98.312, 1.866, -63.863]} rotation={[0.006, 0.01, -0.032]} scale={[0.15, 2.01, 2.568]} />
      <mesh geometry={nodes.Cube302.geometry} material={nodes.Cube302.material} position={[-96.134, 1.827, -69.701]} rotation={[0.006, 0.01, -0.032]} scale={[0.15, 2.01, 3.556]} />
      <mesh geometry={nodes.Cube303.geometry} material={nodes.Cube303.material} position={[-101.004, 2.105, -83.113]} rotation={[Math.PI, -1.535, Math.PI]} scale={[2.024, 2.01, 1.701]} />
      <mesh geometry={nodes.Cube304.geometry} material={nodes.Cube304.material} position={[-101.004, 2.105, -75.113]} rotation={[Math.PI, -1.535, Math.PI]} scale={[2.024, 2.01, 1.701]} />
      <mesh geometry={nodes.Cube305.geometry} material={nodes.Cube305.material} position={[-109.004, 2.105, -75.113]} rotation={[Math.PI, -1.535, Math.PI]} scale={[2.024, 2.01, 1.701]} />
      <mesh geometry={nodes.Cube306.geometry} material={nodes.Cube306.material} position={[-109.004, 2.105, -68.113]} rotation={[Math.PI, -1.535, Math.PI]} scale={[2.024, 2.01, 1.701]} />
      <mesh geometry={nodes.Cube307.geometry} material={nodes.Cube307.material} position={[-101.004, 4.105, -68.113]} rotation={[2.58, -1.535, Math.PI]} scale={[2.024, 2.01, 1.701]} />
      <mesh geometry={nodes.Cube308.geometry} material={nodes.Cube308.material} position={[-129.684, 1.827, -82.061]} rotation={[3.136, 0.037, 3.11]} scale={[0.15, 2.01, 3.556]} />
      <mesh geometry={nodes.Cube309.geometry} material={nodes.Cube309.material} position={[-126.684, 1.827, -85.061]} rotation={[3.136, 0.037, 3.11]} scale={[0.15, 2.01, 1.064]} />
      <mesh geometry={nodes.Cube310.geometry} material={nodes.Cube310.material} position={[-126.684, 1.827, -81.061]} rotation={[3.136, 0.037, 3.11]} scale={[0.15, 2.01, 1.064]} />
      <mesh geometry={nodes.Cube311.geometry} material={nodes.Cube311.material} position={[-115.881, 1.827, -85.221]} rotation={[0.006, 0.006, -0.032]} scale={[0.15, 2.01, 4.48]} />
      <mesh geometry={nodes.Cube312.geometry} material={nodes.Cube312.material} position={[-117.626, 1.909, -94.816]} rotation={[0, 0.013, 0]} scale={[0.15, 2.01, 3.285]} />
      <mesh geometry={nodes.Cube314.geometry} material={nodes.Cube314.material} position={[-123.315, 1.911, -84.906]} rotation={[Math.PI, -0.007, Math.PI]} scale={[0.15, 2.01, 3.556]} />
      <mesh geometry={nodes.Cube315.geometry} material={nodes.Cube315.material} position={[-121.354, 1.911, -94.766]} rotation={[Math.PI, -0.007, Math.PI]} scale={[0.15, 2.01, 6.425]} />
      <mesh geometry={nodes.Column095.geometry} material={materials['Column_material.095']} position={[-121.229, 0.023, -93.508]} rotation={[0, 0, -Math.PI / 2]} scale={[2.202, 1.589, 2.374]} />
      <mesh geometry={nodes.Column096.geometry} material={materials['Column_material.096']} position={[-121.229, 1.582, -93.508]} rotation={[0, 0, -Math.PI / 2]} scale={[2.202, 1.589, 2.374]} />
      <mesh geometry={nodes.Column097.geometry} material={materials['Column_material.097']} position={[-116.051, 1.582, -83.774]} rotation={[0, 0, -Math.PI / 2]} scale={[2.202, 0.955, 2.374]} />
      <mesh geometry={nodes.Column098.geometry} material={materials['Column_material.098']} position={[-117.081, -0.091, -84.056]} scale={[2.202, 1.589, 2.374]} />
      <mesh geometry={nodes.Column099.geometry} material={materials['Column_material.099']} position={[-118.548, -0.091, -84.056]} scale={[2.202, 1.589, 2.374]} />
      <mesh geometry={nodes.Column100.geometry} material={materials['Column_material.100']} position={[-120.2, -0.091, -84.056]} scale={[2.202, 1.589, 2.374]} />
      <mesh geometry={nodes.Column101.geometry} material={materials['Column_material.101']} position={[-117.081, -0.091, -85.852]} scale={[2.202, 1.589, 2.374]} />
      <mesh geometry={nodes.Cube313.geometry} material={materials['Material.048']} position={[-118.857, 1.909, -29.673]} rotation={[0, Math.PI / 2, 0]} scale={[0.15, 2.01, 6.476]} />
      <mesh geometry={nodes.Column102.geometry} material={materials['Column_material.102']} position={[-124.684, 1.254, -33.68]} rotation={[0, 0, -1.578]} scale={[2.202, 1.589, 2.374]} />
      <mesh geometry={nodes.Cube316.geometry} material={nodes.Cube316.material} position={[-127.329, 1.841, -46.922]} rotation={[-0.724, 1.522, 0.718]} scale={[0.15, 2.01, 1.078]} />
      <mesh geometry={nodes.Cube317.geometry} material={nodes.Cube317.material} position={[-124.671, 1.894, -51.574]} rotation={[-0.724, 1.522, 0.718]} scale={[0.24, 2.01, 1.23]} />
      <mesh geometry={nodes.Cube318.geometry} material={nodes.Cube318.material} position={[-126.077, 1.866, -49.284]} rotation={[3.136, 0.037, 3.11]} scale={[0.15, 2.01, 2.568]} />
      <mesh geometry={nodes.Cube319.geometry} material={nodes.Cube319.material} position={[-128.528, 1.827, -43.556]} rotation={[3.136, 0.037, 3.11]} scale={[0.15, 2.01, 3.556]} />
      <mesh geometry={nodes.Cube320.geometry} material={nodes.Cube320.material} position={[-126.764, 1.894, -40.238]} rotation={[-0.724, 1.522, 0.718]} scale={[0.24, 2.012, 2.048]} />
      <mesh geometry={nodes.Column103.geometry} material={materials['Column_material.103']} position={[-116.051, 0.703, -83.774]} rotation={[0, 0, -Math.PI / 2]} scale={[2.202, 0.955, 2.374]} />
      <mesh geometry={nodes.Column104.geometry} material={materials['Column_material.104']} position={[-116.051, 2.443, -83.774]} rotation={[0, 0, -Math.PI / 2]} scale={[2.202, 0.955, 2.374]} />
      <mesh geometry={nodes.Cube321.geometry} material={nodes.Cube321.material} position={[-41.378, -0.721, -79.916]} scale={[0.075, 1, 1]} />
      <mesh geometry={nodes.Cube322.geometry} material={materials.Material} position={[-56.767, 6.133, -107.157]} rotation={[0, 1.535, 0]} scale={[-0.433, -0.081, -1.147]} />
      <mesh geometry={nodes.Cube323.geometry} material={materials['Material.064']} position={[-51.408, 6.133, -106.934]} rotation={[0, 1.535, 0]} scale={[-0.433, -0.081, -1.147]} />
      <mesh geometry={nodes.Cube324.geometry} material={materials['Material.067']} position={[-51.408, 6.133, -99.852]} rotation={[0, 1.535, 0]} scale={[-0.433, -0.081, -1.147]} />
      <mesh geometry={nodes.Cube325.geometry} material={materials['Material.097']} position={[-57.012, 6.133, -99.852]} rotation={[0, 1.535, 0]} scale={[-0.433, -0.081, -1.147]} />
    </group>
  )
}

useGLTF.preload('/poc2.glb')

```

`/home/suhas/Desktop/pune/blockroomsv2/client/src/dojo/models/Hall3.tsx`:

```tsx
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 ./public/hall3.glb 
Modified for Backrooms experience with wall textures
Converted to TypeScript
*/

import { useGLTF, useTexture } from "@react-three/drei";
import * as THREE from "three";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    [key: string]: THREE.Mesh;
  };
  materials: {
    [key: string]: THREE.Material;
    "Material.002": THREE.Material;
    pillars: THREE.Material;
  };
};

interface ModelProps {
  [key: string]: any;
}

export function Model(props: ModelProps): JSX.Element {
  const { nodes, materials } = useGLTF("/hall3.glb") as GLTFResult;
  const wallTexture: THREE.Texture = useTexture("./walls.png");

  // Configure wall texture for Backrooms aesthetic
  wallTexture.wrapS = wallTexture.wrapT = THREE.RepeatWrapping;
  wallTexture.repeat.set(10, 26);
  wallTexture.minFilter = THREE.LinearFilter;
  wallTexture.magFilter = THREE.LinearFilter;

  // Create enhanced materials with the wall texture
  const wallMaterial: THREE.MeshLambertMaterial = new THREE.MeshLambertMaterial(
    {
      map: wallTexture,
      color: "#f7f3d0",
    }
  );

  const ceilingMaterial: THREE.MeshLambertMaterial =
    new THREE.MeshLambertMaterial({
      map: wallTexture,
      color: "#f0ead6",
    });

  const floorMaterial: THREE.MeshLambertMaterial =
    new THREE.MeshLambertMaterial({
      map: wallTexture,
      color: "#e8dcc0",
    });

  return (
    <group {...props} dispose={null}>
      {/* Point lights with adjusted intensity for Backrooms atmosphere */}
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[-3.139, 12.505, -79.602]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[5.003, 12.505, -79.602]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[5.003, 12.505, -60.007]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[5.003, 12.505, -40.04]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[5.003, 12.505, -20.151]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[5.003, 12.505, -0.312]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[5.003, 12.505, 19.728]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[5.003, 12.505, 39.533]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[5.003, 12.505, 59.538]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[5.003, 12.505, 59.538]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[5.003, 12.505, 79.66]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[-3.139, 12.505, -79.602]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[-3.139, 12.505, -60.233]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[-3.139, 12.505, -40.098]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[-3.139, 12.505, -20.173]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[-3.139, 12.505, -0.264]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[-3.139, 12.505, 19.886]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[-3.139, 12.505, 39.57]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[-3.139, 12.505, 59.748]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[-3.139, 12.505, 79.364]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[-18.952, 12.505, 87.671]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[-18.952, 12.505, 67.987]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[-18.952, 12.505, 49.531]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[-18.952, 12.505, 14.278]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[-18.952, 12.505, 5.475]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[-18.952, 12.505, -6.82]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[-18.952, 12.505, -13.816]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[-18.952, 12.505, -29.367]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[-18.952, 12.505, -69.714]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[-18.952, 12.505, -89.601]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[20.903, 12.505, -89.601]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[20.903, 12.505, -68.719]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[20.903, 12.505, -47.839]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[20.903, 12.505, -28.703]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[20.903, 12.505, -13.531]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[20.903, 12.505, -4.959]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[20.903, 13.521, 28.253]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[20.903, 13.521, 49.072]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[20.903, 13.521, 69.322]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={40}
        decay={2}
        color="#e9c03b"
        position={[20.903, 13.521, 88.235]}
        rotation={[-Math.PI / 2, 0, 0]}
      />

      {/* Wall meshes with textured materials */}
      <mesh
        geometry={nodes.Cube002.geometry}
        material={wallMaterial}
        position={[-16.537, 6.099, 100]}
        scale={[13.573, 6, 0.235]}
      />
      <mesh
        geometry={nodes.Cube004.geometry}
        material={wallMaterial}
        position={[19.977, 6.099, 80]}
        scale={[10, 6, 0.235]}
      />
      <mesh
        geometry={nodes.Cube005.geometry}
        material={wallMaterial}
        position={[-16.537, 6.099, -100]}
        scale={[13.573, 6, 0.235]}
      />
      <mesh
        geometry={nodes.Cube007.geometry}
        material={ceilingMaterial}
        position={[-0.02, 10.724, -100]}
        scale={[3.163, 1.4, 0.235]}
      />
      <mesh
        geometry={nodes.Cube006.geometry}
        material={ceilingMaterial}
        position={[-0.02, 10.724, 100]}
        scale={[3.163, 1.4, 0.235]}
      />
      <mesh
        geometry={nodes.Cube019.geometry}
        material={wallMaterial}
        position={[16.539, 6.099, 100]}
        scale={[13.573, 6, 0.235]}
      />
      <mesh
        geometry={nodes.Cube001.geometry}
        material={wallMaterial}
        position={[-29.901, 6.099, -0.054]}
        rotation={[0, Math.PI / 2, 0]}
        scale={[100.51, 6, 0.235]}
      />
      <mesh
        geometry={nodes.Cube003.geometry}
        material={wallMaterial}
        position={[16.539, 6.099, -100]}
        scale={[13.573, 6, 0.235]}
      />
      <mesh
        geometry={nodes.Cube009.geometry}
        material={wallMaterial}
        position={[10.213, 6.099, -95.317]}
        rotation={[Math.PI, -Math.PI / 2, 0]}
        scale={[-4.334, -6, -0.235]}
      />
      <mesh
        geometry={nodes.Cube010.geometry}
        material={wallMaterial}
        position={[19.977, 6.099, -80]}
        scale={[10, 6, 0.235]}
      />
      <mesh
        geometry={nodes.Cube011.geometry}
        material={wallMaterial}
        position={[19.977, 6.099, -60]}
        scale={[10, 6, 0.235]}
      />
      <mesh
        geometry={nodes.Cube012.geometry}
        material={wallMaterial}
        position={[19.977, 6.099, -40]}
        scale={[10, 6, 0.235]}
      />
      <mesh
        geometry={nodes.Cube013.geometry}
        material={wallMaterial}
        position={[19.977, 6.099, -20]}
        scale={[10, 6, 0.235]}
      />
      <mesh
        geometry={nodes.Cube014.geometry}
        material={wallMaterial}
        position={[19.977, 6.099, 0]}
        scale={[10, 6, 0.235]}
      />
      <mesh
        geometry={nodes.Cube015.geometry}
        material={wallMaterial}
        position={[19.977, 6.099, 20]}
        scale={[10, 6, 0.235]}
      />
      <mesh
        geometry={nodes.Cube016.geometry}
        material={wallMaterial}
        position={[19.977, 6.099, 40]}
        scale={[10, 6, 0.235]}
      />
      <mesh
        geometry={nodes.Cube017.geometry}
        material={wallMaterial}
        position={[19.977, 6.099, 60]}
        scale={[10, 6, 0.235]}
      />
      <mesh
        geometry={nodes.Cube018.geometry}
        material={wallMaterial}
        position={[-20.195, 6.099, -80]}
        scale={[10, 6, 0.235]}
      />
      <mesh
        geometry={nodes.Cube020.geometry}
        material={wallMaterial}
        position={[-20.195, 6.099, 80]}
        scale={[10, 6, 0.235]}
      />
      <mesh
        geometry={nodes.Cube021.geometry}
        material={wallMaterial}
        position={[-20.195, 6.099, 60]}
        scale={[10, 6, 0.235]}
      />
      <mesh
        geometry={nodes.Cube022.geometry}
        material={wallMaterial}
        position={[-20.195, 6.099, 40]}
        scale={[10, 6, 0.235]}
      />
      <mesh
        geometry={nodes.Cube023.geometry}
        material={wallMaterial}
        position={[-20.195, 6.099, 20]}
        scale={[10, 6, 0.235]}
      />
      <mesh
        geometry={nodes.Cube024.geometry}
        material={wallMaterial}
        position={[-20.195, 6.099, 0]}
        scale={[10, 6, 0.235]}
      />
      <mesh
        geometry={nodes.Cube025.geometry}
        material={wallMaterial}
        position={[-20.195, 6.099, -20]}
        scale={[10, 6, 0.235]}
      />
      <mesh
        geometry={nodes.Cube026.geometry}
        material={wallMaterial}
        position={[-20.195, 6.099, -40]}
        scale={[10, 6, 0.235]}
      />
      <mesh
        geometry={nodes.Cube027.geometry}
        material={wallMaterial}
        position={[-20.195, 6.099, -60]}
        scale={[10, 6, 0.235]}
      />
      <mesh
        geometry={nodes.Cube008.geometry}
        material={wallMaterial}
        position={[29.859, 6.099, -0.054]}
        rotation={[0, Math.PI / 2, 0]}
        scale={[100.51, 6, 0.235]}
      />

      {/* Keep the rest of the original meshes with original materials for pillars, floors, etc. */}
      <mesh
        geometry={nodes.Cube029.geometry}
        material={materials["Material.002"]}
        position={[10.213, 6.099, -82.171]}
        rotation={[Math.PI, -Math.PI / 2, 0]}
        scale={[-2.35, -6, -0.235]}
      />
      <mesh
        geometry={nodes.Cube030.geometry}
        material={materials["Material.002"]}
        position={[10.213, 6.099, -73.341]}
        rotation={[Math.PI, -Math.PI / 2, 0]}
        scale={[-6.626, -6, -0.235]}
      />
      <mesh
        geometry={nodes.Cube031.geometry}
        material={materials["Material.002"]}
        position={[10.213, 6.099, -45.107]}
        rotation={[Math.PI, -Math.PI / 2, 0]}
        scale={[-5.243, -6, -0.235]}
      />
      <mesh
        geometry={nodes.Cube032.geometry}
        material={materials["Material.002"]}
        position={[10.213, 6.099, -57.706]}
        rotation={[Math.PI, -Math.PI / 2, 0]}
        scale={[-2.052, -6, -0.235]}
      />
      <mesh
        geometry={nodes.Cube033.geometry}
        material={materials["Material.002"]}
        position={[10.213, 6.099, -35.052]}
        rotation={[Math.PI, -Math.PI / 2, 0]}
        scale={[-5.243, -6, -0.235]}
      />
      <mesh
        geometry={nodes.Cube034.geometry}
        material={materials["Material.002"]}
        position={[10.213, 6.099, -22.542]}
        rotation={[Math.PI, -Math.PI / 2, 0]}
        scale={[-2.61, -6, -0.235]}
      />
      <mesh
        geometry={nodes.Cube035.geometry}
        material={materials["Material.002"]}
        position={[-9.947, 6.099, -15.573]}
        rotation={[Math.PI, -Math.PI / 2, 0]}
        scale={[-4.527, -6, -0.235]}
      />
      <mesh
        geometry={nodes.Cube036.geometry}
        material={materials["Material.002"]}
        position={[10.213, 6.099, -3.34]}
        rotation={[Math.PI, -Math.PI / 2, 0]}
        scale={[-3.121, -6, -0.235]}
      />
      <mesh
        geometry={nodes.Cube037.geometry}
        material={materials.pillars}
        position={[10.63, 6.099, 25.058]}
        rotation={[0, Math.PI / 2, 0]}
        scale={[0.604, 6, 0.665]}
      />
      <mesh
        geometry={nodes.Cube038.geometry}
        material={materials.pillars}
        position={[10.63, 6.099, 35.009]}
        rotation={[0, Math.PI / 2, 0]}
        scale={[0.604, 6, 0.665]}
      />
      <mesh
        geometry={nodes.Cube039.geometry}
        material={materials.pillars}
        position={[10.63, 6.099, 30.115]}
        rotation={[0, Math.PI / 2, 0]}
        scale={[0.604, 6, 0.665]}
      />
      <mesh
        geometry={nodes.Cube041.geometry}
        material={materials.pillars}
        position={[-10.815, 6.099, -4.49]}
        rotation={[0, Math.PI / 2, 0]}
        scale={[0.604, 6, 0.665]}
      />
      <mesh
        geometry={nodes.Cube042.geometry}
        material={materials["Material.002"]}
        position={[10.213, 6.099, 2.964]}
        rotation={[Math.PI, -Math.PI / 2, 0]}
        scale={[-3.121, -6, -0.235]}
      />
      <mesh
        geometry={nodes.Cube043.geometry}
        material={materials.pillars}
        position={[10.63, 6.099, 13.228]}
        rotation={[0, Math.PI / 2, 0]}
        scale={[0.604, 6, 0.665]}
      />
      <mesh
        geometry={nodes.Cube045.geometry}
        material={materials["Material.002"]}
        position={[10.213, 6.099, 63.142]}
        rotation={[Math.PI, -Math.PI / 2, 0]}
        scale={[-3.159, -6, -0.235]}
      />
      <mesh
        geometry={nodes.Cube044.geometry}
        material={materials["Material.002"]}
        position={[10.213, 6.099, 81.847]}
        rotation={[Math.PI, -Math.PI / 2, 0]}
        scale={[-1.757, -6, -0.235]}
      />
      <mesh
        geometry={nodes.Cube046.geometry}
        material={materials["Material.002"]}
        position={[10.213, 6.099, 46.488]}
        rotation={[Math.PI, -Math.PI / 2, 0]}
        scale={[-6.71, -6, -0.235]}
      />
      <mesh
        geometry={nodes.Cube047.geometry}
        material={materials["Material.002"]}
        position={[10.213, 6.099, 94.992]}
        rotation={[Math.PI, -Math.PI / 2, 0]}
        scale={[-5.274, -6, -0.235]}
      />
      <mesh
        geometry={nodes.Cube048.geometry}
        material={materials["Material.002"]}
        position={[10.213, 6.099, 77.005]}
        rotation={[Math.PI, -Math.PI / 2, 0]}
        scale={[-3.159, -6, -0.235]}
      />
      <mesh
        geometry={nodes.Cube049.geometry}
        material={materials.pillars}
        position={[10.63, 6.099, -16.504]}
        rotation={[0, Math.PI / 2, 0]}
        scale={[0.604, 6, 0.665]}
      />
      <mesh
        geometry={nodes.Cube050.geometry}
        material={materials["Material.002"]}
        position={[-10.285, 6.099, 20.679]}
        rotation={[Math.PI, -Math.PI / 2, 0]}
        scale={[-4.527, -6, -0.235]}
      />
      <mesh
        geometry={nodes.Cube051.geometry}
        material={materials["Material.002"]}
        position={[-10.298, 6.099, 4.328]}
        rotation={[Math.PI, -Math.PI / 2, 0]}
        scale={[-4.527, -6, -0.235]}
      />
      <mesh
        geometry={nodes.Cube052.geometry}
        material={materials["Material.002"]}
        position={[-9.947, 6.099, -22.958]}
        rotation={[Math.PI, -Math.PI / 2, 0]}
        scale={[-4.527, -6, -0.235]}
      />
      <mesh
        geometry={nodes.Cube053.geometry}
        material={materials["Material.002"]}
        position={[-9.947, 6.099, -37.705]}
        rotation={[Math.PI, -Math.PI / 2, 0]}
        scale={[-4.527, -6, -0.235]}
      />
      <mesh
        geometry={nodes.Cube054.geometry}
        material={materials.pillars}
        position={[-10.815, 6.099, -50.89]}
        rotation={[0, Math.PI / 2, 0]}
        scale={[0.604, 6, 0.665]}
      />
      <mesh
        geometry={nodes.Cube055.geometry}
        material={materials.pillars}
        position={[-10.815, 6.099, -83.914]}
        rotation={[0, Math.PI / 2, 0]}
        scale={[0.604, 6, 0.665]}
      />
      <mesh
        geometry={nodes.Cube056.geometry}
        material={materials["Material.002"]}
        position={[-9.947, 6.099, -62.992]}
        rotation={[Math.PI, -Math.PI / 2, 0]}
        scale={[-5.248, -6, -0.235]}
      />
      <mesh
        geometry={nodes.Cube057.geometry}
        material={materials["Material.002"]}
        position={[-9.947, 6.099, -77.2]}
        rotation={[Math.PI, -Math.PI / 2, 0]}
        scale={[-2.95, -6, -0.235]}
      />
      <mesh
        geometry={nodes.Cube058.geometry}
        material={materials["Material.002"]}
        position={[-9.947, 6.099, -94.854]}
        rotation={[Math.PI, -Math.PI / 2, 0]}
        scale={[-5.248, -6, -0.235]}
      />
      <mesh
        geometry={nodes.Cube059.geometry}
        material={materials["Material.002"]}
        position={[-10.285, 6.099, 37.565]}
        rotation={[Math.PI, -Math.PI / 2, 0]}
        scale={[-4.527, -6, -0.235]}
      />
      <mesh
        geometry={nodes.Cube060.geometry}
        material={materials.pillars}
        position={[-10.815, 6.099, 55.39]}
        rotation={[0, Math.PI / 2, 0]}
        scale={[0.604, 6, 0.665]}
      />
      <mesh
        geometry={nodes.Cube061.geometry}
        material={materials.pillars}
        position={[-10.815, 6.099, 48.562]}
        rotation={[0, Math.PI / 2, 0]}
        scale={[0.604, 6, 0.665]}
      />
      <mesh
        geometry={nodes.Cube062.geometry}
        material={materials["Material.002"]}
        position={[-10.285, 6.099, 84.655]}
        rotation={[Math.PI, -Math.PI / 2, 0]}
        scale={[-4.527, -6, -0.235]}
      />
      <mesh
        geometry={nodes.Cube063.geometry}
        material={materials["Material.002"]}
        position={[-10.285, 6.099, 76.414]}
        rotation={[Math.PI, -Math.PI / 2, 0]}
        scale={[-3.827, -6, -0.235]}
      />
      <mesh
        geometry={nodes.Cube064.geometry}
        material={materials["Material.002"]}
        position={[-10.285, 6.099, 63.681]}
        rotation={[Math.PI, -Math.PI / 2, 0]}
        scale={[-3.827, -6, -0.235]}
      />
      <mesh
        geometry={nodes.Cube065.geometry}
        material={materials["Material.002"]}
        position={[-10.285, 6.099, 97.116]}
        rotation={[Math.PI, -Math.PI / 2, 0]}
        scale={[-2.997, -6, -0.235]}
      />

      {/* Floor and ceiling planes with textures */}
      <mesh
        geometry={nodes.Plane.geometry}
        material={ceilingMaterial}
        position={[1.445, 12.15, -0.259]}
        scale={[200, 500, 70]}
      />
      <mesh
        geometry={nodes.Plane001.geometry}
        material={floorMaterial}
        position={[-3.284, 0.234, -8.813]}
        scale={[43.453, 122.615, 122.615]}
      />

      {/* Keep original lighting fixtures */}
      <mesh
        geometry={nodes.Cube028.geometry}
        material={nodes.Cube028.material}
        position={[20.624, 12.144, -5.065]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube040.geometry}
        material={nodes.Cube040.material}
        position={[20.624, 12.144, -13.541]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube066.geometry}
        material={nodes.Cube066.material}
        position={[20.624, 12.144, -28.423]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube067.geometry}
        material={nodes.Cube067.material}
        position={[20.624, 12.144, -48.004]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube068.geometry}
        material={nodes.Cube068.material}
        position={[20.624, 12.144, -68.621]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube069.geometry}
        material={nodes.Cube069.material}
        position={[20.624, 12.144, -89.564]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube070.geometry}
        material={nodes.Cube070.material}
        position={[-19.155, 12.144, -89.564]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube071.geometry}
        material={nodes.Cube071.material}
        position={[-19.155, 12.144, -69.903]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube072.geometry}
        material={nodes.Cube072.material}
        position={[-19.155, 12.144, -29.465]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube073.geometry}
        material={nodes.Cube073.material}
        position={[-19.155, 12.144, -6.896]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube074.geometry}
        material={nodes.Cube074.material}
        position={[-19.155, 12.144, -13.661]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube075.geometry}
        material={nodes.Cube075.material}
        position={[-19.155, 12.144, 14.312]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube076.geometry}
        material={nodes.Cube076.material}
        position={[-19.155, 12.144, 5.523]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube077.geometry}
        material={nodes.Cube077.material}
        position={[-19.155, 12.144, 5.523]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube078.geometry}
        material={nodes.Cube078.material}
        position={[-19.155, 12.144, 5.523]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube079.geometry}
        material={nodes.Cube079.material}
        position={[20.063, 12.144, 28.409]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube080.geometry}
        material={nodes.Cube080.material}
        position={[-19.155, 12.144, 49.468]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube081.geometry}
        material={nodes.Cube081.material}
        position={[19.798, 12.144, 49.468]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube082.geometry}
        material={nodes.Cube082.material}
        position={[19.798, 12.144, 69.6]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube083.geometry}
        material={nodes.Cube083.material}
        position={[19.798, 12.144, 69.6]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube084.geometry}
        material={nodes.Cube084.material}
        position={[-19.155, 12.144, 67.845]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube085.geometry}
        material={nodes.Cube085.material}
        position={[-19.155, 12.144, 87.498]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube086.geometry}
        material={nodes.Cube086.material}
        position={[19.798, 12.144, 88.939]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Plane002.geometry}
        material={floorMaterial}
        position={[-3.284, 0.233, -0.259]}
        scale={[43.453, 122.615, 122.615]}
      />
      {/* <mesh
        geometry={nodes.Plane003.geometry}
        material={floorMaterial}
        position={[-3.284, 0.233, -8.813]}
        scale={[43.453, 122.615, 122.615]}
      /> */}

      {/* More lighting fixtures */}
      <mesh
        geometry={nodes.Cube090.geometry}
        material={nodes.Cube090.material}
        position={[-3.001, 12.144, -79.612]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube091.geometry}
        material={nodes.Cube091.material}
        position={[5.141, 12.144, -79.612]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube092.geometry}
        material={nodes.Cube092.material}
        position={[5.141, 12.144, -60.018]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube093.geometry}
        material={nodes.Cube093.material}
        position={[5.141, 12.144, -40.051]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube094.geometry}
        material={nodes.Cube094.material}
        position={[5.141, 12.144, -20.161]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube095.geometry}
        material={nodes.Cube095.material}
        position={[5.141, 12.144, -0.323]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube096.geometry}
        material={nodes.Cube096.material}
        position={[5.141, 12.144, 19.718]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube097.geometry}
        material={nodes.Cube097.material}
        position={[5.141, 12.144, 39.523]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube098.geometry}
        material={nodes.Cube098.material}
        position={[5.141, 12.144, 59.528]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube099.geometry}
        material={nodes.Cube099.material}
        position={[5.141, 12.144, 59.528]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube100.geometry}
        material={nodes.Cube100.material}
        position={[5.141, 12.144, 79.649]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube101.geometry}
        material={nodes.Cube101.material}
        position={[-3.001, 12.144, -79.612]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube102.geometry}
        material={nodes.Cube102.material}
        position={[-3.001, 12.144, -60.244]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube103.geometry}
        material={nodes.Cube103.material}
        position={[-3.001, 12.144, -40.108]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube104.geometry}
        material={nodes.Cube104.material}
        position={[-3.001, 12.144, -20.184]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube105.geometry}
        material={nodes.Cube105.material}
        position={[-3.001, 12.144, -0.274]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube106.geometry}
        material={nodes.Cube106.material}
        position={[-3.001, 12.144, 19.875]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube107.geometry}
        material={nodes.Cube107.material}
        position={[-3.001, 12.144, 39.559]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube108.geometry}
        material={nodes.Cube108.material}
        position={[-3.001, 12.144, 59.737]}
        scale={[0.754, 0.112, 0.907]}
      />
      <mesh
        geometry={nodes.Cube109.geometry}
        material={nodes.Cube109.material}
        position={[-3.001, 12.144, 79.353]}
        scale={[0.754, 0.112, 0.907]}
      />
    </group>
  );
}

useGLTF.preload("/hall3.glb");

```

`/home/suhas/Desktop/pune/blockroomsv2/client/src/dojo/models/Gun1.tsx`:

```tsx
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 ./public/gun1.glb 
Author: DJMaesen (https://sketchfab.com/bumstrum)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/animated-pistol-bd896167e7ca44f19597d3afe6a8d83f
Title: animated pistol
Converted to TypeScript
*/

import React from "react";
import { useGraph } from "@react-three/fiber";
import { useGLTF } from "@react-three/drei";
import { SkeletonUtils } from "three-stdlib";
import * as THREE from "three";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    [key: string]: THREE.Mesh | THREE.Bone | THREE.Object3D;
    stopper_beretta_0: THREE.Mesh;
    bullet_2_2_beretta_0: THREE.Mesh;
    shell_beretta_0: THREE.Mesh;
    bullet_beretta_0: THREE.Mesh;
    shell_1_2_beretta_0: THREE.Mesh;
    mag_beretta_0: THREE.Mesh;
    hammer_beretta_0: THREE.Mesh;
    trigger_beretta_0: THREE.Mesh;
    slide_beretta_0: THREE.Mesh;
    base_beretta_0: THREE.Mesh;
    bullet_2_beretta_0: THREE.Mesh;
    shell_1_beretta_0: THREE.Mesh;
    _rootJoint: THREE.Bone;
    Object_83: THREE.SkinnedMesh;
  };
  materials: {
    [key: string]: THREE.Material;
    beretta: THREE.Material;
    arms: THREE.Material;
  };
};

interface ModelProps {
  [key: string]: any;
}

export function Model(props: ModelProps): JSX.Element {
  const group = React.useRef<THREE.Group>(null);
  const { scene }: GLTF = useGLTF("/gun1.glb");
  const clone: THREE.Object3D = React.useMemo(
    () => SkeletonUtils.clone(scene),
    [scene]
  );
  const { nodes, materials }: GLTFResult = useGraph(clone) as GLTFResult;
  //   const { actions } = useAnimations(animations, group);

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Sketchfab_Scene">
        <group name="Sketchfab_model" rotation={[-Math.PI / 2, 0, 0]}>
          <group
            name="105d2810571c4501ba07ac55c5582245fbx"
            rotation={[Math.PI / 2, 0, 0]}
            scale={0.01}
          >
            <group name="Object_2">
              <group name="RootNode">
                <group name="Root" position={[0, 16.327, -8.923]}>
                  <group name="Object_5">
                    <group name="pistol" position={[0, -12.318, 25.913]}>
                      <group name="stopper" position={[1.26, 5.502, 5.615]}>
                        <mesh
                          name="stopper_beretta_0"
                          geometry={nodes.stopper_beretta_0.geometry}
                          material={materials.beretta}
                        />
                      </group>
                      <group
                        name="mag"
                        position={[0, -0.379, 0.406]}
                        rotation={[0.262, 0, 0]}
                      >
                        <group
                          name="shell"
                          position={[0, 7.4, -0.455]}
                          rotation={[-0.262, 0, 0]}
                        >
                          <group name="bullet_2_2" position={[0, 0, 0.935]}>
                            <mesh
                              name="bullet_2_2_beretta_0"
                              geometry={nodes.bullet_2_2_beretta_0.geometry}
                              material={materials.beretta}
                            />
                          </group>
                          <mesh
                            name="shell_beretta_0"
                            geometry={nodes.shell_beretta_0.geometry}
                            material={materials.beretta}
                          />
                        </group>
                        <group
                          name="shell_1_2"
                          position={[0, 6.293, -0.158]}
                          rotation={[-0.262, 0, 0]}
                        >
                          <group name="bullet" position={[0, 0, 0.935]}>
                            <mesh
                              name="bullet_beretta_0"
                              geometry={nodes.bullet_beretta_0.geometry}
                              material={materials.beretta}
                            />
                          </group>
                          <mesh
                            name="shell_1_2_beretta_0"
                            geometry={nodes.shell_1_2_beretta_0.geometry}
                            material={materials.beretta}
                          />
                        </group>
                        <mesh
                          name="mag_beretta_0"
                          geometry={nodes.mag_beretta_0.geometry}
                          material={materials.beretta}
                        />
                      </group>
                      <group
                        name="hammer"
                        position={[0, 5.573, -1.608]}
                        rotation={[-1.242, 0, 0]}
                      >
                        <mesh
                          name="hammer_beretta_0"
                          geometry={nodes.hammer_beretta_0.geometry}
                          material={materials.beretta}
                        />
                      </group>
                      <group name="trigger" position={[0, 4.404, 6.033]}>
                        <mesh
                          name="trigger_beretta_0"
                          geometry={nodes.trigger_beretta_0.geometry}
                          material={materials.beretta}
                        />
                      </group>
                      <group name="slide" position={[0, 7.341, 3.872]}>
                        <mesh
                          name="slide_beretta_0"
                          geometry={nodes.slide_beretta_0.geometry}
                          material={materials.beretta}
                        />
                      </group>
                      <group name="base">
                        <mesh
                          name="base_beretta_0"
                          geometry={nodes.base_beretta_0.geometry}
                          material={materials.beretta}
                        />
                      </group>
                      <group name="shell_1" position={[0, 7.849, 6.937]}>
                        <group name="bullet_2" position={[0, 0, 0.935]}>
                          <mesh
                            name="bullet_2_beretta_0"
                            geometry={nodes.bullet_2_beretta_0.geometry}
                            material={materials.beretta}
                          />
                        </group>
                        <mesh
                          name="shell_1_beretta_0"
                          geometry={nodes.shell_1_beretta_0.geometry}
                          material={materials.beretta}
                        />
                      </group>
                    </group>
                    <primitive object={nodes._rootJoint} />
                    <group name="Object_82" position={[0, 3.036, -1.334]} />
                    <skinnedMesh
                      name="Object_83"
                      geometry={nodes.Object_83.geometry}
                      material={materials.arms}
                      skeleton={nodes.Object_83.skeleton}
                    />
                  </group>
                </group>
                <group
                  name="armsmesh"
                  position={[0, 3.036, -1.334]}
                  rotation={[-0.002, 0, -0.011]}
                />
              </group>
            </group>
          </group>
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("/gun1.glb");

```

`/home/suhas/Desktop/pune/blockroomsv2/client/src/dojo/models.gen.ts`:

```ts
import type { SchemaType as ISchemaType } from "@dojoengine/sdk";

import { CairoCustomEnum, CairoOption, CairoOptionVariant, BigNumberish } from 'starknet';

// Type definition for `blockrooms::models::Door` struct
export interface Door {
	door_id: BigNumberish;
	position: Position;
	room_id: BigNumberish;
	connected_room_id: BigNumberish;
	is_open: boolean;
	requires_key: boolean;
	requires_cleared: boolean;
}

// Type definition for `blockrooms::models::DoorValue` struct
export interface DoorValue {
	position: Position;
	room_id: BigNumberish;
	connected_room_id: BigNumberish;
	is_open: boolean;
	requires_key: boolean;
	requires_cleared: boolean;
}

// Type definition for `blockrooms::models::Doorway` struct
export interface Doorway {
	doorway_id: BigNumberish;
	position: Position;
	room_id: BigNumberish;
	connected_room_id: BigNumberish;
	is_open: boolean;
	requires_cleared: boolean;
}

// Type definition for `blockrooms::models::DoorwayValue` struct
export interface DoorwayValue {
	position: Position;
	room_id: BigNumberish;
	connected_room_id: BigNumberish;
	is_open: boolean;
	requires_cleared: boolean;
}

// Type definition for `blockrooms::models::Entity` struct
export interface Entity {
	entity_id: BigNumberish;
	entity_type: EntityTypeEnum;
	position: Position;
	health: BigNumberish;
	max_health: BigNumberish;
	is_alive: boolean;
	damage_per_turn: BigNumberish;
	drops_numbered_shard: CairoOption<NumberedShardEnum>;
	spawned_from_door: boolean;
}

// Type definition for `blockrooms::models::EntityState` struct
export interface EntityState {
	entity_id: BigNumberish;
	alert_level: AlertLevelEnum;
	detection_range: BigNumberish;
	last_seen_player_pos: Position;
	patrol_path_index: BigNumberish;
	last_action_block: BigNumberish;
}

// Type definition for `blockrooms::models::EntityStateValue` struct
export interface EntityStateValue {
	alert_level: AlertLevelEnum;
	detection_range: BigNumberish;
	last_seen_player_pos: Position;
	patrol_path_index: BigNumberish;
	last_action_block: BigNumberish;
}

// Type definition for `blockrooms::models::EntityValue` struct
export interface EntityValue {
	entity_type: EntityTypeEnum;
	position: Position;
	health: BigNumberish;
	max_health: BigNumberish;
	is_alive: boolean;
	damage_per_turn: BigNumberish;
	drops_numbered_shard: CairoOption<NumberedShardEnum>;
	spawned_from_door: boolean;
}

// Type definition for `blockrooms::models::GameConfig` struct
export interface GameConfig {
	config_id: BigNumberish;
	grid_size: BigNumberish;
	starting_health: BigNumberish;
	starting_shards: BigNumberish;
	base_damage: BigNumberish;
	max_actions_per_turn: BigNumberish;
	door_count: BigNumberish;
	entity_spawn_rate: BigNumberish;
	shard_drop_rate: BigNumberish;
	rooms_for_victory: BigNumberish;
	dodge_cooldown: BigNumberish;
}

// Type definition for `blockrooms::models::GameConfigValue` struct
export interface GameConfigValue {
	grid_size: BigNumberish;
	starting_health: BigNumberish;
	starting_shards: BigNumberish;
	base_damage: BigNumberish;
	max_actions_per_turn: BigNumberish;
	door_count: BigNumberish;
	entity_spawn_rate: BigNumberish;
	shard_drop_rate: BigNumberish;
	rooms_for_victory: BigNumberish;
	dodge_cooldown: BigNumberish;
}

// Type definition for `blockrooms::models::GameSession` struct
export interface GameSession {
	session_id: BigNumberish;
	player_id: string;
	start_time: BigNumberish;
	end_time: BigNumberish;
	rooms_cleared: BigNumberish;
	total_shards_collected: BigNumberish;
	numbered_shards_collected: BigNumberish;
	entities_defeated: BigNumberish;
	total_damage_dealt: BigNumberish;
	total_damage_taken: BigNumberish;
	doors_opened: BigNumberish;
	deaths: BigNumberish;
	session_complete: boolean;
	total_turns: BigNumberish;
	total_actions: BigNumberish;
	victory_achieved: boolean;
}

// Type definition for `blockrooms::models::GameSessionValue` struct
export interface GameSessionValue {
	player_id: string;
	start_time: BigNumberish;
	end_time: BigNumberish;
	rooms_cleared: BigNumberish;
	total_shards_collected: BigNumberish;
	numbered_shards_collected: BigNumberish;
	entities_defeated: BigNumberish;
	total_damage_dealt: BigNumberish;
	total_damage_taken: BigNumberish;
	doors_opened: BigNumberish;
	deaths: BigNumberish;
	session_complete: boolean;
	total_turns: BigNumberish;
	total_actions: BigNumberish;
	victory_achieved: boolean;
}

// Type definition for `blockrooms::models::GridBounds` struct
export interface GridBounds {
	min_x: BigNumberish;
	max_x: BigNumberish;
	min_y: BigNumberish;
	max_y: BigNumberish;
}

// Type definition for `blockrooms::models::Player` struct
export interface Player {
	player_id: string;
	position: Position;
	health: BigNumberish;
	max_health: BigNumberish;
	shards: BigNumberish;
	game_active: boolean;
	is_alive: boolean;
	current_session_id: BigNumberish;
	rooms_cleared: BigNumberish;
	turn_number: BigNumberish;
	dodge_active_turns: BigNumberish;
	has_shard_one: boolean;
	has_shard_two: boolean;
	has_shard_three: boolean;
	entered_door_id: CairoOption<BigNumberish>;
	door_enemy_alive: boolean;
	movement_locked: boolean;
	special_ability_cooldown: BigNumberish;
	has_key: boolean;
}

// Type definition for `blockrooms::models::PlayerStats` struct
export interface PlayerStats {
	player_id: string;
	games_played: BigNumberish;
	games_won: BigNumberish;
	total_shards_collected: BigNumberish;
	total_entities_defeated: BigNumberish;
	total_playtime: BigNumberish;
	best_completion_time: BigNumberish;
	highest_room_reached: BigNumberish;
	total_damage_dealt: BigNumberish;
	total_damage_taken: BigNumberish;
	doors_opened: BigNumberish;
	total_turns_played: BigNumberish;
	total_actions_taken: BigNumberish;
	numbered_shards_collected: BigNumberish;
}

// Type definition for `blockrooms::models::PlayerStatsValue` struct
export interface PlayerStatsValue {
	games_played: BigNumberish;
	games_won: BigNumberish;
	total_shards_collected: BigNumberish;
	total_entities_defeated: BigNumberish;
	total_playtime: BigNumberish;
	best_completion_time: BigNumberish;
	highest_room_reached: BigNumberish;
	total_damage_dealt: BigNumberish;
	total_damage_taken: BigNumberish;
	doors_opened: BigNumberish;
	total_turns_played: BigNumberish;
	total_actions_taken: BigNumberish;
	numbered_shards_collected: BigNumberish;
}

// Type definition for `blockrooms::models::PlayerValue` struct
export interface PlayerValue {
	position: Position;
	health: BigNumberish;
	max_health: BigNumberish;
	shards: BigNumberish;
	game_active: boolean;
	is_alive: boolean;
	current_session_id: BigNumberish;
	rooms_cleared: BigNumberish;
	turn_number: BigNumberish;
	dodge_active_turns: BigNumberish;
	has_shard_one: boolean;
	has_shard_two: boolean;
	has_shard_three: boolean;
	entered_door_id: CairoOption<BigNumberish>;
	door_enemy_alive: boolean;
	movement_locked: boolean;
	special_ability_cooldown: BigNumberish;
	has_key: boolean;
}

// Type definition for `blockrooms::models::Position` struct
export interface Position {
	x: BigNumberish;
	y: BigNumberish;
	location_id: BigNumberish;
}

// Type definition for `blockrooms::models::Room` struct
export interface Room {
	room_id: BigNumberish;
	initialized: boolean;
	cleared: boolean;
	entity_count: BigNumberish;
	active_entities: BigNumberish;
	has_treasure: boolean;
	treasure_collected: boolean;
	door_count: BigNumberish;
	boundaries: GridBounds;
}

// Type definition for `blockrooms::models::RoomValue` struct
export interface RoomValue {
	initialized: boolean;
	cleared: boolean;
	entity_count: BigNumberish;
	active_entities: BigNumberish;
	has_treasure: boolean;
	treasure_collected: boolean;
	door_count: BigNumberish;
	boundaries: GridBounds;
}

// Type definition for `blockrooms::models::ShardLocation` struct
export interface ShardLocation {
	location_id: BigNumberish;
	position: Position;
	numbered_shard: CairoOption<NumberedShardEnum>;
	collected: boolean;
}

// Type definition for `blockrooms::models::ShardLocationValue` struct
export interface ShardLocationValue {
	position: Position;
	numbered_shard: CairoOption<NumberedShardEnum>;
	collected: boolean;
}

// Type definition for `blockrooms::models::TurnExecution` struct
export interface TurnExecution {
	turn_id: BigNumberish;
	player_id: string;
	session_id: BigNumberish;
	actions_count: BigNumberish;
	successful_actions: BigNumberish;
	total_damage_dealt: BigNumberish;
	total_damage_taken: BigNumberish;
	total_shards_gained: BigNumberish;
	numbered_shards_collected: BigNumberish;
	timestamp: BigNumberish;
	turn_number: BigNumberish;
}

// Type definition for `blockrooms::models::TurnExecutionValue` struct
export interface TurnExecutionValue {
	player_id: string;
	session_id: BigNumberish;
	actions_count: BigNumberish;
	successful_actions: BigNumberish;
	total_damage_dealt: BigNumberish;
	total_damage_taken: BigNumberish;
	total_shards_gained: BigNumberish;
	numbered_shards_collected: BigNumberish;
	timestamp: BigNumberish;
	turn_number: BigNumberish;
}

// Type definition for `blockrooms::systems::actions::actions::ActionExecuted` struct
export interface ActionExecuted {
	player_id: string;
	turn_id: BigNumberish;
	action_index: BigNumberish;
	action_type: ActionTypeEnum;
	success: boolean;
	damage_dealt: BigNumberish;
	damage_taken: BigNumberish;
	position_changed: boolean;
	door_opened: boolean;
}

// Type definition for `blockrooms::systems::actions::actions::ActionExecutedValue` struct
export interface ActionExecutedValue {
	turn_id: BigNumberish;
	action_index: BigNumberish;
	action_type: ActionTypeEnum;
	success: boolean;
	damage_dealt: BigNumberish;
	damage_taken: BigNumberish;
	position_changed: boolean;
	door_opened: boolean;
}

// Type definition for `blockrooms::systems::actions::actions::GameCompleted` struct
export interface GameCompleted {
	player_id: string;
	session_id: BigNumberish;
	rooms_cleared: BigNumberish;
	result: GameResultEnum;
	total_turns: BigNumberish;
}

// Type definition for `blockrooms::systems::actions::actions::GameCompletedValue` struct
export interface GameCompletedValue {
	session_id: BigNumberish;
	rooms_cleared: BigNumberish;
	result: GameResultEnum;
	total_turns: BigNumberish;
}

// Type definition for `blockrooms::systems::actions::actions::GameStarted` struct
export interface GameStarted {
	player_id: string;
	session_id: BigNumberish;
	start_time: BigNumberish;
	starting_room_id: BigNumberish;
}

// Type definition for `blockrooms::systems::actions::actions::GameStartedValue` struct
export interface GameStartedValue {
	session_id: BigNumberish;
	start_time: BigNumberish;
	starting_room_id: BigNumberish;
}

// Type definition for `blockrooms::systems::actions::actions::NumberedShardCollected` struct
export interface NumberedShardCollected {
	player_id: string;
	shard_type: NumberedShardEnum;
	position: Position;
	turn_number: BigNumberish;
}

// Type definition for `blockrooms::systems::actions::actions::NumberedShardCollectedValue` struct
export interface NumberedShardCollectedValue {
	shard_type: NumberedShardEnum;
	position: Position;
	turn_number: BigNumberish;
}

// Type definition for `blockrooms::systems::actions::actions::PlayerDeath` struct
export interface PlayerDeath {
	player_id: string;
	position: Position;
	cause: BigNumberish;
	turn_number: BigNumberish;
}

// Type definition for `blockrooms::systems::actions::actions::PlayerDeathValue` struct
export interface PlayerDeathValue {
	position: Position;
	cause: BigNumberish;
	turn_number: BigNumberish;
}

// Type definition for `blockrooms::systems::actions::actions::RoomCleared` struct
export interface RoomCleared {
	player_id: string;
	room_id: BigNumberish;
	entities_defeated: BigNumberish;
	turn_number: BigNumberish;
}

// Type definition for `blockrooms::systems::actions::actions::RoomClearedValue` struct
export interface RoomClearedValue {
	room_id: BigNumberish;
	entities_defeated: BigNumberish;
	turn_number: BigNumberish;
}

// Type definition for `blockrooms::systems::actions::actions::TurnExecuted` struct
export interface TurnExecuted {
	player_id: string;
	turn_id: BigNumberish;
	turn_number: BigNumberish;
	actions_attempted: BigNumberish;
	actions_successful: BigNumberish;
	total_damage_dealt: BigNumberish;
	total_damage_taken: BigNumberish;
	shards_gained: BigNumberish;
	numbered_shards_gained: BigNumberish;
	position_end: Position;
}

// Type definition for `blockrooms::systems::actions::actions::TurnExecutedValue` struct
export interface TurnExecutedValue {
	turn_id: BigNumberish;
	turn_number: BigNumberish;
	actions_attempted: BigNumberish;
	actions_successful: BigNumberish;
	total_damage_dealt: BigNumberish;
	total_damage_taken: BigNumberish;
	shards_gained: BigNumberish;
	numbered_shards_gained: BigNumberish;
	position_end: Position;
}

// Type definition for `blockrooms::systems::actions::actions::VictoryAchieved` struct
export interface VictoryAchieved {
	player_id: string;
	session_id: BigNumberish;
	completion_time: BigNumberish;
	total_turns: BigNumberish;
}

// Type definition for `blockrooms::systems::actions::actions::VictoryAchievedValue` struct
export interface VictoryAchievedValue {
	session_id: BigNumberish;
	completion_time: BigNumberish;
	total_turns: BigNumberish;
}

// Type definition for `blockrooms::models::AlertLevel` enum
export const alertLevel = [
	'Idle',
	'Alerted',
	'Combat',
] as const;
export type AlertLevel = { [key in typeof alertLevel[number]]: string };
export type AlertLevelEnum = CairoCustomEnum;

// Type definition for `blockrooms::models::EntityType` enum
export const entityType = [
	'Male',
	'Female',
] as const;
export type EntityType = { [key in typeof entityType[number]]: string };
export type EntityTypeEnum = CairoCustomEnum;

// Type definition for `blockrooms::models::NumberedShard` enum
export const numberedShard = [
	'One',
	'Two',
	'Three',
] as const;
export type NumberedShard = { [key in typeof numberedShard[number]]: string };
export type NumberedShardEnum = CairoCustomEnum;

// Type definition for `blockrooms::models::ActionType` enum
export const actionType = [
	'Move',
	'OpenDoor',
	'Attack',
	'CollectShard',
] as const;
export type ActionType = { [key in typeof actionType[number]]: string };
export type ActionTypeEnum = CairoCustomEnum;

// Type definition for `blockrooms::models::GameResult` enum
export const gameResult = [
	'InProgress',
	'Victory',
	'Defeat',
] as const;
export type GameResult = { [key in typeof gameResult[number]]: string };
export type GameResultEnum = CairoCustomEnum;

export interface SchemaType extends ISchemaType {
	blockrooms: {
		Door: Door,
		DoorValue: DoorValue,
		Doorway: Doorway,
		DoorwayValue: DoorwayValue,
		Entity: Entity,
		EntityState: EntityState,
		EntityStateValue: EntityStateValue,
		EntityValue: EntityValue,
		GameConfig: GameConfig,
		GameConfigValue: GameConfigValue,
		GameSession: GameSession,
		GameSessionValue: GameSessionValue,
		GridBounds: GridBounds,
		Player: Player,
		PlayerStats: PlayerStats,
		PlayerStatsValue: PlayerStatsValue,
		PlayerValue: PlayerValue,
		Position: Position,
		Room: Room,
		RoomValue: RoomValue,
		ShardLocation: ShardLocation,
		ShardLocationValue: ShardLocationValue,
		TurnExecution: TurnExecution,
		TurnExecutionValue: TurnExecutionValue,
		ActionExecuted: ActionExecuted,
		ActionExecutedValue: ActionExecutedValue,
		GameCompleted: GameCompleted,
		GameCompletedValue: GameCompletedValue,
		GameStarted: GameStarted,
		GameStartedValue: GameStartedValue,
		NumberedShardCollected: NumberedShardCollected,
		NumberedShardCollectedValue: NumberedShardCollectedValue,
		PlayerDeath: PlayerDeath,
		PlayerDeathValue: PlayerDeathValue,
		RoomCleared: RoomCleared,
		RoomClearedValue: RoomClearedValue,
		TurnExecuted: TurnExecuted,
		TurnExecutedValue: TurnExecutedValue,
		VictoryAchieved: VictoryAchieved,
		VictoryAchievedValue: VictoryAchievedValue,
	},
}
export const schema: SchemaType = {
	blockrooms: {
		Door: {
			door_id: 0,
		position: { x: 0, y: 0, location_id: 0, },
			room_id: 0,
			connected_room_id: 0,
			is_open: false,
			requires_key: false,
			requires_cleared: false,
		},
		DoorValue: {
		position: { x: 0, y: 0, location_id: 0, },
			room_id: 0,
			connected_room_id: 0,
			is_open: false,
			requires_key: false,
			requires_cleared: false,
		},
		Doorway: {
			doorway_id: 0,
		position: { x: 0, y: 0, location_id: 0, },
			room_id: 0,
			connected_room_id: 0,
			is_open: false,
			requires_cleared: false,
		},
		DoorwayValue: {
		position: { x: 0, y: 0, location_id: 0, },
			room_id: 0,
			connected_room_id: 0,
			is_open: false,
			requires_cleared: false,
		},
		Entity: {
			entity_id: 0,
		entity_type: new CairoCustomEnum({ 
					Male: "",
				Female: undefined, }),
		position: { x: 0, y: 0, location_id: 0, },
			health: 0,
			max_health: 0,
			is_alive: false,
			damage_per_turn: 0,
		drops_numbered_shard: new CairoOption(CairoOptionVariant.None),
			spawned_from_door: false,
		},
		EntityState: {
			entity_id: 0,
		alert_level: new CairoCustomEnum({ 
					Idle: "",
				Alerted: undefined,
				Combat: undefined, }),
			detection_range: 0,
		last_seen_player_pos: { x: 0, y: 0, location_id: 0, },
			patrol_path_index: 0,
			last_action_block: 0,
		},
		EntityStateValue: {
		alert_level: new CairoCustomEnum({ 
					Idle: "",
				Alerted: undefined,
				Combat: undefined, }),
			detection_range: 0,
		last_seen_player_pos: { x: 0, y: 0, location_id: 0, },
			patrol_path_index: 0,
			last_action_block: 0,
		},
		EntityValue: {
		entity_type: new CairoCustomEnum({ 
					Male: "",
				Female: undefined, }),
		position: { x: 0, y: 0, location_id: 0, },
			health: 0,
			max_health: 0,
			is_alive: false,
			damage_per_turn: 0,
		drops_numbered_shard: new CairoOption(CairoOptionVariant.None),
			spawned_from_door: false,
		},
		GameConfig: {
			config_id: 0,
			grid_size: 0,
			starting_health: 0,
			starting_shards: 0,
			base_damage: 0,
			max_actions_per_turn: 0,
			door_count: 0,
			entity_spawn_rate: 0,
			shard_drop_rate: 0,
			rooms_for_victory: 0,
			dodge_cooldown: 0,
		},
		GameConfigValue: {
			grid_size: 0,
			starting_health: 0,
			starting_shards: 0,
			base_damage: 0,
			max_actions_per_turn: 0,
			door_count: 0,
			entity_spawn_rate: 0,
			shard_drop_rate: 0,
			rooms_for_victory: 0,
			dodge_cooldown: 0,
		},
		GameSession: {
			session_id: 0,
			player_id: "",
			start_time: 0,
			end_time: 0,
			rooms_cleared: 0,
			total_shards_collected: 0,
			numbered_shards_collected: 0,
			entities_defeated: 0,
			total_damage_dealt: 0,
			total_damage_taken: 0,
			doors_opened: 0,
			deaths: 0,
			session_complete: false,
			total_turns: 0,
			total_actions: 0,
			victory_achieved: false,
		},
		GameSessionValue: {
			player_id: "",
			start_time: 0,
			end_time: 0,
			rooms_cleared: 0,
			total_shards_collected: 0,
			numbered_shards_collected: 0,
			entities_defeated: 0,
			total_damage_dealt: 0,
			total_damage_taken: 0,
			doors_opened: 0,
			deaths: 0,
			session_complete: false,
			total_turns: 0,
			total_actions: 0,
			victory_achieved: false,
		},
		GridBounds: {
			min_x: 0,
			max_x: 0,
			min_y: 0,
			max_y: 0,
		},
		Player: {
			player_id: "",
		position: { x: 0, y: 0, location_id: 0, },
			health: 0,
			max_health: 0,
			shards: 0,
			game_active: false,
			is_alive: false,
			current_session_id: 0,
			rooms_cleared: 0,
			turn_number: 0,
			dodge_active_turns: 0,
			has_shard_one: false,
			has_shard_two: false,
			has_shard_three: false,
		entered_door_id: new CairoOption(CairoOptionVariant.None),
			door_enemy_alive: false,
			movement_locked: false,
			special_ability_cooldown: 0,
			has_key: false,
		},
		PlayerStats: {
			player_id: "",
			games_played: 0,
			games_won: 0,
			total_shards_collected: 0,
			total_entities_defeated: 0,
			total_playtime: 0,
			best_completion_time: 0,
			highest_room_reached: 0,
			total_damage_dealt: 0,
			total_damage_taken: 0,
			doors_opened: 0,
			total_turns_played: 0,
			total_actions_taken: 0,
			numbered_shards_collected: 0,
		},
		PlayerStatsValue: {
			games_played: 0,
			games_won: 0,
			total_shards_collected: 0,
			total_entities_defeated: 0,
			total_playtime: 0,
			best_completion_time: 0,
			highest_room_reached: 0,
			total_damage_dealt: 0,
			total_damage_taken: 0,
			doors_opened: 0,
			total_turns_played: 0,
			total_actions_taken: 0,
			numbered_shards_collected: 0,
		},
		PlayerValue: {
		position: { x: 0, y: 0, location_id: 0, },
			health: 0,
			max_health: 0,
			shards: 0,
			game_active: false,
			is_alive: false,
			current_session_id: 0,
			rooms_cleared: 0,
			turn_number: 0,
			dodge_active_turns: 0,
			has_shard_one: false,
			has_shard_two: false,
			has_shard_three: false,
		entered_door_id: new CairoOption(CairoOptionVariant.None),
			door_enemy_alive: false,
			movement_locked: false,
			special_ability_cooldown: 0,
			has_key: false,
		},
		Position: {
			x: 0,
			y: 0,
			location_id: 0,
		},
		Room: {
			room_id: 0,
			initialized: false,
			cleared: false,
			entity_count: 0,
			active_entities: 0,
			has_treasure: false,
			treasure_collected: false,
			door_count: 0,
		boundaries: { min_x: 0, max_x: 0, min_y: 0, max_y: 0, },
		},
		RoomValue: {
			initialized: false,
			cleared: false,
			entity_count: 0,
			active_entities: 0,
			has_treasure: false,
			treasure_collected: false,
			door_count: 0,
		boundaries: { min_x: 0, max_x: 0, min_y: 0, max_y: 0, },
		},
		ShardLocation: {
			location_id: 0,
		position: { x: 0, y: 0, location_id: 0, },
		numbered_shard: new CairoOption(CairoOptionVariant.None),
			collected: false,
		},
		ShardLocationValue: {
		position: { x: 0, y: 0, location_id: 0, },
		numbered_shard: new CairoOption(CairoOptionVariant.None),
			collected: false,
		},
		TurnExecution: {
			turn_id: 0,
			player_id: "",
			session_id: 0,
			actions_count: 0,
			successful_actions: 0,
			total_damage_dealt: 0,
			total_damage_taken: 0,
			total_shards_gained: 0,
			numbered_shards_collected: 0,
			timestamp: 0,
			turn_number: 0,
		},
		TurnExecutionValue: {
			player_id: "",
			session_id: 0,
			actions_count: 0,
			successful_actions: 0,
			total_damage_dealt: 0,
			total_damage_taken: 0,
			total_shards_gained: 0,
			numbered_shards_collected: 0,
			timestamp: 0,
			turn_number: 0,
		},
		ActionExecuted: {
			player_id: "",
			turn_id: 0,
			action_index: 0,
		action_type: new CairoCustomEnum({ 
					Move: "",
				OpenDoor: undefined,
				Attack: undefined,
				CollectShard: undefined, }),
			success: false,
			damage_dealt: 0,
			damage_taken: 0,
			position_changed: false,
			door_opened: false,
		},
		ActionExecutedValue: {
			turn_id: 0,
			action_index: 0,
		action_type: new CairoCustomEnum({ 
					Move: "",
				OpenDoor: undefined,
				Attack: undefined,
				CollectShard: undefined, }),
			success: false,
			damage_dealt: 0,
			damage_taken: 0,
			position_changed: false,
			door_opened: false,
		},
		GameCompleted: {
			player_id: "",
			session_id: 0,
			rooms_cleared: 0,
		result: new CairoCustomEnum({ 
					InProgress: "",
				Victory: undefined,
				Defeat: undefined, }),
			total_turns: 0,
		},
		GameCompletedValue: {
			session_id: 0,
			rooms_cleared: 0,
		result: new CairoCustomEnum({ 
					InProgress: "",
				Victory: undefined,
				Defeat: undefined, }),
			total_turns: 0,
		},
		GameStarted: {
			player_id: "",
			session_id: 0,
			start_time: 0,
			starting_room_id: 0,
		},
		GameStartedValue: {
			session_id: 0,
			start_time: 0,
			starting_room_id: 0,
		},
		NumberedShardCollected: {
			player_id: "",
		shard_type: new CairoCustomEnum({ 
					One: "",
				Two: undefined,
				Three: undefined, }),
		position: { x: 0, y: 0, location_id: 0, },
			turn_number: 0,
		},
		NumberedShardCollectedValue: {
		shard_type: new CairoCustomEnum({ 
					One: "",
				Two: undefined,
				Three: undefined, }),
		position: { x: 0, y: 0, location_id: 0, },
			turn_number: 0,
		},
		PlayerDeath: {
			player_id: "",
		position: { x: 0, y: 0, location_id: 0, },
			cause: 0,
			turn_number: 0,
		},
		PlayerDeathValue: {
		position: { x: 0, y: 0, location_id: 0, },
			cause: 0,
			turn_number: 0,
		},
		RoomCleared: {
			player_id: "",
			room_id: 0,
			entities_defeated: 0,
			turn_number: 0,
		},
		RoomClearedValue: {
			room_id: 0,
			entities_defeated: 0,
			turn_number: 0,
		},
		TurnExecuted: {
			player_id: "",
			turn_id: 0,
			turn_number: 0,
			actions_attempted: 0,
			actions_successful: 0,
			total_damage_dealt: 0,
			total_damage_taken: 0,
			shards_gained: 0,
			numbered_shards_gained: 0,
		position_end: { x: 0, y: 0, location_id: 0, },
		},
		TurnExecutedValue: {
			turn_id: 0,
			turn_number: 0,
			actions_attempted: 0,
			actions_successful: 0,
			total_damage_dealt: 0,
			total_damage_taken: 0,
			shards_gained: 0,
			numbered_shards_gained: 0,
		position_end: { x: 0, y: 0, location_id: 0, },
		},
		VictoryAchieved: {
			player_id: "",
			session_id: 0,
			completion_time: 0,
			total_turns: 0,
		},
		VictoryAchievedValue: {
			session_id: 0,
			completion_time: 0,
			total_turns: 0,
		},
	},
};
export enum ModelsMapping {
	AlertLevel = 'blockrooms-AlertLevel',
	Door = 'blockrooms-Door',
	DoorValue = 'blockrooms-DoorValue',
	Doorway = 'blockrooms-Doorway',
	DoorwayValue = 'blockrooms-DoorwayValue',
	Entity = 'blockrooms-Entity',
	EntityState = 'blockrooms-EntityState',
	EntityStateValue = 'blockrooms-EntityStateValue',
	EntityType = 'blockrooms-EntityType',
	EntityValue = 'blockrooms-EntityValue',
	GameConfig = 'blockrooms-GameConfig',
	GameConfigValue = 'blockrooms-GameConfigValue',
	GameSession = 'blockrooms-GameSession',
	GameSessionValue = 'blockrooms-GameSessionValue',
	GridBounds = 'blockrooms-GridBounds',
	NumberedShard = 'blockrooms-NumberedShard',
	Player = 'blockrooms-Player',
	PlayerStats = 'blockrooms-PlayerStats',
	PlayerStatsValue = 'blockrooms-PlayerStatsValue',
	PlayerValue = 'blockrooms-PlayerValue',
	Position = 'blockrooms-Position',
	Room = 'blockrooms-Room',
	RoomValue = 'blockrooms-RoomValue',
	ShardLocation = 'blockrooms-ShardLocation',
	ShardLocationValue = 'blockrooms-ShardLocationValue',
	TurnExecution = 'blockrooms-TurnExecution',
	TurnExecutionValue = 'blockrooms-TurnExecutionValue',
	ActionType = 'blockrooms-ActionType',
	GameResult = 'blockrooms-GameResult',
	ActionExecuted = 'blockrooms-ActionExecuted',
	ActionExecutedValue = 'blockrooms-ActionExecutedValue',
	GameCompleted = 'blockrooms-GameCompleted',
	GameCompletedValue = 'blockrooms-GameCompletedValue',
	GameStarted = 'blockrooms-GameStarted',
	GameStartedValue = 'blockrooms-GameStartedValue',
	NumberedShardCollected = 'blockrooms-NumberedShardCollected',
	NumberedShardCollectedValue = 'blockrooms-NumberedShardCollectedValue',
	PlayerDeath = 'blockrooms-PlayerDeath',
	PlayerDeathValue = 'blockrooms-PlayerDeathValue',
	RoomCleared = 'blockrooms-RoomCleared',
	RoomClearedValue = 'blockrooms-RoomClearedValue',
	TurnExecuted = 'blockrooms-TurnExecuted',
	TurnExecutedValue = 'blockrooms-TurnExecutedValue',
	VictoryAchieved = 'blockrooms-VictoryAchieved',
	VictoryAchievedValue = 'blockrooms-VictoryAchievedValue',
}
```

`/home/suhas/Desktop/pune/blockroomsv2/client/src/dojo/starknet-provider.tsx`:

```tsx
import type { PropsWithChildren } from "react";
import { sepolia, mainnet } from "@starknet-react/chains";
import {
    jsonRpcProvider,
    StarknetConfig,
    starkscan,
} from "@starknet-react/core";
import cartridgeConnector from "../config/cartridgeConnector";

export default function StarknetProvider({ children }: PropsWithChildren) {
    const { VITE_PUBLIC_DEPLOY_TYPE } = import.meta.env;

    // Get RPC URL based on environment
    const getRpcUrl = () => {
        switch (VITE_PUBLIC_DEPLOY_TYPE) {
            case "mainnet":
                return "https://api.cartridge.gg/x/starknet/mainnet";
            case "sepolia":
                return "https://api.cartridge.gg/x/starknet/sepolia";
            default:
                return "https://api.cartridge.gg/x/starknet/sepolia"; 
        }
    };

    // Create provider with the correct RPC URL
    const provider = jsonRpcProvider({
        rpc: () => ({ nodeUrl: getRpcUrl() }),
    });

    // Determine which chain to use
    const chains = VITE_PUBLIC_DEPLOY_TYPE === "mainnet" 
        ? [mainnet] 
        : [sepolia];

    return (
        <StarknetConfig
            autoConnect
            chains={chains}
            connectors={[cartridgeConnector]}
            explorer={starkscan}
            provider={provider}
        >
            {children}
        </StarknetConfig>
    );
}
```

`/home/suhas/Desktop/pune/blockroomsv2/client/src/dojo/hooks/useGetAvailableDoorways.tsx`:

```tsx
import { useState, useCallback, useEffect } from "react";
import { BigNumberish } from "starknet";
import { Doorway } from "../models.gen";
import { dojoConfig } from "../dojoConfig";

interface UseGetAvailableDoorwaysReturn {
  doorways: Doorway[] | null;
  isLoading: boolean;
  error: Error | null;
  refetch: (locationId: BigNumberish) => Promise<void>;
}

export const useGetAvailableDoorways = (locationId?: BigNumberish): UseGetAvailableDoorwaysReturn => {
  const [doorways, setDoorways] = useState<Doorway[] | null>(null);
  const [isLoading, setIsLoading] = useState<boolean>(false);
  const [error, setError] = useState<Error | null>(null);

  const refetch = useCallback(async (locationId: BigNumberish) => {
    try {
      setIsLoading(true);
      setError(null);

      const response = await fetch(`${dojoConfig.toriiUrl}/graphql`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          query: `
            query GetAvailableDoorways($locationId: BigNumberish!) {
              getAvailableDoorways(locationId: $locationId) {
                doorway_id
                position {
                  x
                  y
                  location_id
                }
                room_id
                connected_room_id
                is_open
                requires_cleared
              }
            }
          `,
          variables: {
            locationId: locationId.toString(),
          },
        }),
      });

      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }

      const result = await response.json();
      
      if (result.errors) {
        throw new Error(result.errors[0].message);
      }

      const doorwaysData = result.data?.getAvailableDoorways || [];
      setDoorways(doorwaysData);
      console.log("✅ Available doorways fetched:", doorwaysData);
    } catch (err) {
      const error = err instanceof Error ? err : new Error("Failed to fetch available doorways");
      console.error("❌ Error fetching available doorways:", error);
      setError(error);
      setDoorways(null);
    } finally {
      setIsLoading(false);
    }
  }, []);

  useEffect(() => {
    if (locationId) {
      refetch(locationId);
    }
  }, [locationId, refetch]);

  return {
    doorways,
    isLoading,
    error,
    refetch,
  };
}; 
```

`/home/suhas/Desktop/pune/blockroomsv2/client/src/dojo/hooks/useEntityState.tsx`:

```tsx
import { useState, useCallback, useEffect } from "react";
import { EntityState } from "../models.gen";
import { dojoConfig } from "../dojoConfig";

interface UseEntityStateReturn {
  entityState: EntityState | null;
  isLoading: boolean;
  error: Error | null;
  refetch: (entityId?: string) => Promise<void>;
}

export const useEntityState = (entityId: string = "default"): UseEntityStateReturn => {
  const [entityState, setEntityState] = useState<EntityState | null>(null);
  const [isLoading, setIsLoading] = useState<boolean>(false);
  const [error, setError] = useState<Error | null>(null);

  const refetch = useCallback(async (entityId: string = "default") => {
    try {
      setIsLoading(true);
      setError(null);

      const response = await fetch(`${dojoConfig.toriiUrl}/graphql`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          query: `
            query GetEntityState($entityId: String!) {
              entityStates(where: { entity_id: $entityId }) {
                edges {
                  node {
                    entity_id
                    alert_level
                    detection_range
                    last_seen_player_pos {
                      x
                      y
                      location_id
                    }
                    patrol_path_index
                    last_action_block
                  }
                }
              }
            }
          `,
          variables: {
            entityId,
          },
        }),
      });

      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }

      const result = await response.json();
      
      if (result.errors) {
        throw new Error(result.errors[0].message);
      }

      const entityStateData = result.data?.entityStates?.edges?.[0]?.node;
      setEntityState(entityStateData);
      console.log("✅ Entity state fetched:", entityStateData);
    } catch (err) {
      const error = err instanceof Error ? err : new Error("Failed to fetch entity state");
      console.error("❌ Error fetching entity state:", error);
      setError(error);
      setEntityState(null);
    } finally {
      setIsLoading(false);
    }
  }, []);

  useEffect(() => {
    refetch(entityId);
  }, [entityId, refetch]);

  return {
    entityState,
    isLoading,
    error,
    refetch,
  };
}; 
```

`/home/suhas/Desktop/pune/blockroomsv2/client/src/dojo/hooks/usePlayer.tsx`:

```tsx
import { useEffect, useState, useMemo } from "react";
import { useAccount } from "@starknet-react/core";
import { addAddressPadding } from "starknet";
import { dojoConfig } from "../dojoConfig";
import { Player } from '../../zustand/store';
import useAppStore from '../../zustand/store';

interface UsePlayerReturn {
  player: Player | null;
  isLoading: boolean;
  error: Error | null;
  refetch: () => Promise<void>;
}

// Constants
const TORII_URL = dojoConfig.toriiUrl + "/graphql";
const PLAYER_QUERY = `
    query GetPlayer($playerOwner: ContractAddress!) {
        fullStarterReactPlayerModels(where: { owner: $playerOwner }) {
            edges {
                node {
                    owner
                    experience
                    health
                    coins
                    creation_day
                }
            }
            totalCount
        }
    }
`;

// Helper to convert hex values to numbers
const hexToNumber = (hexValue: string | number): number => {
  if (typeof hexValue === 'number') return hexValue;

  if (typeof hexValue === 'string' && hexValue.startsWith('0x')) {
    return parseInt(hexValue, 16);
  }

  if (typeof hexValue === 'string') {
    return parseInt(hexValue, 10);
  }

  return 0;
};

// Function to fetch player data from GraphQL
const fetchPlayerData = async (playerOwner: string): Promise<Player | null> => {
  try {
    console.log("🔍 Fetching player with owner:", playerOwner);

    const response = await fetch(TORII_URL, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({
        query: PLAYER_QUERY,
        variables: { playerOwner }
      }),
    });

    const result = await response.json();
    console.log("📡 GraphQL response:", result);

    if (!result.data?.fullStarterReactPlayerModels?.edges?.length) {
      console.log("❌ No player found in response");
      return null;
    }

    // Extract player data
    const rawPlayerData = result.data.fullStarterReactPlayerModels.edges[0].node;
    console.log("📄 Raw player data:", rawPlayerData);

    // Convert hex values to numbers - using your structure
    const playerData: Player = {
      owner: rawPlayerData.owner,
      experience: hexToNumber(rawPlayerData.experience),
      health: hexToNumber(rawPlayerData.health),
      coins: hexToNumber(rawPlayerData.coins),
      creation_day: hexToNumber(rawPlayerData.creation_day)
    };

    console.log("✅ Player data after conversion:", playerData);
    return playerData;

  } catch (error) {
    console.error("❌ Error fetching player:", error);
    throw error;
  }
};

// Main hook
export const usePlayer = (): UsePlayerReturn => {
  const [isLoading, setIsLoading] = useState<boolean>(true);
  const [error, setError] = useState<Error | null>(null);
  const { account } = useAccount();

  const storePlayer = useAppStore(state => state.player);
  const setPlayer = useAppStore(state => state.setPlayer);

  const userAddress = useMemo(() =>
    account ? addAddressPadding(account.address).toLowerCase() : '',
    [account]
  );

  const refetch = async () => {
    if (!userAddress) {
      setIsLoading(false);
      return;
    }

    try {
      setIsLoading(true);
      setError(null);

      const playerData = await fetchPlayerData(userAddress);
      console.log("🎮 Player data fetched:", playerData);

      setPlayer(playerData);

      const updatedPlayer = useAppStore.getState().player;
      console.log("💾 Player in store after update:", updatedPlayer);

    } catch (err) {
      const error = err instanceof Error ? err : new Error('Unknown error occurred');
      console.error("❌ Error in refetch:", error);
      setError(error);
      setPlayer(null);
    } finally {
      setIsLoading(false);
    }
  };

  useEffect(() => {
    if (userAddress) {
      console.log("🔄 Address changed, refetching player data");
      refetch();
    }
  }, [userAddress]);

  useEffect(() => {
    if (!account) {
      console.log("❌ No account, clearing player data");
      setPlayer(null);
      setError(null);
      setIsLoading(false);
    }
  }, [account, setPlayer]);

  return {
    player: storePlayer,
    isLoading,
    error,
    refetch
  };
};
```

`/home/suhas/Desktop/pune/blockroomsv2/client/src/dojo/hooks/useGameCompleted.tsx`:

```tsx
import { useState, useCallback, useEffect } from "react";
import { GameCompleted } from "../models.gen";
import { dojoConfig } from "../dojoConfig";

interface UseGameCompletedReturn {
  gameCompleted: GameCompleted | null;
  isLoading: boolean;
  error: Error | null;
  refetch: (eventId?: string) => Promise<void>;
}

export const useGameCompleted = (eventId: string = "default"): UseGameCompletedReturn => {
  const [gameCompleted, setGameCompleted] = useState<GameCompleted | null>(null);
  const [isLoading, setIsLoading] = useState<boolean>(false);
  const [error, setError] = useState<Error | null>(null);

  const refetch = useCallback(async (eventId: string = "default") => {
    try {
      setIsLoading(true);
      setError(null);

      const response = await fetch(`${dojoConfig.toriiUrl}/graphql`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          query: `
            query GetGameCompleted($eventId: String!) {
              gameCompletedEvents(where: { event_id: $eventId }) {
                edges {
                  node {
                    player_id
                    session_id
                    rooms_cleared
                    result
                    total_turns
                  }
                }
              }
            }
          `,
          variables: {
            eventId,
          },
        }),
      });

      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }

      const result = await response.json();
      
      if (result.errors) {
        throw new Error(result.errors[0].message);
      }

      const gameCompletedData = result.data?.gameCompletedEvents?.edges?.[0]?.node;
      setGameCompleted(gameCompletedData);
      console.log("✅ Game completed event fetched:", gameCompletedData);
    } catch (err) {
      const error = err instanceof Error ? err : new Error("Failed to fetch game completed event");
      console.error("❌ Error fetching game completed event:", error);
      setError(error);
      setGameCompleted(null);
    } finally {
      setIsLoading(false);
    }
  }, []);

  useEffect(() => {
    refetch(eventId);
  }, [eventId, refetch]);

  return {
    gameCompleted,
    isLoading,
    error,
    refetch,
  };
}; 
```

`/home/suhas/Desktop/pune/blockroomsv2/client/src/dojo/hooks/useMineAction.tsx`:

```tsx
// import { useState, useCallback } from "react";
// import { useAccount } from "@starknet-react/core";
// import { useDojoSDK } from "@dojoengine/sdk/react";
// import { Account } from "starknet";
// import useAppStore from "../../zustand/store";

// interface MineActionState {
//   isLoading: boolean;
//   error: string | null;
//   txHash: string | null;
//   txStatus: 'PENDING' | 'SUCCESS' | 'REJECTED' | null;
// }

// interface UseMineActionReturn {
//   mineState: MineActionState;
//   executeMine: () => Promise<void>;
//   canMine: boolean;
//   resetMineState: () => void;
// }

// export const useMineAction = (): UseMineActionReturn => {
//   const { account, status } = useAccount();
//   const { client } = useDojoSDK();
//   const { player, updatePlayerCoins, updatePlayerHealth } = useAppStore();

//   const [mineState, setMineState] = useState<MineActionState>({
//     isLoading: false,
//     error: null,
//     txHash: null,
//     txStatus: null
//   });

//   const isConnected = status === "connected";
//   const hasPlayer = player !== null;
//   const hasEnoughHealth = (player?.health || 0) > 5;
//   const canMine = isConnected && hasPlayer && hasEnoughHealth && !mineState.isLoading;

//   const executeMine = useCallback(async () => {
//     if (!canMine || !account) {
//       const errorMsg = !account
//         ? "Please connect your controller"
//         : !hasEnoughHealth
//           ? "Not enough health to mine (need >5 HP)"
//           : "Cannot mine right now";

//       setMineState(prev => ({ ...prev, error: errorMsg }));
//       return;
//     }

//     try {
//       setMineState({
//         isLoading: true,
//         error: null,
//         txHash: null,
//         txStatus: 'PENDING'
//       });

//       console.log("📤 Executing mine transaction...");

//       const tx = await client.game.mine(account as Account);
//       console.log("📥 Mine transaction response:", tx);

//       if (tx?.transaction_hash) {
//         setMineState(prev => ({ ...prev, txHash: tx.transaction_hash }));
//       }

//       if (tx && tx.code === "SUCCESS") {
//         console.log("✅ Mine transaction successful!");

//         // Optimistic update: +5 coins, -5 health
//         updatePlayerCoins((player?.coins || 0) + 5);
//         updatePlayerHealth(Math.max(0, (player?.health || 100) - 5));

//         setMineState(prev => ({
//           ...prev,
//           txStatus: 'SUCCESS',
//           isLoading: false
//         }));

//         // Auto-clear after 3 seconds
//         setTimeout(() => {
//           setMineState({
//             isLoading: false,
//             error: null,
//             txHash: null,
//             txStatus: null
//           });
//         }, 3000);

//       } else {
//         throw new Error(`Mine transaction failed with code: ${tx?.code || 'unknown'}`);
//       }

//     } catch (error) {
//       console.error("❌ Error executing mine:", error);

//       setMineState({
//         isLoading: false,
//         error: error instanceof Error ? error.message : 'Unknown error',
//         txHash: null,
//         txStatus: 'REJECTED'
//       });

//       // Auto-clear error after 5 seconds
//       setTimeout(() => {
//         setMineState({
//           isLoading: false,
//           error: null,
//           txHash: null,
//           txStatus: null
//         });
//       }, 5000);
//     }
//   }, [canMine, account, client.game, player, updatePlayerCoins, updatePlayerHealth, hasEnoughHealth]);

//   const resetMineState = useCallback(() => {
//     setMineState({
//       isLoading: false,
//       error: null,
//       txHash: null,
//       txStatus: null
//     });
//   }, []);

//   return {
//     mineState,
//     executeMine,
//     canMine,
//     resetMineState
//   };
// };
```

`/home/suhas/Desktop/pune/blockroomsv2/client/src/dojo/hooks/useGameSession.tsx`:

```tsx
import { useState, useCallback, useEffect } from "react";
import { GameSession } from "../models.gen";
import { dojoConfig } from "../dojoConfig";

interface UseGameSessionReturn {
  gameSession: GameSession | null;
  isLoading: boolean;
  error: Error | null;
  refetch: (sessionId?: string) => Promise<void>;
}

export const useGameSession = (sessionId?: string): UseGameSessionReturn => {
  const [gameSession, setGameSession] = useState<GameSession | null>(null);
  const [isLoading, setIsLoading] = useState<boolean>(false);
  const [error, setError] = useState<Error | null>(null);

  const refetch = useCallback(async (sessionId?: string) => {
    if (!sessionId) {
      setGameSession(null);
      return;
    }

    try {
      setIsLoading(true);
      setError(null);

      const response = await fetch(`${dojoConfig.toriiUrl}/graphql`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          query: `
            query GetGameSession($sessionId: String!) {
              gameSessions(where: { session_id: $sessionId }) {
                edges {
                  node {
                    session_id
                    player_id
                    start_time
                    end_time
                    rooms_cleared
                    total_shards_collected
                    numbered_shards_collected
                    entities_defeated
                    total_damage_dealt
                    total_damage_taken
                    doors_opened
                    deaths
                    session_complete
                    total_turns
                    total_actions
                    victory_achieved
                  }
                }
              }
            }
          `,
          variables: {
            sessionId,
          },
        }),
      });

      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }

      const result = await response.json();
      
      if (result.errors) {
        throw new Error(result.errors[0].message);
      }

      const sessionData = result.data?.gameSessions?.edges?.[0]?.node;
      setGameSession(sessionData);
      console.log("✅ Game session fetched:", sessionData);
    } catch (err) {
      const error = err instanceof Error ? err : new Error("Failed to fetch game session");
      console.error("❌ Error fetching game session:", error);
      setError(error);
      setGameSession(null);
    } finally {
      setIsLoading(false);
    }
  }, []);

  useEffect(() => {
    refetch(sessionId);
  }, [sessionId, refetch]);

  return {
    gameSession,
    isLoading,
    error,
    refetch,
  };
}; 
```

`/home/suhas/Desktop/pune/blockroomsv2/client/src/dojo/hooks/useTurnExecution.tsx`:

```tsx
import { useState, useCallback, useEffect } from "react";
import { TurnExecution } from "../models.gen";
import { dojoConfig } from "../dojoConfig";

interface UseTurnExecutionReturn {
  turnExecution: TurnExecution | null;
  isLoading: boolean;
  error: Error | null;
  refetch: (turnId?: string) => Promise<void>;
}

export const useTurnExecution = (turnId: string = "default"): UseTurnExecutionReturn => {
  const [turnExecution, setTurnExecution] = useState<TurnExecution | null>(null);
  const [isLoading, setIsLoading] = useState<boolean>(false);
  const [error, setError] = useState<Error | null>(null);

  const refetch = useCallback(async (turnId: string = "default") => {
    try {
      setIsLoading(true);
      setError(null);

      const response = await fetch(`${dojoConfig.toriiUrl}/graphql`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          query: `
            query GetTurnExecution($turnId: String!) {
              turnExecutions(where: { turn_id: $turnId }) {
                edges {
                  node {
                    turn_id
                    player_id
                    session_id
                    actions_count
                    successful_actions
                    total_damage_dealt
                    total_damage_taken
                    total_shards_gained
                    numbered_shards_collected
                    timestamp
                    turn_number
                  }
                }
              }
            }
          `,
          variables: {
            turnId,
          },
        }),
      });

      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }

      const result = await response.json();
      
      if (result.errors) {
        throw new Error(result.errors[0].message);
      }

      const turnExecutionData = result.data?.turnExecutions?.edges?.[0]?.node;
      setTurnExecution(turnExecutionData);
      console.log("✅ Turn execution fetched:", turnExecutionData);
    } catch (err) {
      const error = err instanceof Error ? err : new Error("Failed to fetch turn execution");
      console.error("❌ Error fetching turn execution:", error);
      setError(error);
      setTurnExecution(null);
    } finally {
      setIsLoading(false);
    }
  }, []);

  useEffect(() => {
    refetch(turnId);
  }, [turnId, refetch]);

  return {
    turnExecution,
    isLoading,
    error,
    refetch,
  };
}; 
```

`/home/suhas/Desktop/pune/blockroomsv2/client/src/dojo/hooks/useRoomCleared.tsx`:

```tsx
import { useState, useCallback, useEffect } from "react";
import { RoomCleared } from "../models.gen";
import { dojoConfig } from "../dojoConfig";

interface UseRoomClearedReturn {
  roomCleared: RoomCleared | null;
  isLoading: boolean;
  error: Error | null;
  refetch: (eventId?: string) => Promise<void>;
}

export const useRoomCleared = (eventId: string = "default"): UseRoomClearedReturn => {
  const [roomCleared, setRoomCleared] = useState<RoomCleared | null>(null);
  const [isLoading, setIsLoading] = useState<boolean>(false);
  const [error, setError] = useState<Error | null>(null);

  const refetch = useCallback(async (eventId: string = "default") => {
    try {
      setIsLoading(true);
      setError(null);

      const response = await fetch(`${dojoConfig.toriiUrl}/graphql`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          query: `
            query GetRoomCleared($eventId: String!) {
              roomClearedEvents(where: { event_id: $eventId }) {
                edges {
                  node {
                    player_id
                    room_id
                    entities_defeated
                    turn_number
                  }
                }
              }
            }
          `,
          variables: {
            eventId,
          },
        }),
      });

      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }

      const result = await response.json();
      
      if (result.errors) {
        throw new Error(result.errors[0].message);
      }

      const roomClearedData = result.data?.roomClearedEvents?.edges?.[0]?.node;
      setRoomCleared(roomClearedData);
      console.log("✅ Room cleared event fetched:", roomClearedData);
    } catch (err) {
      const error = err instanceof Error ? err : new Error("Failed to fetch room cleared event");
      console.error("❌ Error fetching room cleared event:", error);
      setError(error);
      setRoomCleared(null);
    } finally {
      setIsLoading(false);
    }
  }, []);

  useEffect(() => {
    refetch(eventId);
  }, [eventId, refetch]);

  return {
    roomCleared,
    isLoading,
    error,
    refetch,
  };
}; 
```

`/home/suhas/Desktop/pune/blockroomsv2/client/src/dojo/hooks/useMovePlayer.tsx`:

```tsx
import { useState, useCallback } from "react";
import { useAccount } from "@starknet-react/core";
import { BigNumberish } from "starknet";
import { dojoConfig } from "../dojoConfig";

interface UseMovePlayerReturn {
  movePlayer: (xDelta: BigNumberish, yDelta: BigNumberish) => Promise<void>;
  isLoading: boolean;
  error: Error | null;
  resetError: () => void;
}

export const useMovePlayer = (): UseMovePlayerReturn => {
  const [isLoading, setIsLoading] = useState<boolean>(false);
  const [error, setError] = useState<Error | null>(null);
  const { account } = useAccount();

  const movePlayer = useCallback(async (xDelta: BigNumberish, yDelta: BigNumberish) => {
    if (!account) {
      setError(new Error("No account connected"));
      return;
    }

    try {
      setIsLoading(true);
      setError(null);

      const response = await fetch(`${dojoConfig.toriiUrl}/graphql`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          query: `
            mutation MovePlayer($xDelta: BigNumberish!, $yDelta: BigNumberish!) {
              movePlayer(xDelta: $xDelta, yDelta: $yDelta)
            }
          `,
          variables: {
            xDelta: xDelta.toString(),
            yDelta: yDelta.toString(),
          },
        }),
      });

      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }

      const result = await response.json();
      
      if (result.errors) {
        throw new Error(result.errors[0].message);
      }

      console.log("✅ Player moved successfully:", result.data);
    } catch (err) {
      const error = err instanceof Error ? err : new Error("Failed to move player");
      console.error("❌ Error moving player:", error);
      setError(error);
      throw error;
    } finally {
      setIsLoading(false);
    }
  }, [account]);

  const resetError = useCallback(() => {
    setError(null);
  }, []);

  return {
    movePlayer,
    isLoading,
    error,
    resetError,
  };
}; 
```

`/home/suhas/Desktop/pune/blockroomsv2/client/src/dojo/hooks/useCollectShard.tsx`:

```tsx
import { useState, useCallback } from "react";
import { useAccount } from "@starknet-react/core";
import { Position } from "../models.gen";
import { dojoConfig } from "../dojoConfig";

interface UseCollectShardReturn {
  collectShard: (position: Position) => Promise<void>;
  isLoading: boolean;
  error: Error | null;
  resetError: () => void;
}

export const useCollectShard = (): UseCollectShardReturn => {
  const [isLoading, setIsLoading] = useState<boolean>(false);
  const [error, setError] = useState<Error | null>(null);
  const { account } = useAccount();

  const collectShard = useCallback(async (position: Position) => {
    if (!account) {
      setError(new Error("No account connected"));
      return;
    }

    try {
      setIsLoading(true);
      setError(null);

      const response = await fetch(`${dojoConfig.toriiUrl}/graphql`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          query: `
            mutation CollectShard($position: Position!) {
              collectShard(position: $position)
            }
          `,
          variables: {
            position: {
              x: position.x.toString(),
              y: position.y.toString(),
              location_id: position.location_id.toString(),
            },
          },
        }),
      });

      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }

      const result = await response.json();
      
      if (result.errors) {
        throw new Error(result.errors[0].message);
      }

      console.log("✅ Shard collected successfully:", result.data);
    } catch (err) {
      const error = err instanceof Error ? err : new Error("Failed to collect shard");
      console.error("❌ Error collecting shard:", error);
      setError(error);
      throw error;
    } finally {
      setIsLoading(false);
    }
  }, [account]);

  const resetError = useCallback(() => {
    setError(null);
  }, []);

  return {
    collectShard,
    isLoading,
    error,
    resetError,
  };
}; 
```

`/home/suhas/Desktop/pune/blockroomsv2/client/src/dojo/hooks/useTurnExecuted.tsx`:

```tsx
import { useState, useCallback, useEffect } from "react";
import { TurnExecuted } from "../models.gen";
import { dojoConfig } from "../dojoConfig";

interface UseTurnExecutedReturn {
  turnExecuted: TurnExecuted | null;
  isLoading: boolean;
  error: Error | null;
  refetch: (eventId?: string) => Promise<void>;
}

export const useTurnExecuted = (eventId: string = "default"): UseTurnExecutedReturn => {
  const [turnExecuted, setTurnExecuted] = useState<TurnExecuted | null>(null);
  const [isLoading, setIsLoading] = useState<boolean>(false);
  const [error, setError] = useState<Error | null>(null);

  const refetch = useCallback(async (eventId: string = "default") => {
    try {
      setIsLoading(true);
      setError(null);

      const response = await fetch(`${dojoConfig.toriiUrl}/graphql`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          query: `
            query GetTurnExecuted($eventId: String!) {
              turnExecutedEvents(where: { event_id: $eventId }) {
                edges {
                  node {
                    player_id
                    turn_id
                    turn_number
                    actions_attempted
                    actions_successful
                    total_damage_dealt
                    total_damage_taken
                    shards_gained
                    numbered_shards_gained
                    position_end {
                      x
                      y
                      location_id
                    }
                  }
                }
              }
            }
          `,
          variables: {
            eventId,
          },
        }),
      });

      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }

      const result = await response.json();
      
      if (result.errors) {
        throw new Error(result.errors[0].message);
      }

      const turnExecutedData = result.data?.turnExecutedEvents?.edges?.[0]?.node;
      setTurnExecuted(turnExecutedData);
      console.log("✅ Turn executed event fetched:", turnExecutedData);
    } catch (err) {
      const error = err instanceof Error ? err : new Error("Failed to fetch turn executed event");
      console.error("❌ Error fetching turn executed event:", error);
      setError(error);
      setTurnExecuted(null);
    } finally {
      setIsLoading(false);
    }
  }, []);

  useEffect(() => {
    refetch(eventId);
  }, [eventId, refetch]);

  return {
    turnExecuted,
    isLoading,
    error,
    refetch,
  };
}; 
```

`/home/suhas/Desktop/pune/blockroomsv2/client/src/dojo/hooks/useVictoryAchieved.tsx`:

```tsx
import { useState, useCallback, useEffect } from "react";
import { VictoryAchieved } from "../models.gen";
import { dojoConfig } from "../dojoConfig";

interface UseVictoryAchievedReturn {
  victoryAchieved: VictoryAchieved | null;
  isLoading: boolean;
  error: Error | null;
  refetch: (eventId?: string) => Promise<void>;
}

export const useVictoryAchieved = (eventId: string = "default"): UseVictoryAchievedReturn => {
  const [victoryAchieved, setVictoryAchieved] = useState<VictoryAchieved | null>(null);
  const [isLoading, setIsLoading] = useState<boolean>(false);
  const [error, setError] = useState<Error | null>(null);

  const refetch = useCallback(async (eventId: string = "default") => {
    try {
      setIsLoading(true);
      setError(null);

      const response = await fetch(`${dojoConfig.toriiUrl}/graphql`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          query: `
            query GetVictoryAchieved($eventId: String!) {
              victoryAchievedEvents(where: { event_id: $eventId }) {
                edges {
                  node {
                    player_id
                    session_id
                    completion_time
                    total_turns
                  }
                }
              }
            }
          `,
          variables: {
            eventId,
          },
        }),
      });

      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }

      const result = await response.json();
      
      if (result.errors) {
        throw new Error(result.errors[0].message);
      }

      const victoryAchievedData = result.data?.victoryAchievedEvents?.edges?.[0]?.node;
      setVictoryAchieved(victoryAchievedData);
      console.log("✅ Victory achieved event fetched:", victoryAchievedData);
    } catch (err) {
      const error = err instanceof Error ? err : new Error("Failed to fetch victory achieved event");
      console.error("❌ Error fetching victory achieved event:", error);
      setError(error);
      setVictoryAchieved(null);
    } finally {
      setIsLoading(false);
    }
  }, []);

  useEffect(() => {
    refetch(eventId);
  }, [eventId, refetch]);

  return {
    victoryAchieved,
    isLoading,
    error,
    refetch,
  };
}; 
```

`/home/suhas/Desktop/pune/blockroomsv2/client/src/dojo/hooks/useEntityType.tsx`:

```tsx
import { useCallback } from "react";
import { EntityTypeEnum, entityType } from "../models.gen";

interface UseEntityTypeReturn {
  entityTypes: typeof entityType;
  getEntityTypeName: (type: EntityTypeEnum) => string;
  isMale: (type: EntityTypeEnum) => boolean;
  isFemale: (type: EntityTypeEnum) => boolean;
}

export const useEntityType = (): UseEntityTypeReturn => {
  const getEntityTypeName = useCallback((type: EntityTypeEnum): string => {
    if ('Male' in type) return "Male";
    if ('Female' in type) return "Female";
    return "Unknown";
  }, []);

  const isMale = useCallback((type: EntityTypeEnum): boolean => {
    return 'Male' in type;
  }, []);

  const isFemale = useCallback((type: EntityTypeEnum): boolean => {
    return 'Female' in type;
  }, []);

  return {
    entityTypes: entityType,
    getEntityTypeName,
    isMale,
    isFemale,
  };
}; 
```

`/home/suhas/Desktop/pune/blockroomsv2/client/src/dojo/hooks/usePlayerDeath.tsx`:

```tsx
import { useState, useCallback, useEffect } from "react";
import { PlayerDeath } from "../models.gen";
import { dojoConfig } from "../dojoConfig";

interface UsePlayerDeathReturn {
  playerDeath: PlayerDeath | null;
  isLoading: boolean;
  error: Error | null;
  refetch: (eventId?: string) => Promise<void>;
}

export const usePlayerDeath = (eventId: string = "default"): UsePlayerDeathReturn => {
  const [playerDeath, setPlayerDeath] = useState<PlayerDeath | null>(null);
  const [isLoading, setIsLoading] = useState<boolean>(false);
  const [error, setError] = useState<Error | null>(null);

  const refetch = useCallback(async (eventId: string = "default") => {
    try {
      setIsLoading(true);
      setError(null);

      const response = await fetch(`${dojoConfig.toriiUrl}/graphql`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          query: `
            query GetPlayerDeath($eventId: String!) {
              playerDeathEvents(where: { event_id: $eventId }) {
                edges {
                  node {
                    player_id
                    position {
                      x
                      y
                      location_id
                    }
                    cause
                    turn_number
                  }
                }
              }
            }
          `,
          variables: {
            eventId,
          },
        }),
      });

      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }

      const result = await response.json();
      
      if (result.errors) {
        throw new Error(result.errors[0].message);
      }

      const playerDeathData = result.data?.playerDeathEvents?.edges?.[0]?.node;
      setPlayerDeath(playerDeathData);
      console.log("✅ Player death event fetched:", playerDeathData);
    } catch (err) {
      const error = err instanceof Error ? err : new Error("Failed to fetch player death event");
      console.error("❌ Error fetching player death event:", error);
      setError(error);
      setPlayerDeath(null);
    } finally {
      setIsLoading(false);
    }
  }, []);

  useEffect(() => {
    refetch(eventId);
  }, [eventId, refetch]);

  return {
    playerDeath,
    isLoading,
    error,
    refetch,
  };
}; 
```

`/home/suhas/Desktop/pune/blockroomsv2/client/src/dojo/hooks/useRestAction.tsx`:

```tsx
// import { useState, useCallback } from "react";
// import { useAccount } from "@starknet-react/core";
// import { useDojoSDK } from "@dojoengine/sdk/react";
// import { Account } from "starknet";
// import useAppStore from "../../zustand/store";

// interface RestActionState {
//   isLoading: boolean;
//   error: string | null;
//   txHash: string | null;
//   txStatus: 'PENDING' | 'SUCCESS' | 'REJECTED' | null;
// }

// interface UseRestActionReturn {
//   restState: RestActionState;
//   executeRest: () => Promise<void>;
//   canRest: boolean;
//   resetRestState: () => void;
// }

// export const useRestAction = (): UseRestActionReturn => {
//   const { account, status } = useAccount();
//   const { client } = useDojoSDK();
//   const { player, updatePlayerHealth } = useAppStore();

//   const [restState, setRestState] = useState<RestActionState>({
//     isLoading: false,
//     error: null,
//     txHash: null,
//     txStatus: null
//   });

//   const isConnected = status === "connected";
//   const hasPlayer = player !== null;
//   const needsHealth = (player?.health || 0) < 100;
//   const canRest = isConnected && hasPlayer && needsHealth && !restState.isLoading;

//   const executeRest = useCallback(async () => {
//     if (!canRest || !account) {
//       const errorMsg = !account
//         ? "Please connect your controller"
//         : !needsHealth
//           ? "Health is already full"
//           : "Cannot rest right now";

//       setRestState(prev => ({ ...prev, error: errorMsg }));
//       return;
//     }

//     try {
//       setRestState({
//         isLoading: true,
//         error: null,
//         txHash: null,
//         txStatus: 'PENDING'
//       });

//       console.log("📤 Executing rest transaction...");

//       const tx = await client.game.rest(account as Account);
//       console.log("📥 Rest transaction response:", tx);

//       if (tx?.transaction_hash) {
//         setRestState(prev => ({ ...prev, txHash: tx.transaction_hash }));
//       }

//       if (tx && tx.code === "SUCCESS") {
//         console.log("✅ Rest transaction successful!");

//         // Optimistic update: +20 health (max 100)
//         updatePlayerHealth(Math.min(100, (player?.health || 100) + 20));

//         setRestState(prev => ({
//           ...prev,
//           txStatus: 'SUCCESS',
//           isLoading: false
//         }));

//         // Auto-clear after 3 seconds
//         setTimeout(() => {
//           setRestState({
//             isLoading: false,
//             error: null,
//             txHash: null,
//             txStatus: null
//           });
//         }, 3000);

//       } else {
//         throw new Error(`Rest transaction failed with code: ${tx?.code || 'unknown'}`);
//       }

//     } catch (error) {
//       console.error("❌ Error executing rest:", error);

//       setRestState({
//         isLoading: false,
//         error: error instanceof Error ? error.message : 'Unknown error',
//         txHash: null,
//         txStatus: 'REJECTED'
//       });

//       // Auto-clear error after 5 seconds
//       setTimeout(() => {
//         setRestState({
//           isLoading: false,
//           error: null,
//           txHash: null,
//           txStatus: null
//         });
//       }, 5000);
//     }
//   }, [canRest, account, client.game, player, updatePlayerHealth, needsHealth]);

//   const resetRestState = useCallback(() => {
//     setRestState({
//       isLoading: false,
//       error: null,
//       txHash: null,
//       txStatus: null
//     });
//   }, []);

//   return {
//     restState,
//     executeRest,
//     canRest,
//     resetRestState
//   };
// };
```

`/home/suhas/Desktop/pune/blockroomsv2/client/src/dojo/hooks/useActionType.tsx`:

```tsx
import { useCallback } from "react";
import { ActionTypeEnum, actionType } from "../models.gen";

interface UseActionTypeReturn {
  actionTypes: typeof actionType;
  getActionTypeName: (type: ActionTypeEnum) => string;
  isMove: (type: ActionTypeEnum) => boolean;
  isOpenDoor: (type: ActionTypeEnum) => boolean;
  isAttack: (type: ActionTypeEnum) => boolean;
  isCollectShard: (type: ActionTypeEnum) => boolean;
}

export const useActionType = (): UseActionTypeReturn => {
  const getActionTypeName = useCallback((type: ActionTypeEnum): string => {
    if (type.variant.Move !== undefined) return "Move";
    if (type.variant.OpenDoor !== undefined) return "OpenDoor";
    if (type.variant.Attack !== undefined) return "Attack";
    if (type.variant.CollectShard !== undefined) return "CollectShard";
    return "Unknown";
  }, []);

  const isMove = useCallback((type: ActionTypeEnum): boolean => {
    return type.variant.Move !== undefined;
  }, []);

  const isOpenDoor = useCallback((type: ActionTypeEnum): boolean => {
    return type.variant.OpenDoor !== undefined;
  }, []);

  const isAttack = useCallback((type: ActionTypeEnum): boolean => {
    return type.variant.Attack !== undefined;
  }, []);

  const isCollectShard = useCallback((type: ActionTypeEnum): boolean => {
    return type.variant.CollectShard !== undefined;
  }, []);

  return {
    actionTypes: actionType,
    getActionTypeName,
    isMove,
    isOpenDoor,
    isAttack,
    isCollectShard,
  };
}; 
```

`/home/suhas/Desktop/pune/blockroomsv2/client/src/dojo/hooks/useGetEntitiesInLocation.tsx`:

```tsx
import { useState, useCallback, useEffect } from "react";
import { BigNumberish } from "starknet";
import { Entity } from "../models.gen";
import { dojoConfig } from "../dojoConfig";

interface UseGetEntitiesInLocationReturn {
  entities: Entity[] | null;
  isLoading: boolean;
  error: Error | null;
  refetch: (locationId: BigNumberish) => Promise<void>;
}

export const useGetEntitiesInLocation = (locationId?: BigNumberish): UseGetEntitiesInLocationReturn => {
  const [entities, setEntities] = useState<Entity[] | null>(null);
  const [isLoading, setIsLoading] = useState<boolean>(false);
  const [error, setError] = useState<Error | null>(null);

  const refetch = useCallback(async (locationId: BigNumberish) => {
    try {
      setIsLoading(true);
      setError(null);

      const response = await fetch(`${dojoConfig.toriiUrl}/graphql`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          query: `
            query GetEntitiesInLocation($locationId: BigNumberish!) {
              getEntitiesInLocation(locationId: $locationId) {
                entity_id
                entity_type
                position {
                  x
                  y
                  location_id
                }
                health
                max_health
                is_alive
                damage_per_turn
                drops_numbered_shard
                spawned_from_door
              }
            }
          `,
          variables: {
            locationId: locationId.toString(),
          },
        }),
      });

      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }

      const result = await response.json();
      
      if (result.errors) {
        throw new Error(result.errors[0].message);
      }

      const entitiesData = result.data?.getEntitiesInLocation || [];
      setEntities(entitiesData);
      console.log("✅ Entities in location fetched:", entitiesData);
    } catch (err) {
      const error = err instanceof Error ? err : new Error("Failed to fetch entities in location");
      console.error("❌ Error fetching entities in location:", error);
      setError(error);
      setEntities(null);
    } finally {
      setIsLoading(false);
    }
  }, []);

  useEffect(() => {
    if (locationId) {
      refetch(locationId);
    }
  }, [locationId, refetch]);

  return {
    entities,
    isLoading,
    error,
    refetch,
  };
}; 
```

`/home/suhas/Desktop/pune/blockroomsv2/client/src/dojo/hooks/useInitializePlayer.tsx`:

```tsx
import { useState, useCallback } from "react";
import { useAccount } from "@starknet-react/core";
import { dojoConfig } from "../dojoConfig";

interface UseInitializePlayerReturn {
  initializePlayer: () => Promise<void>;
  isLoading: boolean;
  error: Error | null;
  resetError: () => void;
}

export const useInitializePlayer = (): UseInitializePlayerReturn => {
  const [isLoading, setIsLoading] = useState<boolean>(false);
  const [error, setError] = useState<Error | null>(null);
  const { account } = useAccount();

  const initializePlayer = useCallback(async () => {
    if (!account) {
      setError(new Error("No account connected"));
      return;
    }

    try {
      setIsLoading(true);
      setError(null);

      const response = await fetch(`${dojoConfig.toriiUrl}/graphql`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          query: `
            mutation InitializePlayer {
              initializePlayer
            }
          `,
        }),
      });

      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }

      const result = await response.json();
      
      if (result.errors) {
        throw new Error(result.errors[0].message);
      }

      console.log("✅ Player initialized successfully:", result.data);
    } catch (err) {
      const error = err instanceof Error ? err : new Error("Failed to initialize player");
      console.error("❌ Error initializing player:", error);
      setError(error);
      throw error;
    } finally {
      setIsLoading(false);
    }
  }, [account]);

  const resetError = useCallback(() => {
    setError(null);
  }, []);

  return {
    initializePlayer,
    isLoading,
    error,
    resetError,
  };
}; 
```

`/home/suhas/Desktop/pune/blockroomsv2/client/src/dojo/hooks/useActionExecuted.tsx`:

```tsx
import { useState, useCallback, useEffect } from "react";
import { ActionExecuted } from "../models.gen";
import { dojoConfig } from "../dojoConfig";

interface UseActionExecutedReturn {
  actionExecuted: ActionExecuted | null;
  isLoading: boolean;
  error: Error | null;
  refetch: (eventId?: string) => Promise<void>;
}

export const useActionExecuted = (eventId: string = "default"): UseActionExecutedReturn => {
  const [actionExecuted, setActionExecuted] = useState<ActionExecuted | null>(null);
  const [isLoading, setIsLoading] = useState<boolean>(false);
  const [error, setError] = useState<Error | null>(null);

  const refetch = useCallback(async (eventId: string = "default") => {
    try {
      setIsLoading(true);
      setError(null);

      const response = await fetch(`${dojoConfig.toriiUrl}/graphql`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          query: `
            query GetActionExecuted($eventId: String!) {
              actionExecutedEvents(where: { event_id: $eventId }) {
                edges {
                  node {
                    player_id
                    turn_id
                    action_index
                    action_type
                    success
                    damage_dealt
                    damage_taken
                    position_changed
                    door_opened
                  }
                }
              }
            }
          `,
          variables: {
            eventId,
          },
        }),
      });

      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }

      const result = await response.json();
      
      if (result.errors) {
        throw new Error(result.errors[0].message);
      }

      const actionExecutedData = result.data?.actionExecutedEvents?.edges?.[0]?.node;
      setActionExecuted(actionExecutedData);
      console.log("✅ Action executed event fetched:", actionExecutedData);
    } catch (err) {
      const error = err instanceof Error ? err : new Error("Failed to fetch action executed event");
      console.error("❌ Error fetching action executed event:", error);
      setError(error);
      setActionExecuted(null);
    } finally {
      setIsLoading(false);
    }
  }, []);

  useEffect(() => {
    refetch(eventId);
  }, [eventId, refetch]);

  return {
    actionExecuted,
    isLoading,
    error,
    refetch,
  };
}; 
```

`/home/suhas/Desktop/pune/blockroomsv2/client/src/dojo/hooks/useGetGameStatus.tsx`:

```tsx
import { useState, useCallback, useEffect } from "react";
import { GameResultEnum } from "../models.gen";
import { dojoConfig } from "../dojoConfig";

interface UseGetGameStatusReturn {
  gameStatus: GameResultEnum | null;
  isLoading: boolean;
  error: Error | null;
  refetch: () => Promise<void>;
}

export const useGetGameStatus = (): UseGetGameStatusReturn => {
  const [gameStatus, setGameStatus] = useState<GameResultEnum | null>(null);
  const [isLoading, setIsLoading] = useState<boolean>(false);
  const [error, setError] = useState<Error | null>(null);

  const refetch = useCallback(async () => {
    try {
      setIsLoading(true);
      setError(null);

      const response = await fetch(`${dojoConfig.toriiUrl}/graphql`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          query: `
            query GetGameStatus {
              getGameStatus
            }
          `,
        }),
      });

      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }

      const result = await response.json();
      
      if (result.errors) {
        throw new Error(result.errors[0].message);
      }

      const status = result.data?.getGameStatus;
      setGameStatus(status);
      console.log("✅ Game status fetched:", status);
    } catch (err) {
      const error = err instanceof Error ? err : new Error("Failed to fetch game status");
      console.error("❌ Error fetching game status:", error);
      setError(error);
      setGameStatus(null);
    } finally {
      setIsLoading(false);
    }
  }, []);

  useEffect(() => {
    refetch();
  }, [refetch]);

  return {
    gameStatus,
    isLoading,
    error,
    refetch,
  };
}; 
```

`/home/suhas/Desktop/pune/blockroomsv2/client/src/dojo/hooks/useDoorway.tsx`:

```tsx
import { useState, useCallback, useEffect } from "react";
import { Doorway } from "../models.gen";
import { dojoConfig } from "../dojoConfig";

interface UseDoorwayReturn {
  doorway: Doorway | null;
  isLoading: boolean;
  error: Error | null;
  refetch: (doorwayId?: string) => Promise<void>;
}

export const useDoorway = (doorwayId: string = "default"): UseDoorwayReturn => {
  const [doorway, setDoorway] = useState<Doorway | null>(null);
  const [isLoading, setIsLoading] = useState<boolean>(false);
  const [error, setError] = useState<Error | null>(null);

  const refetch = useCallback(async (doorwayId: string = "default") => {
    try {
      setIsLoading(true);
      setError(null);

      const response = await fetch(`${dojoConfig.toriiUrl}/graphql`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          query: `
            query GetDoorway($doorwayId: String!) {
              doorways(where: { doorway_id: $doorwayId }) {
                edges {
                  node {
                    doorway_id
                    position {
                      x
                      y
                      location_id
                    }
                    room_id
                    connected_room_id
                    is_open
                    requires_cleared
                  }
                }
              }
            }
          `,
          variables: {
            doorwayId,
          },
        }),
      });

      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }

      const result = await response.json();
      
      if (result.errors) {
        throw new Error(result.errors[0].message);
      }

      const doorwayData = result.data?.doorways?.edges?.[0]?.node;
      setDoorway(doorwayData);
      console.log("✅ Doorway fetched:", doorwayData);
    } catch (err) {
      const error = err instanceof Error ? err : new Error("Failed to fetch doorway");
      console.error("❌ Error fetching doorway:", error);
      setError(error);
      setDoorway(null);
    } finally {
      setIsLoading(false);
    }
  }, []);

  useEffect(() => {
    refetch(doorwayId);
  }, [doorwayId, refetch]);

  return {
    doorway,
    isLoading,
    error,
    refetch,
  };
}; 
```

`/home/suhas/Desktop/pune/blockroomsv2/client/src/dojo/hooks/useGetPlayerState.tsx`:

```tsx
import { useState, useCallback, useEffect } from "react";
import { Player } from "../models.gen";
import { dojoConfig } from "../dojoConfig";

interface UseGetPlayerStateReturn {
  playerState: Player | null;
  isLoading: boolean;
  error: Error | null;
  refetch: () => Promise<void>;
}

export const useGetPlayerState = (): UseGetPlayerStateReturn => {
  const [playerState, setPlayerState] = useState<Player | null>(null);
  const [isLoading, setIsLoading] = useState<boolean>(false);
  const [error, setError] = useState<Error | null>(null);

  const refetch = useCallback(async () => {
    try {
      setIsLoading(true);
      setError(null);

      const response = await fetch(`${dojoConfig.toriiUrl}/graphql`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          query: `
            query GetPlayerState {
              getPlayerState {
                player_id
                position {
                  x
                  y
                  location_id
                }
                health
                max_health
                shards
                game_active
                is_alive
                current_session_id
                rooms_cleared
                turn_number
                dodge_active_turns
                has_shard_one
                has_shard_two
                has_shard_three
                entered_door_id
                door_enemy_alive
                movement_locked
                special_ability_cooldown
                has_key
              }
            }
          `,
        }),
      });

      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }

      const result = await response.json();
      
      if (result.errors) {
        throw new Error(result.errors[0].message);
      }

      const playerData = result.data?.getPlayerState;
      setPlayerState(playerData);
      console.log("✅ Player state fetched:", playerData);
    } catch (err) {
      const error = err instanceof Error ? err : new Error("Failed to fetch player state");
      console.error("❌ Error fetching player state:", error);
      setError(error);
      setPlayerState(null);
    } finally {
      setIsLoading(false);
    }
  }, []);

  useEffect(() => {
    refetch();
  }, [refetch]);

  return {
    playerState,
    isLoading,
    error,
    refetch,
  };
}; 
```

`/home/suhas/Desktop/pune/blockroomsv2/client/src/dojo/hooks/useGameResult.tsx`:

```tsx
import { useCallback } from "react";
import { GameResultEnum, gameResult } from "../models.gen";

interface UseGameResultReturn {
  gameResults: typeof gameResult;
  getGameResultName: (result: GameResultEnum) => string;
  isInProgress: (result: GameResultEnum) => boolean;
  isVictory: (result: GameResultEnum) => boolean;
  isDefeat: (result: GameResultEnum) => boolean;
}

export const useGameResult = (): UseGameResultReturn => {
  const getGameResultName = useCallback((result: GameResultEnum): string => {
    if (result.activeVariant() === "InProgress") return "InProgress";
    if (result.activeVariant() === "Victory") return "Victory";
    if (result.activeVariant() === "Defeat") return "Defeat";
    return "Unknown";
  }, []);

  const isInProgress = useCallback((result: GameResultEnum): boolean => {
    return result.activeVariant() === "InProgress";
  }, []);

  const isVictory = useCallback((result: GameResultEnum): boolean => {
    return result.activeVariant() === "Victory";
  }, []);

  const isDefeat = useCallback((result: GameResultEnum): boolean => {
    return result.activeVariant() === "Defeat";
  }, []);

  return {
    gameResults: gameResult,
    getGameResultName,
    isInProgress,
    isVictory,
    isDefeat,
  };
}; 
```

`/home/suhas/Desktop/pune/blockroomsv2/client/src/dojo/hooks/useGridBounds.tsx`:

```tsx
import { useState, useCallback, useEffect } from "react";
import { GridBounds } from "../models.gen";
import { dojoConfig } from "../dojoConfig";

interface UseGridBoundsReturn {
  gridBounds: GridBounds | null;
  isLoading: boolean;
  error: Error | null;
  refetch: (boundsId?: string) => Promise<void>;
}

export const useGridBounds = (boundsId: string = "default"): UseGridBoundsReturn => {
  const [gridBounds, setGridBounds] = useState<GridBounds | null>(null);
  const [isLoading, setIsLoading] = useState<boolean>(false);
  const [error, setError] = useState<Error | null>(null);

  const refetch = useCallback(async (boundsId: string = "default") => {
    try {
      setIsLoading(true);
      setError(null);

      const response = await fetch(`${dojoConfig.toriiUrl}/graphql`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          query: `
            query GetGridBounds($boundsId: String!) {
              gridBounds(where: { bounds_id: $boundsId }) {
                edges {
                  node {
                    min_x
                    max_x
                    min_y
                    max_y
                  }
                }
              }
            }
          `,
          variables: {
            boundsId,
          },
        }),
      });

      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }

      const result = await response.json();
      
      if (result.errors) {
        throw new Error(result.errors[0].message);
      }

      const gridBoundsData = result.data?.gridBounds?.edges?.[0]?.node;
      setGridBounds(gridBoundsData);
      console.log("✅ Grid bounds fetched:", gridBoundsData);
    } catch (err) {
      const error = err instanceof Error ? err : new Error("Failed to fetch grid bounds");
      console.error("❌ Error fetching grid bounds:", error);
      setError(error);
      setGridBounds(null);
    } finally {
      setIsLoading(false);
    }
  }, []);

  useEffect(() => {
    refetch(boundsId);
  }, [boundsId, refetch]);

  return {
    gridBounds,
    isLoading,
    error,
    refetch,
  };
}; 
```

`/home/suhas/Desktop/pune/blockroomsv2/client/src/dojo/hooks/usePosition.tsx`:

```tsx
import { useState, useCallback, useEffect } from "react";
import { Position } from "../models.gen";
import { dojoConfig } from "../dojoConfig";

interface UsePositionReturn {
  position: Position | null;
  isLoading: boolean;
  error: Error | null;
  refetch: (positionId?: string) => Promise<void>;
}

export const usePosition = (positionId: string = "default"): UsePositionReturn => {
  const [position, setPosition] = useState<Position | null>(null);
  const [isLoading, setIsLoading] = useState<boolean>(false);
  const [error, setError] = useState<Error | null>(null);

  const refetch = useCallback(async (positionId: string = "default") => {
    try {
      setIsLoading(true);
      setError(null);

      const response = await fetch(`${dojoConfig.toriiUrl}/graphql`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          query: `
            query GetPosition($positionId: String!) {
              positions(where: { position_id: $positionId }) {
                edges {
                  node {
                    x
                    y
                    location_id
                  }
                }
              }
            }
          `,
          variables: {
            positionId,
          },
        }),
      });

      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }

      const result = await response.json();
      
      if (result.errors) {
        throw new Error(result.errors[0].message);
      }

      const positionData = result.data?.positions?.edges?.[0]?.node;
      setPosition(positionData);
      console.log("✅ Position fetched:", positionData);
    } catch (err) {
      const error = err instanceof Error ? err : new Error("Failed to fetch position");
      console.error("❌ Error fetching position:", error);
      setError(error);
      setPosition(null);
    } finally {
      setIsLoading(false);
    }
  }, []);

  useEffect(() => {
    refetch(positionId);
  }, [positionId, refetch]);

  return {
    position,
    isLoading,
    error,
    refetch,
  };
}; 
```

`/home/suhas/Desktop/pune/blockroomsv2/client/src/dojo/hooks/useNumberedShardCollected.tsx`:

```tsx
import { useState, useCallback, useEffect } from "react";
import { NumberedShardCollected } from "../models.gen";
import { dojoConfig } from "../dojoConfig";

interface UseNumberedShardCollectedReturn {
  numberedShardCollected: NumberedShardCollected | null;
  isLoading: boolean;
  error: Error | null;
  refetch: (eventId?: string) => Promise<void>;
}

export const useNumberedShardCollected = (eventId: string = "default"): UseNumberedShardCollectedReturn => {
  const [numberedShardCollected, setNumberedShardCollected] = useState<NumberedShardCollected | null>(null);
  const [isLoading, setIsLoading] = useState<boolean>(false);
  const [error, setError] = useState<Error | null>(null);

  const refetch = useCallback(async (eventId: string = "default") => {
    try {
      setIsLoading(true);
      setError(null);

      const response = await fetch(`${dojoConfig.toriiUrl}/graphql`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          query: `
            query GetNumberedShardCollected($eventId: String!) {
              numberedShardCollectedEvents(where: { event_id: $eventId }) {
                edges {
                  node {
                    player_id
                    shard_type
                    position {
                      x
                      y
                      location_id
                    }
                    turn_number
                  }
                }
              }
            }
          `,
          variables: {
            eventId,
          },
        }),
      });

      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }

      const result = await response.json();
      
      if (result.errors) {
        throw new Error(result.errors[0].message);
      }

      const numberedShardCollectedData = result.data?.numberedShardCollectedEvents?.edges?.[0]?.node;
      setNumberedShardCollected(numberedShardCollectedData);
      console.log("✅ Numbered shard collected event fetched:", numberedShardCollectedData);
    } catch (err) {
      const error = err instanceof Error ? err : new Error("Failed to fetch numbered shard collected event");
      console.error("❌ Error fetching numbered shard collected event:", error);
      setError(error);
      setNumberedShardCollected(null);
    } finally {
      setIsLoading(false);
    }
  }, []);

  useEffect(() => {
    refetch(eventId);
  }, [eventId, refetch]);

  return {
    numberedShardCollected,
    isLoading,
    error,
    refetch,
  };
}; 
```

`/home/suhas/Desktop/pune/blockroomsv2/client/src/dojo/hooks/useSpawnPlayer.tsx`:

```tsx
// import { useState, useCallback, useEffect } from "react";
// import { v4 as uuidv4 } from "uuid";
// import { useAccount } from "@starknet-react/core";
// import { Account } from "starknet";
// import { useDojoSDK } from "@dojoengine/sdk/react";
// import { useStarknetConnect } from "./useStarknetConnect";
// import { usePlayer } from "./usePlayer";
// import useAppStore from "../../zustand/store";

// // Types
// interface InitializeState {
//   isInitializing: boolean;
//   error: string | null;
//   completed: boolean;
//   step: 'checking' | 'spawning' | 'loading' | 'success';
//   txHash: string | null;
//   txStatus: 'PENDING' | 'SUCCESS' | 'REJECTED' | null;
// }

// interface InitializeResponse {
//   success: boolean;
//   playerExists: boolean;
//   transactionHash?: string;
//   error?: string;
// }

// export const useSpawnPlayer = () => {
//   const { useDojoStore, client } = useDojoSDK();
//   const dojoState = useDojoStore((state) => state);
//   const { account } = useAccount();
//   const { status } = useStarknetConnect();
//   const { player, isLoading: playerLoading, refetch: refetchPlayer } = usePlayer();
//   const { setLoading } = useAppStore();

//   // Local state
//   const [initState, setInitState] = useState<InitializeState>({
//     isInitializing: false,
//     error: null,
//     completed: false,
//     step: 'checking',
//     txHash: null,
//     txStatus: null
//   });

//   // Tracking if we are initializing
//   const [isInitializing, setIsInitializing] = useState(false);

//   /**
//    * Checks if the player exists and initializes as needed
//    */
//   const initializePlayer = useCallback(async (): Promise<InitializeResponse> => {
//     // Prevent multiple executions
//     if (isInitializing) {
//       return { success: false, playerExists: false, error: "Already initializing" };
//     }

//     setIsInitializing(true);

//     // Validation: Check that the controller is connected
//     if (status !== "connected") {
//       const error = "Controller not connected. Please connect your controller first.";
//       setInitState(prev => ({ ...prev, error }));
//       setIsInitializing(false);
//       return { success: false, playerExists: false, error };
//     }

//     // Validation: Check that the account exists
//     if (!account) {
//       const error = "No account found. Please connect your controller.";
//       setInitState(prev => ({ ...prev, error }));
//       setIsInitializing(false);
//       return { success: false, playerExists: false, error };
//     }

//     const transactionId = uuidv4();

//     try {
//       // Start initialization process
//       setInitState(prev => ({
//         ...prev,
//         isInitializing: true,
//         error: null,
//         step: 'checking'
//       }));

//       console.log("🎮 Starting player initialization...");

//       // Refetch player data
//       console.log("🔄 Fetching latest player data...");
//       await refetchPlayer();

//       // Wait a bit to ensure data is loaded
//       await new Promise(resolve => setTimeout(resolve, 1000));

//       // Direct check from the store
//       const storePlayer = useAppStore.getState().player;

//       // Simple check if the player exists in the store
//       const playerExists = storePlayer !== null;

//       console.log("🎮 Final player check:", {
//         playerExists,
//         playerInStore: !!storePlayer,
//         accountAddress: account.address
//       });

//       if (playerExists) {
//         // Player exists - load data and continue
//         console.log("✅ Player already exists, continuing with existing data...");

//         setInitState(prev => ({
//           ...prev,
//           step: 'loading'
//         }));

//         // Small delay to show loading state
//         await new Promise(resolve => setTimeout(resolve, 1000));

//         setInitState(prev => ({
//           ...prev,
//           completed: true,
//           isInitializing: false,
//           step: 'success'
//         }));

//         setIsInitializing(false);
//         return {
//           success: true,
//           playerExists: true
//         };

//       } else {
//         // Player does not exist - create new player
//         console.log("🆕 Player does not exist, spawning new player...");

//         setInitState(prev => ({
//           ...prev,
//           step: 'spawning',
//           txStatus: 'PENDING'
//         }));

//         // Execute spawn transaction
//         console.log("📤 Executing spawn transaction...");
//         const spawnTx = await client.game.spawnPlayer(account as Account);

//         console.log("📥 Spawn transaction response:", spawnTx);

//         if (spawnTx?.transaction_hash) {
//           setInitState(prev => ({
//             ...prev,
//             txHash: spawnTx.transaction_hash
//           }));
//         }

//         if (spawnTx && spawnTx.code === "SUCCESS") {
//           console.log("🎉 Player spawned successfully!");

//           setInitState(prev => ({
//             ...prev,
//             txStatus: 'SUCCESS'
//           }));

//           // Wait for the transaction to be processed
//           console.log("⏳ Waiting for transaction to be processed...");
//           await new Promise(resolve => setTimeout(resolve, 3500));

//           // Refetch player data
//           console.log("🔄 Refetching player data after spawn...");
//           await refetchPlayer();

//           setInitState(prev => ({
//             ...prev,
//             completed: true,
//             isInitializing: false,
//             step: 'success'
//           }));

//           // Confirm transaction in the Dojo store
//           dojoState.confirmTransaction(transactionId);

//           setIsInitializing(false);
//           return {
//             success: true,
//             playerExists: false,
//             transactionHash: spawnTx.transaction_hash
//           };
//         } else {
//           // Update transaction state to rejected
//           setInitState(prev => ({
//             ...prev,
//             txStatus: 'REJECTED'
//           }));
//           throw new Error("Spawn transaction failed with code: " + spawnTx?.code);
//         }
//       }

//     } catch (error) {
//       const errorMessage = error instanceof Error
//         ? error.message
//         : "Failed to initialize player. Please try again.";

//       console.error("❌ Error initializing player:", error);

//       // Revert optimistic update if applicable
//       dojoState.revertOptimisticUpdate(transactionId);

//       // Update transaction state to rejected if there was a transaction
//       if (initState.txHash) {
//         setInitState(prev => ({
//           ...prev,
//           txStatus: 'REJECTED'
//         }));
//       }

//       setInitState(prev => ({
//         ...prev,
//         error: errorMessage,
//         isInitializing: false,
//         step: 'checking'
//       }));

//       setIsInitializing(false);
//       return { success: false, playerExists: false, error: errorMessage };
//     }
//   }, [status, account, refetchPlayer, player, isInitializing, client.game, dojoState]);

//   /**
//    * Reset the initialization state
//    */
//   const resetInitializer = useCallback(() => {
//     console.log("🔄 Resetting initializer state...");
//     setIsInitializing(false);
//     setInitState({
//       isInitializing: false,
//       error: null,
//       completed: false,
//       step: 'checking',
//       txHash: null,
//       txStatus: null
//     });
//   }, []);

//   // Sync loading state with the store
//   useEffect(() => {
//     setLoading(initState.isInitializing || playerLoading);
//   }, [initState.isInitializing, playerLoading, setLoading]);

//   return {
//     // State
//     isInitializing: initState.isInitializing,
//     error: initState.error,
//     completed: initState.completed,
//     currentStep: initState.step,
//     txHash: initState.txHash,
//     txStatus: initState.txStatus,
//     isConnected: status === "connected",
//     playerExists: useAppStore.getState().player !== null,

//     // Actions
//     initializePlayer,
//     resetInitializer
//   };
// };
```

`/home/suhas/Desktop/pune/blockroomsv2/client/src/dojo/hooks/useGameConfig.tsx`:

```tsx
import { useState, useCallback, useEffect } from "react";
import { GameConfig } from "../models.gen";
import { dojoConfig } from "../dojoConfig";

interface UseGameConfigReturn {
  gameConfig: GameConfig | null;
  isLoading: boolean;
  error: Error | null;
  refetch: (configId?: string) => Promise<void>;
}

export const useGameConfig = (configId: string = "default"): UseGameConfigReturn => {
  const [gameConfig, setGameConfig] = useState<GameConfig | null>(null);
  const [isLoading, setIsLoading] = useState<boolean>(false);
  const [error, setError] = useState<Error | null>(null);

  const refetch = useCallback(async (configId: string = "default") => {
    try {
      setIsLoading(true);
      setError(null);

      const response = await fetch(`${dojoConfig.toriiUrl}/graphql`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          query: `
            query GetGameConfig($configId: String!) {
              gameConfigs(where: { config_id: $configId }) {
                edges {
                  node {
                    config_id
                    grid_size
                    starting_health
                    starting_shards
                    base_damage
                    max_actions_per_turn
                    door_count
                    entity_spawn_rate
                    shard_drop_rate
                    rooms_for_victory
                    dodge_cooldown
                  }
                }
              }
            }
          `,
          variables: {
            configId,
          },
        }),
      });

      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }

      const result = await response.json();
      
      if (result.errors) {
        throw new Error(result.errors[0].message);
      }

      const configData = result.data?.gameConfigs?.edges?.[0]?.node;
      setGameConfig(configData);
      console.log("✅ Game config fetched:", configData);
    } catch (err) {
      const error = err instanceof Error ? err : new Error("Failed to fetch game config");
      console.error("❌ Error fetching game config:", error);
      setError(error);
      setGameConfig(null);
    } finally {
      setIsLoading(false);
    }
  }, []);

  useEffect(() => {
    refetch(configId);
  }, [configId, refetch]);

  return {
    gameConfig,
    isLoading,
    error,
    refetch,
  };
}; 
```

`/home/suhas/Desktop/pune/blockroomsv2/client/src/dojo/hooks/useExecuteTurn.tsx`:

```tsx
import { useState, useCallback } from "react";
import { useAccount } from "@starknet-react/core";
import { dojoConfig } from "../dojoConfig";

// Define Action type based on the contract structure
interface Action {
  // This would be based on your Action enum from the contract
  type: string;
  data: any;
}

interface UseExecuteTurnReturn {
  executeTurn: (actions: Action[]) => Promise<void>;
  isLoading: boolean;
  error: Error | null;
  resetError: () => void;
}

export const useExecuteTurn = (): UseExecuteTurnReturn => {
  const [isLoading, setIsLoading] = useState<boolean>(false);
  const [error, setError] = useState<Error | null>(null);
  const { account } = useAccount();

  const executeTurn = useCallback(async (actions: Action[]) => {
    if (!account) {
      setError(new Error("No account connected"));
      return;
    }

    try {
      setIsLoading(true);
      setError(null);

      const response = await fetch(`${dojoConfig.toriiUrl}/graphql`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          query: `
            mutation ExecuteTurn($actions: [Action!]!) {
              executeTurn(actions: $actions)
            }
          `,
          variables: {
            actions: actions.map(action => ({
              type: action.type,
              data: action.data,
            })),
          },
        }),
      });

      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }

      const result = await response.json();
      
      if (result.errors) {
        throw new Error(result.errors[0].message);
      }

      console.log("✅ Turn executed successfully:", result.data);
    } catch (err) {
      const error = err instanceof Error ? err : new Error("Failed to execute turn");
      console.error("❌ Error executing turn:", error);
      setError(error);
      throw error;
    } finally {
      setIsLoading(false);
    }
  }, [account]);

  const resetError = useCallback(() => {
    setError(null);
  }, []);

  return {
    executeTurn,
    isLoading,
    error,
    resetError,
  };
}; 
```

`/home/suhas/Desktop/pune/blockroomsv2/client/src/dojo/hooks/useNumberedShard.tsx`:

```tsx
import { useCallback } from "react";
import { NumberedShardEnum, numberedShard } from"../models.gen";

interface UseNumberedShardReturn {
  numberedShards: typeof numberedShard;
  getShardName: (shard: NumberedShardEnum) => string;
  isOne: (shard: NumberedShardEnum) => boolean;
  isTwo: (shard: NumberedShardEnum) => boolean;
  isThree: (shard: NumberedShardEnum) => boolean;
}

export const useNumberedShard = (): UseNumberedShardReturn => {
  const getShardName = useCallback((shard: NumberedShardEnum): string => {
    if ('One' in shard) return "One";
    if ('Two' in shard) return "Two";
    if ('Three' in shard) return "Three";
    return "Unknown";
  }, []);

  const isOne = useCallback((shard: NumberedShardEnum): boolean => {
    return 'One' in shard;
  }, []);

  const isTwo = useCallback((shard: NumberedShardEnum): boolean => {
    return 'Two' in shard;
  }, []);

  const isThree = useCallback((shard: NumberedShardEnum): boolean => {
    return 'Three' in shard;
  }, []);

  return {
    numberedShards: numberedShard,
    getShardName,
    isOne,
    isTwo,
    isThree,
  };
}; 
```

`/home/suhas/Desktop/pune/blockroomsv2/client/src/dojo/hooks/README.md`:

```md
# Dojo Hooks Documentation

This directory contains React hooks for interacting with the Dojo game world. All hooks are designed to work with the Torii indexer and provide a clean interface for game state management.

## 📁 Hook Categories

### 🎮 Player & Game State Hooks
These hooks manage player data and game configuration:

- **`usePlayer`** - Fetch player data and state
- **`useGameConfig`** - Get game configuration settings
- **`useGameSession`** - Manage current game session
- **`usePlayerStats`** - Access player statistics and achievements

### 🌍 World Model Hooks
These hooks fetch world data and entities:

- **`useRoom`** - Get room information and state
- **`useEntity`** - Fetch entity data (enemies, NPCs)
- **`useDoor`** - Get door information and state
- **`useDoorway`** - Access doorway data
- **`useEntityState`** - Get entity behavior and alert states
- **`useShardLocation`** - Find shard locations
- **`useTurnExecution`** - Access turn execution data
- **`useGridBounds`** - Get grid boundary information
- **`usePosition`** - Utility for position data

### ⚡ Action Hooks
These hooks execute game actions and transactions:

- **`useInitializePlayer`** - Initialize a new player
- **`useStartGame`** - Start a new game session
- **`useEndGame`** - End the current game
- **`useRespawnPlayer`** - Respawn the player
- **`useMovePlayer`** - Move the player in a direction
- **`useAttackEntity`** - Attack an entity
- **`useCollectShard`** - Collect a shard
- **`useOpenDoor`** - Open a door
- **`useExecuteTurn`** - Execute a turn with multiple actions
- **`useValidateActions`** - Validate actions before execution

### 🔍 Query Hooks
These hooks fetch specific game state information:

- **`useGetPlayerState`** - Get detailed player state
- **`useGetRoomState`** - Get current room state
- **`useGetEntitiesInLocation`** - Find entities in a location
- **`useGetAvailableDoorways`** - Get available doorways
- **`useGetGameStatus`** - Get overall game status
- **`useGetTurnHistory`** - Access turn history

### 📡 Event Hooks
These hooks listen to game events:

- **`useActionExecuted`** - Listen to action execution events
- **`useGameCompleted`** - Listen to game completion events
- **`useGameStarted`** - Listen to game start events
- **`useNumberedShardCollected`** - Listen to shard collection events
- **`usePlayerDeath`** - Listen to player death events
- **`useRoomCleared`** - Listen to room clearing events
- **`useTurnExecuted`** - Listen to turn execution events
- **`useVictoryAchieved`** - Listen to victory events

### 🎯 Enum Utility Hooks
These hooks provide utilities for working with game enums:

- **`useAlertLevel`** - Work with entity alert levels (Idle, Alerted, Combat)
- **`useEntityType`** - Work with entity types (Male, Female)
- **`useNumberedShard`** - Work with shard types (One, Two, Three)
- **`useActionType`** - Work with action types (Move, OpenDoor, Attack, CollectShard)
- **`useGameResult`** - Work with game results (InProgress, Victory, Defeat)

### 🔗 Connection Hooks
- **`useStarknetConnect`** - Manage Starknet wallet connection

## 🚀 Usage Examples

### Basic Hook Usage

```typescript
import { usePlayer, useGameConfig, useMovePlayer } from '../dojo/hooks';

function GameComponent() {
  // Fetch player data
  const { player, isLoading, error, refetch } = usePlayer();
  
  // Get game configuration
  const { gameConfig } = useGameConfig();
  
  // Action hook for moving player
  const { movePlayer, isLoading: moveLoading, error: moveError } = useMovePlayer();
  
  const handleMove = async () => {
    try {
      await movePlayer('north');
      console.log('Player moved successfully');
    } catch (error) {
      console.error('Failed to move player:', error);
    }
  };
  
  if (isLoading) return <div>Loading...</div>;
  if (error) return <div>Error: {error.message}</div>;
  
  return (
    <div>
      <h2>Player Health: {player?.health}</h2>
      <button onClick={handleMove} disabled={moveLoading}>
        {moveLoading ? 'Moving...' : 'Move North'}
      </button>
    </div>
  );
}
```

### Using Enum Utilities

```typescript
import { useEntityType, useAlertLevel } from '../dojo/hooks';

function EntityInfo({ entity }) {
  const { getEntityTypeName, isMale, isFemale } = useEntityType();
  const { getAlertLevelName, isIdle, isAlerted, isCombat } = useAlertLevel();
  
  return (
    <div>
      <p>Type: {getEntityTypeName(entity.entity_type)}</p>
      <p>Alert Level: {getAlertLevelName(entity.alert_level)}</p>
      <p>Is Male: {isMale(entity.entity_type) ? 'Yes' : 'No'}</p>
      <p>Is Alerted: {isAlerted(entity.alert_level) ? 'Yes' : 'No'}</p>
    </div>
  );
}
```

### Event Listening

```typescript
import { useActionExecuted, usePlayerDeath } from '../dojo/hooks';

function EventListener() {
  const { actionExecuted, isLoading, error } = useActionExecuted();
  const { playerDeath } = usePlayerDeath();
  
  useEffect(() => {
    if (actionExecuted) {
      console.log('Action executed:', actionExecuted);
      // Handle action event
    }
  }, [actionExecuted]);
  
  useEffect(() => {
    if (playerDeath) {
      console.log('Player died:', playerDeath);
      // Handle death event
    }
  }, [playerDeath]);
  
  return <div>Listening for events...</div>;
}
```

### Complex Game Actions

```typescript
import { useExecuteTurn, useValidateActions } from '../dojo/hooks';

function TurnManager() {
  const { executeTurn, isLoading: executeLoading } = useExecuteTurn();
  const { validateActions, isLoading: validateLoading } = useValidateActions();
  
  const handleComplexTurn = async () => {
    const actions = [
      { action: 'move', direction: 'north' },
      { action: 'attack', entityId: '123' },
      { action: 'collect', shardId: '456' }
    ];
    
    try {
      // First validate the actions
      await validateActions(actions);
      console.log('Actions are valid');
      
      // Then execute the turn
      await executeTurn(actions);
      console.log('Turn executed successfully');
    } catch (error) {
      console.error('Turn failed:', error);
    }
  };
  
  return (
    <button 
      onClick={handleComplexTurn} 
      disabled={executeLoading || validateLoading}
    >
      {executeLoading || validateLoading ? 'Processing...' : 'Execute Turn'}
    </button>
  );
}
```

## 🔧 Hook Interface

All hooks follow a consistent interface:

### Data Hooks (usePlayer, useRoom, etc.)
```typescript
interface DataHookReturn {
  data: T | null;           // The fetched data
  isLoading: boolean;        // Loading state
  error: Error | null;       // Error state
  refetch: () => Promise<void>; // Function to refetch data
}
```

### Action Hooks (useMovePlayer, useAttackEntity, etc.)
```typescript
interface ActionHookReturn {
  action: (params: any) => Promise<void>; // Action function
  isLoading: boolean;                      // Loading state
  error: Error | null;                     // Error state
  resetError: () => void;                  // Reset error function
}
```

### Enum Utility Hooks (useAlertLevel, useEntityType, etc.)
```typescript
interface EnumHookReturn {
  enumValues: typeof enumType;             // Available enum values
  getEnumName: (value: EnumType) => string; // Get enum name
  isValue: (value: EnumType) => boolean;   // Check specific values
  // ... other utility functions
}
```

## 🎯 Best Practices

1. **Error Handling**: Always check for errors and loading states
2. **Refetching**: Use `refetch` functions to update data when needed
3. **Action Validation**: Validate actions before executing them
4. **Event Cleanup**: Clean up event listeners when components unmount
5. **Type Safety**: Use TypeScript interfaces for better type safety

## 🔄 State Management

The hooks integrate with the Zustand store (`useAppStore`) to provide global state management. The `GameManager` component orchestrates all hooks and manages the overall game state.

## 🐛 Debugging

All hooks include console logging for debugging:
- ✅ Success messages for successful operations
- ❌ Error messages for failed operations
- 📊 Data logging for state changes

## 📦 Importing Hooks

```typescript
// Import individual hooks
import { usePlayer, useGameConfig } from '../dojo/hooks';

// Import all hooks
import * as DojoHooks from '../dojo/hooks';

// Import from store (recommended)
import { usePlayer, useGameConfig } from '../zustand/store';
```

## 🚀 Integration with Components

The hooks are integrated into the frontend through:

1. **GameManager** - Orchestrates all hooks and manages game state
2. **GameInfo** - Displays game information using data hooks
3. **GameActions** - Provides UI for executing actions
4. **App.tsx** - Wraps the entire application with GameManager

This comprehensive hook system provides a complete interface for interacting with the Dojo game world, making it easy to build rich, interactive game experiences. 
```

`/home/suhas/Desktop/pune/blockroomsv2/client/src/dojo/hooks/index.ts`:

```ts
// Action hooks
export { useAttackEntity } from './useAttackEntity';
export { useCollectShard } from './useCollectShard';
export { useEndGame } from './useEndGame';
export { useExecuteTurn } from './useExecuteTurn';
export { useGetAvailableDoorways } from './useGetAvailableDoorways';
export { useGetEntitiesInLocation } from './useGetEntitiesInLocation';
export { useGetGameStatus } from './useGetGameStatus';
export { useGetPlayerState } from './useGetPlayerState';
export { useGetRoomState } from './useGetRoomState';
export { useGetTurnHistory } from './useGetTurnHistory';
export { useInitializePlayer } from './useInitializePlayer';
export { useMovePlayer } from './useMovePlayer';
export { useOpenDoor } from './useOpenDoor';
export { useRespawnPlayer } from './useRespawnPlayer';
export { useStartGame } from './useStartGame';
export { useValidateActions } from './useValidateActions';

// Model hooks
export { useGameConfig } from './useGameConfig';
export { useGameSession } from './useGameSession';
export { usePlayerStats } from './usePlayerStats';
export { useRoom } from './useRoom';
export { useEntity } from './useEntity';
export { useDoor } from './useDoor';
export { useShardLocation } from './useShardLocation';

// Additional Model hooks
export { useDoorway } from './useDoorway';
export { useEntityState } from './useEntityState';
export { useTurnExecution } from './useTurnExecution';
export { useGridBounds } from './useGridBounds';
export { usePosition } from './usePosition';

// Event hooks
export { useActionExecuted } from './useActionExecuted';
export { useGameCompleted } from './useGameCompleted';
export { useGameStarted } from './useGameStarted';
export { useNumberedShardCollected } from './useNumberedShardCollected';
export { usePlayerDeath } from './usePlayerDeath';
export { useRoomCleared } from './useRoomCleared';
export { useTurnExecuted } from './useTurnExecuted';
export { useVictoryAchieved } from './useVictoryAchieved';

// Enum utility hooks
export { useAlertLevel } from './useAlertLevel';
export { useEntityType } from './useEntityType';
export { useNumberedShard } from './useNumberedShard';
export { useActionType } from './useActionType';
export { useGameResult } from './useGameResult';

// Existing hooks

export { useStarknetConnect } from './useStarknetConnect'; 
```

`/home/suhas/Desktop/pune/blockroomsv2/client/src/dojo/hooks/useStarknetConnect.tsx`:

```tsx
// hooks/useStarknetConnect.ts
import { useConnect, useAccount, useDisconnect } from "@starknet-react/core";
import { useState, useCallback } from "react";

export function useStarknetConnect() {
  const { connect, connectors } = useConnect();
  const { disconnect } = useDisconnect();
  const { status, address } = useAccount();
  const [hasTriedConnect, setHasTriedConnect] = useState(false);
  const [isConnecting, setIsConnecting] = useState(false);

  const handleConnect = useCallback(async () => {
    const connector = connectors[0]; // Cartridge connector
    if (!connector) {
      console.error("No connector found");
      return;
    }
    
    try {
      setIsConnecting(true);
      setHasTriedConnect(true);
      console.log("🔗 Attempting to connect controller...");
      await connect({ connector });
      console.log("✅ controller connected successfully");
    } catch (error) {
      console.error("❌ Connection failed:", error);
    } finally {
      setIsConnecting(false);
    }
  }, [connect, connectors]);

  const handleDisconnect = useCallback(async () => {
    try {
      console.log("🔌 Disconnecting controller...");
      await disconnect();
      setHasTriedConnect(false);
      console.log("✅ controller disconnected successfully");
    } catch (error) {
      console.error("❌ Disconnection failed:", error);
    }
  }, [disconnect]);

  console.log("🎮 Starknet Connect Status:", {
    status,
    address: address ? `${address.slice(0, 6)}...${address.slice(-4)}` : null,
    isConnecting,
    hasTriedConnect,
    availableConnectors: connectors.length
  });

  return { 
    status, 
    address,
    isConnecting,
    hasTriedConnect, 
    handleConnect,
    handleDisconnect,
    setHasTriedConnect 
  };
}
```

`/home/suhas/Desktop/pune/blockroomsv2/client/src/dojo/hooks/useAttackEntity.tsx`:

```tsx
import { useState, useCallback } from "react";
import { useAccount } from "@starknet-react/core";
import { BigNumberish } from "starknet";
import { dojoConfig } from "../dojoConfig";

interface UseAttackEntityReturn {
  attackEntity: (entityId: BigNumberish) => Promise<void>;
  isLoading: boolean;
  error: Error | null;
  resetError: () => void;
}

export const useAttackEntity = (): UseAttackEntityReturn => {
  const [isLoading, setIsLoading] = useState<boolean>(false);
  const [error, setError] = useState<Error | null>(null);
  const { account } = useAccount();

  const attackEntity = useCallback(async (entityId: BigNumberish) => {
    if (!account) {
      setError(new Error("No account connected"));
      return;
    }

    try {
      setIsLoading(true);
      setError(null);

      const response = await fetch(`${dojoConfig.toriiUrl}/graphql`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          query: `
            mutation AttackEntity($entityId: BigNumberish!) {
              attackEntity(entityId: $entityId)
            }
          `,
          variables: {
            entityId: entityId.toString(),
          },
        }),
      });

      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }

      const result = await response.json();
      
      if (result.errors) {
        throw new Error(result.errors[0].message);
      }

      console.log("✅ Entity attacked successfully:", result.data);
    } catch (err) {
      const error = err instanceof Error ? err : new Error("Failed to attack entity");
      console.error("❌ Error attacking entity:", error);
      setError(error);
      throw error;
    } finally {
      setIsLoading(false);
    }
  }, [account]);

  const resetError = useCallback(() => {
    setError(null);
  }, []);

  return {
    attackEntity,
    isLoading,
    error,
    resetError,
  };
}; 
```

`/home/suhas/Desktop/pune/blockroomsv2/client/src/dojo/hooks/useEntity.tsx`:

```tsx
import { useState, useCallback, useEffect } from "react";
import { BigNumberish } from "starknet";
import { Entity } from "../models.gen";
import { dojoConfig } from "../dojoConfig";

interface UseEntityReturn {
  entity: Entity | null;
  isLoading: boolean;
  error: Error | null;
  refetch: (entityId: BigNumberish) => Promise<void>;
}

export const useEntity = (entityId?: BigNumberish): UseEntityReturn => {
  const [entity, setEntity] = useState<Entity | null>(null);
  const [isLoading, setIsLoading] = useState<boolean>(false);
  const [error, setError] = useState<Error | null>(null);

  const refetch = useCallback(async (entityId: BigNumberish) => {
    try {
      setIsLoading(true);
      setError(null);

      const response = await fetch(`${dojoConfig.toriiUrl}/graphql`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          query: `
            query GetEntity($entityId: BigNumberish!) {
              entities(where: { entity_id: $entityId }) {
                edges {
                  node {
                    entity_id
                    entity_type
                    position {
                      x
                      y
                      location_id
                    }
                    health
                    max_health
                    is_alive
                    damage_per_turn
                    drops_numbered_shard
                    spawned_from_door
                  }
                }
              }
            }
          `,
          variables: {
            entityId: entityId.toString(),
          },
        }),
      });

      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }

      const result = await response.json();
      
      if (result.errors) {
        throw new Error(result.errors[0].message);
      }

      const entityData = result.data?.entities?.edges?.[0]?.node;
      setEntity(entityData);
      console.log("✅ Entity fetched:", entityData);
    } catch (err) {
      const error = err instanceof Error ? err : new Error("Failed to fetch entity");
      console.error("❌ Error fetching entity:", error);
      setError(error);
      setEntity(null);
    } finally {
      setIsLoading(false);
    }
  }, []);

  useEffect(() => {
    if (entityId) {
      refetch(entityId);
    }
  }, [entityId, refetch]);

  return {
    entity,
    isLoading,
    error,
    refetch,
  };
}; 
```

`/home/suhas/Desktop/pune/blockroomsv2/client/src/dojo/hooks/useStartGame.tsx`:

```tsx
import { useState, useCallback } from "react";
import { useAccount } from "@starknet-react/core";
import { dojoConfig } from "../dojoConfig";

interface UseStartGameReturn {
  startGame: () => Promise<void>;
  isLoading: boolean;
  error: Error | null;
  resetError: () => void;
}

export const useStartGame = (): UseStartGameReturn => {
  const [isLoading, setIsLoading] = useState<boolean>(false);
  const [error, setError] = useState<Error | null>(null);
  const { account } = useAccount();

  const startGame = useCallback(async () => {
    if (!account) {
      setError(new Error("No account connected"));
      return;
    }

    try {
      setIsLoading(true);
      setError(null);

      const response = await fetch(`${dojoConfig.toriiUrl}/graphql`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          query: `
            mutation StartGame {
              startGame
            }
          `,
        }),
      });

      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }

      const result = await response.json();
      
      if (result.errors) {
        throw new Error(result.errors[0].message);
      }

      console.log("✅ Game started successfully:", result.data);
    } catch (err) {
      const error = err instanceof Error ? err : new Error("Failed to start game");
      console.error("❌ Error starting game:", error);
      setError(error);
      throw error;
    } finally {
      setIsLoading(false);
    }
  }, [account]);

  const resetError = useCallback(() => {
    setError(null);
  }, []);

  return {
    startGame,
    isLoading,
    error,
    resetError,
  };
}; 
```

`/home/suhas/Desktop/pune/blockroomsv2/client/src/dojo/hooks/useOpenDoor.tsx`:

```tsx
import { useState, useCallback } from "react";
import { useAccount } from "@starknet-react/core";
import { BigNumberish } from "starknet";
import { dojoConfig } from "../dojoConfig";

interface UseOpenDoorReturn {
  openDoor: (doorId: BigNumberish) => Promise<void>;
  isLoading: boolean;
  error: Error | null;
  resetError: () => void;
}

export const useOpenDoor = (): UseOpenDoorReturn => {
  const [isLoading, setIsLoading] = useState<boolean>(false);
  const [error, setError] = useState<Error | null>(null);
  const { account } = useAccount();

  const openDoor = useCallback(async (doorId: BigNumberish) => {
    if (!account) {
      setError(new Error("No account connected"));
      return;
    }

    try {
      setIsLoading(true);
      setError(null);

      const response = await fetch(`${dojoConfig.toriiUrl}/graphql`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          query: `
            mutation OpenDoor($doorId: BigNumberish!) {
              openDoor(doorId: $doorId)
            }
          `,
          variables: {
            doorId: doorId.toString(),
          },
        }),
      });

      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }

      const result = await response.json();
      
      if (result.errors) {
        throw new Error(result.errors[0].message);
      }

      console.log("✅ Door opened successfully:", result.data);
    } catch (err) {
      const error = err instanceof Error ? err : new Error("Failed to open door");
      console.error("❌ Error opening door:", error);
      setError(error);
      throw error;
    } finally {
      setIsLoading(false);
    }
  }, [account]);

  const resetError = useCallback(() => {
    setError(null);
  }, []);

  return {
    openDoor,
    isLoading,
    error,
    resetError,
  };
}; 
```

`/home/suhas/Desktop/pune/blockroomsv2/client/src/dojo/hooks/useRespawnPlayer.tsx`:

```tsx
import { useState, useCallback } from "react";
import { useAccount } from "@starknet-react/core";
import { dojoConfig } from "../dojoConfig";

interface UseRespawnPlayerReturn {
  respawnPlayer: () => Promise<void>;
  isLoading: boolean;
  error: Error | null;
  resetError: () => void;
}

export const useRespawnPlayer = (): UseRespawnPlayerReturn => {
  const [isLoading, setIsLoading] = useState<boolean>(false);
  const [error, setError] = useState<Error | null>(null);
  const { account } = useAccount();

  const respawnPlayer = useCallback(async () => {
    if (!account) {
      setError(new Error("No account connected"));
      return;
    }

    try {
      setIsLoading(true);
      setError(null);

      const response = await fetch(`${dojoConfig.toriiUrl}/graphql`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          query: `
            mutation RespawnPlayer {
              respawnPlayer
            }
          `,
        }),
      });

      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }

      const result = await response.json();
      
      if (result.errors) {
        throw new Error(result.errors[0].message);
      }

      console.log("✅ Player respawned successfully:", result.data);
    } catch (err) {
      const error = err instanceof Error ? err : new Error("Failed to respawn player");
      console.error("❌ Error respawning player:", error);
      setError(error);
      throw error;
    } finally {
      setIsLoading(false);
    }
  }, [account]);

  const resetError = useCallback(() => {
    setError(null);
  }, []);

  return {
    respawnPlayer,
    isLoading,
    error,
    resetError,
  };
}; 
```

`/home/suhas/Desktop/pune/blockroomsv2/client/src/dojo/hooks/useDoor.tsx`:

```tsx
import { useState, useCallback, useEffect } from "react";
import { BigNumberish } from "starknet";
import { Door } from "../models.gen";
import { dojoConfig } from "../dojoConfig";

interface UseDoorReturn {
  door: Door | null;
  isLoading: boolean;
  error: Error | null;
  refetch: (doorId: BigNumberish) => Promise<void>;
}

export const useDoor = (doorId?: BigNumberish): UseDoorReturn => {
  const [door, setDoor] = useState<Door | null>(null);
  const [isLoading, setIsLoading] = useState<boolean>(false);
  const [error, setError] = useState<Error | null>(null);

  const refetch = useCallback(async (doorId: BigNumberish) => {
    try {
      setIsLoading(true);
      setError(null);

      const response = await fetch(`${dojoConfig.toriiUrl}/graphql`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          query: `
            query GetDoor($doorId: BigNumberish!) {
              doors(where: { door_id: $doorId }) {
                edges {
                  node {
                    door_id
                    position {
                      x
                      y
                      location_id
                    }
                    room_id
                    connected_room_id
                    is_open
                    requires_key
                    requires_cleared
                  }
                }
              }
            }
          `,
          variables: {
            doorId: doorId.toString(),
          },
        }),
      });

      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }

      const result = await response.json();
      
      if (result.errors) {
        throw new Error(result.errors[0].message);
      }

      const doorData = result.data?.doors?.edges?.[0]?.node;
      setDoor(doorData);
      console.log("✅ Door fetched:", doorData);
    } catch (err) {
      const error = err instanceof Error ? err : new Error("Failed to fetch door");
      console.error("❌ Error fetching door:", error);
      setError(error);
      setDoor(null);
    } finally {
      setIsLoading(false);
    }
  }, []);

  useEffect(() => {
    if (doorId) {
      refetch(doorId);
    }
  }, [doorId, refetch]);

  return {
    door,
    isLoading,
    error,
    refetch,
  };
}; 
```

`/home/suhas/Desktop/pune/blockroomsv2/client/src/dojo/hooks/useGameStarted.tsx`:

```tsx
import { useState, useCallback, useEffect } from "react";
import { GameStarted } from "../models.gen";
import { dojoConfig } from "../dojoConfig";

interface UseGameStartedReturn {
  gameStarted: GameStarted | null;
  isLoading: boolean;
  error: Error | null;
  refetch: (eventId?: string) => Promise<void>;
}

export const useGameStarted = (eventId: string = "default"): UseGameStartedReturn => {
  const [gameStarted, setGameStarted] = useState<GameStarted | null>(null);
  const [isLoading, setIsLoading] = useState<boolean>(false);
  const [error, setError] = useState<Error | null>(null);

  const refetch = useCallback(async (eventId: string = "default") => {
    try {
      setIsLoading(true);
      setError(null);

      const response = await fetch(`${dojoConfig.toriiUrl}/graphql`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          query: `
            query GetGameStarted($eventId: String!) {
              gameStartedEvents(where: { event_id: $eventId }) {
                edges {
                  node {
                    player_id
                    session_id
                    start_time
                    starting_room_id
                  }
                }
              }
            }
          `,
          variables: {
            eventId,
          },
        }),
      });

      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }

      const result = await response.json();
      
      if (result.errors) {
        throw new Error(result.errors[0].message);
      }

      const gameStartedData = result.data?.gameStartedEvents?.edges?.[0]?.node;
      setGameStarted(gameStartedData);
      console.log("✅ Game started event fetched:", gameStartedData);
    } catch (err) {
      const error = err instanceof Error ? err : new Error("Failed to fetch game started event");
      console.error("❌ Error fetching game started event:", error);
      setError(error);
      setGameStarted(null);
    } finally {
      setIsLoading(false);
    }
  }, []);

  useEffect(() => {
    refetch(eventId);
  }, [eventId, refetch]);

  return {
    gameStarted,
    isLoading,
    error,
    refetch,
  };
}; 
```

`/home/suhas/Desktop/pune/blockroomsv2/client/src/dojo/hooks/useShardLocation.tsx`:

```tsx
import { useState, useCallback, useEffect } from "react";
import { BigNumberish } from "starknet";
import { ShardLocation } from "../models.gen";
import { dojoConfig } from "../dojoConfig";

interface UseShardLocationReturn {
  shardLocation: ShardLocation | null;
  isLoading: boolean;
  error: Error | null;
  refetch: (locationId: BigNumberish) => Promise<void>;
}

export const useShardLocation = (locationId?: BigNumberish): UseShardLocationReturn => {
  const [shardLocation, setShardLocation] = useState<ShardLocation | null>(null);
  const [isLoading, setIsLoading] = useState<boolean>(false);
  const [error, setError] = useState<Error | null>(null);

  const refetch = useCallback(async (locationId: BigNumberish) => {
    try {
      setIsLoading(true);
      setError(null);

      const response = await fetch(`${dojoConfig.toriiUrl}/graphql`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          query: `
            query GetShardLocation($locationId: BigNumberish!) {
              shardLocations(where: { location_id: $locationId }) {
                edges {
                  node {
                    location_id
                    position {
                      x
                      y
                      location_id
                    }
                    numbered_shard
                    collected
                  }
                }
              }
            }
          `,
          variables: {
            locationId: locationId.toString(),
          },
        }),
      });

      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }

      const result = await response.json();
      
      if (result.errors) {
        throw new Error(result.errors[0].message);
      }

      const shardData = result.data?.shardLocations?.edges?.[0]?.node;
      setShardLocation(shardData);
      console.log("✅ Shard location fetched:", shardData);
    } catch (err) {
      const error = err instanceof Error ? err : new Error("Failed to fetch shard location");
      console.error("❌ Error fetching shard location:", error);
      setError(error);
      setShardLocation(null);
    } finally {
      setIsLoading(false);
    }
  }, []);

  useEffect(() => {
    if (locationId) {
      refetch(locationId);
    }
  }, [locationId, refetch]);

  return {
    shardLocation,
    isLoading,
    error,
    refetch,
  };
}; 
```

`/home/suhas/Desktop/pune/blockroomsv2/client/src/dojo/hooks/useEndGame.tsx`:

```tsx
import { useState, useCallback } from "react";
import { useAccount } from "@starknet-react/core";
import { dojoConfig } from "../dojoConfig";

interface UseEndGameReturn {
  endGame: () => Promise<void>;
  isLoading: boolean;
  error: Error | null;
  resetError: () => void;
}

export const useEndGame = (): UseEndGameReturn => {
  const [isLoading, setIsLoading] = useState<boolean>(false);
  const [error, setError] = useState<Error | null>(null);
  const { account } = useAccount();

  const endGame = useCallback(async () => {
    if (!account) {
      setError(new Error("No account connected"));
      return;
    }

    try {
      setIsLoading(true);
      setError(null);

      const response = await fetch(`${dojoConfig.toriiUrl}/graphql`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          query: `
            mutation EndGame {
              endGame
            }
          `,
        }),
      });

      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }

      const result = await response.json();
      
      if (result.errors) {
        throw new Error(result.errors[0].message);
      }

      console.log("✅ Game ended successfully:", result.data);
    } catch (err) {
      const error = err instanceof Error ? err : new Error("Failed to end game");
      console.error("❌ Error ending game:", error);
      setError(error);
      throw error;
    } finally {
      setIsLoading(false);
    }
  }, [account]);

  const resetError = useCallback(() => {
    setError(null);
  }, []);

  return {
    endGame,
    isLoading,
    error,
    resetError,
  };
}; 
```

`/home/suhas/Desktop/pune/blockroomsv2/client/src/dojo/hooks/useRoom.tsx`:

```tsx
import { useState, useCallback, useEffect } from "react";
import { BigNumberish } from "starknet";
import { Room } from "../models.gen";
import { dojoConfig } from "../dojoConfig";

interface UseRoomReturn {
  room: Room | null;
  isLoading: boolean;
  error: Error | null;
  refetch: (roomId: BigNumberish) => Promise<void>;
}

export const useRoom = (roomId?: BigNumberish): UseRoomReturn => {
  const [room, setRoom] = useState<Room | null>(null);
  const [isLoading, setIsLoading] = useState<boolean>(false);
  const [error, setError] = useState<Error | null>(null);

  const refetch = useCallback(async (roomId: BigNumberish) => {
    try {
      setIsLoading(true);
      setError(null);

      const response = await fetch(`${dojoConfig.toriiUrl}/graphql`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          query: `
            query GetRoom($roomId: BigNumberish!) {
              rooms(where: { room_id: $roomId }) {
                edges {
                  node {
                    room_id
                    initialized
                    cleared
                    entity_count
                    active_entities
                    has_treasure
                    treasure_collected
                    door_count
                    boundaries {
                      min_x
                      max_x
                      min_y
                      max_y
                    }
                  }
                }
              }
            }
          `,
          variables: {
            roomId: roomId.toString(),
          },
        }),
      });

      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }

      const result = await response.json();
      
      if (result.errors) {
        throw new Error(result.errors[0].message);
      }

      const roomData = result.data?.rooms?.edges?.[0]?.node;
      setRoom(roomData);
      console.log("✅ Room fetched:", roomData);
    } catch (err) {
      const error = err instanceof Error ? err : new Error("Failed to fetch room");
      console.error("❌ Error fetching room:", error);
      setError(error);
      setRoom(null);
    } finally {
      setIsLoading(false);
    }
  }, []);

  useEffect(() => {
    if (roomId) {
      refetch(roomId);
    }
  }, [roomId, refetch]);

  return {
    room,
    isLoading,
    error,
    refetch,
  };
}; 
```

`/home/suhas/Desktop/pune/blockroomsv2/client/src/dojo/hooks/useGetRoomState.tsx`:

```tsx
import { useState, useCallback, useEffect } from "react";
import { BigNumberish } from "starknet";
import { Room } from "../models.gen";
import { dojoConfig } from "../dojoConfig";

interface UseGetRoomStateReturn {
  roomState: Room | null;
  isLoading: boolean;
  error: Error | null;
  refetch: (roomId: BigNumberish) => Promise<void>;
}

export const useGetRoomState = (roomId?: BigNumberish): UseGetRoomStateReturn => {
  const [roomState, setRoomState] = useState<Room | null>(null);
  const [isLoading, setIsLoading] = useState<boolean>(false);
  const [error, setError] = useState<Error | null>(null);

  const refetch = useCallback(async (roomId: BigNumberish) => {
    try {
      setIsLoading(true);
      setError(null);

      const response = await fetch(`${dojoConfig.toriiUrl}/graphql`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          query: `
            query GetRoomState($roomId: BigNumberish!) {
              getRoomState(roomId: $roomId) {
                room_id
                initialized
                cleared
                entity_count
                active_entities
                has_treasure
                treasure_collected
                door_count
                boundaries {
                  min_x
                  max_x
                  min_y
                  max_y
                }
              }
            }
          `,
          variables: {
            roomId: roomId.toString(),
          },
        }),
      });

      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }

      const result = await response.json();
      
      if (result.errors) {
        throw new Error(result.errors[0].message);
      }

      const roomData = result.data?.getRoomState;
      setRoomState(roomData);
      console.log("✅ Room state fetched:", roomData);
    } catch (err) {
      const error = err instanceof Error ? err : new Error("Failed to fetch room state");
      console.error("❌ Error fetching room state:", error);
      setError(error);
      setRoomState(null);
    } finally {
      setIsLoading(false);
    }
  }, []);

  useEffect(() => {
    if (roomId) {
      refetch(roomId);
    }
  }, [roomId, refetch]);

  return {
    roomState,
    isLoading,
    error,
    refetch,
  };
}; 
```

`/home/suhas/Desktop/pune/blockroomsv2/client/src/dojo/hooks/usePlayerStats.tsx`:

```tsx
import { useState, useCallback, useEffect } from "react";
import { useAccount } from "@starknet-react/core";
import { addAddressPadding } from "starknet";
import { PlayerStats } from "../models.gen";
import { dojoConfig } from "../dojoConfig";

interface UsePlayerStatsReturn {
  playerStats: PlayerStats | null;
  isLoading: boolean;
  error: Error | null;
  refetch: (playerId?: string) => Promise<void>;
}

export const usePlayerStats = (playerId?: string): UsePlayerStatsReturn => {
  const [playerStats, setPlayerStats] = useState<PlayerStats | null>(null);
  const [isLoading, setIsLoading] = useState<boolean>(false);
  const [error, setError] = useState<Error | null>(null);
  const { account } = useAccount();

  const refetch = useCallback(async (playerId?: string) => {
    const targetPlayerId = playerId || (account ? addAddressPadding(account.address).toLowerCase() : null);
    
    if (!targetPlayerId) {
      setPlayerStats(null);
      return;
    }

    try {
      setIsLoading(true);
      setError(null);

      const response = await fetch(`${dojoConfig.toriiUrl}/graphql`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          query: `
            query GetPlayerStats($playerId: String!) {
              playerStats(where: { player_id: $playerId }) {
                edges {
                  node {
                    player_id
                    games_played
                    games_won
                    total_shards_collected
                    total_entities_defeated
                    total_playtime
                    best_completion_time
                    highest_room_reached
                    total_damage_dealt
                    total_damage_taken
                    doors_opened
                    total_turns_played
                    total_actions_taken
                    numbered_shards_collected
                  }
                }
              }
            }
          `,
          variables: {
            playerId: targetPlayerId,
          },
        }),
      });

      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }

      const result = await response.json();
      
      if (result.errors) {
        throw new Error(result.errors[0].message);
      }

      const statsData = result.data?.playerStats?.edges?.[0]?.node;
      setPlayerStats(statsData);
      console.log("✅ Player stats fetched:", statsData);
    } catch (err) {
      const error = err instanceof Error ? err : new Error("Failed to fetch player stats");
      console.error("❌ Error fetching player stats:", error);
      setError(error);
      setPlayerStats(null);
    } finally {
      setIsLoading(false);
    }
  }, [account]);

  useEffect(() => {
    refetch(playerId);
  }, [playerId, refetch]);

  return {
    playerStats,
    isLoading,
    error,
    refetch,
  };
}; 
```

`/home/suhas/Desktop/pune/blockroomsv2/client/src/dojo/hooks/useAlertLevel.tsx`:

```tsx
import { useCallback } from "react";
import { AlertLevelEnum, alertLevel } from "../models.gen";

interface UseAlertLevelReturn {
  alertLevels: typeof alertLevel;
  getAlertLevelName: (level: AlertLevelEnum) => string;
  isIdle: (level: AlertLevelEnum) => boolean;
  isAlerted: (level: AlertLevelEnum) => boolean;
  isCombat: (level: AlertLevelEnum) => boolean;
}

export const useAlertLevel = (): UseAlertLevelReturn => {
  const getAlertLevelName = useCallback((level: AlertLevelEnum): string => {
    if ('Idle' in level) return "Idle";
    if ('Alerted' in level) return "Alerted";
    if ('Combat' in level) return "Combat";
    return "Unknown";
  }, []);

  const isIdle = useCallback((level: AlertLevelEnum): boolean => {
    return 'Idle' in level;
  }, []);

  const isAlerted = useCallback((level: AlertLevelEnum): boolean => {
    return 'Alerted' in level;
  }, []);

  const isCombat = useCallback((level: AlertLevelEnum): boolean => {
    return 'Combat' in level;
  }, []);

  return {
    alertLevels: alertLevel,
    getAlertLevelName,
    isIdle,
    isAlerted,
    isCombat,
  };
}; 
```

`/home/suhas/Desktop/pune/blockroomsv2/client/src/dojo/hooks/useGetTurnHistory.tsx`:

```tsx
import { useState, useCallback, useEffect } from "react";
import { BigNumberish } from "starknet";
import { TurnExecution } from "../models.gen";
import { dojoConfig } from "../dojoConfig";

interface UseGetTurnHistoryReturn {
  turnHistory: TurnExecution[] | null;
  isLoading: boolean;
  error: Error | null;
  refetch: (limit: BigNumberish) => Promise<void>;
}

export const useGetTurnHistory = (limit?: BigNumberish): UseGetTurnHistoryReturn => {
  const [turnHistory, setTurnHistory] = useState<TurnExecution[] | null>(null);
  const [isLoading, setIsLoading] = useState<boolean>(false);
  const [error, setError] = useState<Error | null>(null);

  const refetch = useCallback(async (limit: BigNumberish) => {
    try {
      setIsLoading(true);
      setError(null);

      const response = await fetch(`${dojoConfig.toriiUrl}/graphql`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          query: `
            query GetTurnHistory($limit: BigNumberish!) {
              getTurnHistory(limit: $limit) {
                turn_id
                player_id
                session_id
                actions_count
                successful_actions
                total_damage_dealt
                total_damage_taken
                total_shards_gained
                numbered_shards_collected
                timestamp
                turn_number
              }
            }
          `,
          variables: {
            limit: limit.toString(),
          },
        }),
      });

      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }

      const result = await response.json();
      
      if (result.errors) {
        throw new Error(result.errors[0].message);
      }

      const historyData = result.data?.getTurnHistory || [];
      setTurnHistory(historyData);
      console.log("✅ Turn history fetched:", historyData);
    } catch (err) {
      const error = err instanceof Error ? err : new Error("Failed to fetch turn history");
      console.error("❌ Error fetching turn history:", error);
      setError(error);
      setTurnHistory(null);
    } finally {
      setIsLoading(false);
    }
  }, []);

  useEffect(() => {
    if (limit) {
      refetch(limit);
    }
  }, [limit, refetch]);

  return {
    turnHistory,
    isLoading,
    error,
    refetch,
  };
}; 
```

`/home/suhas/Desktop/pune/blockroomsv2/client/src/dojo/hooks/useValidateActions.tsx`:

```tsx
import { useState, useCallback } from "react";
import { dojoConfig } from "../dojoConfig";

// Define Action type based on the contract structure
interface Action {
  // This would be based on your Action enum from the contract
  type: string;
  data: any;
}

interface ActionValidation {
  validation_id: string;
  player_id: string;
  action_index: number;
  action_type: string;
  is_valid: boolean;
  error_reason: string;
  required_shards: number;
  required_health: number;
  required_position: {
    x: number;
    y: number;
    location_id: number;
  };
}

interface UseValidateActionsReturn {
  validateActions: (actions: Action[]) => Promise<ActionValidation[]>;
  isLoading: boolean;
  error: Error | null;
  resetError: () => void;
}

export const useValidateActions = (): UseValidateActionsReturn => {
  const [isLoading, setIsLoading] = useState<boolean>(false);
  const [error, setError] = useState<Error | null>(null);

  const validateActions = useCallback(async (actions: Action[]): Promise<ActionValidation[]> => {
    try {
      setIsLoading(true);
      setError(null);

      const response = await fetch(`${dojoConfig.toriiUrl}/graphql`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          query: `
            query ValidateActions($actions: [Action!]!) {
              validateActions(actions: $actions) {
                validation_id
                player_id
                action_index
                action_type
                is_valid
                error_reason
                required_shards
                required_health
                required_position {
                  x
                  y
                  location_id
                }
              }
            }
          `,
          variables: {
            actions: actions.map(action => ({
              type: action.type,
              data: action.data,
            })),
          },
        }),
      });

      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }

      const result = await response.json();
      
      if (result.errors) {
        throw new Error(result.errors[0].message);
      }

      const validations = result.data?.validateActions || [];
      console.log("✅ Actions validated:", validations);
      return validations;
    } catch (err) {
      const error = err instanceof Error ? err : new Error("Failed to validate actions");
      console.error("❌ Error validating actions:", error);
      setError(error);
      throw error;
    } finally {
      setIsLoading(false);
    }
  }, []);

  const resetError = useCallback(() => {
    setError(null);
  }, []);

  return {
    validateActions,
    isLoading,
    error,
    resetError,
  };
}; 
```

`/home/suhas/Desktop/pune/blockroomsv2/client/src/dojo/hooks/useTrainAction.tsx`:

```tsx
// import { useState, useCallback } from "react";
// import { useAccount } from "@starknet-react/core";
// import { useDojoSDK } from "@dojoengine/sdk/react";
// import { Account } from "starknet";
// import useAppStore from "../../zustand/store";

// interface TrainActionState {
//   isLoading: boolean;
//   error: string | null;
//   txHash: string | null;
//   txStatus: 'PENDING' | 'SUCCESS' | 'REJECTED' | null;
// }

// interface UseTrainActionReturn {
//   trainState: TrainActionState;
//   executeTrain: () => Promise<void>;
//   canTrain: boolean;
//   resetTrainState: () => void;
// }

// export const useTrainAction = (): UseTrainActionReturn => {
//   const { account, status } = useAccount();
//   const { client } = useDojoSDK();
//   const { player, updatePlayerExperience } = useAppStore();

//   const [trainState, setTrainState] = useState<TrainActionState>({
//     isLoading: false,
//     error: null,
//     txHash: null,
//     txStatus: null
//   });

//   const isConnected = status === "connected";
//   const hasPlayer = player !== null;
//   const canTrain = isConnected && hasPlayer && !trainState.isLoading;

//   const executeTrain = useCallback(async () => {
//     if (!canTrain || !account) {
//       setTrainState(prev => ({
//         ...prev,
//         error: !account ? "Please connect your controller" : "Cannot train right now"
//       }));
//       return;
//     }

//     try {
//       setTrainState({
//         isLoading: true,
//         error: null,
//         txHash: null,
//         txStatus: 'PENDING'
//       });

//       console.log("📤 Executing train transaction...");

//       const tx = await client.game.train(account as Account);
//       console.log("📥 Train transaction response:", tx);

//       if (tx?.transaction_hash) {
//         setTrainState(prev => ({ ...prev, txHash: tx.transaction_hash }));
//       }

//       if (tx && tx.code === "SUCCESS") {
//         console.log("✅ Train transaction successful!");

//         // Optimistic update: +10 experience
//         updatePlayerExperience((player?.experience || 0) + 10);

//         setTrainState(prev => ({
//           ...prev,
//           txStatus: 'SUCCESS',
//           isLoading: false
//         }));

//         // Auto-clear after 3 seconds
//         setTimeout(() => {
//           setTrainState({
//             isLoading: false,
//             error: null,
//             txHash: null,
//             txStatus: null
//           });
//         }, 3000);

//       } else {
//         throw new Error(`Train transaction failed with code: ${tx?.code || 'unknown'}`);
//       }

//     } catch (error) {
//       console.error("❌ Error executing train:", error);

//       setTrainState({
//         isLoading: false,
//         error: error instanceof Error ? error.message : 'Unknown error',
//         txHash: null,
//         txStatus: 'REJECTED'
//       });

//       // Auto-clear error after 5 seconds
//       setTimeout(() => {
//         setTrainState({
//           isLoading: false,
//           error: null,
//           txHash: null,
//           txStatus: null
//         });
//       }, 5000);
//     }
//   }, [canTrain, account, client.game, player, updatePlayerExperience]);

//   const resetTrainState = useCallback(() => {
//     setTrainState({
//       isLoading: false,
//       error: null,
//       txHash: null,
//       txStatus: null
//     });
//   }, []);

//   return {
//     trainState,
//     executeTrain,
//     canTrain,
//     resetTrainState
//   };
// };
```

`/home/suhas/Desktop/pune/blockroomsv2/client/src/dojo/contracts.gen.ts`:

```ts
import { DojoProvider, DojoCall } from "@dojoengine/core";
import { Account, AccountInterface, BigNumberish, CairoOption, CairoCustomEnum, ByteArray } from "starknet";
import * as models from "./models.gen";

export function setupWorld(provider: DojoProvider) {

	const build_actions_attackEntity_calldata = (entityId: BigNumberish): DojoCall => {
		return {
			contractName: "actions",
			entrypoint: "attack_entity",
			calldata: [entityId],
		};
	};

	const actions_attackEntity = async (snAccount: Account | AccountInterface, entityId: BigNumberish) => {
		try {
			return await provider.execute(
				snAccount,
				build_actions_attackEntity_calldata(entityId),
				"blockrooms",
			);
		} catch (error) {
			console.error(error);
			throw error;
		}
	};

	const build_actions_collectShard_calldata = (position: models.Position): DojoCall => {
		return {
			contractName: "actions",
			entrypoint: "collect_shard",
			calldata: [position],
		};
	};

	const actions_collectShard = async (snAccount: Account | AccountInterface, position: models.Position) => {
		try {
			return await provider.execute(
				snAccount,
				build_actions_collectShard_calldata(position),
				"blockrooms",
			);
		} catch (error) {
			console.error(error);
			throw error;
		}
	};

	const build_actions_endGame_calldata = (): DojoCall => {
		return {
			contractName: "actions",
			entrypoint: "end_game",
			calldata: [],
		};
	};

	const actions_endGame = async (snAccount: Account | AccountInterface) => {
		try {
			return await provider.execute(
				snAccount,
				build_actions_endGame_calldata(),
				"blockrooms",
			);
		} catch (error) {
			console.error(error);
			throw error;
		}
	};

	const build_actions_executeTurn_calldata = (actions: Array<Action>): DojoCall => {
		return {
			contractName: "actions",
			entrypoint: "execute_turn",
			calldata: [actions],
		};
	};

	const actions_executeTurn = async (snAccount: Account | AccountInterface, actions: Array<Action>) => {
		try {
			return await provider.execute(
				snAccount,
				build_actions_executeTurn_calldata(actions),
				"blockrooms",
			);
		} catch (error) {
			console.error(error);
			throw error;
		}
	};

	const build_actions_getAvailableDoorways_calldata = (locationId: BigNumberish): DojoCall => {
		return {
			contractName: "actions",
			entrypoint: "get_available_doorways",
			calldata: [locationId],
		};
	};

	const actions_getAvailableDoorways = async (locationId: BigNumberish) => {
		try {
			return await provider.call("blockrooms", build_actions_getAvailableDoorways_calldata(locationId));
		} catch (error) {
			console.error(error);
			throw error;
		}
	};

	const build_actions_getEntitiesInLocation_calldata = (locationId: BigNumberish): DojoCall => {
		return {
			contractName: "actions",
			entrypoint: "get_entities_in_location",
			calldata: [locationId],
		};
	};

	const actions_getEntitiesInLocation = async (locationId: BigNumberish) => {
		try {
			return await provider.call("blockrooms", build_actions_getEntitiesInLocation_calldata(locationId));
		} catch (error) {
			console.error(error);
			throw error;
		}
	};

	const build_actions_getGameStatus_calldata = (): DojoCall => {
		return {
			contractName: "actions",
			entrypoint: "get_game_status",
			calldata: [],
		};
	};

	const actions_getGameStatus = async () => {
		try {
			return await provider.call("blockrooms", build_actions_getGameStatus_calldata());
		} catch (error) {
			console.error(error);
			throw error;
		}
	};

	const build_actions_getPlayerState_calldata = (): DojoCall => {
		return {
			contractName: "actions",
			entrypoint: "get_player_state",
			calldata: [],
		};
	};

	const actions_getPlayerState = async () => {
		try {
			return await provider.call("blockrooms", build_actions_getPlayerState_calldata());
		} catch (error) {
			console.error(error);
			throw error;
		}
	};

	const build_actions_getRoomState_calldata = (roomId: BigNumberish): DojoCall => {
		return {
			contractName: "actions",
			entrypoint: "get_room_state",
			calldata: [roomId],
		};
	};

	const actions_getRoomState = async (roomId: BigNumberish) => {
		try {
			return await provider.call("blockrooms", build_actions_getRoomState_calldata(roomId));
		} catch (error) {
			console.error(error);
			throw error;
		}
	};

	const build_actions_getTurnHistory_calldata = (limit: BigNumberish): DojoCall => {
		return {
			contractName: "actions",
			entrypoint: "get_turn_history",
			calldata: [limit],
		};
	};

	const actions_getTurnHistory = async (limit: BigNumberish) => {
		try {
			return await provider.call("blockrooms", build_actions_getTurnHistory_calldata(limit));
		} catch (error) {
			console.error(error);
			throw error;
		}
	};

	const build_actions_initializePlayer_calldata = (): DojoCall => {
		return {
			contractName: "actions",
			entrypoint: "initialize_player",
			calldata: [],
		};
	};

	const actions_initializePlayer = async (snAccount: Account | AccountInterface) => {
		try {
			return await provider.execute(
				snAccount,
				build_actions_initializePlayer_calldata(),
				"blockrooms",
			);
		} catch (error) {
			console.error(error);
			throw error;
		}
	};

	const build_actions_movePlayer_calldata = (xDelta: BigNumberish, yDelta: BigNumberish): DojoCall => {
		return {
			contractName: "actions",
			entrypoint: "move_player",
			calldata: [xDelta, yDelta],
		};
	};

	const actions_movePlayer = async (snAccount: Account | AccountInterface, xDelta: BigNumberish, yDelta: BigNumberish) => {
		try {
			return await provider.execute(
				snAccount,
				build_actions_movePlayer_calldata(xDelta, yDelta),
				"blockrooms",
			);
		} catch (error) {
			console.error(error);
			throw error;
		}
	};

	const build_actions_openDoor_calldata = (doorId: BigNumberish): DojoCall => {
		return {
			contractName: "actions",
			entrypoint: "open_door",
			calldata: [doorId],
		};
	};

	const actions_openDoor = async (snAccount: Account | AccountInterface, doorId: BigNumberish) => {
		try {
			return await provider.execute(
				snAccount,
				build_actions_openDoor_calldata(doorId),
				"blockrooms",
			);
		} catch (error) {
			console.error(error);
			throw error;
		}
	};

	const build_actions_respawnPlayer_calldata = (): DojoCall => {
		return {
			contractName: "actions",
			entrypoint: "respawn_player",
			calldata: [],
		};
	};

	const actions_respawnPlayer = async (snAccount: Account | AccountInterface) => {
		try {
			return await provider.execute(
				snAccount,
				build_actions_respawnPlayer_calldata(),
				"blockrooms",
			);
		} catch (error) {
			console.error(error);
			throw error;
		}
	};

	const build_actions_startGame_calldata = (): DojoCall => {
		return {
			contractName: "actions",
			entrypoint: "start_game",
			calldata: [],
		};
	};

	const actions_startGame = async (snAccount: Account | AccountInterface) => {
		try {
			return await provider.execute(
				snAccount,
				build_actions_startGame_calldata(),
				"blockrooms",
			);
		} catch (error) {
			console.error(error);
			throw error;
		}
	};

	const build_actions_validateActions_calldata = (actions: Array<Action>): DojoCall => {
		return {
			contractName: "actions",
			entrypoint: "validate_actions",
			calldata: [actions],
		};
	};

	const actions_validateActions = async (actions: Array<Action>) => {
		try {
			return await provider.call("blockrooms", build_actions_validateActions_calldata(actions));
		} catch (error) {
			console.error(error);
			throw error;
		}
	};



	return {
		actions: {
			attackEntity: actions_attackEntity,
			buildAttackEntityCalldata: build_actions_attackEntity_calldata,
			collectShard: actions_collectShard,
			buildCollectShardCalldata: build_actions_collectShard_calldata,
			endGame: actions_endGame,
			buildEndGameCalldata: build_actions_endGame_calldata,
			executeTurn: actions_executeTurn,
			buildExecuteTurnCalldata: build_actions_executeTurn_calldata,
			getAvailableDoorways: actions_getAvailableDoorways,
			buildGetAvailableDoorwaysCalldata: build_actions_getAvailableDoorways_calldata,
			getEntitiesInLocation: actions_getEntitiesInLocation,
			buildGetEntitiesInLocationCalldata: build_actions_getEntitiesInLocation_calldata,
			getGameStatus: actions_getGameStatus,
			buildGetGameStatusCalldata: build_actions_getGameStatus_calldata,
			getPlayerState: actions_getPlayerState,
			buildGetPlayerStateCalldata: build_actions_getPlayerState_calldata,
			getRoomState: actions_getRoomState,
			buildGetRoomStateCalldata: build_actions_getRoomState_calldata,
			getTurnHistory: actions_getTurnHistory,
			buildGetTurnHistoryCalldata: build_actions_getTurnHistory_calldata,
			initializePlayer: actions_initializePlayer,
			buildInitializePlayerCalldata: build_actions_initializePlayer_calldata,
			movePlayer: actions_movePlayer,
			buildMovePlayerCalldata: build_actions_movePlayer_calldata,
			openDoor: actions_openDoor,
			buildOpenDoorCalldata: build_actions_openDoor_calldata,
			respawnPlayer: actions_respawnPlayer,
			buildRespawnPlayerCalldata: build_actions_respawnPlayer_calldata,
			startGame: actions_startGame,
			buildStartGameCalldata: build_actions_startGame_calldata,
			validateActions: actions_validateActions,
			buildValidateActionsCalldata: build_actions_validateActions_calldata,
		},
	};
}
```

`/home/suhas/Desktop/pune/blockroomsv2/client/src/dojo/dojoConfig.ts`:

```ts
import { createDojoConfig } from "@dojoengine/core";

import { manifest } from "../config/manifest";

const {
    VITE_PUBLIC_NODE_URL,
    VITE_PUBLIC_TORII,
    VITE_PUBLIC_MASTER_ADDRESS,
    VITE_PUBLIC_MASTER_PRIVATE_KEY,
  } = import.meta.env;

export const dojoConfig = createDojoConfig({
    manifest,
    masterAddress: VITE_PUBLIC_MASTER_ADDRESS || '',
    masterPrivateKey: VITE_PUBLIC_MASTER_PRIVATE_KEY || '',
    rpcUrl: VITE_PUBLIC_NODE_URL || '',
    toriiUrl: VITE_PUBLIC_TORII || '',
});
```

`/home/suhas/Desktop/pune/blockroomsv2/client/src/types/game.ts`:

```ts
import { Vector3 } from "three";
import * as THREE from "three";

// Core game interfaces
export interface WarningDialogProps {
  onAccept: () => void;
}

export interface Keys {
  forward: boolean;
  backward: boolean;
  left: boolean;
  right: boolean;
}

export interface FirstPersonControlsProps {
  onPositionUpdate?: (position: Vector3) => void;
  onRotationUpdate?: (rotation: number) => void; // New prop for rotation updates
}

export interface GunProps {
  isVisible?: boolean;
  onShoot: (hit: THREE.Intersection, cameraPosition: Vector3) => void;
}

export interface RoomNotificationProps {
  roomNumber: number;
  onClose: () => void;
}

export interface EnemyProps {
  position: [number, number, number];
  roomNumber: number;
  onDeath: (roomNumber: number) => void;
  onPlayerDetected?: () => void;
}

export interface RoomDetectorProps {
  playerPosition: Vector3 | null;
  onRoomEnter: (roomNumber: number) => void;
}

export interface BloodEffectProps {
  position: Vector3;
  onComplete: () => void;
}

export interface BulletHoleProps {
  position: Vector3;
  normal: Vector3;
  cameraPosition: Vector3;
  onComplete: () => void;
}



// Data structures
export interface RoomBounds {
  x: [number, number];
  z: [number, number];
}

export interface EnemyData {
  roomNumber: number;
  position: [number, number, number];
  id: number;
}

export interface BloodEffect {
  id: number;
  position: Vector3;
}

export interface BulletHole {
  id: number;
  position: Vector3;
  normal: Vector3;
  cameraPosition: Vector3;
}

export interface Keys {
  forward: boolean;
  backward: boolean;
  left: boolean;
  right: boolean;
}
```

`/home/suhas/Desktop/pune/blockroomsv2/client/src/context/game-context.tsx`:

```tsx
import type React from "react"

import { createContext, useContext, useReducer, type ReactNode } from "react"

interface GameState {
  connected: boolean
  level: number
  experience: number
  maxExp: number
  health: number
  coins: number
  address: string | null
  isLoading: boolean
  txStatus: {
    message: string
    type: "pending" | "success" | "error" | null
  }
  achievement: string | null
}

type GameAction =
  | { type: "CONNECT_WALLET_START" }
  | { type: "CONNECT_WALLET_SUCCESS"; address: string }
  | { type: "TRAIN_PLAYER" }
  | { type: "MINE_COINS" }
  | { type: "REST_PLAYER" }
  | { type: "SET_TX_STATUS"; message: string; txType: "pending" | "success" | "error" }
  | { type: "CLEAR_TX_STATUS" }
  | { type: "SHOW_ACHIEVEMENT"; achievement: string }
  | { type: "CLEAR_ACHIEVEMENT" }

const initialState: GameState = {
  connected: false,
  level: 1,
  experience: 0,
  maxExp: 100,
  health: 100,
  coins: 0,
  address: null,
  isLoading: false,
  txStatus: { message: "", type: null },
  achievement: null,
}

function gameReducer(state: GameState, action: GameAction): GameState {
  switch (action.type) {
    case "CONNECT_WALLET_START":
      return { ...state, isLoading: true }

    case "CONNECT_WALLET_SUCCESS":
      return {
        ...state,
        connected: true,
        address: action.address,
        isLoading: false,
      }

    case "TRAIN_PLAYER":
      const newExp = state.experience + 10
      const levelUp = newExp >= state.maxExp
      return {
        ...state,
        experience: levelUp ? 0 : newExp,
        level: levelUp ? state.level + 1 : state.level,
        maxExp: levelUp ? state.maxExp + 50 : state.maxExp,
        achievement: levelUp ? `Level ${state.level + 1} Reached!` : state.achievement,
      }

    case "MINE_COINS":
      const newCoins = state.coins + 5
      return {
        ...state,
        coins: newCoins,
        health: Math.max(0, state.health - 5),
        achievement: newCoins >= 50 && state.coins < 50 ? "Wealthy Miner!" : state.achievement,
      }

    case "REST_PLAYER":
      return {
        ...state,
        health: Math.min(100, state.health + 20),
      }

    case "SET_TX_STATUS":
      return {
        ...state,
        txStatus: { message: action.message, type: action.txType },
      }

    case "CLEAR_TX_STATUS":
      return {
        ...state,
        txStatus: { message: "", type: null },
      }

    case "SHOW_ACHIEVEMENT":
      return {
        ...state,
        achievement: action.achievement,
      }

    case "CLEAR_ACHIEVEMENT":
      return {
        ...state,
        achievement: null,
      }

    default:
      return state
  }
}

const GameContext = createContext<{
  state: GameState
  dispatch: React.Dispatch<GameAction>
} | null>(null)

export function GameProvider({ children }: { children: ReactNode }) {
  const [state, dispatch] = useReducer(gameReducer, initialState)

  return <GameContext.Provider value={{ state, dispatch }}>{children}</GameContext.Provider>
}

export function useGame() {
  const context = useContext(GameContext)
  if (!context) {
    throw new Error("useGame must be used within a GameProvider")
  }
  return context
}

```

`/home/suhas/Desktop/pune/blockroomsv2/client/src/components/game/Gun.tsx`:

```tsx
import { useRef, useEffect, useState } from "react";
import { useFrame, useThree } from "@react-three/fiber";
import * as THREE from "three";
import { Model as GunModel } from "../../models/Gun1";
import { GunProps } from "../../types/game";
import { useAppStore } from "../../zustand/store"; 

export function Gun({
  isVisible, // Keep for backward compatibility but make optional
  onShoot,
}: GunProps): JSX.Element | null {
  const gunRef = useRef<THREE.Group>(null);
  const { camera, scene } = useThree();
  
  // Get gun visibility from store
  const { showGun } = useAppStore();
  
  // Use store value, but allow prop override for flexibility
  const shouldShow = isVisible !== undefined ? isVisible : showGun;

  // Timer to drive breathing motion
  const swayTime = useRef<number>(0);

  // Shooting and recoil state
  const [isRecoiling, setIsRecoiling] = useState<boolean>(false);
  const recoilTime = useRef<number>(0);
  const shootSound = useRef<HTMLAudioElement | null>(null);

  // Load and apply textures
  useEffect(() => {
    // Load shoot sound
    const audio = new Audio("/shot.mp3");
    audio.volume = 0.7;
    shootSound.current = audio;

    if (gunRef.current) {
      const textureLoader = new THREE.TextureLoader();

      // Load beretta (gun) textures
      const berettaColor = textureLoader.load("/textures/berettaColor.png");
      const berettaNormal = textureLoader.load("/textures/berettaNormal.png");
      const berettaMetallic = textureLoader.load(
        "/textures/berettaMetallic.png"
      );
      const berettaRoughness = textureLoader.load(
        "/textures/berettaRoughness.png"
      );
      const berettaAO = textureLoader.load("/textures/berettaAO.png");

      // Load arms textures
      const armsColor = textureLoader.load("/textures/armsColor.png");
      const armsNormal = textureLoader.load("/textures/armsNormal.png");
      const armsRoughness = textureLoader.load("/textures/armsRoughness.png");
      const armsAO = textureLoader.load("/textures/armsAO.png");

      // Apply textures to materials
      gunRef.current.traverse((child: THREE.Object3D) => {
        if ((child as THREE.Mesh).isMesh && (child as THREE.Mesh).material) {
          const mesh = child as THREE.Mesh;
          const material = mesh.material as THREE.MeshStandardMaterial;

          if (material.name === "beretta") {
            // Apply beretta textures
            material.map = berettaColor;
            material.normalMap = berettaNormal;
            material.metalnessMap = berettaMetallic;
            material.roughnessMap = berettaRoughness;
            material.aoMap = berettaAO;

            // Set material properties for realistic gun metal
            material.metalness = 1.0;
            material.roughness = 0.4;
            material.aoMapIntensity = 1.0;

            // Enable shadows
            mesh.castShadow = true;
            mesh.receiveShadow = true;

            material.needsUpdate = true;
          }

          if (material.name === "arms") {
            // Apply arms textures
            material.map = armsColor;
            material.normalMap = armsNormal;
            material.roughnessMap = armsRoughness;
            material.aoMap = armsAO;

            // Set material properties for skin
            material.metalness = 0.0;
            material.roughness = 0.8;
            material.aoMapIntensity = 1.0;

            // Enable shadows
            mesh.castShadow = true;
            mesh.receiveShadow = true;

            material.needsUpdate = true;
          }
        }
      });
    }

    // Add mouse click event listener for shooting
    const handleMouseClick = (event: MouseEvent) => {
      if (event.button === 0 && shouldShow) {
        // Left mouse button - only shoot if gun is visible
        shoot();
      }
    };

    document.addEventListener("mousedown", handleMouseClick);

    return () => {
      document.removeEventListener("mousedown", handleMouseClick);
      if (shootSound.current) {
        shootSound.current = null;
      }
    };
  }, [shouldShow]); // Update dependency to use shouldShow

  // Shoot function
  const shoot = (): void => {
    if (isRecoiling) return; // Prevent shooting while already recoiling

    // Play shoot sound
    if (shootSound.current) {
      shootSound.current.currentTime = 0; // Reset to beginning
      shootSound.current.play().catch((error: Error) => {
        console.log("Failed to play shoot sound:", error);
      });
    }

    // Perform raycast from camera center
    const raycaster = new THREE.Raycaster();
    const direction = new THREE.Vector3(0, 0, -1);
    direction.applyQuaternion(camera.quaternion);

    raycaster.set(camera.position, direction);
    const intersects = raycaster.intersectObjects(scene.children, true);

    // Filter out gun and non-solid objects
    const validIntersects = intersects.filter(
      (intersect: THREE.Intersection) => {
        const object = intersect.object;
        // Include entities (enemies) and exclude gun, lights, cameras
        return (
          !(object as THREE.Light).isLight &&
          !(object as THREE.Camera).isCamera &&
          !gunRef.current?.children.some(
            (child: THREE.Object3D) =>
              child === object || child.children.includes(object)
          ) &&
          (object.userData?.isEntity ||
            ((object as THREE.Mesh).geometry &&
              (object as THREE.Mesh).material)) &&
          object.visible
        );
      }
    );

    if (validIntersects.length > 0 && onShoot) {
      const hit = validIntersects[0];
      onShoot(hit, camera.position);
    }

    // Start recoil animation
    setIsRecoiling(true);
    recoilTime.current = 0;

    // Stop recoil after a short duration
    setTimeout(() => {
      setIsRecoiling(false);
    }, 200); // 200ms recoil duration
  };

  useFrame((_, delta: number) => {
    if (!gunRef.current || !shouldShow) return; // Use shouldShow instead of isVisible

    // Increment sway timer
    swayTime.current += delta;

    // Breathing sway amount (sinusoidal vertical movement)
    const swayY = Math.sin(swayTime.current * 2) * 0.01;

    // Base position from camera
    const gunPosition = new THREE.Vector3();
    camera.getWorldPosition(gunPosition);

    const forward = new THREE.Vector3(0, 0, -1);
    const right = new THREE.Vector3(1, 0, 0);
    const down = new THREE.Vector3(0, -1, 0);

    forward.applyQuaternion(camera.quaternion);
    right.applyQuaternion(camera.quaternion);
    down.applyQuaternion(camera.quaternion);

    gunPosition.add(forward.multiplyScalar(0.5));
    gunPosition.add(right.multiplyScalar(0.3));
    gunPosition.add(down.multiplyScalar(0.2 + swayY));

    // Handle recoil animation
    let recoilOffset = new THREE.Vector3();
    let recoilRotation = { x: 0, y: 0, z: 0 };

    if (isRecoiling) {
      recoilTime.current += delta;

      // Recoil parameters
      const recoilDuration = 0.2; // 200ms
      const recoilProgress = Math.min(recoilTime.current / recoilDuration, 1);

      // Easing function for smooth recoil (ease-out)
      const easedProgress = 1 - Math.pow(1 - recoilProgress, 3);

      // Recoil movements
      const maxBackwardRecoil = 0.15; // Move gun backward
      const maxUpwardRecoil = 0.08; // Move gun up slightly
      const maxRotationRecoil = -0.3; // Rotate gun up

      // Calculate recoil offsets (reverse the motion for return effect)
      const backwardRecoil =
        Math.sin(easedProgress * Math.PI) * maxBackwardRecoil;
      const upwardRecoil = Math.sin(easedProgress * Math.PI) * maxUpwardRecoil;
      const rotationRecoil =
        Math.sin(easedProgress * Math.PI) * maxRotationRecoil;

      // Apply recoil to position
      recoilOffset.add(forward.clone().multiplyScalar(-backwardRecoil)); // Push backward
      recoilOffset.add(down.clone().multiplyScalar(-upwardRecoil)); // Push up

      // Apply recoil to rotation
      recoilRotation.x = -rotationRecoil; // Rotate gun upward
      recoilRotation.z = (Math.random() - 0.5) * 0.1; // Small random roll
    }

    // Apply final position with recoil
    gunPosition.add(recoilOffset);
    gunRef.current.position.copy(gunPosition);

    // Apply rotation via quaternion to prevent flipping
    gunRef.current.quaternion.copy(camera.quaternion);
    gunRef.current.rotateX(0.1 + recoilRotation.x); // Slight downward tilt + recoil
    gunRef.current.rotateY(Math.PI); // Face forward
    gunRef.current.rotateZ(recoilRotation.z); // Add recoil roll
  });

  if (!shouldShow) return null; // Use shouldShow instead of isVisible

  return (
    <group ref={gunRef}>
      {/* Enhanced lighting for better texture visibility */}
      <pointLight
        position={[0.3, 0.2, 0.4]}
        intensity={1.5}
        distance={3}
        decay={1}
        color="#ffffff"
      />
      <pointLight
        position={[-0.2, -0.1, 0.3]}
        intensity={1.0}
        distance={2}
        decay={2}
        color="#fff8dc"
      />
      <GunModel scale={[1, 1, 1]} />
    </group>
  );
}
```

`/home/suhas/Desktop/pune/blockroomsv2/client/src/components/game/BulletHole.tsx`:

```tsx
import { useRef, useEffect, useState } from "react";
import * as THREE from "three";
import { BulletHoleProps } from "../../types/game";

export function BulletHole({
  position,
  normal,
  cameraPosition,
  onComplete,
}: BulletHoleProps): JSX.Element {
  const holeRef = useRef<THREE.Mesh>(null);
  const [opacity, setOpacity] = useState<number>(1);

  useEffect(() => {
    // Load hole texture
    const textureLoader = new THREE.TextureLoader();
    const holeTexture = textureLoader.load("/hole.png");

    if (holeRef.current) {
      (holeRef.current.material as THREE.MeshBasicMaterial).map = holeTexture;
      (holeRef.current.material as THREE.MeshBasicMaterial).transparent = true;
      (holeRef.current.material as THREE.MeshBasicMaterial).needsUpdate = true;

      // Orient the hole to face towards the camera (player)
      holeRef.current.lookAt(cameraPosition);
    }

    // Remove bullet hole after 10 seconds
    const removeTimeout = setTimeout(() => {
      if (onComplete) onComplete();
    }, 10000);

    return () => clearTimeout(removeTimeout);
  }, [position, normal, cameraPosition, onComplete]);

  return (
    <mesh ref={holeRef} position={position}>
      <planeGeometry args={[0.5, 0.5]} />
      <meshBasicMaterial side={THREE.DoubleSide} />
    </mesh>
  );
}

```

`/home/suhas/Desktop/pune/blockroomsv2/client/src/components/game/BloodEffect.tsx`:

```tsx
import { useRef, useEffect, useState } from "react";
import * as THREE from "three";
import { BloodEffectProps } from "../../types/game";

export function BloodEffect({
  position,
  onComplete,
}: BloodEffectProps): JSX.Element {
  const bloodRef = useRef<THREE.Mesh>(null);
  const [opacity, setOpacity] = useState<number>(1);

  useEffect(() => {
    // Load blood texture
    const textureLoader = new THREE.TextureLoader();
    const bloodTexture = textureLoader.load("/blood.png");

    if (bloodRef.current) {
      (bloodRef.current.material as THREE.MeshBasicMaterial).map = bloodTexture;
      (bloodRef.current.material as THREE.MeshBasicMaterial).transparent = true;
      (bloodRef.current.material as THREE.MeshBasicMaterial).needsUpdate = true;
    }

    // Fade out blood effect over 3 seconds
    const fadeInterval = setInterval(() => {
      setOpacity((prev: number) => {
        const newOpacity = prev - 0.02;
        if (newOpacity <= 0) {
          clearInterval(fadeInterval);
          if (onComplete) onComplete();
          return 0;
        }
        return newOpacity;
      });
    }, 50);

    return () => clearInterval(fadeInterval);
  }, [onComplete]);

  useEffect(() => {
    if (bloodRef.current) {
      (bloodRef.current.material as THREE.MeshBasicMaterial).opacity = opacity;
    }
  }, [opacity]);

  return (
    <mesh ref={bloodRef} position={position}>
      <planeGeometry args={[0.7, 0.7]} />
      <meshBasicMaterial side={THREE.DoubleSide} />
    </mesh>
  );
}

```

`/home/suhas/Desktop/pune/blockroomsv2/client/src/components/systems/AudioManager.tsx`:

```tsx
import { useRef, useEffect, useState } from "react";

export function AudioManager(): null {
  const audioRef = useRef<HTMLAudioElement | null>(null);
  const [isPlaying, setIsPlaying] = useState<boolean>(false);
  const [hasInteracted, setHasInteracted] = useState<boolean>(false);

  useEffect(() => {
    // Create background music audio element
    const audio = new Audio("/bgmusicd.mp3");
    audio.loop = true;
    audio.volume = 0.3; // Set to moderate volume since no entity distance scaling
    audioRef.current = audio;

    // Try to play background music immediately (will fail without user interaction)
    const tryAutoPlay = async (): Promise<void> => {
      try {
        await audio.play();
        setIsPlaying(true);
      } catch (error) {
        console.log("Autoplay blocked, waiting for user interaction");
      }
    };

    tryAutoPlay();

    // Listen for any user interaction to enable audio
    const handleInteraction = async (): Promise<void> => {
      if (!hasInteracted) {
        setHasInteracted(true);
        try {
          await audio.play();
          setIsPlaying(true);
        } catch (error) {
          console.log("Failed to play audio:", error);
        }
      }
    };

    // Add event listeners for user interaction
    document.addEventListener("click", handleInteraction);
    document.addEventListener("keydown", handleInteraction);
    document.addEventListener("touchstart", handleInteraction);

    return () => {
      document.removeEventListener("click", handleInteraction);
      document.removeEventListener("keydown", handleInteraction);
      document.removeEventListener("touchstart", handleInteraction);
      if (audioRef.current) {
        audioRef.current.pause();
        audioRef.current = null;
      }
    };
  }, [hasInteracted]);

  // Audio manager runs silently with no UI
  return null;
}

```

`/home/suhas/Desktop/pune/blockroomsv2/client/src/components/systems/FirstPersonControls.tsx`:

```tsx
import { useRef, useEffect } from "react";
import { useFrame, useThree } from "@react-three/fiber";
import { Vector3 } from "three";
import * as THREE from "three";
import { FirstPersonControlsProps, Keys } from "../../types/game";
import { useAppStore } from "../../zustand/store";

export function FirstPersonControls({
  onPositionUpdate, // Keep for backward compatibility
  onRotationUpdate, // Keep for backward compatibility
}: FirstPersonControlsProps): null {
  const { camera, scene } = useThree();
  
  // Get player state and actions from store
  const { 
    position: playerPosition,
    rotation: playerRotation,
    updatePosition, 
    updateRotation,
    setMoving,
    setVelocity 
  } = useAppStore();
  
  const moveSpeed = 5;
  const playerRadius = 0.5; // Collision radius around player
  const baseHeight = 1.5; // Base camera height (eye level)
  const bobAmplitude = 0.08; // How much the camera bobs up and down
  const bobFrequency = 1; // How fast the bobbing occurs
  const bobTimeRef = useRef<number>(0); // Track time for bobbing animation
  const isMovingRef = useRef<boolean>(false); // Track if player is moving

  const keys = useRef<Keys>({
    forward: false,
    backward: false,
    left: false,
    right: false,
  });

  // Sync camera position with store on mount and when store position changes
  useEffect(() => {
    camera.position.copy(playerPosition);
  }, [camera, playerPosition]);

  // Handle keyboard input
  useEffect(() => {
    const handleKeyDown = (event: KeyboardEvent): void => {
      switch (event.code) {
        case "KeyW":
        case "ArrowUp":
          keys.current.forward = true;
          break;
        case "KeyS":
        case "ArrowDown":
          keys.current.backward = true;
          break;
        case "KeyA":
        case "ArrowLeft":
          keys.current.left = true;
          break;
        case "KeyD":
        case "ArrowRight":
          keys.current.right = true;
          break;
      }
    };

    const handleKeyUp = (event: KeyboardEvent): void => {
      switch (event.code) {
        case "KeyW":
        case "ArrowUp":
          keys.current.forward = false;
          break;
        case "KeyS":
        case "ArrowDown":
          keys.current.backward = false;
          break;
        case "KeyA":
        case "ArrowLeft":
          keys.current.left = false;
          break;
        case "KeyD":
        case "ArrowRight":
          keys.current.right = false;
          break;
      }
    };

    document.addEventListener("keydown", handleKeyDown);
    document.addEventListener("keyup", handleKeyUp);

    return () => {
      document.removeEventListener("keydown", handleKeyDown);
      document.removeEventListener("keyup", handleKeyUp);
    };
  }, []);

  // Check for collisions using raycasting
  const checkCollision = (newPosition: Vector3): boolean => {
    const raycaster = new THREE.Raycaster();
    const directions = [
      new Vector3(1, 0, 0), // right
      new Vector3(-1, 0, 0), // left
      new Vector3(0, 0, 1), // forward
      new Vector3(0, 0, -1), // backward
      new Vector3(0.707, 0, 0.707), // diagonal
      new Vector3(-0.707, 0, 0.707), // diagonal
      new Vector3(0.707, 0, -0.707), // diagonal
      new Vector3(-0.707, 0, -0.707), // diagonal
    ];

    // Check collision in multiple directions around the player
    for (const direction of directions) {
      raycaster.set(newPosition, direction);
      const intersects = raycaster.intersectObjects(scene.children, true);

      // Filter out non-solid objects (lights, cameras, etc.)
      const solidIntersects = intersects.filter(
        (intersect: THREE.Intersection) => {
          const object = intersect.object;
          // Check if object has geometry and is likely a wall/floor
          return (
            (object as THREE.Mesh).geometry &&
            (object as THREE.Mesh).material &&
            !(object as THREE.Light).isLight &&
            !(object as THREE.Camera).isCamera &&
            object.visible
          );
        }
      );

      if (
        solidIntersects.length > 0 &&
        solidIntersects[0].distance < playerRadius
      ) {
        return true; // Collision detected
      }
    }
    return false; // No collision
  };

  // Update camera position based on input with collision detection and running animation
  useFrame((state, delta: number) => {
    const velocity = new Vector3();
    const direction = new Vector3();

    camera.getWorldDirection(direction);
    direction.y = 0; // Keep movement horizontal
    direction.normalize();

    const right = new Vector3();
    right.crossVectors(direction, camera.up).normalize();

    if (keys.current.forward) velocity.add(direction);
    if (keys.current.backward) velocity.sub(direction);
    if (keys.current.right) velocity.add(right);
    if (keys.current.left) velocity.sub(right);

    // Check if player is moving
    const isMoving = velocity.length() > 0;
    isMovingRef.current = isMoving;
    
    // Update store with movement state
    setMoving(isMoving);

    if (isMoving) {
      velocity.normalize();
      velocity.multiplyScalar(moveSpeed * delta);
      
      // Update store with current velocity
      setVelocity(velocity);

      // Calculate new position
      const newPosition = camera.position.clone().add(velocity);

      // Check for collision before moving
      if (!checkCollision(newPosition)) {
        camera.position.copy(newPosition);
      } else {
        // Try moving in individual axes if diagonal movement is blocked
        const xMovement = new Vector3(velocity.x, 0, 0);
        const zMovement = new Vector3(0, 0, velocity.z);

        const xPosition = camera.position.clone().add(xMovement);
        const zPosition = camera.position.clone().add(zMovement);

        if (!checkCollision(xPosition)) {
          camera.position.add(xMovement);
        } else if (!checkCollision(zPosition)) {
          camera.position.add(zMovement);
        }
        // If both individual axes are blocked, don't move
      }
    } else {
      // Update store with zero velocity when not moving
      setVelocity(new Vector3(0, 0, 0));
    }

    // Handle running animation (head bob)
    if (isMovingRef.current) {
      // Increment bob time when moving
      bobTimeRef.current += delta * bobFrequency;

      // Calculate bobbing offset using sine wave
      const bobOffset = Math.sin(bobTimeRef.current) * bobAmplitude;

      // Apply bobbing to camera Y position
      camera.position.y = baseHeight + bobOffset;
    } else {
      // When not moving, gradually return to base height
      const currentHeight = camera.position.y;
      const heightDiff = baseHeight - currentHeight;

      // Smooth interpolation back to base height
      if (Math.abs(heightDiff) > 0.001) {
        camera.position.y += heightDiff * delta * 5; // Smooth return
      } else {
        camera.position.y = baseHeight;
      }

      // Reset bob time when not moving
      bobTimeRef.current = 0;
    }

    // Update store with current position
    updatePosition(camera.position.clone());

    // Update store with current rotation
    const rotation = camera.rotation.y;
    updateRotation(rotation);

    // Call legacy callbacks for backward compatibility
    if (onPositionUpdate) {
      onPositionUpdate(camera.position.clone());
    }
    if (onRotationUpdate) {
      onRotationUpdate(rotation);
    }
  });

  return null;
}
```

`/home/suhas/Desktop/pune/blockroomsv2/client/src/components/systems/MapTracker.tsx`:

```tsx
import React from 'react';
import { Vector3 } from 'three';

interface MapTrackerProps {
  playerPosition: Vector3;
  playerRotation?: number; // Optional rotation in radians
  mapScale?: number; // Scale factor for the map
  size?: number; // Size of the tracker in pixels
}

export const MapTracker: React.FC<MapTrackerProps> = ({
  playerPosition,
  playerRotation = 0,
  mapScale = 20, // Adjust this to fit your game world scale
  size = 200
}) => {
  // Convert 3D world position to 2D map coordinates (positive values only)
  // Offset by mapScale to ensure positive coordinates, then scale to map size
  const mapX = ((playerPosition.x + mapScale) / (mapScale * 2)) * size;
  const mapZ = ((playerPosition.z + mapScale) / (mapScale * 2)) * size;

  // Clamp coordinates to stay within the map bounds
  const clampedX = Math.max(10, Math.min(size - 10, mapX));
  const clampedZ = Math.max(10, Math.min(size - 10, mapZ));

  // Convert rotation for the player indicator arrow
  const rotationDegrees = (playerRotation * 180) / Math.PI;

  const containerStyle: React.CSSProperties = {
    position: 'fixed',
    top: '20px',
    right: '20px',
    width: `${size}px`,
    height: `${size}px`,
    backgroundColor: 'rgba(0, 0, 0, 0.8)',
    border: '2px solid #333',
    borderRadius: '8px',
    zIndex: 1000,
    fontFamily: 'monospace',
    color: '#00ff00',
    fontSize: '12px',
  };

  const mapStyle: React.CSSProperties = {
    position: 'relative',
    width: '100%',
    height: '100%',
    backgroundColor: 'rgba(20, 20, 20, 0.9)',
    border: '1px solid #444',
    borderRadius: '4px',
    overflow: 'hidden',
  };

  const gridStyle: React.CSSProperties = {
    position: 'absolute',
    top: 0,
    left: 0,
    width: '100%',
    height: '100%',
    backgroundImage: `
      linear-gradient(rgba(0, 255, 0, 0.1) 1px, transparent 1px),
      linear-gradient(90deg, rgba(0, 255, 0, 0.1) 1px, transparent 1px)
    `,
    backgroundSize: '20px 20px',
  };

  const playerDotStyle: React.CSSProperties = {
    position: 'absolute',
    left: `${clampedX - 6}px`,
    top: `${clampedZ - 6}px`,
    width: '12px',
    height: '12px',
    backgroundColor: '#ff0000',
    borderRadius: '50%',
    border: '2px solid #fff',
    zIndex: 2,
    boxShadow: '0 0 8px rgba(255, 0, 0, 0.8)',
  };

  const playerArrowStyle: React.CSSProperties = {
    position: 'absolute',
    left: `${clampedX - 8}px`,
    top: `${clampedZ - 8}px`,
    width: '16px',
    height: '16px',
    zIndex: 3,
    transform: `rotate(${rotationDegrees}deg)`,
    transformOrigin: 'center',
  };

  const infoStyle: React.CSSProperties = {
    position: 'absolute',
    bottom: '4px',
    left: '4px',
    right: '4px',
    backgroundColor: 'rgba(0, 0, 0, 0.8)',
    padding: '4px',
    borderRadius: '2px',
    fontSize: '10px',
    lineHeight: '1.2',
  };

  return (
    <div style={containerStyle}>
      <div style={mapStyle}>
        {/* Grid overlay */}
        <div style={gridStyle} />
        
        {/* Player position indicator */}
        <div style={playerDotStyle} />
        
        {/* Player direction arrow */}
        <div style={playerArrowStyle}>
          <svg
            width="16"
            height="16"
            viewBox="0 0 16 16"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M8 2L12 14L8 10L4 14L8 2Z"
              fill="#ffffff"
              stroke="#000000"
              strokeWidth="1"
            />
          </svg>
        </div>
        
        {/* Position info */}
        <div style={infoStyle}>
          <div>X: {Math.abs(playerPosition.x).toFixed(1)}</div>
          <div>Y: {Math.abs(playerPosition.y).toFixed(1)}</div>
          <div>Z: {Math.abs(playerPosition.z).toFixed(1)}</div>
        </div>
      </div>
    </div>
  );
};
```

`/home/suhas/Desktop/pune/blockroomsv2/client/src/components/index.ts`:

```ts
// UI Components
export { WarningDialog } from "./ui/WarningDialog";
// export { RoomNotification } from "./ui/RoomNotification";
export { Crosshair } from "./ui/Crosshair";
// export { Instructions } from "./ui/Instructions";

// Game Components
export { Gun } from "./game/Gun";
// export { Enemy } from "./game/Enemy";
export { BloodEffect } from "./game/BloodEffect";
export { BulletHole } from "./game/BulletHole";

// System Components
export { AudioManager } from "./systems/AudioManager";

export { FirstPersonControls } from "./systems/FirstPersonControls";
```

`/home/suhas/Desktop/pune/blockroomsv2/client/src/components/ui/Crosshair.tsx`:

```tsx
export function Crosshair(): JSX.Element {
  return (
    <div
      style={{
        position: "fixed",
        top: "50%",
        left: "50%",
        transform: "translate(-50%, -50%)",
        zIndex: 2000,
        pointerEvents: "none", // Allow clicks to pass through
        color: "white",
        fontSize: "20px",
        fontWeight: "bold",
        textShadow: "2px 2px 4px rgba(0,0,0,0.8)",
        userSelect: "none",
      }}
    >
      <div
        style={{
          position: "relative",
          width: "20px",
          height: "20px",
        }}
      >
        {/* Horizontal line */}
        <div
          style={{
            position: "absolute",
            top: "50%",
            left: "0",
            width: "20px",
            height: "2px",
            backgroundColor: "white",
            transform: "translateY(-50%)",
            boxShadow: "0 0 4px rgba(0,0,0,0.8)",
          }}
        />
        {/* Vertical line */}
        <div
          style={{
            position: "absolute",
            top: "0",
            left: "50%",
            width: "2px",
            height: "20px",
            backgroundColor: "white",
            transform: "translateX(-50%)",
            boxShadow: "0 0 4px rgba(0,0,0,0.8)",
          }}
        />
        {/* Center dot */}
        <div
          style={{
            position: "absolute",
            top: "50%",
            left: "50%",
            width: "4px",
            height: "4px",
            backgroundColor: "white",
            borderRadius: "50%",
            transform: "translate(-50%, -50%)",
            boxShadow: "0 0 4px rgba(0,0,0,0.8)",
          }}
        />
      </div>
    </div>
  );
}

```

`/home/suhas/Desktop/pune/blockroomsv2/client/src/components/ui/Instructions.tsx`:

```tsx
// import React from "react";

// export function Instructions(): JSX.Element {
//   return (
//     <div
//       style={{
//         position: "absolute",
//         top: "20px",
//         left: "20px",
//         color: "white",
//         fontFamily: "Arial, sans-serif",
//         fontSize: "14px",
//         background: "rgba(0, 0, 0, 0.7)",
//         padding: "15px",
//         borderRadius: "8px",
//         zIndex: 1000,
//         maxWidth: "300px",
//       }}
//     >
//       <div style={{ marginBottom: "10px", fontWeight: "bold" }}>🎮 Controls</div>
//       <div>• Click to lock mouse cursor</div>
//       <div>• WASD or Arrow Keys to move</div>
//       <div>• Mouse to look around</div>
//       <div>• Left Click to shoot</div>
//       <div>• ESC to unlock cursor</div>
//       <div style={{ marginTop: "10px", fontSize: "12px", opacity: "0.8" }}>
//         🎯 Hunt enemies in the 20 rooms!
//         <br />
//         🔴 Red alerts show enemy locations
//         <br />⚡ New enemy spawns 5-6s after kill
//       </div>
//     </div>
//   );
// }

```

`/home/suhas/Desktop/pune/blockroomsv2/client/src/components/ui/WarningDialog.tsx`:

```tsx
import { useAppStore } from "../../zustand/store";

interface WarningDialogProps {
  onAccept?: () => void; // Keep this optional for backward compatibility
}

export function WarningDialog({ onAccept }: WarningDialogProps): JSX.Element {
  const { hideWarning, startGame } = useAppStore();

  const handleAccept = (): void => {
    // Use Zustand actions directly
    hideWarning();
    startGame();
    
    // Still call the callback if provided (for any additional logic in App.tsx)
    if (onAccept) {
      onAccept();
    }
  };

  return (
    <div 
      style={{
        position: "fixed",
        top: 0,
        left: 0,
        width: "100vw",
        height: "100vh",
        backgroundColor: "rgba(0, 0, 0, 0.8)",
        display: "flex",
        justifyContent: "center",
        alignItems: "center",
        zIndex: 1000,
      }}
    >
      <div 
        style={{
          backgroundColor: "#1a1a1a",
          padding: "2rem",
          borderRadius: "8px",
          border: "2px solid #E1CF48",
          maxWidth: "500px",
          textAlign: "center",
          color: "#ffffff",
        }}
      >
        <h2 style={{ color: "#ff0000", marginBottom: "1rem" }}>
        BlockRooms V0
        </h2>
        <p style={{ marginBottom: "1.5rem", lineHeight: "1.6" }}>
         This FPS gameplay is at a POC stage. Any preassumptions or gameplay expectations are not final and are subject to change.
        </p>
        <button
          onClick={handleAccept}
          style={{
            backgroundColor: "#ff0000",
            color: "#ffffff",
            border: "none",
            padding: "12px 24px",
            borderRadius: "4px",
            fontSize: "16px",
            fontWeight: "bold",
            cursor: "pointer",
            transition: "background-color 0.2s",
          }}
          onMouseOver={(e) => {
            e.currentTarget.style.backgroundColor = "#cc0000";
          }}
          onMouseOut={(e) => {
            e.currentTarget.style.backgroundColor = "#E1CF48";
          }}
        >
          I UNDERSTAND - START GAME
        </button>
      </div>
    </div>
  );
}
```

`/home/suhas/Desktop/pune/blockroomsv2/client/src/config/manifest_dev.json`:

```json
{
  "world": {
    "class_hash": "0x4c60dc46a8ca8bb47675b7b914053cef769afbf0e340523187336b72bd71d1f",
    "address": "0x76eba98d1dd58caa8e1b4b0ed11173b53cc5b7abe45b6198dae2e9c5f4c3b63",
    "seed": "blockrooms1",
    "name": "blockrooms",
    "entrypoints": [
      "uuid",
      "set_metadata",
      "register_namespace",
      "register_event",
      "register_model",
      "register_contract",
      "register_library",
      "init_contract",
      "upgrade_event",
      "upgrade_model",
      "upgrade_contract",
      "emit_event",
      "emit_events",
      "set_entity",
      "set_entities",
      "delete_entity",
      "delete_entities",
      "grant_owner",
      "revoke_owner",
      "grant_writer",
      "revoke_writer",
      "upgrade"
    ],
    "abi": [
      {
        "type": "impl",
        "name": "World",
        "interface_name": "dojo::world::iworld::IWorld"
      },
      {
        "type": "struct",
        "name": "core::byte_array::ByteArray",
        "members": [
          {
            "name": "data",
            "type": "core::array::Array::<core::bytes_31::bytes31>"
          },
          {
            "name": "pending_word",
            "type": "core::felt252"
          },
          {
            "name": "pending_word_len",
            "type": "core::integer::u32"
          }
        ]
      },
      {
        "type": "enum",
        "name": "dojo::world::resource::Resource",
        "variants": [
          {
            "name": "Model",
            "type": "(core::starknet::contract_address::ContractAddress, core::felt252)"
          },
          {
            "name": "Event",
            "type": "(core::starknet::contract_address::ContractAddress, core::felt252)"
          },
          {
            "name": "Contract",
            "type": "(core::starknet::contract_address::ContractAddress, core::felt252)"
          },
          {
            "name": "Namespace",
            "type": "core::byte_array::ByteArray"
          },
          {
            "name": "World",
            "type": "()"
          },
          {
            "name": "Unregistered",
            "type": "()"
          },
          {
            "name": "Library",
            "type": "(core::starknet::class_hash::ClassHash, core::felt252)"
          }
        ]
      },
      {
        "type": "struct",
        "name": "dojo::model::metadata::ResourceMetadata",
        "members": [
          {
            "name": "resource_id",
            "type": "core::felt252"
          },
          {
            "name": "metadata_uri",
            "type": "core::byte_array::ByteArray"
          },
          {
            "name": "metadata_hash",
            "type": "core::felt252"
          }
        ]
      },
      {
        "type": "struct",
        "name": "core::array::Span::<core::felt252>",
        "members": [
          {
            "name": "snapshot",
            "type": "@core::array::Array::<core::felt252>"
          }
        ]
      },
      {
        "type": "struct",
        "name": "core::array::Span::<core::array::Span::<core::felt252>>",
        "members": [
          {
            "name": "snapshot",
            "type": "@core::array::Array::<core::array::Span::<core::felt252>>"
          }
        ]
      },
      {
        "type": "enum",
        "name": "dojo::model::definition::ModelIndex",
        "variants": [
          {
            "name": "Keys",
            "type": "core::array::Span::<core::felt252>"
          },
          {
            "name": "Id",
            "type": "core::felt252"
          },
          {
            "name": "MemberId",
            "type": "(core::felt252, core::felt252)"
          }
        ]
      },
      {
        "type": "struct",
        "name": "core::array::Span::<core::integer::u8>",
        "members": [
          {
            "name": "snapshot",
            "type": "@core::array::Array::<core::integer::u8>"
          }
        ]
      },
      {
        "type": "struct",
        "name": "dojo::meta::layout::FieldLayout",
        "members": [
          {
            "name": "selector",
            "type": "core::felt252"
          },
          {
            "name": "layout",
            "type": "dojo::meta::layout::Layout"
          }
        ]
      },
      {
        "type": "struct",
        "name": "core::array::Span::<dojo::meta::layout::FieldLayout>",
        "members": [
          {
            "name": "snapshot",
            "type": "@core::array::Array::<dojo::meta::layout::FieldLayout>"
          }
        ]
      },
      {
        "type": "struct",
        "name": "core::array::Span::<dojo::meta::layout::Layout>",
        "members": [
          {
            "name": "snapshot",
            "type": "@core::array::Array::<dojo::meta::layout::Layout>"
          }
        ]
      },
      {
        "type": "enum",
        "name": "dojo::meta::layout::Layout",
        "variants": [
          {
            "name": "Fixed",
            "type": "core::array::Span::<core::integer::u8>"
          },
          {
            "name": "Struct",
            "type": "core::array::Span::<dojo::meta::layout::FieldLayout>"
          },
          {
            "name": "Tuple",
            "type": "core::array::Span::<dojo::meta::layout::Layout>"
          },
          {
            "name": "Array",
            "type": "core::array::Span::<dojo::meta::layout::Layout>"
          },
          {
            "name": "ByteArray",
            "type": "()"
          },
          {
            "name": "Enum",
            "type": "core::array::Span::<dojo::meta::layout::FieldLayout>"
          }
        ]
      },
      {
        "type": "struct",
        "name": "core::array::Span::<dojo::model::definition::ModelIndex>",
        "members": [
          {
            "name": "snapshot",
            "type": "@core::array::Array::<dojo::model::definition::ModelIndex>"
          }
        ]
      },
      {
        "type": "enum",
        "name": "core::bool",
        "variants": [
          {
            "name": "False",
            "type": "()"
          },
          {
            "name": "True",
            "type": "()"
          }
        ]
      },
      {
        "type": "interface",
        "name": "dojo::world::iworld::IWorld",
        "items": [
          {
            "type": "function",
            "name": "resource",
            "inputs": [
              {
                "name": "selector",
                "type": "core::felt252"
              }
            ],
            "outputs": [
              {
                "type": "dojo::world::resource::Resource"
              }
            ],
            "state_mutability": "view"
          },
          {
            "type": "function",
            "name": "uuid",
            "inputs": [],
            "outputs": [
              {
                "type": "core::integer::u32"
              }
            ],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "metadata",
            "inputs": [
              {
                "name": "resource_selector",
                "type": "core::felt252"
              }
            ],
            "outputs": [
              {
                "type": "dojo::model::metadata::ResourceMetadata"
              }
            ],
            "state_mutability": "view"
          },
          {
            "type": "function",
            "name": "set_metadata",
            "inputs": [
              {
                "name": "metadata",
                "type": "dojo::model::metadata::ResourceMetadata"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "register_namespace",
            "inputs": [
              {
                "name": "namespace",
                "type": "core::byte_array::ByteArray"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "register_event",
            "inputs": [
              {
                "name": "namespace",
                "type": "core::byte_array::ByteArray"
              },
              {
                "name": "class_hash",
                "type": "core::starknet::class_hash::ClassHash"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "register_model",
            "inputs": [
              {
                "name": "namespace",
                "type": "core::byte_array::ByteArray"
              },
              {
                "name": "class_hash",
                "type": "core::starknet::class_hash::ClassHash"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "register_contract",
            "inputs": [
              {
                "name": "salt",
                "type": "core::felt252"
              },
              {
                "name": "namespace",
                "type": "core::byte_array::ByteArray"
              },
              {
                "name": "class_hash",
                "type": "core::starknet::class_hash::ClassHash"
              }
            ],
            "outputs": [
              {
                "type": "core::starknet::contract_address::ContractAddress"
              }
            ],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "register_library",
            "inputs": [
              {
                "name": "namespace",
                "type": "core::byte_array::ByteArray"
              },
              {
                "name": "class_hash",
                "type": "core::starknet::class_hash::ClassHash"
              },
              {
                "name": "name",
                "type": "core::byte_array::ByteArray"
              },
              {
                "name": "version",
                "type": "core::byte_array::ByteArray"
              }
            ],
            "outputs": [
              {
                "type": "core::starknet::class_hash::ClassHash"
              }
            ],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "init_contract",
            "inputs": [
              {
                "name": "selector",
                "type": "core::felt252"
              },
              {
                "name": "init_calldata",
                "type": "core::array::Span::<core::felt252>"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "upgrade_event",
            "inputs": [
              {
                "name": "namespace",
                "type": "core::byte_array::ByteArray"
              },
              {
                "name": "class_hash",
                "type": "core::starknet::class_hash::ClassHash"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "upgrade_model",
            "inputs": [
              {
                "name": "namespace",
                "type": "core::byte_array::ByteArray"
              },
              {
                "name": "class_hash",
                "type": "core::starknet::class_hash::ClassHash"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "upgrade_contract",
            "inputs": [
              {
                "name": "namespace",
                "type": "core::byte_array::ByteArray"
              },
              {
                "name": "class_hash",
                "type": "core::starknet::class_hash::ClassHash"
              }
            ],
            "outputs": [
              {
                "type": "core::starknet::class_hash::ClassHash"
              }
            ],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "emit_event",
            "inputs": [
              {
                "name": "event_selector",
                "type": "core::felt252"
              },
              {
                "name": "keys",
                "type": "core::array::Span::<core::felt252>"
              },
              {
                "name": "values",
                "type": "core::array::Span::<core::felt252>"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "emit_events",
            "inputs": [
              {
                "name": "event_selector",
                "type": "core::felt252"
              },
              {
                "name": "keys",
                "type": "core::array::Span::<core::array::Span::<core::felt252>>"
              },
              {
                "name": "values",
                "type": "core::array::Span::<core::array::Span::<core::felt252>>"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "entity",
            "inputs": [
              {
                "name": "model_selector",
                "type": "core::felt252"
              },
              {
                "name": "index",
                "type": "dojo::model::definition::ModelIndex"
              },
              {
                "name": "layout",
                "type": "dojo::meta::layout::Layout"
              }
            ],
            "outputs": [
              {
                "type": "core::array::Span::<core::felt252>"
              }
            ],
            "state_mutability": "view"
          },
          {
            "type": "function",
            "name": "entities",
            "inputs": [
              {
                "name": "model_selector",
                "type": "core::felt252"
              },
              {
                "name": "indexes",
                "type": "core::array::Span::<dojo::model::definition::ModelIndex>"
              },
              {
                "name": "layout",
                "type": "dojo::meta::layout::Layout"
              }
            ],
            "outputs": [
              {
                "type": "core::array::Span::<core::array::Span::<core::felt252>>"
              }
            ],
            "state_mutability": "view"
          },
          {
            "type": "function",
            "name": "set_entity",
            "inputs": [
              {
                "name": "model_selector",
                "type": "core::felt252"
              },
              {
                "name": "index",
                "type": "dojo::model::definition::ModelIndex"
              },
              {
                "name": "values",
                "type": "core::array::Span::<core::felt252>"
              },
              {
                "name": "layout",
                "type": "dojo::meta::layout::Layout"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "set_entities",
            "inputs": [
              {
                "name": "model_selector",
                "type": "core::felt252"
              },
              {
                "name": "indexes",
                "type": "core::array::Span::<dojo::model::definition::ModelIndex>"
              },
              {
                "name": "values",
                "type": "core::array::Span::<core::array::Span::<core::felt252>>"
              },
              {
                "name": "layout",
                "type": "dojo::meta::layout::Layout"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "delete_entity",
            "inputs": [
              {
                "name": "model_selector",
                "type": "core::felt252"
              },
              {
                "name": "index",
                "type": "dojo::model::definition::ModelIndex"
              },
              {
                "name": "layout",
                "type": "dojo::meta::layout::Layout"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "delete_entities",
            "inputs": [
              {
                "name": "model_selector",
                "type": "core::felt252"
              },
              {
                "name": "indexes",
                "type": "core::array::Span::<dojo::model::definition::ModelIndex>"
              },
              {
                "name": "layout",
                "type": "dojo::meta::layout::Layout"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "is_owner",
            "inputs": [
              {
                "name": "resource",
                "type": "core::felt252"
              },
              {
                "name": "address",
                "type": "core::starknet::contract_address::ContractAddress"
              }
            ],
            "outputs": [
              {
                "type": "core::bool"
              }
            ],
            "state_mutability": "view"
          },
          {
            "type": "function",
            "name": "grant_owner",
            "inputs": [
              {
                "name": "resource",
                "type": "core::felt252"
              },
              {
                "name": "address",
                "type": "core::starknet::contract_address::ContractAddress"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "revoke_owner",
            "inputs": [
              {
                "name": "resource",
                "type": "core::felt252"
              },
              {
                "name": "address",
                "type": "core::starknet::contract_address::ContractAddress"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "owners_count",
            "inputs": [
              {
                "name": "resource",
                "type": "core::felt252"
              }
            ],
            "outputs": [
              {
                "type": "core::integer::u64"
              }
            ],
            "state_mutability": "view"
          },
          {
            "type": "function",
            "name": "is_writer",
            "inputs": [
              {
                "name": "resource",
                "type": "core::felt252"
              },
              {
                "name": "contract",
                "type": "core::starknet::contract_address::ContractAddress"
              }
            ],
            "outputs": [
              {
                "type": "core::bool"
              }
            ],
            "state_mutability": "view"
          },
          {
            "type": "function",
            "name": "grant_writer",
            "inputs": [
              {
                "name": "resource",
                "type": "core::felt252"
              },
              {
                "name": "contract",
                "type": "core::starknet::contract_address::ContractAddress"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "revoke_writer",
            "inputs": [
              {
                "name": "resource",
                "type": "core::felt252"
              },
              {
                "name": "contract",
                "type": "core::starknet::contract_address::ContractAddress"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          }
        ]
      },
      {
        "type": "impl",
        "name": "UpgradeableWorld",
        "interface_name": "dojo::world::iworld::IUpgradeableWorld"
      },
      {
        "type": "interface",
        "name": "dojo::world::iworld::IUpgradeableWorld",
        "items": [
          {
            "type": "function",
            "name": "upgrade",
            "inputs": [
              {
                "name": "new_class_hash",
                "type": "core::starknet::class_hash::ClassHash"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          }
        ]
      },
      {
        "type": "constructor",
        "name": "constructor",
        "inputs": [
          {
            "name": "world_class_hash",
            "type": "core::starknet::class_hash::ClassHash"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::WorldSpawned",
        "kind": "struct",
        "members": [
          {
            "name": "creator",
            "type": "core::starknet::contract_address::ContractAddress",
            "kind": "data"
          },
          {
            "name": "class_hash",
            "type": "core::starknet::class_hash::ClassHash",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::WorldUpgraded",
        "kind": "struct",
        "members": [
          {
            "name": "class_hash",
            "type": "core::starknet::class_hash::ClassHash",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::NamespaceRegistered",
        "kind": "struct",
        "members": [
          {
            "name": "namespace",
            "type": "core::byte_array::ByteArray",
            "kind": "key"
          },
          {
            "name": "hash",
            "type": "core::felt252",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::ModelRegistered",
        "kind": "struct",
        "members": [
          {
            "name": "name",
            "type": "core::byte_array::ByteArray",
            "kind": "key"
          },
          {
            "name": "namespace",
            "type": "core::byte_array::ByteArray",
            "kind": "key"
          },
          {
            "name": "class_hash",
            "type": "core::starknet::class_hash::ClassHash",
            "kind": "data"
          },
          {
            "name": "address",
            "type": "core::starknet::contract_address::ContractAddress",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::EventRegistered",
        "kind": "struct",
        "members": [
          {
            "name": "name",
            "type": "core::byte_array::ByteArray",
            "kind": "key"
          },
          {
            "name": "namespace",
            "type": "core::byte_array::ByteArray",
            "kind": "key"
          },
          {
            "name": "class_hash",
            "type": "core::starknet::class_hash::ClassHash",
            "kind": "data"
          },
          {
            "name": "address",
            "type": "core::starknet::contract_address::ContractAddress",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::ContractRegistered",
        "kind": "struct",
        "members": [
          {
            "name": "name",
            "type": "core::byte_array::ByteArray",
            "kind": "key"
          },
          {
            "name": "namespace",
            "type": "core::byte_array::ByteArray",
            "kind": "key"
          },
          {
            "name": "address",
            "type": "core::starknet::contract_address::ContractAddress",
            "kind": "data"
          },
          {
            "name": "class_hash",
            "type": "core::starknet::class_hash::ClassHash",
            "kind": "data"
          },
          {
            "name": "salt",
            "type": "core::felt252",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::ModelUpgraded",
        "kind": "struct",
        "members": [
          {
            "name": "selector",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "class_hash",
            "type": "core::starknet::class_hash::ClassHash",
            "kind": "data"
          },
          {
            "name": "address",
            "type": "core::starknet::contract_address::ContractAddress",
            "kind": "data"
          },
          {
            "name": "prev_address",
            "type": "core::starknet::contract_address::ContractAddress",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::EventUpgraded",
        "kind": "struct",
        "members": [
          {
            "name": "selector",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "class_hash",
            "type": "core::starknet::class_hash::ClassHash",
            "kind": "data"
          },
          {
            "name": "address",
            "type": "core::starknet::contract_address::ContractAddress",
            "kind": "data"
          },
          {
            "name": "prev_address",
            "type": "core::starknet::contract_address::ContractAddress",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::ContractUpgraded",
        "kind": "struct",
        "members": [
          {
            "name": "selector",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "class_hash",
            "type": "core::starknet::class_hash::ClassHash",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::ContractInitialized",
        "kind": "struct",
        "members": [
          {
            "name": "selector",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "init_calldata",
            "type": "core::array::Span::<core::felt252>",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::LibraryRegistered",
        "kind": "struct",
        "members": [
          {
            "name": "name",
            "type": "core::byte_array::ByteArray",
            "kind": "key"
          },
          {
            "name": "namespace",
            "type": "core::byte_array::ByteArray",
            "kind": "key"
          },
          {
            "name": "class_hash",
            "type": "core::starknet::class_hash::ClassHash",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::EventEmitted",
        "kind": "struct",
        "members": [
          {
            "name": "selector",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "system_address",
            "type": "core::starknet::contract_address::ContractAddress",
            "kind": "key"
          },
          {
            "name": "keys",
            "type": "core::array::Span::<core::felt252>",
            "kind": "data"
          },
          {
            "name": "values",
            "type": "core::array::Span::<core::felt252>",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::MetadataUpdate",
        "kind": "struct",
        "members": [
          {
            "name": "resource",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "uri",
            "type": "core::byte_array::ByteArray",
            "kind": "data"
          },
          {
            "name": "hash",
            "type": "core::felt252",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::StoreSetRecord",
        "kind": "struct",
        "members": [
          {
            "name": "selector",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "entity_id",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "keys",
            "type": "core::array::Span::<core::felt252>",
            "kind": "data"
          },
          {
            "name": "values",
            "type": "core::array::Span::<core::felt252>",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::StoreUpdateRecord",
        "kind": "struct",
        "members": [
          {
            "name": "selector",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "entity_id",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "values",
            "type": "core::array::Span::<core::felt252>",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::StoreUpdateMember",
        "kind": "struct",
        "members": [
          {
            "name": "selector",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "entity_id",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "member_selector",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "values",
            "type": "core::array::Span::<core::felt252>",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::StoreDelRecord",
        "kind": "struct",
        "members": [
          {
            "name": "selector",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "entity_id",
            "type": "core::felt252",
            "kind": "key"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::WriterUpdated",
        "kind": "struct",
        "members": [
          {
            "name": "resource",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "contract",
            "type": "core::starknet::contract_address::ContractAddress",
            "kind": "key"
          },
          {
            "name": "value",
            "type": "core::bool",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::OwnerUpdated",
        "kind": "struct",
        "members": [
          {
            "name": "resource",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "contract",
            "type": "core::starknet::contract_address::ContractAddress",
            "kind": "key"
          },
          {
            "name": "value",
            "type": "core::bool",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::Event",
        "kind": "enum",
        "variants": [
          {
            "name": "WorldSpawned",
            "type": "dojo::world::world_contract::world::WorldSpawned",
            "kind": "nested"
          },
          {
            "name": "WorldUpgraded",
            "type": "dojo::world::world_contract::world::WorldUpgraded",
            "kind": "nested"
          },
          {
            "name": "NamespaceRegistered",
            "type": "dojo::world::world_contract::world::NamespaceRegistered",
            "kind": "nested"
          },
          {
            "name": "ModelRegistered",
            "type": "dojo::world::world_contract::world::ModelRegistered",
            "kind": "nested"
          },
          {
            "name": "EventRegistered",
            "type": "dojo::world::world_contract::world::EventRegistered",
            "kind": "nested"
          },
          {
            "name": "ContractRegistered",
            "type": "dojo::world::world_contract::world::ContractRegistered",
            "kind": "nested"
          },
          {
            "name": "ModelUpgraded",
            "type": "dojo::world::world_contract::world::ModelUpgraded",
            "kind": "nested"
          },
          {
            "name": "EventUpgraded",
            "type": "dojo::world::world_contract::world::EventUpgraded",
            "kind": "nested"
          },
          {
            "name": "ContractUpgraded",
            "type": "dojo::world::world_contract::world::ContractUpgraded",
            "kind": "nested"
          },
          {
            "name": "ContractInitialized",
            "type": "dojo::world::world_contract::world::ContractInitialized",
            "kind": "nested"
          },
          {
            "name": "LibraryRegistered",
            "type": "dojo::world::world_contract::world::LibraryRegistered",
            "kind": "nested"
          },
          {
            "name": "EventEmitted",
            "type": "dojo::world::world_contract::world::EventEmitted",
            "kind": "nested"
          },
          {
            "name": "MetadataUpdate",
            "type": "dojo::world::world_contract::world::MetadataUpdate",
            "kind": "nested"
          },
          {
            "name": "StoreSetRecord",
            "type": "dojo::world::world_contract::world::StoreSetRecord",
            "kind": "nested"
          },
          {
            "name": "StoreUpdateRecord",
            "type": "dojo::world::world_contract::world::StoreUpdateRecord",
            "kind": "nested"
          },
          {
            "name": "StoreUpdateMember",
            "type": "dojo::world::world_contract::world::StoreUpdateMember",
            "kind": "nested"
          },
          {
            "name": "StoreDelRecord",
            "type": "dojo::world::world_contract::world::StoreDelRecord",
            "kind": "nested"
          },
          {
            "name": "WriterUpdated",
            "type": "dojo::world::world_contract::world::WriterUpdated",
            "kind": "nested"
          },
          {
            "name": "OwnerUpdated",
            "type": "dojo::world::world_contract::world::OwnerUpdated",
            "kind": "nested"
          }
        ]
      }
    ]
  },
  "contracts": [
    {
      "address": "0xe63339b4b65057a644c0c7e9d7863ef6eb83fa4c33d59e637646b0075e9765",
      "class_hash": "0x23365ba311bdaa8803429684863caed754b198e7345f344e3d4b472eee30953",
      "abi": [
        {
          "type": "impl",
          "name": "actions__ContractImpl",
          "interface_name": "dojo::contract::interface::IContract"
        },
        {
          "type": "interface",
          "name": "dojo::contract::interface::IContract",
          "items": []
        },
        {
          "type": "impl",
          "name": "actions__DeployedContractImpl",
          "interface_name": "dojo::meta::interface::IDeployedResource"
        },
        {
          "type": "struct",
          "name": "core::byte_array::ByteArray",
          "members": [
            {
              "name": "data",
              "type": "core::array::Array::<core::bytes_31::bytes31>"
            },
            {
              "name": "pending_word",
              "type": "core::felt252"
            },
            {
              "name": "pending_word_len",
              "type": "core::integer::u32"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::meta::interface::IDeployedResource",
          "items": [
            {
              "type": "function",
              "name": "dojo_name",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "impl",
          "name": "BlockRoomsImpl",
          "interface_name": "blockrooms::systems::actions::IBlockRooms"
        },
        {
          "type": "struct",
          "name": "blockrooms::models::MoveAction",
          "members": [
            {
              "name": "x_delta",
              "type": "core::integer::i32"
            },
            {
              "name": "y_delta",
              "type": "core::integer::i32"
            }
          ]
        },
        {
          "type": "struct",
          "name": "blockrooms::models::OpenDoorAction",
          "members": [
            {
              "name": "door_id",
              "type": "core::integer::u32"
            }
          ]
        },
        {
          "type": "struct",
          "name": "blockrooms::models::AttackAction",
          "members": [
            {
              "name": "entity_id",
              "type": "core::felt252"
            }
          ]
        },
        {
          "type": "struct",
          "name": "blockrooms::models::Position",
          "members": [
            {
              "name": "x",
              "type": "core::integer::u32"
            },
            {
              "name": "y",
              "type": "core::integer::u32"
            },
            {
              "name": "location_id",
              "type": "core::integer::u32"
            }
          ]
        },
        {
          "type": "struct",
          "name": "blockrooms::models::CollectShardAction",
          "members": [
            {
              "name": "action_id",
              "type": "core::felt252"
            },
            {
              "name": "position",
              "type": "blockrooms::models::Position"
            }
          ]
        },
        {
          "type": "enum",
          "name": "blockrooms::models::Action",
          "variants": [
            {
              "name": "Move",
              "type": "blockrooms::models::MoveAction"
            },
            {
              "name": "OpenDoor",
              "type": "blockrooms::models::OpenDoorAction"
            },
            {
              "name": "Attack",
              "type": "blockrooms::models::AttackAction"
            },
            {
              "name": "CollectShard",
              "type": "blockrooms::models::CollectShardAction"
            }
          ]
        },
        {
          "type": "enum",
          "name": "blockrooms::models::ActionType",
          "variants": [
            {
              "name": "Move",
              "type": "()"
            },
            {
              "name": "OpenDoor",
              "type": "()"
            },
            {
              "name": "Attack",
              "type": "()"
            },
            {
              "name": "CollectShard",
              "type": "()"
            }
          ]
        },
        {
          "type": "enum",
          "name": "core::bool",
          "variants": [
            {
              "name": "False",
              "type": "()"
            },
            {
              "name": "True",
              "type": "()"
            }
          ]
        },
        {
          "type": "struct",
          "name": "blockrooms::models::ActionValidation",
          "members": [
            {
              "name": "validation_id",
              "type": "core::felt252"
            },
            {
              "name": "player_id",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "action_index",
              "type": "core::integer::u32"
            },
            {
              "name": "action_type",
              "type": "blockrooms::models::ActionType"
            },
            {
              "name": "is_valid",
              "type": "core::bool"
            },
            {
              "name": "error_reason",
              "type": "core::felt252"
            },
            {
              "name": "required_shards",
              "type": "core::integer::u32"
            },
            {
              "name": "required_health",
              "type": "core::integer::u32"
            },
            {
              "name": "required_position",
              "type": "blockrooms::models::Position"
            }
          ]
        },
        {
          "type": "enum",
          "name": "core::option::Option::<core::integer::u32>",
          "variants": [
            {
              "name": "Some",
              "type": "core::integer::u32"
            },
            {
              "name": "None",
              "type": "()"
            }
          ]
        },
        {
          "type": "struct",
          "name": "blockrooms::models::Player",
          "members": [
            {
              "name": "player_id",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "position",
              "type": "blockrooms::models::Position"
            },
            {
              "name": "health",
              "type": "core::integer::u32"
            },
            {
              "name": "max_health",
              "type": "core::integer::u32"
            },
            {
              "name": "shards",
              "type": "core::integer::u32"
            },
            {
              "name": "game_active",
              "type": "core::bool"
            },
            {
              "name": "is_alive",
              "type": "core::bool"
            },
            {
              "name": "current_session_id",
              "type": "core::felt252"
            },
            {
              "name": "rooms_cleared",
              "type": "core::integer::u32"
            },
            {
              "name": "turn_number",
              "type": "core::integer::u32"
            },
            {
              "name": "dodge_active_turns",
              "type": "core::integer::u32"
            },
            {
              "name": "has_shard_one",
              "type": "core::bool"
            },
            {
              "name": "has_shard_two",
              "type": "core::bool"
            },
            {
              "name": "has_shard_three",
              "type": "core::bool"
            },
            {
              "name": "entered_door_id",
              "type": "core::option::Option::<core::integer::u32>"
            },
            {
              "name": "door_enemy_alive",
              "type": "core::bool"
            },
            {
              "name": "movement_locked",
              "type": "core::bool"
            },
            {
              "name": "special_ability_cooldown",
              "type": "core::integer::u32"
            },
            {
              "name": "has_key",
              "type": "core::bool"
            }
          ]
        },
        {
          "type": "struct",
          "name": "blockrooms::models::GridBounds",
          "members": [
            {
              "name": "min_x",
              "type": "core::integer::u32"
            },
            {
              "name": "max_x",
              "type": "core::integer::u32"
            },
            {
              "name": "min_y",
              "type": "core::integer::u32"
            },
            {
              "name": "max_y",
              "type": "core::integer::u32"
            }
          ]
        },
        {
          "type": "struct",
          "name": "blockrooms::models::Room",
          "members": [
            {
              "name": "room_id",
              "type": "core::integer::u32"
            },
            {
              "name": "initialized",
              "type": "core::bool"
            },
            {
              "name": "cleared",
              "type": "core::bool"
            },
            {
              "name": "entity_count",
              "type": "core::integer::u32"
            },
            {
              "name": "active_entities",
              "type": "core::integer::u32"
            },
            {
              "name": "has_treasure",
              "type": "core::bool"
            },
            {
              "name": "treasure_collected",
              "type": "core::bool"
            },
            {
              "name": "door_count",
              "type": "core::integer::u32"
            },
            {
              "name": "boundaries",
              "type": "blockrooms::models::GridBounds"
            }
          ]
        },
        {
          "type": "enum",
          "name": "blockrooms::models::EntityType",
          "variants": [
            {
              "name": "Male",
              "type": "()"
            },
            {
              "name": "Female",
              "type": "()"
            }
          ]
        },
        {
          "type": "enum",
          "name": "blockrooms::models::NumberedShard",
          "variants": [
            {
              "name": "One",
              "type": "()"
            },
            {
              "name": "Two",
              "type": "()"
            },
            {
              "name": "Three",
              "type": "()"
            }
          ]
        },
        {
          "type": "enum",
          "name": "core::option::Option::<blockrooms::models::NumberedShard>",
          "variants": [
            {
              "name": "Some",
              "type": "blockrooms::models::NumberedShard"
            },
            {
              "name": "None",
              "type": "()"
            }
          ]
        },
        {
          "type": "struct",
          "name": "blockrooms::models::Entity",
          "members": [
            {
              "name": "entity_id",
              "type": "core::felt252"
            },
            {
              "name": "entity_type",
              "type": "blockrooms::models::EntityType"
            },
            {
              "name": "position",
              "type": "blockrooms::models::Position"
            },
            {
              "name": "health",
              "type": "core::integer::u32"
            },
            {
              "name": "max_health",
              "type": "core::integer::u32"
            },
            {
              "name": "is_alive",
              "type": "core::bool"
            },
            {
              "name": "damage_per_turn",
              "type": "core::integer::u32"
            },
            {
              "name": "drops_numbered_shard",
              "type": "core::option::Option::<blockrooms::models::NumberedShard>"
            },
            {
              "name": "spawned_from_door",
              "type": "core::bool"
            }
          ]
        },
        {
          "type": "struct",
          "name": "blockrooms::models::Doorway",
          "members": [
            {
              "name": "doorway_id",
              "type": "core::integer::u32"
            },
            {
              "name": "position",
              "type": "blockrooms::models::Position"
            },
            {
              "name": "room_id",
              "type": "core::integer::u32"
            },
            {
              "name": "connected_room_id",
              "type": "core::integer::u32"
            },
            {
              "name": "is_open",
              "type": "core::bool"
            },
            {
              "name": "requires_cleared",
              "type": "core::bool"
            }
          ]
        },
        {
          "type": "enum",
          "name": "blockrooms::models::GameResult",
          "variants": [
            {
              "name": "InProgress",
              "type": "()"
            },
            {
              "name": "Victory",
              "type": "()"
            },
            {
              "name": "Defeat",
              "type": "()"
            }
          ]
        },
        {
          "type": "struct",
          "name": "blockrooms::models::TurnExecution",
          "members": [
            {
              "name": "turn_id",
              "type": "core::felt252"
            },
            {
              "name": "player_id",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "session_id",
              "type": "core::felt252"
            },
            {
              "name": "actions_count",
              "type": "core::integer::u32"
            },
            {
              "name": "successful_actions",
              "type": "core::integer::u32"
            },
            {
              "name": "total_damage_dealt",
              "type": "core::integer::u32"
            },
            {
              "name": "total_damage_taken",
              "type": "core::integer::u32"
            },
            {
              "name": "total_shards_gained",
              "type": "core::integer::u32"
            },
            {
              "name": "numbered_shards_collected",
              "type": "core::integer::u32"
            },
            {
              "name": "timestamp",
              "type": "core::integer::u64"
            },
            {
              "name": "turn_number",
              "type": "core::integer::u32"
            }
          ]
        },
        {
          "type": "interface",
          "name": "blockrooms::systems::actions::IBlockRooms",
          "items": [
            {
              "type": "function",
              "name": "initialize_player",
              "inputs": [],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "start_game",
              "inputs": [],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "respawn_player",
              "inputs": [],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "execute_turn",
              "inputs": [
                {
                  "name": "actions",
                  "type": "core::array::Array::<blockrooms::models::Action>"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "validate_actions",
              "inputs": [
                {
                  "name": "actions",
                  "type": "core::array::Array::<blockrooms::models::Action>"
                }
              ],
              "outputs": [
                {
                  "type": "core::array::Array::<blockrooms::models::ActionValidation>"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "move_player",
              "inputs": [
                {
                  "name": "x_delta",
                  "type": "core::integer::i32"
                },
                {
                  "name": "y_delta",
                  "type": "core::integer::i32"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "attack_entity",
              "inputs": [
                {
                  "name": "entity_id",
                  "type": "core::felt252"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "collect_shard",
              "inputs": [
                {
                  "name": "position",
                  "type": "blockrooms::models::Position"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "open_door",
              "inputs": [
                {
                  "name": "door_id",
                  "type": "core::integer::u32"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "get_player_state",
              "inputs": [],
              "outputs": [
                {
                  "type": "blockrooms::models::Player"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "get_room_state",
              "inputs": [
                {
                  "name": "room_id",
                  "type": "core::integer::u32"
                }
              ],
              "outputs": [
                {
                  "type": "blockrooms::models::Room"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "get_entities_in_location",
              "inputs": [
                {
                  "name": "location_id",
                  "type": "core::integer::u32"
                }
              ],
              "outputs": [
                {
                  "type": "core::array::Array::<blockrooms::models::Entity>"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "get_available_doorways",
              "inputs": [
                {
                  "name": "location_id",
                  "type": "core::integer::u32"
                }
              ],
              "outputs": [
                {
                  "type": "core::array::Array::<blockrooms::models::Doorway>"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "get_game_status",
              "inputs": [],
              "outputs": [
                {
                  "type": "blockrooms::models::GameResult"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "get_turn_history",
              "inputs": [
                {
                  "name": "limit",
                  "type": "core::integer::u32"
                }
              ],
              "outputs": [
                {
                  "type": "core::array::Array::<blockrooms::models::TurnExecution>"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "end_game",
              "inputs": [],
              "outputs": [],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "function",
          "name": "dojo_init",
          "inputs": [],
          "outputs": [],
          "state_mutability": "view"
        },
        {
          "type": "impl",
          "name": "WorldProviderImpl",
          "interface_name": "dojo::contract::components::world_provider::IWorldProvider"
        },
        {
          "type": "struct",
          "name": "dojo::world::iworld::IWorldDispatcher",
          "members": [
            {
              "name": "contract_address",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::world_provider::IWorldProvider",
          "items": [
            {
              "type": "function",
              "name": "world_dispatcher",
              "inputs": [],
              "outputs": [
                {
                  "type": "dojo::world::iworld::IWorldDispatcher"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "impl",
          "name": "UpgradeableImpl",
          "interface_name": "dojo::contract::components::upgradeable::IUpgradeable"
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::upgradeable::IUpgradeable",
          "items": [
            {
              "type": "function",
              "name": "upgrade",
              "inputs": [
                {
                  "name": "new_class_hash",
                  "type": "core::starknet::class_hash::ClassHash"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "constructor",
          "name": "constructor",
          "inputs": []
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
          "kind": "struct",
          "members": [
            {
              "name": "class_hash",
              "type": "core::starknet::class_hash::ClassHash",
              "kind": "data"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "Upgraded",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
              "kind": "nested"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::world_provider::world_provider_cpt::Event",
          "kind": "enum",
          "variants": []
        },
        {
          "type": "event",
          "name": "blockrooms::systems::actions::actions::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "UpgradeableEvent",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
              "kind": "nested"
            },
            {
              "name": "WorldProviderEvent",
              "type": "dojo::contract::components::world_provider::world_provider_cpt::Event",
              "kind": "nested"
            }
          ]
        }
      ],
      "init_calldata": [],
      "tag": "blockrooms-actions",
      "selector": "0x61254bd76919f4f416c926da2ab20235c225738733258982d08286671d18de1",
      "systems": [
        "initialize_player",
        "start_game",
        "respawn_player",
        "execute_turn",
        "move_player",
        "attack_entity",
        "collect_shard",
        "open_door",
        "end_game",
        "upgrade"
      ]
    }
  ],
  "libraries": [],
  "models": [
    {
      "members": [],
      "class_hash": "0x51b487107d2a9fec8a8a2dd37efc79ae87efa84f13e637a935922547cda2ba5",
      "tag": "blockrooms-Door",
      "selector": "0x77420242a527d2497f8153ce92376cfc8f6736879eec766c504b580c7b59a1"
    },
    {
      "members": [],
      "class_hash": "0x49762aa75b6b6375dc16d293ef8e30fd179e7f93fedd80d518197961ae8491",
      "tag": "blockrooms-Doorway",
      "selector": "0x5752de487c6e01c52ca8c8e22521e8df1afaa202ec4482a92898fd7872d4ab8"
    },
    {
      "members": [],
      "class_hash": "0x4d89715a42560f8040d29b4e3e8158c5087880d074642e3ac2c229c21605e0c",
      "tag": "blockrooms-Entity",
      "selector": "0x1272011998f556eb52985a9e53590089ff39f59ec203e9026f8e2c998d08691"
    },
    {
      "members": [],
      "class_hash": "0x44d7be871d56e270cad59df9c6c3e8e84a549446465133a05f6048a875ad4c4",
      "tag": "blockrooms-EntityState",
      "selector": "0x35eb370e08f9a1e314ec6c5f5cf25dee4a8046fe65f195e02cdde3ab438495d"
    },
    {
      "members": [],
      "class_hash": "0x72a94f7d4915fe96c0ec5e1390ba6df2c4babfb1080841a0116435e6fcc9b55",
      "tag": "blockrooms-GameConfig",
      "selector": "0x3a0c8dae2a8414f9434133a848d474f69cf1dd365d6f4df0cd969b113b0c6b5"
    },
    {
      "members": [],
      "class_hash": "0x6806468a1304a9e3bd83098b5aabdad0a1f03be21a89a16b4720ab223a19ab5",
      "tag": "blockrooms-GameSession",
      "selector": "0x657010e660774d38be04975c9e93606a4f70d3507cf9bb4dcef2861949da77e"
    },
    {
      "members": [],
      "class_hash": "0x52a6a24a040e786ddf01925e7ab66a7e760013c8f2bf061c0386d94ad1fe7d0",
      "tag": "blockrooms-Player",
      "selector": "0x3fedb36ca2699d734a292ba7770731415743f643b9c0448fd079c3a5dd8c3c6"
    },
    {
      "members": [],
      "class_hash": "0x55f5a949d94acca8d723b695e90b9d2788c25636a01b1761ec8ca6c8eceb7e0",
      "tag": "blockrooms-PlayerStats",
      "selector": "0x3e548c8a1f1ea80e0965dd36a4e0c5a401b2f4cd139e157370688fbb69eb720"
    },
    {
      "members": [],
      "class_hash": "0x548244c5218b70a3d7a4abb8bad5c0319bd3dfc5b3ed0aeb78b90ec26f61471",
      "tag": "blockrooms-Room",
      "selector": "0x763ccee7f5f04191c81cd2620007c11dbb55615d667ec6bb4dd1359cbba94b8"
    },
    {
      "members": [],
      "class_hash": "0x45c230d9af0f6e60b2b21666e9b0bb5a68afd9a929f6bf68b2911a20cfaa39e",
      "tag": "blockrooms-ShardLocation",
      "selector": "0x51ed4cbf3157867a141ce8056487baf81cc75a4d8326af164df593cce4abacf"
    },
    {
      "members": [],
      "class_hash": "0x2b290189efaf52d3525b9cee04b7157c43ba964119e50373c91af635274b2e4",
      "tag": "blockrooms-TurnExecution",
      "selector": "0x1ce2f6e57403289a5158a7f70f4884924e7265ad365400574482272d41e83ed"
    }
  ],
  "events": [
    {
      "members": [],
      "class_hash": "0x565ad049bfb86c1fa856b44016020b0f5584936a71a8e25d598ec3ba298d56c",
      "tag": "blockrooms-ActionExecuted",
      "selector": "0x3474c4712170dd49081437828f8987844726b02d48143497c3ad0981fe8c9ea"
    },
    {
      "members": [],
      "class_hash": "0x428743aa34299ff577c20b1e2c6b1a93bde5a0b0f15d4bd7585f92077f53eba",
      "tag": "blockrooms-GameCompleted",
      "selector": "0x2555f977bb26694b673a2edda760c9651bbf45c9389efdc30f05cf1083e7676"
    },
    {
      "members": [],
      "class_hash": "0x677fd745d1429c06838dd802caf6252e967ec0678a0423da10d255bc0b3f6e2",
      "tag": "blockrooms-GameStarted",
      "selector": "0x5e3eb2cdf0e7aad02e3f9008701313437620462fa2130622d62550f0faa9206"
    },
    {
      "members": [],
      "class_hash": "0x60c5e3529b5f98134e5306a4c0d808d81d633ccc27a0089c268cd9a23904a3f",
      "tag": "blockrooms-NumberedShardCollected",
      "selector": "0x21368136dd54582d027c33b9c84bfce1c7760eafbf341d5fb4938549cab5ad2"
    },
    {
      "members": [],
      "class_hash": "0x25f13ca449de151be3d9b616ccfb201ca69a17c26a6109ac42f6cceea478947",
      "tag": "blockrooms-PlayerDeath",
      "selector": "0x24bd0fd50c1d9c41f00ab48c442d681b701e11d3d5124ecf35391aafa0e3e2e"
    },
    {
      "members": [],
      "class_hash": "0x47b3decbd273b35a3c96981e42a5f567cb1a5fb9b6452fb4a0280f95fd71ba9",
      "tag": "blockrooms-RoomCleared",
      "selector": "0x4512355f3651aa56536863983b3af8f0fe32944aabc03d2ae584120efc703d8"
    },
    {
      "members": [],
      "class_hash": "0x20ae27e84ebf64bd74b8d69ae393994c330ab3b87595dc9f692d4dd8165897a",
      "tag": "blockrooms-TurnExecuted",
      "selector": "0x1ac8ea60b37fe4d186db23e8aeac6e0602462af3678add25f0bd4c1ee7c5e11"
    },
    {
      "members": [],
      "class_hash": "0x6717bb19f9e5c57053046ac6ed0b7a0e5d2817ceea31d560e7427a4fbe41a44",
      "tag": "blockrooms-VictoryAchieved",
      "selector": "0x112183cc3cfea4faa5c62e53d75f6ea6c9d28c50d225d9e35b88fd394b1a2e7"
    }
  ],
  "external_contracts": []
}
```

`/home/suhas/Desktop/pune/blockroomsv2/client/src/config/manifest.ts`:

```ts
import localhost from "../../../contract/manifest_dev.json"; // local development manifest
import sepolia from "./manifest_sepolia.json"; // sepolia manifest
import mainnet from "./manifest_sepolia.json"; // change for the right mainnet manifest
import slot from "./manifest_sepolia.json"; // change for the right slot manifest

// Define valid deploy types
type DeployType = keyof typeof manifests;

// Create the manifests object
const manifests = {
  localhost,
  mainnet,
  sepolia,
  slot,
};

// Get deployment type from environment with fallback
const deployType = import.meta.env.VITE_PUBLIC_DEPLOY_TYPE as string;

// Export the appropriate manifest with a fallback
export const manifest = deployType in manifests
  ? manifests[deployType as DeployType]
  : sepolia;

export type Manifest = typeof manifest;

```

`/home/suhas/Desktop/pune/blockroomsv2/client/src/config/cartridgeConnector.tsx`:

```tsx
import { Connector } from "@starknet-react/core";
import { ControllerConnector } from "@cartridge/connector";
import { ControllerOptions } from "@cartridge/controller";
import { constants } from "starknet";
import { manifest } from "./manifest";

const { VITE_PUBLIC_DEPLOY_TYPE } = import.meta.env;

console.log("VITE_PUBLIC_DEPLOY_TYPE", VITE_PUBLIC_DEPLOY_TYPE);

const getRpcUrl = () => {
  switch (VITE_PUBLIC_DEPLOY_TYPE) {
    case "localhost":
        return "http://localhost:5050"; // Katana localhost default port
    case "mainnet":
        return "https://api.cartridge.gg/x/starknet/mainnet";
    case "sepolia":
        return "https://api.cartridge.gg/x/starknet/sepolia";
    default:
        return "https://api.cartridge.gg/x/starknet/sepolia";
  }
};

const getDefaultChainId = () => {
  switch (VITE_PUBLIC_DEPLOY_TYPE) {
    case "localhost":
        return "0x4b4154414e41"; // KATANA in ASCII
    case "mainnet":
        return constants.StarknetChainId.SN_MAIN;
    case "sepolia":
        return constants.StarknetChainId.SN_SEPOLIA;
    default:
        return constants.StarknetChainId.SN_SEPOLIA;
  }
};

const getGameContractAddress = () => {
  return manifest.contracts[0].address;
};

const CONTRACT_ADDRESS_GAME = getGameContractAddress();
console.log("Using game contract address:", CONTRACT_ADDRESS_GAME);

const policies = {
  contracts: {
    [CONTRACT_ADDRESS_GAME]: {
      methods: [
        // Player management methods
        { name: "initialize_player", entrypoint: "initialize_player" },
        { name: "start_game", entrypoint: "start_game" },
        { name: "respawn_player", entrypoint: "respawn_player" },
        { name: "end_game", entrypoint: "end_game" },
        
        // Legacy/Additional methods (if needed)
        { name: "spawn_player", entrypoint: "spawn_player" },
        { name: "train", entrypoint: "train" },
        { name: "mine", entrypoint: "mine" },
        { name: "rest", entrypoint: "rest" },
        
        // Action execution methods
        { name: "execute_turn", entrypoint: "execute_turn" },
        { name: "validate_actions", entrypoint: "validate_actions" },
        
        // Individual action methods
        { name: "move_player", entrypoint: "move_player" },
        { name: "attack_entity", entrypoint: "attack_entity" },
        { name: "collect_shard", entrypoint: "collect_shard" },
        { name: "open_door", entrypoint: "open_door" },
        
        // State query methods
        { name: "get_player_state", entrypoint: "get_player_state" },
        { name: "get_room_state", entrypoint: "get_room_state" },
        { name: "get_entities_in_location", entrypoint: "get_entities_in_location" },
        { name: "get_available_doorways", entrypoint: "get_available_doorways" },
        { name: "get_game_status", entrypoint: "get_game_status" },
        { name: "get_turn_history", entrypoint: "get_turn_history" },
      ],
    },
  },
  events: {
    // Game lifecycle events
    "GameStarted": {
      player_id: "string",
      session_id: "felt252",
      start_time: "u64",
      starting_room_id: "u32",
    },
    "GameCompleted": {
      player_id: "string",
      session_id: "felt252",
      rooms_cleared: "u32",
      result: "GameResult",
      total_turns: "u32",
    },
    "VictoryAchieved": {
      player_id: "string",
      session_id: "felt252",
      completion_time: "u64",
      total_turns: "u32",
    },
    
    // Turn and action events
    "TurnExecuted": {
      player_id: "string",
      turn_id: "felt252",
      turn_number: "u32",
      actions_attempted: "u32",
      actions_successful: "u32",
      total_damage_dealt: "u32",
      total_damage_taken: "u32",
      shards_gained: "u32",
      numbered_shards_gained: "u32",
      position_end: "Position",
    },
    "ActionExecuted": {
      player_id: "string",
      turn_id: "felt252",
      action_index: "u32",
      action_type: "ActionType",
      success: "bool",
      damage_dealt: "u32",
      damage_taken: "u32",
      position_changed: "bool",
      door_opened: "bool",
    },
    
    // Gameplay events
    "PlayerDeath": {
      player_id: "string",
      position: "Position",
      cause: "felt252",
      turn_number: "u32",
    },
    "RoomCleared": {
      player_id: "string",
      room_id: "u32",
      entities_defeated: "u32",
      turn_number: "u32",
    },
    "NumberedShardCollected": {
      player_id: "string",
      shard_type: "NumberedShard",
      position: "Position",
      turn_number: "u32",
    },
  },
  models: {
    // Core game models
    "Player": {
      player_id: "ContractAddress",
      position: "Position",
      health: "u32",
      max_health: "u32",
      shards: "u32",
      game_active: "bool",
      is_alive: "bool",
      current_session_id: "felt252",
      rooms_cleared: "u32",
      turn_number: "u32",
      dodge_active_turns: "u32",
      has_shard_one: "bool",
      has_shard_two: "bool",
      has_shard_three: "bool",
      entered_door_id: "Option<u32>",
      door_enemy_alive: "bool",
      movement_locked: "bool",
      special_ability_cooldown: "u32",
      has_key: "bool",
    },
    "PlayerStats": {
      player_id: "ContractAddress",
      games_played: "u32",
      games_won: "u32",
      total_shards_collected: "u32",
      total_entities_defeated: "u32",
      total_playtime: "u64",
      best_completion_time: "u64",
      highest_room_reached: "u32",
      total_damage_dealt: "u32",
      total_damage_taken: "u32",
      doors_opened: "u32",
      total_turns_played: "u32",
      total_actions_taken: "u32",
      numbered_shards_collected: "u32",
    },
    "GameSession": {
      session_id: "felt252",
      player_id: "ContractAddress",
      start_time: "u64",
      end_time: "u64",
      rooms_cleared: "u32",
      total_shards_collected: "u32",
      numbered_shards_collected: "u32",
      entities_defeated: "u32",
      total_damage_dealt: "u32",
      total_damage_taken: "u32",
      doors_opened: "u32",
      deaths: "u32",
      session_complete: "bool",
      total_turns: "u32",
      total_actions: "u32",
      victory_achieved: "bool",
    },
    "GameConfig": {
      config_id: "felt252",
      grid_size: "u32",
      starting_health: "u32",
      starting_shards: "u32",
      base_damage: "u32",
      max_actions_per_turn: "u32",
      door_count: "u32",
      entity_spawn_rate: "u32",
      shard_drop_rate: "u32",
      rooms_for_victory: "u32",
      dodge_cooldown: "u32",
    },
    "TurnExecution": {
      turn_id: "felt252",
      player_id: "ContractAddress",
      session_id: "felt252",
      actions_count: "u32",
      successful_actions: "u32",
      total_damage_dealt: "u32",
      total_damage_taken: "u32",
      total_shards_gained: "u32",
      numbered_shards_collected: "u32",
      timestamp: "u64",
      turn_number: "u32",
    },
    
    // World models
    "Room": {
      room_id: "u32",
      initialized: "bool",
      cleared: "bool",
      entity_count: "u32",
      active_entities: "u32",
      has_treasure: "bool",
      treasure_collected: "bool",
      door_count: "u32",
      boundaries: "GridBounds",
    },
    "Door": {
      door_id: "u32",
      position: "Position",
      room_id: "u32",
      connected_room_id: "u32",
      is_open: "bool",
      requires_key: "bool",
      requires_cleared: "bool",
    },
    "Doorway": {
      doorway_id: "u32",
      position: "Position",
      room_id: "u32",
      connected_room_id: "u32",
      is_open: "bool",
      requires_cleared: "bool",
    },
    "Entity": {
      entity_id: "felt252",
      entity_type: "EntityType",
      position: "Position",
      health: "u32",
      max_health: "u32",
      is_alive: "bool",
      damage_per_turn: "u32",
      drops_numbered_shard: "Option<NumberedShard>",
      spawned_from_door: "bool",
    },
    "EntityState": {
      entity_id: "felt252",
      alert_level: "AlertLevel",
      detection_range: "u32",
      last_seen_player_pos: "Position",
      patrol_path_index: "u32",
      last_action_block: "u64",
    },
    "ShardLocation": {
      location_id: "felt252",
      position: "Position",
      numbered_shard: "Option<NumberedShard>",
      collected: "bool",
    },
    
    // Utility models
    "Position": {
      x: "u32",
      y: "u32",
      location_id: "u32",
    },
    "GridBounds": {
      min_x: "u32",
      max_x: "u32",
      min_y: "u32",
      max_y: "u32",
    },
  },
  enums: {
    "EntityType": ["Male", "Female"],
    "AlertLevel": ["Idle", "Alerted", "Combat"],
    "GameResult": ["InProgress", "Victory", "Defeat"],
    "NumberedShard": ["One", "Two", "Three"],
    "ActionType": ["Move", "OpenDoor", "Attack", "CollectShard"],
  },
};

const options: ControllerOptions = {
  chains: [{ rpcUrl: getRpcUrl() }],
  defaultChainId: getDefaultChainId(),
  policies,
  namespace: "blockrooms",
  slot: "blockrooms-game",
};

const cartridgeConnector = new ControllerConnector(
  options,
) as never as Connector;

export default cartridgeConnector;

```

`/home/suhas/Desktop/pune/blockroomsv2/client/src/index.css`:

```css
@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --background: 0 0% 100%;
    --foreground: 222.2 84% 4.9%;
    --card: 0 0% 100%;
    --card-foreground: 222.2 84% 4.9%;
    --popover: 0 0% 100%;
    --popover-foreground: 222.2 84% 4.9%;
    --primary: 222.2 47.4% 11.2%;
    --primary-foreground: 210 40% 98%;
    --secondary: 210 40% 96%;
    --secondary-foreground: 222.2 47.4% 11.2%;
    --muted: 210 40% 96%;
    --muted-foreground: 215.4 16.3% 46.9%;
    --accent: 210 40% 96%;
    --accent-foreground: 222.2 47.4% 11.2%;
    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 210 40% 98%;
    --border: 214.3 31.8% 91.4%;
    --input: 214.3 31.8% 91.4%;
    --ring: 222.2 84% 4.9%;
    --radius: 0.5rem;
  }

  .dark {
    --background: 222.2 84% 4.9%;
    --foreground: 210 40% 98%;
    --card: 222.2 84% 4.9%;
    --card-foreground: 210 40% 98%;
    --popover: 222.2 84% 4.9%;
    --popover-foreground: 210 40% 98%;
    --primary: 210 40% 98%;
    --primary-foreground: 222.2 47.4% 11.2%;
    --secondary: 217.2 32.6% 17.5%;
    --secondary-foreground: 210 40% 98%;
    --muted: 217.2 32.6% 17.5%;
    --muted-foreground: 215 20.2% 65.1%;
    --accent: 217.2 32.6% 17.5%;
    --accent-foreground: 210 40% 98%;
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 210 40% 98%;
    --border: 217.2 32.6% 17.5%;
    --input: 217.2 32.6% 17.5%;
    --ring: 212.7 26.8% 83.9%;
  }
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
  }
}

```

`/home/suhas/Desktop/pune/blockroomsv2/client/src/main.tsx`:

```tsx
import { StrictMode } from "react";
import { createRoot } from "react-dom/client";

// Dojo & Starknet
import { init } from "@dojoengine/sdk";
import { DojoSdkProvider } from "@dojoengine/sdk/react";
import { dojoConfig } from "./dojo/dojoConfig";
import type { SchemaType } from "./dojo/models.gen";
import { setupWorld } from "./dojo/contracts.gen";
import StarknetProvider from "./dojo/starknet-provider";

// App Entry
import App from "./app/App";
import "./index.css";

// Init Dojo with error handling
async function main() {
  try {
    console.log("🚀 Initializing Dojo SDK...");

    const sdk = await init<SchemaType>({
      client: {
        toriiUrl: dojoConfig.toriiUrl,
        worldAddress: dojoConfig.manifest.world.address,
      },
      domain: {
        name: "DojoGameStarter",
        version: "1.0",
        chainId: "KATANA",
        revision: "1",
      },
    });

    console.log("✅ Dojo SDK initialized successfully");

    const rootElement = document.getElementById("root");
    if (!rootElement) throw new Error("Root element not found");

    createRoot(rootElement).render(
      <StrictMode>
        <DojoSdkProvider
          sdk={sdk}
          dojoConfig={dojoConfig}
          clientFn={setupWorld}
        >
          <StarknetProvider>
            <App />
          </StarknetProvider>
        </DojoSdkProvider>
      </StrictMode>
    );
  } catch (error) {
    console.error("❌ Failed to initialize Dojo:", error);

    // Fallback: render without Dojo if it fails
    const rootElement = document.getElementById("root");
    if (rootElement) {
      createRoot(rootElement).render(
        <StrictMode>
          <div className="min-h-screen bg-red-900 flex items-center justify-center">
            <div className="text-white text-center p-8">
              <h1 className="text-2xl font-bold mb-4">
                ⚠️ Dojo Initialization Error
              </h1>
              <p className="mb-4">Failed to connect to Dojo SDK</p>
              <details className="text-left">
                <summary className="cursor-pointer mb-2">
                  Error Details:
                </summary>
                <pre className="text-xs bg-black p-4 rounded overflow-auto">
                  {error instanceof Error ? error.message : String(error)}
                </pre>
              </details>
              <p className="text-sm mt-4 opacity-70">
                Check your Dojo configuration and network connection
              </p>
            </div>
          </div>
        </StrictMode>
      );
    }
  }
}

main();

```